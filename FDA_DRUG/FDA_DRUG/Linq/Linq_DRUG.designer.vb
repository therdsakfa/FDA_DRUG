'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="LGT_DRUG")>  _
Partial Public Class Linq_DRUGDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertRECIVE(instance As RECIVE)
    End Sub
  Partial Private Sub UpdateRECIVE(instance As RECIVE)
    End Sub
  Partial Private Sub DeleteRECIVE(instance As RECIVE)
    End Sub
  Partial Private Sub InsertTEMPLATE(instance As TEMPLATE)
    End Sub
  Partial Private Sub UpdateTEMPLATE(instance As TEMPLATE)
    End Sub
  Partial Private Sub DeleteTEMPLATE(instance As TEMPLATE)
    End Sub
  Partial Private Sub InsertTYPE_TEMPLATE(instance As TYPE_TEMPLATE)
    End Sub
  Partial Private Sub UpdateTYPE_TEMPLATE(instance As TYPE_TEMPLATE)
    End Sub
  Partial Private Sub DeleteTYPE_TEMPLATE(instance As TYPE_TEMPLATE)
    End Sub
  Partial Private Sub InsertTYPE(instance As TYPE)
    End Sub
  Partial Private Sub UpdateTYPE(instance As TYPE)
    End Sub
  Partial Private Sub DeleteTYPE(instance As TYPE)
    End Sub
  Partial Private Sub InsertCO_INFO(instance As CO_INFO)
    End Sub
  Partial Private Sub UpdateCO_INFO(instance As CO_INFO)
    End Sub
  Partial Private Sub DeleteCO_INFO(instance As CO_INFO)
    End Sub
  Partial Private Sub Insertdarqt(instance As darqt)
    End Sub
  Partial Private Sub Updatedarqt(instance As darqt)
    End Sub
  Partial Private Sub Deletedarqt(instance As darqt)
    End Sub
  Partial Private Sub Insertdalcnctg(instance As dalcnctg)
    End Sub
  Partial Private Sub Updatedalcnctg(instance As dalcnctg)
    End Sub
  Partial Private Sub Deletedalcnctg(instance As dalcnctg)
    End Sub
  Partial Private Sub Insertdalcnkep(instance As dalcnkep)
    End Sub
  Partial Private Sub Updatedalcnkep(instance As dalcnkep)
    End Sub
  Partial Private Sub Deletedalcnkep(instance As dalcnkep)
    End Sub
  Partial Private Sub Insertdalcnphr(instance As dalcnphr)
    End Sub
  Partial Private Sub Updatedalcnphr(instance As dalcnphr)
    End Sub
  Partial Private Sub Deletedalcnphr(instance As dalcnphr)
    End Sub
  Partial Private Sub Insertdasubctg(instance As dasubctg)
    End Sub
  Partial Private Sub Updatedasubctg(instance As dasubctg)
    End Sub
  Partial Private Sub Deletedasubctg(instance As dasubctg)
    End Sub
  Partial Private Sub Insertdakeplctnm(instance As dakeplctnm)
    End Sub
  Partial Private Sub Updatedakeplctnm(instance As dakeplctnm)
    End Sub
  Partial Private Sub Deletedakeplctnm(instance As dakeplctnm)
    End Sub
  Partial Private Sub Insertdacnphdtl(instance As dacnphdtl)
    End Sub
  Partial Private Sub Updatedacnphdtl(instance As dacnphdtl)
    End Sub
  Partial Private Sub Deletedacnphdtl(instance As dacnphdtl)
    End Sub
  Partial Private Sub Insertdacncphr(instance As dacncphr)
    End Sub
  Partial Private Sub Updatedacncphr(instance As dacncphr)
    End Sub
  Partial Private Sub Deletedacncphr(instance As dacncphr)
    End Sub
  Partial Private Sub InsertDALCN_KEP(instance As DALCN_KEP)
    End Sub
  Partial Private Sub UpdateDALCN_KEP(instance As DALCN_KEP)
    End Sub
  Partial Private Sub DeleteDALCN_KEP(instance As DALCN_KEP)
    End Sub
  Partial Private Sub InsertDALCN_WORKTIME(instance As DALCN_WORKTIME)
    End Sub
  Partial Private Sub UpdateDALCN_WORKTIME(instance As DALCN_WORKTIME)
    End Sub
  Partial Private Sub DeleteDALCN_WORKTIME(instance As DALCN_WORKTIME)
    End Sub
  Partial Private Sub Insertsysplace(instance As sysplace)
    End Sub
  Partial Private Sub Updatesysplace(instance As sysplace)
    End Sub
  Partial Private Sub Deletesysplace(instance As sysplace)
    End Sub
  Partial Private Sub Insertdrpcbdrg(instance As drpcbdrg)
    End Sub
  Partial Private Sub Updatedrpcbdrg(instance As drpcbdrg)
    End Sub
  Partial Private Sub Deletedrpcbdrg(instance As drpcbdrg)
    End Sub
  Partial Private Sub Insertdh15frgn(instance As dh15frgn)
    End Sub
  Partial Private Sub Updatedh15frgn(instance As dh15frgn)
    End Sub
  Partial Private Sub Deletedh15frgn(instance As dh15frgn)
    End Sub
  Partial Private Sub Insertdh15rqtdt(instance As dh15rqtdt)
    End Sub
  Partial Private Sub Updatedh15rqtdt(instance As dh15rqtdt)
    End Sub
  Partial Private Sub Deletedh15rqtdt(instance As dh15rqtdt)
    End Sub
  Partial Private Sub Insertdh15tdgt(instance As dh15tdgt)
    End Sub
  Partial Private Sub Updatedh15tdgt(instance As dh15tdgt)
    End Sub
  Partial Private Sub Deletedh15tdgt(instance As dh15tdgt)
    End Sub
  Partial Private Sub Insertdh15tpdcfrgn(instance As dh15tpdcfrgn)
    End Sub
  Partial Private Sub Updatedh15tpdcfrgn(instance As dh15tpdcfrgn)
    End Sub
  Partial Private Sub Deletedh15tpdcfrgn(instance As dh15tpdcfrgn)
    End Sub
  Partial Private Sub Insertdrsampfmlno(instance As drsampfmlno)
    End Sub
  Partial Private Sub Updatedrsampfmlno(instance As drsampfmlno)
    End Sub
  Partial Private Sub Deletedrsampfmlno(instance As drsampfmlno)
    End Sub
  Partial Private Sub Insertdrimpdrg(instance As drimpdrg)
    End Sub
  Partial Private Sub Updatedrimpdrg(instance As drimpdrg)
    End Sub
  Partial Private Sub Deletedrimpdrg(instance As drimpdrg)
    End Sub
  Partial Private Sub Insertdrimpfrgn(instance As drimpfrgn)
    End Sub
  Partial Private Sub Updatedrimpfrgn(instance As drimpfrgn)
    End Sub
  Partial Private Sub Deletedrimpfrgn(instance As drimpfrgn)
    End Sub
  Partial Private Sub Insertdacnc(instance As dacnc)
    End Sub
  Partial Private Sub Updatedacnc(instance As dacnc)
    End Sub
  Partial Private Sub Deletedacnc(instance As dacnc)
    End Sub
  Partial Private Sub Insertdacncc(instance As dacncc)
    End Sub
  Partial Private Sub Updatedacncc(instance As dacncc)
    End Sub
  Partial Private Sub Deletedacncc(instance As dacncc)
    End Sub
  Partial Private Sub Insertdacnsd(instance As dacnsd)
    End Sub
  Partial Private Sub Updatedacnsd(instance As dacnsd)
    End Sub
  Partial Private Sub Deletedacnsd(instance As dacnsd)
    End Sub
  Partial Private Sub Insertdacscd(instance As dacscd)
    End Sub
  Partial Private Sub Updatedacscd(instance As dacscd)
    End Sub
  Partial Private Sub Deletedacscd(instance As dacscd)
    End Sub
  Partial Private Sub Insertdalcntype(instance As dalcntype)
    End Sub
  Partial Private Sub Updatedalcntype(instance As dalcntype)
    End Sub
  Partial Private Sub Deletedalcntype(instance As dalcntype)
    End Sub
  Partial Private Sub Insertdaphrcd(instance As daphrcd)
    End Sub
  Partial Private Sub Updatedaphrcd(instance As daphrcd)
    End Sub
  Partial Private Sub Deletedaphrcd(instance As daphrcd)
    End Sub
  Partial Private Sub Insertdaweek(instance As daweek)
    End Sub
  Partial Private Sub Updatedaweek(instance As daweek)
    End Sub
  Partial Private Sub Deletedaweek(instance As daweek)
    End Sub
  Partial Private Sub Insertdjpctype(instance As djpctype)
    End Sub
  Partial Private Sub Updatedjpctype(instance As djpctype)
    End Sub
  Partial Private Sub Deletedjpctype(instance As djpctype)
    End Sub
  Partial Private Sub Insertdramlpart(instance As dramlpart)
    End Sub
  Partial Private Sub Updatedramlpart(instance As dramlpart)
    End Sub
  Partial Private Sub Deletedramlpart(instance As dramlpart)
    End Sub
  Partial Private Sub Insertdramltype(instance As dramltype)
    End Sub
  Partial Private Sub Updatedramltype(instance As dramltype)
    End Sub
  Partial Private Sub Deletedramltype(instance As dramltype)
    End Sub
  Partial Private Sub Insertdramlusetp(instance As dramlusetp)
    End Sub
  Partial Private Sub Updatedramlusetp(instance As dramlusetp)
    End Sub
  Partial Private Sub Deletedramlusetp(instance As dramlusetp)
    End Sub
  Partial Private Sub Insertdrpcboject(instance As drpcboject)
    End Sub
  Partial Private Sub Updatedrpcboject(instance As drpcboject)
    End Sub
  Partial Private Sub Deletedrpcboject(instance As drpcboject)
    End Sub
  Partial Private Sub Insertdrpcbtype(instance As drpcbtype)
    End Sub
  Partial Private Sub Updatedrpcbtype(instance As drpcbtype)
    End Sub
  Partial Private Sub Deletedrpcbtype(instance As drpcbtype)
    End Sub
  Partial Private Sub Insertdrstdtest(instance As drstdtest)
    End Sub
  Partial Private Sub Updatedrstdtest(instance As drstdtest)
    End Sub
  Partial Private Sub Deletedrstdtest(instance As drstdtest)
    End Sub
  Partial Private Sub Insertdrstng(instance As drstng)
    End Sub
  Partial Private Sub Updatedrstng(instance As drstng)
    End Sub
  Partial Private Sub Deletedrstng(instance As drstng)
    End Sub
  Partial Private Sub Insertsysisocnt(instance As sysisocnt)
    End Sub
  Partial Private Sub Updatesysisocnt(instance As sysisocnt)
    End Sub
  Partial Private Sub Deletesysisocnt(instance As sysisocnt)
    End Sub
  Partial Private Sub InsertTRANSACTION_DOWNLOAD(instance As TRANSACTION_DOWNLOAD)
    End Sub
  Partial Private Sub UpdateTRANSACTION_DOWNLOAD(instance As TRANSACTION_DOWNLOAD)
    End Sub
  Partial Private Sub DeleteTRANSACTION_DOWNLOAD(instance As TRANSACTION_DOWNLOAD)
    End Sub
  Partial Private Sub InsertPROCESS_NAME(instance As PROCESS_NAME)
    End Sub
  Partial Private Sub UpdatePROCESS_NAME(instance As PROCESS_NAME)
    End Sub
  Partial Private Sub DeletePROCESS_NAME(instance As PROCESS_NAME)
    End Sub
  Partial Private Sub Insertdrpcb(instance As drpcb)
    End Sub
  Partial Private Sub Updatedrpcb(instance As drpcb)
    End Sub
  Partial Private Sub Deletedrpcb(instance As drpcb)
    End Sub
  Partial Private Sub Insertlgt_impcerref(instance As lgt_impcerref)
    End Sub
  Partial Private Sub Updatelgt_impcerref(instance As lgt_impcerref)
    End Sub
  Partial Private Sub Deletelgt_impcerref(instance As lgt_impcerref)
    End Sub
  Partial Private Sub InsertCER_DRTYPE(instance As CER_DRTYPE)
    End Sub
  Partial Private Sub UpdateCER_DRTYPE(instance As CER_DRTYPE)
    End Sub
  Partial Private Sub DeleteCER_DRTYPE(instance As CER_DRTYPE)
    End Sub
  Partial Private Sub InsertCER_REF(instance As CER_REF)
    End Sub
  Partial Private Sub UpdateCER_REF(instance As CER_REF)
    End Sub
  Partial Private Sub DeleteCER_REF(instance As CER_REF)
    End Sub
  Partial Private Sub InsertGEN_NO_01(instance As GEN_NO_01)
    End Sub
  Partial Private Sub UpdateGEN_NO_01(instance As GEN_NO_01)
    End Sub
  Partial Private Sub DeleteGEN_NO_01(instance As GEN_NO_01)
    End Sub
  Partial Private Sub InsertGEN_NO_02(instance As GEN_NO_02)
    End Sub
  Partial Private Sub UpdateGEN_NO_02(instance As GEN_NO_02)
    End Sub
  Partial Private Sub DeleteGEN_NO_02(instance As GEN_NO_02)
    End Sub
  Partial Private Sub InsertGEN_NO_03(instance As GEN_NO_03)
    End Sub
  Partial Private Sub UpdateGEN_NO_03(instance As GEN_NO_03)
    End Sub
  Partial Private Sub DeleteGEN_NO_03(instance As GEN_NO_03)
    End Sub
  Partial Private Sub InsertGEN_NO_05(instance As GEN_NO_05)
    End Sub
  Partial Private Sub UpdateGEN_NO_05(instance As GEN_NO_05)
    End Sub
  Partial Private Sub DeleteGEN_NO_05(instance As GEN_NO_05)
    End Sub
  Partial Private Sub InsertGEN_NO_06(instance As GEN_NO_06)
    End Sub
  Partial Private Sub UpdateGEN_NO_06(instance As GEN_NO_06)
    End Sub
  Partial Private Sub DeleteGEN_NO_06(instance As GEN_NO_06)
    End Sub
  Partial Private Sub InsertGEN_NO_07(instance As GEN_NO_07)
    End Sub
  Partial Private Sub UpdateGEN_NO_07(instance As GEN_NO_07)
    End Sub
  Partial Private Sub DeleteGEN_NO_07(instance As GEN_NO_07)
    End Sub
  Partial Private Sub InsertGEN_NO_08(instance As GEN_NO_08)
    End Sub
  Partial Private Sub UpdateGEN_NO_08(instance As GEN_NO_08)
    End Sub
  Partial Private Sub DeleteGEN_NO_08(instance As GEN_NO_08)
    End Sub
  Partial Private Sub InsertGEN_NO_09(instance As GEN_NO_09)
    End Sub
  Partial Private Sub UpdateGEN_NO_09(instance As GEN_NO_09)
    End Sub
  Partial Private Sub DeleteGEN_NO_09(instance As GEN_NO_09)
    End Sub
  Partial Private Sub InsertGEN_NO_10(instance As GEN_NO_10)
    End Sub
  Partial Private Sub UpdateGEN_NO_10(instance As GEN_NO_10)
    End Sub
  Partial Private Sub DeleteGEN_NO_10(instance As GEN_NO_10)
    End Sub
  Partial Private Sub InsertGEN_NO_11(instance As GEN_NO_11)
    End Sub
  Partial Private Sub UpdateGEN_NO_11(instance As GEN_NO_11)
    End Sub
  Partial Private Sub DeleteGEN_NO_11(instance As GEN_NO_11)
    End Sub
  Partial Private Sub InsertGEN_NO_12(instance As GEN_NO_12)
    End Sub
  Partial Private Sub UpdateGEN_NO_12(instance As GEN_NO_12)
    End Sub
  Partial Private Sub DeleteGEN_NO_12(instance As GEN_NO_12)
    End Sub
  Partial Private Sub InsertEDIT_REQUEST(instance As EDIT_REQUEST)
    End Sub
  Partial Private Sub UpdateEDIT_REQUEST(instance As EDIT_REQUEST)
    End Sub
  Partial Private Sub DeleteEDIT_REQUEST(instance As EDIT_REQUEST)
    End Sub
  Partial Private Sub Insertdrrgtnewdg(instance As drrgtnewdg)
    End Sub
  Partial Private Sub Updatedrrgtnewdg(instance As drrgtnewdg)
    End Sub
  Partial Private Sub Deletedrrgtnewdg(instance As drrgtnewdg)
    End Sub
  Partial Private Sub Insertdrpcksize(instance As drpcksize)
    End Sub
  Partial Private Sub Updatedrpcksize(instance As drpcksize)
    End Sub
  Partial Private Sub Deletedrpcksize(instance As drpcksize)
    End Sub
  Partial Private Sub Insertdrusedrg(instance As drusedrg)
    End Sub
  Partial Private Sub Updatedrusedrg(instance As drusedrg)
    End Sub
  Partial Private Sub Deletedrusedrg(instance As drusedrg)
    End Sub
  Partial Private Sub Insertdrspec(instance As drspec)
    End Sub
  Partial Private Sub Updatedrspec(instance As drspec)
    End Sub
  Partial Private Sub Deletedrspec(instance As drspec)
    End Sub
  Partial Private Sub Insertdreqto(instance As dreqto)
    End Sub
  Partial Private Sub Updatedreqto(instance As dreqto)
    End Sub
  Partial Private Sub Deletedreqto(instance As dreqto)
    End Sub
  Partial Private Sub Insertdrfml(instance As drfml)
    End Sub
  Partial Private Sub Updatedrfml(instance As drfml)
    End Sub
  Partial Private Sub Deletedrfml(instance As drfml)
    End Sub
  Partial Private Sub Insertdrfmlno(instance As drfmlno)
    End Sub
  Partial Private Sub Updatedrfmlno(instance As drfmlno)
    End Sub
  Partial Private Sub Deletedrfmlno(instance As drfmlno)
    End Sub
  Partial Private Sub Insertdrdrgchr(instance As drdrgchr)
    End Sub
  Partial Private Sub Updatedrdrgchr(instance As drdrgchr)
    End Sub
  Partial Private Sub Deletedrdrgchr(instance As drdrgchr)
    End Sub
  Partial Private Sub Insertdrfrgn(instance As drfrgn)
    End Sub
  Partial Private Sub Updatedrfrgn(instance As drfrgn)
    End Sub
  Partial Private Sub Deletedrfrgn(instance As drfrgn)
    End Sub
  Partial Private Sub InsertDRUG_IN_PROJECT(instance As DRUG_IN_PROJECT)
    End Sub
  Partial Private Sub UpdateDRUG_IN_PROJECT(instance As DRUG_IN_PROJECT)
    End Sub
  Partial Private Sub DeleteDRUG_IN_PROJECT(instance As DRUG_IN_PROJECT)
    End Sub
  Partial Private Sub InsertMAS_RESEARCHER(instance As MAS_RESEARCHER)
    End Sub
  Partial Private Sub UpdateMAS_RESEARCHER(instance As MAS_RESEARCHER)
    End Sub
  Partial Private Sub DeleteMAS_RESEARCHER(instance As MAS_RESEARCHER)
    End Sub
  Partial Private Sub InsertTH_RESEARCH_LOCATION(instance As TH_RESEARCH_LOCATION)
    End Sub
  Partial Private Sub UpdateTH_RESEARCH_LOCATION(instance As TH_RESEARCH_LOCATION)
    End Sub
  Partial Private Sub DeleteTH_RESEARCH_LOCATION(instance As TH_RESEARCH_LOCATION)
    End Sub
  Partial Private Sub Insertdalcnaddr(instance As dalcnaddr)
    End Sub
  Partial Private Sub Updatedalcnaddr(instance As dalcnaddr)
    End Sub
  Partial Private Sub Deletedalcnaddr(instance As dalcnaddr)
    End Sub
  Partial Private Sub InsertMAS_TEMPLATE_PROCESS(instance As MAS_TEMPLATE_PROCESS)
    End Sub
  Partial Private Sub UpdateMAS_TEMPLATE_PROCESS(instance As MAS_TEMPLATE_PROCESS)
    End Sub
  Partial Private Sub DeleteMAS_TEMPLATE_PROCESS(instance As MAS_TEMPLATE_PROCESS)
    End Sub
  Partial Private Sub InsertE_TRACK_STAFF_STATUS(instance As E_TRACK_STAFF_STATUS)
    End Sub
  Partial Private Sub UpdateE_TRACK_STAFF_STATUS(instance As E_TRACK_STAFF_STATUS)
    End Sub
  Partial Private Sub DeleteE_TRACK_STAFF_STATUS(instance As E_TRACK_STAFF_STATUS)
    End Sub
  Partial Private Sub InsertMAS_MAIN_GROUP_STATUS(instance As MAS_MAIN_GROUP_STATUS)
    End Sub
  Partial Private Sub UpdateMAS_MAIN_GROUP_STATUS(instance As MAS_MAIN_GROUP_STATUS)
    End Sub
  Partial Private Sub DeleteMAS_MAIN_GROUP_STATUS(instance As MAS_MAIN_GROUP_STATUS)
    End Sub
  Partial Private Sub InsertDETAIL_MAIN_GROUP_STATUS(instance As DETAIL_MAIN_GROUP_STATUS)
    End Sub
  Partial Private Sub UpdateDETAIL_MAIN_GROUP_STATUS(instance As DETAIL_MAIN_GROUP_STATUS)
    End Sub
  Partial Private Sub DeleteDETAIL_MAIN_GROUP_STATUS(instance As DETAIL_MAIN_GROUP_STATUS)
    End Sub
  Partial Private Sub InsertDATE_MODIFY_STATUS(instance As DATE_MODIFY_STATUS)
    End Sub
  Partial Private Sub UpdateDATE_MODIFY_STATUS(instance As DATE_MODIFY_STATUS)
    End Sub
  Partial Private Sub DeleteDATE_MODIFY_STATUS(instance As DATE_MODIFY_STATUS)
    End Sub
  Partial Private Sub Insertlgt_impcer(instance As lgt_impcer)
    End Sub
  Partial Private Sub Updatelgt_impcer(instance As lgt_impcer)
    End Sub
  Partial Private Sub Deletelgt_impcer(instance As lgt_impcer)
    End Sub
  Partial Private Sub InsertTEMPLATE_ATTACH(instance As TEMPLATE_ATTACH)
    End Sub
  Partial Private Sub UpdateTEMPLATE_ATTACH(instance As TEMPLATE_ATTACH)
    End Sub
  Partial Private Sub DeleteTEMPLATE_ATTACH(instance As TEMPLATE_ATTACH)
    End Sub
  Partial Private Sub InsertGEN_RCVNO(instance As GEN_RCVNO)
    End Sub
  Partial Private Sub UpdateGEN_RCVNO(instance As GEN_RCVNO)
    End Sub
  Partial Private Sub DeleteGEN_RCVNO(instance As GEN_RCVNO)
    End Sub
  Partial Private Sub InsertTRANFER_LOCATION(instance As TRANFER_LOCATION)
    End Sub
  Partial Private Sub UpdateTRANFER_LOCATION(instance As TRANFER_LOCATION)
    End Sub
  Partial Private Sub DeleteTRANFER_LOCATION(instance As TRANFER_LOCATION)
    End Sub
  Partial Private Sub InsertSTATUS_DATE(instance As STATUS_DATE)
    End Sub
  Partial Private Sub UpdateSTATUS_DATE(instance As STATUS_DATE)
    End Sub
  Partial Private Sub DeleteSTATUS_DATE(instance As STATUS_DATE)
    End Sub
  Partial Private Sub InsertDH15_DETAIL_MANUFACTURE(instance As DH15_DETAIL_MANUFACTURE)
    End Sub
  Partial Private Sub UpdateDH15_DETAIL_MANUFACTURE(instance As DH15_DETAIL_MANUFACTURE)
    End Sub
  Partial Private Sub DeleteDH15_DETAIL_MANUFACTURE(instance As DH15_DETAIL_MANUFACTURE)
    End Sub
  Partial Private Sub InsertGEN_DH15TDGT_NO(instance As GEN_DH15TDGT_NO)
    End Sub
  Partial Private Sub UpdateGEN_DH15TDGT_NO(instance As GEN_DH15TDGT_NO)
    End Sub
  Partial Private Sub DeleteGEN_DH15TDGT_NO(instance As GEN_DH15TDGT_NO)
    End Sub
  Partial Private Sub InsertDH15_DETAIL_MANUFACTURE1(instance As DH15_DETAIL_MANUFACTURE1)
    End Sub
  Partial Private Sub UpdateDH15_DETAIL_MANUFACTURE1(instance As DH15_DETAIL_MANUFACTURE1)
    End Sub
  Partial Private Sub DeleteDH15_DETAIL_MANUFACTURE1(instance As DH15_DETAIL_MANUFACTURE1)
    End Sub
  Partial Private Sub InsertGEN_NO_04(instance As GEN_NO_04)
    End Sub
  Partial Private Sub UpdateGEN_NO_04(instance As GEN_NO_04)
    End Sub
  Partial Private Sub DeleteGEN_NO_04(instance As GEN_NO_04)
    End Sub
  Partial Private Sub InsertMAS_CATEGORY_DRUG(instance As MAS_CATEGORY_DRUG)
    End Sub
  Partial Private Sub UpdateMAS_CATEGORY_DRUG(instance As MAS_CATEGORY_DRUG)
    End Sub
  Partial Private Sub DeleteMAS_CATEGORY_DRUG(instance As MAS_CATEGORY_DRUG)
    End Sub
  Partial Private Sub InsertDRRGT_DETAIL_ROLE(instance As DRRGT_DETAIL_ROLE)
    End Sub
  Partial Private Sub UpdateDRRGT_DETAIL_ROLE(instance As DRRGT_DETAIL_ROLE)
    End Sub
  Partial Private Sub DeleteDRRGT_DETAIL_ROLE(instance As DRRGT_DETAIL_ROLE)
    End Sub
  Partial Private Sub InsertE_TRACKING_STAFF(instance As E_TRACKING_STAFF)
    End Sub
  Partial Private Sub UpdateE_TRACKING_STAFF(instance As E_TRACKING_STAFF)
    End Sub
  Partial Private Sub DeleteE_TRACKING_STAFF(instance As E_TRACKING_STAFF)
    End Sub
  Partial Private Sub InsertE_TRACKING_STAFF_CITIZEN_ID(instance As E_TRACKING_STAFF_CITIZEN_ID)
    End Sub
  Partial Private Sub UpdateE_TRACKING_STAFF_CITIZEN_ID(instance As E_TRACKING_STAFF_CITIZEN_ID)
    End Sub
  Partial Private Sub DeleteE_TRACKING_STAFF_CITIZEN_ID(instance As E_TRACKING_STAFF_CITIZEN_ID)
    End Sub
  Partial Private Sub InsertDRUG_PROJECT(instance As DRUG_PROJECT)
    End Sub
  Partial Private Sub UpdateDRUG_PROJECT(instance As DRUG_PROJECT)
    End Sub
  Partial Private Sub DeleteDRUG_PROJECT(instance As DRUG_PROJECT)
    End Sub
  Partial Private Sub Insertdrimpfor(instance As drimpfor)
    End Sub
  Partial Private Sub Updatedrimpfor(instance As drimpfor)
    End Sub
  Partial Private Sub Deletedrimpfor(instance As drimpfor)
    End Sub
  Partial Private Sub InsertMAS_MENU(instance As MAS_MENU)
    End Sub
  Partial Private Sub UpdateMAS_MENU(instance As MAS_MENU)
    End Sub
  Partial Private Sub DeleteMAS_MENU(instance As MAS_MENU)
    End Sub
  Partial Private Sub InsertMAS_E_TRACKING_GAP(instance As MAS_E_TRACKING_GAP)
    End Sub
  Partial Private Sub UpdateMAS_E_TRACKING_GAP(instance As MAS_E_TRACKING_GAP)
    End Sub
  Partial Private Sub DeleteMAS_E_TRACKING_GAP(instance As MAS_E_TRACKING_GAP)
    End Sub
  Partial Private Sub InsertDRUG_PRODUCT_DR_GROUP(instance As DRUG_PRODUCT_DR_GROUP)
    End Sub
  Partial Private Sub UpdateDRUG_PRODUCT_DR_GROUP(instance As DRUG_PRODUCT_DR_GROUP)
    End Sub
  Partial Private Sub DeleteDRUG_PRODUCT_DR_GROUP(instance As DRUG_PRODUCT_DR_GROUP)
    End Sub
  Partial Private Sub InsertGEN_NO_17(instance As GEN_NO_17)
    End Sub
  Partial Private Sub UpdateGEN_NO_17(instance As GEN_NO_17)
    End Sub
  Partial Private Sub DeleteGEN_NO_17(instance As GEN_NO_17)
    End Sub
  Partial Private Sub InsertGEN_NO_18(instance As GEN_NO_18)
    End Sub
  Partial Private Sub UpdateGEN_NO_18(instance As GEN_NO_18)
    End Sub
  Partial Private Sub DeleteGEN_NO_18(instance As GEN_NO_18)
    End Sub
  Partial Private Sub InsertMAS_WORK_GROUP(instance As MAS_WORK_GROUP)
    End Sub
  Partial Private Sub UpdateMAS_WORK_GROUP(instance As MAS_WORK_GROUP)
    End Sub
  Partial Private Sub DeleteMAS_WORK_GROUP(instance As MAS_WORK_GROUP)
    End Sub
  Partial Private Sub InsertDRUG_TERM_TO_USE(instance As DRUG_TERM_TO_USE)
    End Sub
  Partial Private Sub UpdateDRUG_TERM_TO_USE(instance As DRUG_TERM_TO_USE)
    End Sub
  Partial Private Sub DeleteDRUG_TERM_TO_USE(instance As DRUG_TERM_TO_USE)
    End Sub
  Partial Private Sub InsertGEN_NO_16(instance As GEN_NO_16)
    End Sub
  Partial Private Sub UpdateGEN_NO_16(instance As GEN_NO_16)
    End Sub
  Partial Private Sub DeleteGEN_NO_16(instance As GEN_NO_16)
    End Sub
  Partial Private Sub InsertDRUG_PRODUCT_IOWA(instance As DRUG_PRODUCT_IOWA)
    End Sub
  Partial Private Sub UpdateDRUG_PRODUCT_IOWA(instance As DRUG_PRODUCT_IOWA)
    End Sub
  Partial Private Sub DeleteDRUG_PRODUCT_IOWA(instance As DRUG_PRODUCT_IOWA)
    End Sub
  Partial Private Sub InsertDRUG_PRODUCT_ADDR(instance As DRUG_PRODUCT_ADDR)
    End Sub
  Partial Private Sub UpdateDRUG_PRODUCT_ADDR(instance As DRUG_PRODUCT_ADDR)
    End Sub
  Partial Private Sub DeleteDRUG_PRODUCT_ADDR(instance As DRUG_PRODUCT_ADDR)
    End Sub
  Partial Private Sub Insertsyswrkunt(instance As syswrkunt)
    End Sub
  Partial Private Sub Updatesyswrkunt(instance As syswrkunt)
    End Sub
  Partial Private Sub Deletesyswrkunt(instance As syswrkunt)
    End Sub
  Partial Private Sub InsertMAS_E_TRACKING_GROUP(instance As MAS_E_TRACKING_GROUP)
    End Sub
  Partial Private Sub UpdateMAS_E_TRACKING_GROUP(instance As MAS_E_TRACKING_GROUP)
    End Sub
  Partial Private Sub DeleteMAS_E_TRACKING_GROUP(instance As MAS_E_TRACKING_GROUP)
    End Sub
  Partial Private Sub InsertCONSIDER_REQ_PRINT_HISTORY(instance As CONSIDER_REQ_PRINT_HISTORY)
    End Sub
  Partial Private Sub UpdateCONSIDER_REQ_PRINT_HISTORY(instance As CONSIDER_REQ_PRINT_HISTORY)
    End Sub
  Partial Private Sub DeleteCONSIDER_REQ_PRINT_HISTORY(instance As CONSIDER_REQ_PRINT_HISTORY)
    End Sub
  Partial Private Sub InsertMAS_MENU_AUTO(instance As MAS_MENU_AUTO)
    End Sub
  Partial Private Sub UpdateMAS_MENU_AUTO(instance As MAS_MENU_AUTO)
    End Sub
  Partial Private Sub DeleteMAS_MENU_AUTO(instance As MAS_MENU_AUTO)
    End Sub
  Partial Private Sub InsertDALCN_PRODUCTION_DRUG_GROUP_DES_DETAIL(instance As DALCN_PRODUCTION_DRUG_GROUP_DES_DETAIL)
    End Sub
  Partial Private Sub UpdateDALCN_PRODUCTION_DRUG_GROUP_DES_DETAIL(instance As DALCN_PRODUCTION_DRUG_GROUP_DES_DETAIL)
    End Sub
  Partial Private Sub DeleteDALCN_PRODUCTION_DRUG_GROUP_DES_DETAIL(instance As DALCN_PRODUCTION_DRUG_GROUP_DES_DETAIL)
    End Sub
  Partial Private Sub InsertDALCN_PRODUCTION_DRUG_GROUP_DETAIL(instance As DALCN_PRODUCTION_DRUG_GROUP_DETAIL)
    End Sub
  Partial Private Sub UpdateDALCN_PRODUCTION_DRUG_GROUP_DETAIL(instance As DALCN_PRODUCTION_DRUG_GROUP_DETAIL)
    End Sub
  Partial Private Sub DeleteDALCN_PRODUCTION_DRUG_GROUP_DETAIL(instance As DALCN_PRODUCTION_DRUG_GROUP_DETAIL)
    End Sub
  Partial Private Sub InsertMAS_DRUG_GROUP(instance As MAS_DRUG_GROUP)
    End Sub
  Partial Private Sub UpdateMAS_DRUG_GROUP(instance As MAS_DRUG_GROUP)
    End Sub
  Partial Private Sub DeleteMAS_DRUG_GROUP(instance As MAS_DRUG_GROUP)
    End Sub
  Partial Private Sub InsertDALCN_PRODUCTION_DRUG_TYPE_DETAIL(instance As DALCN_PRODUCTION_DRUG_TYPE_DETAIL)
    End Sub
  Partial Private Sub UpdateDALCN_PRODUCTION_DRUG_TYPE_DETAIL(instance As DALCN_PRODUCTION_DRUG_TYPE_DETAIL)
    End Sub
  Partial Private Sub DeleteDALCN_PRODUCTION_DRUG_TYPE_DETAIL(instance As DALCN_PRODUCTION_DRUG_TYPE_DETAIL)
    End Sub
  Partial Private Sub InsertDALCN_PRODUCTION_DRUG_TYPE_DETAIL2(instance As DALCN_PRODUCTION_DRUG_TYPE_DETAIL2)
    End Sub
  Partial Private Sub UpdateDALCN_PRODUCTION_DRUG_TYPE_DETAIL2(instance As DALCN_PRODUCTION_DRUG_TYPE_DETAIL2)
    End Sub
  Partial Private Sub DeleteDALCN_PRODUCTION_DRUG_TYPE_DETAIL2(instance As DALCN_PRODUCTION_DRUG_TYPE_DETAIL2)
    End Sub
  Partial Private Sub InsertLCN_EXTEND(instance As LCN_EXTEND)
    End Sub
  Partial Private Sub UpdateLCN_EXTEND(instance As LCN_EXTEND)
    End Sub
  Partial Private Sub DeleteLCN_EXTEND(instance As LCN_EXTEND)
    End Sub
  Partial Private Sub InsertMAS_E_TRACKING_STATUS(instance As MAS_E_TRACKING_STATUS)
    End Sub
  Partial Private Sub UpdateMAS_E_TRACKING_STATUS(instance As MAS_E_TRACKING_STATUS)
    End Sub
  Partial Private Sub DeleteMAS_E_TRACKING_STATUS(instance As MAS_E_TRACKING_STATUS)
    End Sub
  Partial Private Sub InsertMAS_EXPERT_SKILL(instance As MAS_EXPERT_SKILL)
    End Sub
  Partial Private Sub UpdateMAS_EXPERT_SKILL(instance As MAS_EXPERT_SKILL)
    End Sub
  Partial Private Sub DeleteMAS_EXPERT_SKILL(instance As MAS_EXPERT_SKILL)
    End Sub
  Partial Private Sub InsertDH15_DETAIL_CER(instance As DH15_DETAIL_CER)
    End Sub
  Partial Private Sub UpdateDH15_DETAIL_CER(instance As DH15_DETAIL_CER)
    End Sub
  Partial Private Sub DeleteDH15_DETAIL_CER(instance As DH15_DETAIL_CER)
    End Sub
  Partial Private Sub InsertMAS_E_TRACKING_REPORT_PROCESS(instance As MAS_E_TRACKING_REPORT_PROCESS)
    End Sub
  Partial Private Sub UpdateMAS_E_TRACKING_REPORT_PROCESS(instance As MAS_E_TRACKING_REPORT_PROCESS)
    End Sub
  Partial Private Sub DeleteMAS_E_TRACKING_REPORT_PROCESS(instance As MAS_E_TRACKING_REPORT_PROCESS)
    End Sub
  Partial Private Sub InsertE_TRACKING_WORK_DAY_REPORT_DETAIL(instance As E_TRACKING_WORK_DAY_REPORT_DETAIL)
    End Sub
  Partial Private Sub UpdateE_TRACKING_WORK_DAY_REPORT_DETAIL(instance As E_TRACKING_WORK_DAY_REPORT_DETAIL)
    End Sub
  Partial Private Sub DeleteE_TRACKING_WORK_DAY_REPORT_DETAIL(instance As E_TRACKING_WORK_DAY_REPORT_DETAIL)
    End Sub
  Partial Private Sub InsertMAS_E_TRACKING_PERIOD_NAME(instance As MAS_E_TRACKING_PERIOD_NAME)
    End Sub
  Partial Private Sub UpdateMAS_E_TRACKING_PERIOD_NAME(instance As MAS_E_TRACKING_PERIOD_NAME)
    End Sub
  Partial Private Sub DeleteMAS_E_TRACKING_PERIOD_NAME(instance As MAS_E_TRACKING_PERIOD_NAME)
    End Sub
  Partial Private Sub InsertDRUG_PRODUCT_ID_UNIT_DETAIL(instance As DRUG_PRODUCT_ID_UNIT_DETAIL)
    End Sub
  Partial Private Sub UpdateDRUG_PRODUCT_ID_UNIT_DETAIL(instance As DRUG_PRODUCT_ID_UNIT_DETAIL)
    End Sub
  Partial Private Sub DeleteDRUG_PRODUCT_ID_UNIT_DETAIL(instance As DRUG_PRODUCT_ID_UNIT_DETAIL)
    End Sub
  Partial Private Sub Insertdcunit(instance As dcunit)
    End Sub
  Partial Private Sub Updatedcunit(instance As dcunit)
    End Sub
  Partial Private Sub Deletedcunit(instance As dcunit)
    End Sub
  Partial Private Sub InsertE_TRACKING_WORK_DAY_REQUEST_DETAIL(instance As E_TRACKING_WORK_DAY_REQUEST_DETAIL)
    End Sub
  Partial Private Sub UpdateE_TRACKING_WORK_DAY_REQUEST_DETAIL(instance As E_TRACKING_WORK_DAY_REQUEST_DETAIL)
    End Sub
  Partial Private Sub DeleteE_TRACKING_WORK_DAY_REQUEST_DETAIL(instance As E_TRACKING_WORK_DAY_REQUEST_DETAIL)
    End Sub
  Partial Private Sub InsertMAS_BIO_PACK(instance As MAS_BIO_PACK)
    End Sub
  Partial Private Sub UpdateMAS_BIO_PACK(instance As MAS_BIO_PACK)
    End Sub
  Partial Private Sub DeleteMAS_BIO_PACK(instance As MAS_BIO_PACK)
    End Sub
  Partial Private Sub InsertMAS_HERB_TYPE(instance As MAS_HERB_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_HERB_TYPE(instance As MAS_HERB_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_HERB_TYPE(instance As MAS_HERB_TYPE)
    End Sub
  Partial Private Sub InsertMAS_HERB_OR_ANIMAL_PART(instance As MAS_HERB_OR_ANIMAL_PART)
    End Sub
  Partial Private Sub UpdateMAS_HERB_OR_ANIMAL_PART(instance As MAS_HERB_OR_ANIMAL_PART)
    End Sub
  Partial Private Sub DeleteMAS_HERB_OR_ANIMAL_PART(instance As MAS_HERB_OR_ANIMAL_PART)
    End Sub
  Partial Private Sub InsertMAS_BIO_TYPE(instance As MAS_BIO_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_BIO_TYPE(instance As MAS_BIO_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_BIO_TYPE(instance As MAS_BIO_TYPE)
    End Sub
  Partial Private Sub InsertCHEMICAL_HERB_DETAIL(instance As CHEMICAL_HERB_DETAIL)
    End Sub
  Partial Private Sub UpdateCHEMICAL_HERB_DETAIL(instance As CHEMICAL_HERB_DETAIL)
    End Sub
  Partial Private Sub DeleteCHEMICAL_HERB_DETAIL(instance As CHEMICAL_HERB_DETAIL)
    End Sub
  Partial Private Sub InsertMAS_HERB_OR_ANIMAL_PART1(instance As MAS_HERB_OR_ANIMAL_PART1)
    End Sub
  Partial Private Sub UpdateMAS_HERB_OR_ANIMAL_PART1(instance As MAS_HERB_OR_ANIMAL_PART1)
    End Sub
  Partial Private Sub DeleteMAS_HERB_OR_ANIMAL_PART1(instance As MAS_HERB_OR_ANIMAL_PART1)
    End Sub
  Partial Private Sub InsertMAS_DOCUMENT_RECEIVER(instance As MAS_DOCUMENT_RECEIVER)
    End Sub
  Partial Private Sub UpdateMAS_DOCUMENT_RECEIVER(instance As MAS_DOCUMENT_RECEIVER)
    End Sub
  Partial Private Sub DeleteMAS_DOCUMENT_RECEIVER(instance As MAS_DOCUMENT_RECEIVER)
    End Sub
  Partial Private Sub InsertCHEMICAL_REQUEST_STANDARD_IOWA(instance As CHEMICAL_REQUEST_STANDARD_IOWA)
    End Sub
  Partial Private Sub UpdateCHEMICAL_REQUEST_STANDARD_IOWA(instance As CHEMICAL_REQUEST_STANDARD_IOWA)
    End Sub
  Partial Private Sub DeleteCHEMICAL_REQUEST_STANDARD_IOWA(instance As CHEMICAL_REQUEST_STANDARD_IOWA)
    End Sub
  Partial Private Sub InsertMAS_CHEMICAL_LIST16(instance As MAS_CHEMICAL_LIST16)
    End Sub
  Partial Private Sub UpdateMAS_CHEMICAL_LIST16(instance As MAS_CHEMICAL_LIST16)
    End Sub
  Partial Private Sub DeleteMAS_CHEMICAL_LIST16(instance As MAS_CHEMICAL_LIST16)
    End Sub
  Partial Private Sub InsertDALCN_SELL_TYPE(instance As DALCN_SELL_TYPE)
    End Sub
  Partial Private Sub UpdateDALCN_SELL_TYPE(instance As DALCN_SELL_TYPE)
    End Sub
  Partial Private Sub DeleteDALCN_SELL_TYPE(instance As DALCN_SELL_TYPE)
    End Sub
  Partial Private Sub InsertCER_DETAIL_MANUFACTURE(instance As CER_DETAIL_MANUFACTURE)
    End Sub
  Partial Private Sub UpdateCER_DETAIL_MANUFACTURE(instance As CER_DETAIL_MANUFACTURE)
    End Sub
  Partial Private Sub DeleteCER_DETAIL_MANUFACTURE(instance As CER_DETAIL_MANUFACTURE)
    End Sub
  Partial Private Sub InsertCHEMICAL_REQUEST_DETAIL(instance As CHEMICAL_REQUEST_DETAIL)
    End Sub
  Partial Private Sub UpdateCHEMICAL_REQUEST_DETAIL(instance As CHEMICAL_REQUEST_DETAIL)
    End Sub
  Partial Private Sub DeleteCHEMICAL_REQUEST_DETAIL(instance As CHEMICAL_REQUEST_DETAIL)
    End Sub
  Partial Private Sub InsertCER_DETAIL_CASCHEMICAL(instance As CER_DETAIL_CASCHEMICAL)
    End Sub
  Partial Private Sub UpdateCER_DETAIL_CASCHEMICAL(instance As CER_DETAIL_CASCHEMICAL)
    End Sub
  Partial Private Sub DeleteCER_DETAIL_CASCHEMICAL(instance As CER_DETAIL_CASCHEMICAL)
    End Sub
  Partial Private Sub InsertDRUG_PRODUCT_ATC(instance As DRUG_PRODUCT_ATC)
    End Sub
  Partial Private Sub UpdateDRUG_PRODUCT_ATC(instance As DRUG_PRODUCT_ATC)
    End Sub
  Partial Private Sub DeleteDRUG_PRODUCT_ATC(instance As DRUG_PRODUCT_ATC)
    End Sub
  Partial Private Sub InsertMAS_NEW(instance As MAS_NEW)
    End Sub
  Partial Private Sub UpdateMAS_NEW(instance As MAS_NEW)
    End Sub
  Partial Private Sub DeleteMAS_NEW(instance As MAS_NEW)
    End Sub
  Partial Private Sub InsertDH15_DETAIL_CASCHEMICAL(instance As DH15_DETAIL_CASCHEMICAL)
    End Sub
  Partial Private Sub UpdateDH15_DETAIL_CASCHEMICAL(instance As DH15_DETAIL_CASCHEMICAL)
    End Sub
  Partial Private Sub DeleteDH15_DETAIL_CASCHEMICAL(instance As DH15_DETAIL_CASCHEMICAL)
    End Sub
  Partial Private Sub InsertFILE_ATTACH(instance As FILE_ATTACH)
    End Sub
  Partial Private Sub UpdateFILE_ATTACH(instance As FILE_ATTACH)
    End Sub
  Partial Private Sub DeleteFILE_ATTACH(instance As FILE_ATTACH)
    End Sub
  Partial Private Sub InsertMAS_MENU_CHEMI_LABEL(instance As MAS_MENU_CHEMI_LABEL)
    End Sub
  Partial Private Sub UpdateMAS_MENU_CHEMI_LABEL(instance As MAS_MENU_CHEMI_LABEL)
    End Sub
  Partial Private Sub DeleteMAS_MENU_CHEMI_LABEL(instance As MAS_MENU_CHEMI_LABEL)
    End Sub
  Partial Private Sub InsertDRSAMP_DETAIL_CA(instance As DRSAMP_DETAIL_CA)
    End Sub
  Partial Private Sub UpdateDRSAMP_DETAIL_CA(instance As DRSAMP_DETAIL_CA)
    End Sub
  Partial Private Sub DeleteDRSAMP_DETAIL_CA(instance As DRSAMP_DETAIL_CA)
    End Sub
  Partial Private Sub InsertMAS_ADMIN_HEADER_LINK(instance As MAS_ADMIN_HEADER_LINK)
    End Sub
  Partial Private Sub UpdateMAS_ADMIN_HEADER_LINK(instance As MAS_ADMIN_HEADER_LINK)
    End Sub
  Partial Private Sub DeleteMAS_ADMIN_HEADER_LINK(instance As MAS_ADMIN_HEADER_LINK)
    End Sub
  Partial Private Sub InsertMAS_NAV_ACTIVE_DETAIL(instance As MAS_NAV_ACTIVE_DETAIL)
    End Sub
  Partial Private Sub UpdateMAS_NAV_ACTIVE_DETAIL(instance As MAS_NAV_ACTIVE_DETAIL)
    End Sub
  Partial Private Sub DeleteMAS_NAV_ACTIVE_DETAIL(instance As MAS_NAV_ACTIVE_DETAIL)
    End Sub
  Partial Private Sub InsertGEN_RCVNO_REQUEST(instance As GEN_RCVNO_REQUEST)
    End Sub
  Partial Private Sub UpdateGEN_RCVNO_REQUEST(instance As GEN_RCVNO_REQUEST)
    End Sub
  Partial Private Sub DeleteGEN_RCVNO_REQUEST(instance As GEN_RCVNO_REQUEST)
    End Sub
  Partial Private Sub InsertE_TRACKING_WORK_DAY_REPORT(instance As E_TRACKING_WORK_DAY_REPORT)
    End Sub
  Partial Private Sub UpdateE_TRACKING_WORK_DAY_REPORT(instance As E_TRACKING_WORK_DAY_REPORT)
    End Sub
  Partial Private Sub DeleteE_TRACKING_WORK_DAY_REPORT(instance As E_TRACKING_WORK_DAY_REPORT)
    End Sub
  Partial Private Sub InsertMAS_DRUG_PRODUCT_NAME(instance As MAS_DRUG_PRODUCT_NAME)
    End Sub
  Partial Private Sub UpdateMAS_DRUG_PRODUCT_NAME(instance As MAS_DRUG_PRODUCT_NAME)
    End Sub
  Partial Private Sub DeleteMAS_DRUG_PRODUCT_NAME(instance As MAS_DRUG_PRODUCT_NAME)
    End Sub
  Partial Private Sub InsertDALCN_PRODUCTION_GROUP(instance As DALCN_PRODUCTION_GROUP)
    End Sub
  Partial Private Sub UpdateDALCN_PRODUCTION_GROUP(instance As DALCN_PRODUCTION_GROUP)
    End Sub
  Partial Private Sub DeleteDALCN_PRODUCTION_GROUP(instance As DALCN_PRODUCTION_GROUP)
    End Sub
  Partial Private Sub InsertMAS_DRUG_GROUP_HEAD(instance As MAS_DRUG_GROUP_HEAD)
    End Sub
  Partial Private Sub UpdateMAS_DRUG_GROUP_HEAD(instance As MAS_DRUG_GROUP_HEAD)
    End Sub
  Partial Private Sub DeleteMAS_DRUG_GROUP_HEAD(instance As MAS_DRUG_GROUP_HEAD)
    End Sub
  Partial Private Sub InsertE_TRACKING_DETAIL_STATUS(instance As E_TRACKING_DETAIL_STATUS)
    End Sub
  Partial Private Sub UpdateE_TRACKING_DETAIL_STATUS(instance As E_TRACKING_DETAIL_STATUS)
    End Sub
  Partial Private Sub DeleteE_TRACKING_DETAIL_STATUS(instance As E_TRACKING_DETAIL_STATUS)
    End Sub
  Partial Private Sub InsertMAS_E_TRACKING_STATUS_NAME(instance As MAS_E_TRACKING_STATUS_NAME)
    End Sub
  Partial Private Sub UpdateMAS_E_TRACKING_STATUS_NAME(instance As MAS_E_TRACKING_STATUS_NAME)
    End Sub
  Partial Private Sub DeleteMAS_E_TRACKING_STATUS_NAME(instance As MAS_E_TRACKING_STATUS_NAME)
    End Sub
  Partial Private Sub InsertE_TRACKING_EXPERT_ROUND(instance As E_TRACKING_EXPERT_ROUND)
    End Sub
  Partial Private Sub UpdateE_TRACKING_EXPERT_ROUND(instance As E_TRACKING_EXPERT_ROUND)
    End Sub
  Partial Private Sub DeleteE_TRACKING_EXPERT_ROUND(instance As E_TRACKING_EXPERT_ROUND)
    End Sub
  Partial Private Sub InsertE_TRACKING_CURRENT_STATUS(instance As E_TRACKING_CURRENT_STATUS)
    End Sub
  Partial Private Sub UpdateE_TRACKING_CURRENT_STATUS(instance As E_TRACKING_CURRENT_STATUS)
    End Sub
  Partial Private Sub DeleteE_TRACKING_CURRENT_STATUS(instance As E_TRACKING_CURRENT_STATUS)
    End Sub
  Partial Private Sub InsertE_TRACKING_STATUS_ADD(instance As E_TRACKING_STATUS_ADD)
    End Sub
  Partial Private Sub UpdateE_TRACKING_STATUS_ADD(instance As E_TRACKING_STATUS_ADD)
    End Sub
  Partial Private Sub DeleteE_TRACKING_STATUS_ADD(instance As E_TRACKING_STATUS_ADD)
    End Sub
  Partial Private Sub InsertDRUG_REGISTRATION_ATC_DETAIL(instance As DRUG_REGISTRATION_ATC_DETAIL)
    End Sub
  Partial Private Sub UpdateDRUG_REGISTRATION_ATC_DETAIL(instance As DRUG_REGISTRATION_ATC_DETAIL)
    End Sub
  Partial Private Sub DeleteDRUG_REGISTRATION_ATC_DETAIL(instance As DRUG_REGISTRATION_ATC_DETAIL)
    End Sub
  Partial Private Sub InsertDRUG_REGISTRATION_PROPERTy(instance As DRUG_REGISTRATION_PROPERTy)
    End Sub
  Partial Private Sub UpdateDRUG_REGISTRATION_PROPERTy(instance As DRUG_REGISTRATION_PROPERTy)
    End Sub
  Partial Private Sub DeleteDRUG_REGISTRATION_PROPERTy(instance As DRUG_REGISTRATION_PROPERTy)
    End Sub
  Partial Private Sub InsertCER_FOREIGN_MANUFACTURE(instance As CER_FOREIGN_MANUFACTURE)
    End Sub
  Partial Private Sub UpdateCER_FOREIGN_MANUFACTURE(instance As CER_FOREIGN_MANUFACTURE)
    End Sub
  Partial Private Sub DeleteCER_FOREIGN_MANUFACTURE(instance As CER_FOREIGN_MANUFACTURE)
    End Sub
  Partial Private Sub InsertMAS_HEAD_STATUS_E_TRACKING(instance As MAS_HEAD_STATUS_E_TRACKING)
    End Sub
  Partial Private Sub UpdateMAS_HEAD_STATUS_E_TRACKING(instance As MAS_HEAD_STATUS_E_TRACKING)
    End Sub
  Partial Private Sub DeleteMAS_HEAD_STATUS_E_TRACKING(instance As MAS_HEAD_STATUS_E_TRACKING)
    End Sub
  Partial Private Sub InsertDALCN_PHR_HISTORY(instance As DALCN_PHR_HISTORY)
    End Sub
  Partial Private Sub UpdateDALCN_PHR_HISTORY(instance As DALCN_PHR_HISTORY)
    End Sub
  Partial Private Sub DeleteDALCN_PHR_HISTORY(instance As DALCN_PHR_HISTORY)
    End Sub
  Partial Private Sub Insertdaphrfunctcd(instance As daphrfunctcd)
    End Sub
  Partial Private Sub Updatedaphrfunctcd(instance As daphrfunctcd)
    End Sub
  Partial Private Sub Deletedaphrfunctcd(instance As daphrfunctcd)
    End Sub
  Partial Private Sub InsertLOG_STATUS(instance As LOG_STATUS)
    End Sub
  Partial Private Sub UpdateLOG_STATUS(instance As LOG_STATUS)
    End Sub
  Partial Private Sub DeleteLOG_STATUS(instance As LOG_STATUS)
    End Sub
  Partial Private Sub InsertDALCN_PHR_CANCEL_SELF(instance As DALCN_PHR_CANCEL_SELF)
    End Sub
  Partial Private Sub UpdateDALCN_PHR_CANCEL_SELF(instance As DALCN_PHR_CANCEL_SELF)
    End Sub
  Partial Private Sub DeleteDALCN_PHR_CANCEL_SELF(instance As DALCN_PHR_CANCEL_SELF)
    End Sub
  Partial Private Sub InsertLCN_CANCEL(instance As LCN_CANCEL)
    End Sub
  Partial Private Sub UpdateLCN_CANCEL(instance As LCN_CANCEL)
    End Sub
  Partial Private Sub DeleteLCN_CANCEL(instance As LCN_CANCEL)
    End Sub
  Partial Private Sub InsertCER_EXTEND_DETAIL(instance As CER_EXTEND_DETAIL)
    End Sub
  Partial Private Sub UpdateCER_EXTEND_DETAIL(instance As CER_EXTEND_DETAIL)
    End Sub
  Partial Private Sub DeleteCER_EXTEND_DETAIL(instance As CER_EXTEND_DETAIL)
    End Sub
  Partial Private Sub InsertCER_EXTEND(instance As CER_EXTEND)
    End Sub
  Partial Private Sub UpdateCER_EXTEND(instance As CER_EXTEND)
    End Sub
  Partial Private Sub DeleteCER_EXTEND(instance As CER_EXTEND)
    End Sub
  Partial Private Sub InsertMAS_NEW_WORK_GROUP(instance As MAS_NEW_WORK_GROUP)
    End Sub
  Partial Private Sub UpdateMAS_NEW_WORK_GROUP(instance As MAS_NEW_WORK_GROUP)
    End Sub
  Partial Private Sub DeleteMAS_NEW_WORK_GROUP(instance As MAS_NEW_WORK_GROUP)
    End Sub
  Partial Private Sub InsertEDT_HISTORY(instance As EDT_HISTORY)
    End Sub
  Partial Private Sub UpdateEDT_HISTORY(instance As EDT_HISTORY)
    End Sub
  Partial Private Sub DeleteEDT_HISTORY(instance As EDT_HISTORY)
    End Sub
  Partial Private Sub InsertMAS_TYPE_REQUEST(instance As MAS_TYPE_REQUEST)
    End Sub
  Partial Private Sub UpdateMAS_TYPE_REQUEST(instance As MAS_TYPE_REQUEST)
    End Sub
  Partial Private Sub DeleteMAS_TYPE_REQUEST(instance As MAS_TYPE_REQUEST)
    End Sub
  Partial Private Sub InsertDRUG_REQUEST_CENTER(instance As DRUG_REQUEST_CENTER)
    End Sub
  Partial Private Sub UpdateDRUG_REQUEST_CENTER(instance As DRUG_REQUEST_CENTER)
    End Sub
  Partial Private Sub DeleteDRUG_REQUEST_CENTER(instance As DRUG_REQUEST_CENTER)
    End Sub
  Partial Private Sub InsertMAS_LCN_EXTEND_TYPE(instance As MAS_LCN_EXTEND_TYPE)
    End Sub
  Partial Private Sub UpdateMAS_LCN_EXTEND_TYPE(instance As MAS_LCN_EXTEND_TYPE)
    End Sub
  Partial Private Sub DeleteMAS_LCN_EXTEND_TYPE(instance As MAS_LCN_EXTEND_TYPE)
    End Sub
  Partial Private Sub InsertMAS_PROFESSIONAL_NAME(instance As MAS_PROFESSIONAL_NAME)
    End Sub
  Partial Private Sub UpdateMAS_PROFESSIONAL_NAME(instance As MAS_PROFESSIONAL_NAME)
    End Sub
  Partial Private Sub DeleteMAS_PROFESSIONAL_NAME(instance As MAS_PROFESSIONAL_NAME)
    End Sub
  Partial Private Sub InsertMAS_EXPERT_NAME(instance As MAS_EXPERT_NAME)
    End Sub
  Partial Private Sub UpdateMAS_EXPERT_NAME(instance As MAS_EXPERT_NAME)
    End Sub
  Partial Private Sub DeleteMAS_EXPERT_NAME(instance As MAS_EXPERT_NAME)
    End Sub
  Partial Private Sub InsertCER_FOREIGN(instance As CER_FOREIGN)
    End Sub
  Partial Private Sub UpdateCER_FOREIGN(instance As CER_FOREIGN)
    End Sub
  Partial Private Sub DeleteCER_FOREIGN(instance As CER_FOREIGN)
    End Sub
  Partial Private Sub InsertMAS_UNIT_CONTAIN(instance As MAS_UNIT_CONTAIN)
    End Sub
  Partial Private Sub UpdateMAS_UNIT_CONTAIN(instance As MAS_UNIT_CONTAIN)
    End Sub
  Partial Private Sub DeleteMAS_UNIT_CONTAIN(instance As MAS_UNIT_CONTAIN)
    End Sub
  Partial Private Sub InsertEDT_COUNT(instance As EDT_COUNT)
    End Sub
  Partial Private Sub UpdateEDT_COUNT(instance As EDT_COUNT)
    End Sub
  Partial Private Sub DeleteEDT_COUNT(instance As EDT_COUNT)
    End Sub
  Partial Private Sub InsertDRUG_PRODUCT_ID(instance As DRUG_PRODUCT_ID)
    End Sub
  Partial Private Sub UpdateDRUG_PRODUCT_ID(instance As DRUG_PRODUCT_ID)
    End Sub
  Partial Private Sub DeleteDRUG_PRODUCT_ID(instance As DRUG_PRODUCT_ID)
    End Sub
  Partial Private Sub InsertDRUG_PROJECT_DRUG_ACTIVE_INGREDIENT(instance As DRUG_PROJECT_DRUG_ACTIVE_INGREDIENT)
    End Sub
  Partial Private Sub UpdateDRUG_PROJECT_DRUG_ACTIVE_INGREDIENT(instance As DRUG_PROJECT_DRUG_ACTIVE_INGREDIENT)
    End Sub
  Partial Private Sub DeleteDRUG_PROJECT_DRUG_ACTIVE_INGREDIENT(instance As DRUG_PROJECT_DRUG_ACTIVE_INGREDIENT)
    End Sub
  Partial Private Sub InsertDRRGT_ATC_DETAIL(instance As DRRGT_ATC_DETAIL)
    End Sub
  Partial Private Sub UpdateDRRGT_ATC_DETAIL(instance As DRRGT_ATC_DETAIL)
    End Sub
  Partial Private Sub DeleteDRRGT_ATC_DETAIL(instance As DRRGT_ATC_DETAIL)
    End Sub
  Partial Private Sub InsertDRRGT_PROPERTy(instance As DRRGT_PROPERTy)
    End Sub
  Partial Private Sub UpdateDRRGT_PROPERTy(instance As DRRGT_PROPERTy)
    End Sub
  Partial Private Sub DeleteDRRGT_PROPERTy(instance As DRRGT_PROPERTy)
    End Sub
  Partial Private Sub InsertDRUG_PROJECT_RESEARCH_FACILITY(instance As DRUG_PROJECT_RESEARCH_FACILITY)
    End Sub
  Partial Private Sub UpdateDRUG_PROJECT_RESEARCH_FACILITY(instance As DRUG_PROJECT_RESEARCH_FACILITY)
    End Sub
  Partial Private Sub DeleteDRUG_PROJECT_RESEARCH_FACILITY(instance As DRUG_PROJECT_RESEARCH_FACILITY)
    End Sub
  Partial Private Sub InsertDRUG_PROJECT_CLINICAL_LABORATORY(instance As DRUG_PROJECT_CLINICAL_LABORATORY)
    End Sub
  Partial Private Sub UpdateDRUG_PROJECT_CLINICAL_LABORATORY(instance As DRUG_PROJECT_CLINICAL_LABORATORY)
    End Sub
  Partial Private Sub DeleteDRUG_PROJECT_CLINICAL_LABORATORY(instance As DRUG_PROJECT_CLINICAL_LABORATORY)
    End Sub
  Partial Private Sub InsertDRUG_PROJECT_SUMMARY_LOG(instance As DRUG_PROJECT_SUMMARY_LOG)
    End Sub
  Partial Private Sub UpdateDRUG_PROJECT_SUMMARY_LOG(instance As DRUG_PROJECT_SUMMARY_LOG)
    End Sub
  Partial Private Sub DeleteDRUG_PROJECT_SUMMARY_LOG(instance As DRUG_PROJECT_SUMMARY_LOG)
    End Sub
  Partial Private Sub InsertDRUG_NORYORMOR1_IMPORT(instance As DRUG_NORYORMOR1_IMPORT)
    End Sub
  Partial Private Sub UpdateDRUG_NORYORMOR1_IMPORT(instance As DRUG_NORYORMOR1_IMPORT)
    End Sub
  Partial Private Sub DeleteDRUG_NORYORMOR1_IMPORT(instance As DRUG_NORYORMOR1_IMPORT)
    End Sub
  Partial Private Sub InsertDRSAMP_PACKAGE_DETAIL(instance As DRSAMP_PACKAGE_DETAIL)
    End Sub
  Partial Private Sub UpdateDRSAMP_PACKAGE_DETAIL(instance As DRSAMP_PACKAGE_DETAIL)
    End Sub
  Partial Private Sub DeleteDRSAMP_PACKAGE_DETAIL(instance As DRSAMP_PACKAGE_DETAIL)
    End Sub
  Partial Private Sub InsertMAS_ADMIN_GROUP_BUTTON(instance As MAS_ADMIN_GROUP_BUTTON)
    End Sub
  Partial Private Sub UpdateMAS_ADMIN_GROUP_BUTTON(instance As MAS_ADMIN_GROUP_BUTTON)
    End Sub
  Partial Private Sub DeleteMAS_ADMIN_GROUP_BUTTON(instance As MAS_ADMIN_GROUP_BUTTON)
    End Sub
  Partial Private Sub InsertDALCN_LOCATION_BSN(instance As DALCN_LOCATION_BSN)
    End Sub
  Partial Private Sub UpdateDALCN_LOCATION_BSN(instance As DALCN_LOCATION_BSN)
    End Sub
  Partial Private Sub DeleteDALCN_LOCATION_BSN(instance As DALCN_LOCATION_BSN)
    End Sub
  Partial Private Sub InsertMAS_EXPERT_COMMENT(instance As MAS_EXPERT_COMMENT)
    End Sub
  Partial Private Sub UpdateMAS_EXPERT_COMMENT(instance As MAS_EXPERT_COMMENT)
    End Sub
  Partial Private Sub DeleteMAS_EXPERT_COMMENT(instance As MAS_EXPERT_COMMENT)
    End Sub
  Partial Private Sub InsertE_TRACKING_EXPERT_SELECTED(instance As E_TRACKING_EXPERT_SELECTED)
    End Sub
  Partial Private Sub UpdateE_TRACKING_EXPERT_SELECTED(instance As E_TRACKING_EXPERT_SELECTED)
    End Sub
  Partial Private Sub DeleteE_TRACKING_EXPERT_SELECTED(instance As E_TRACKING_EXPERT_SELECTED)
    End Sub
  Partial Private Sub InsertDRUG_PROJECT_SUMMARY(instance As DRUG_PROJECT_SUMMARY)
    End Sub
  Partial Private Sub UpdateDRUG_PROJECT_SUMMARY(instance As DRUG_PROJECT_SUMMARY)
    End Sub
  Partial Private Sub DeleteDRUG_PROJECT_SUMMARY(instance As DRUG_PROJECT_SUMMARY)
    End Sub
  Partial Private Sub InsertDALCN_DETAIL_LOCATION_KEEP(instance As DALCN_DETAIL_LOCATION_KEEP)
    End Sub
  Partial Private Sub UpdateDALCN_DETAIL_LOCATION_KEEP(instance As DALCN_DETAIL_LOCATION_KEEP)
    End Sub
  Partial Private Sub DeleteDALCN_DETAIL_LOCATION_KEEP(instance As DALCN_DETAIL_LOCATION_KEEP)
    End Sub
  Partial Private Sub InsertDRUG_NORYORMOR4_DONATE_DETAIL(instance As DRUG_NORYORMOR4_DONATE_DETAIL)
    End Sub
  Partial Private Sub UpdateDRUG_NORYORMOR4_DONATE_DETAIL(instance As DRUG_NORYORMOR4_DONATE_DETAIL)
    End Sub
  Partial Private Sub DeleteDRUG_NORYORMOR4_DONATE_DETAIL(instance As DRUG_NORYORMOR4_DONATE_DETAIL)
    End Sub
  Partial Private Sub InsertDRUG_NORYORMOR_PROOF(instance As DRUG_NORYORMOR_PROOF)
    End Sub
  Partial Private Sub UpdateDRUG_NORYORMOR_PROOF(instance As DRUG_NORYORMOR_PROOF)
    End Sub
  Partial Private Sub DeleteDRUG_NORYORMOR_PROOF(instance As DRUG_NORYORMOR_PROOF)
    End Sub
  Partial Private Sub InsertMAS_ADMIN_BUTTON(instance As MAS_ADMIN_BUTTON)
    End Sub
  Partial Private Sub UpdateMAS_ADMIN_BUTTON(instance As MAS_ADMIN_BUTTON)
    End Sub
  Partial Private Sub DeleteMAS_ADMIN_BUTTON(instance As MAS_ADMIN_BUTTON)
    End Sub
  Partial Private Sub InsertDRUG_REGISTRATION_PROP_AND_DETAIL(instance As DRUG_REGISTRATION_PROP_AND_DETAIL)
    End Sub
  Partial Private Sub UpdateDRUG_REGISTRATION_PROP_AND_DETAIL(instance As DRUG_REGISTRATION_PROP_AND_DETAIL)
    End Sub
  Partial Private Sub DeleteDRUG_REGISTRATION_PROP_AND_DETAIL(instance As DRUG_REGISTRATION_PROP_AND_DETAIL)
    End Sub
  Partial Private Sub InsertDRRGT_PROPERTIES_AND_DETAIL(instance As DRRGT_PROPERTIES_AND_DETAIL)
    End Sub
  Partial Private Sub UpdateDRRGT_PROPERTIES_AND_DETAIL(instance As DRRGT_PROPERTIES_AND_DETAIL)
    End Sub
  Partial Private Sub DeleteDRRGT_PROPERTIES_AND_DETAIL(instance As DRRGT_PROPERTIES_AND_DETAIL)
    End Sub
  Partial Private Sub InsertMAS_TABEAN_TEMPLATE(instance As MAS_TABEAN_TEMPLATE)
    End Sub
  Partial Private Sub UpdateMAS_TABEAN_TEMPLATE(instance As MAS_TABEAN_TEMPLATE)
    End Sub
  Partial Private Sub DeleteMAS_TABEAN_TEMPLATE(instance As MAS_TABEAN_TEMPLATE)
    End Sub
  Partial Private Sub InsertDRRGT_DRUG_GROUP(instance As DRRGT_DRUG_GROUP)
    End Sub
  Partial Private Sub UpdateDRRGT_DRUG_GROUP(instance As DRRGT_DRUG_GROUP)
    End Sub
  Partial Private Sub DeleteDRRGT_DRUG_GROUP(instance As DRRGT_DRUG_GROUP)
    End Sub
  Partial Private Sub InsertATC_DRUG(instance As ATC_DRUG)
    End Sub
  Partial Private Sub UpdateATC_DRUG(instance As ATC_DRUG)
    End Sub
  Partial Private Sub DeleteATC_DRUG(instance As ATC_DRUG)
    End Sub
  Partial Private Sub InsertDRRGT_PRODUCER_OTHER(instance As DRRGT_PRODUCER_OTHER)
    End Sub
  Partial Private Sub UpdateDRRGT_PRODUCER_OTHER(instance As DRRGT_PRODUCER_OTHER)
    End Sub
  Partial Private Sub DeleteDRRGT_PRODUCER_OTHER(instance As DRRGT_PRODUCER_OTHER)
    End Sub
  Partial Private Sub InsertDRRGT_PRODUCER_IN(instance As DRRGT_PRODUCER_IN)
    End Sub
  Partial Private Sub UpdateDRRGT_PRODUCER_IN(instance As DRRGT_PRODUCER_IN)
    End Sub
  Partial Private Sub DeleteDRRGT_PRODUCER_IN(instance As DRRGT_PRODUCER_IN)
    End Sub
  Partial Private Sub InsertDRRGT_CONDITION(instance As DRRGT_CONDITION)
    End Sub
  Partial Private Sub UpdateDRRGT_CONDITION(instance As DRRGT_CONDITION)
    End Sub
  Partial Private Sub DeleteDRRGT_CONDITION(instance As DRRGT_CONDITION)
    End Sub
  Partial Private Sub InsertDRUG_REGISTRATION_COLOR(instance As DRUG_REGISTRATION_COLOR)
    End Sub
  Partial Private Sub UpdateDRUG_REGISTRATION_COLOR(instance As DRUG_REGISTRATION_COLOR)
    End Sub
  Partial Private Sub DeleteDRUG_REGISTRATION_COLOR(instance As DRUG_REGISTRATION_COLOR)
    End Sub
  Partial Private Sub InsertDRRGT_PRODUCER(instance As DRRGT_PRODUCER)
    End Sub
  Partial Private Sub UpdateDRRGT_PRODUCER(instance As DRRGT_PRODUCER)
    End Sub
  Partial Private Sub DeleteDRRGT_PRODUCER(instance As DRRGT_PRODUCER)
    End Sub
  Partial Private Sub InsertDRUG_REGISTRATION_PRODUCER_IN(instance As DRUG_REGISTRATION_PRODUCER_IN)
    End Sub
  Partial Private Sub UpdateDRUG_REGISTRATION_PRODUCER_IN(instance As DRUG_REGISTRATION_PRODUCER_IN)
    End Sub
  Partial Private Sub DeleteDRUG_REGISTRATION_PRODUCER_IN(instance As DRUG_REGISTRATION_PRODUCER_IN)
    End Sub
  Partial Private Sub InsertDRUG_REGISTRATION_PRODUCER(instance As DRUG_REGISTRATION_PRODUCER)
    End Sub
  Partial Private Sub UpdateDRUG_REGISTRATION_PRODUCER(instance As DRUG_REGISTRATION_PRODUCER)
    End Sub
  Partial Private Sub DeleteDRUG_REGISTRATION_PRODUCER(instance As DRUG_REGISTRATION_PRODUCER)
    End Sub
  Partial Private Sub InsertDRUG_REGISTRATION_DRUG_USE(instance As DRUG_REGISTRATION_DRUG_USE)
    End Sub
  Partial Private Sub UpdateDRUG_REGISTRATION_DRUG_USE(instance As DRUG_REGISTRATION_DRUG_USE)
    End Sub
  Partial Private Sub DeleteDRUG_REGISTRATION_DRUG_USE(instance As DRUG_REGISTRATION_DRUG_USE)
    End Sub
  Partial Private Sub InsertMAS_DRUG_PACKAGING(instance As MAS_DRUG_PACKAGING)
    End Sub
  Partial Private Sub UpdateMAS_DRUG_PACKAGING(instance As MAS_DRUG_PACKAGING)
    End Sub
  Partial Private Sub DeleteMAS_DRUG_PACKAGING(instance As MAS_DRUG_PACKAGING)
    End Sub
  Partial Private Sub InsertDRUG_UNIT(instance As DRUG_UNIT)
    End Sub
  Partial Private Sub UpdateDRUG_UNIT(instance As DRUG_UNIT)
    End Sub
  Partial Private Sub DeleteDRUG_UNIT(instance As DRUG_UNIT)
    End Sub
  Partial Private Sub InsertDRRQT_ATC_DETAIL(instance As DRRQT_ATC_DETAIL)
    End Sub
  Partial Private Sub UpdateDRRQT_ATC_DETAIL(instance As DRRQT_ATC_DETAIL)
    End Sub
  Partial Private Sub DeleteDRRQT_ATC_DETAIL(instance As DRRQT_ATC_DETAIL)
    End Sub
  Partial Private Sub InsertDRRQT_PROPERTIES_AND_DETAIL(instance As DRRQT_PROPERTIES_AND_DETAIL)
    End Sub
  Partial Private Sub UpdateDRRQT_PROPERTIES_AND_DETAIL(instance As DRRQT_PROPERTIES_AND_DETAIL)
    End Sub
  Partial Private Sub DeleteDRRQT_PROPERTIES_AND_DETAIL(instance As DRRQT_PROPERTIES_AND_DETAIL)
    End Sub
  Partial Private Sub InsertDRRQT_CONDITION(instance As DRRQT_CONDITION)
    End Sub
  Partial Private Sub UpdateDRRQT_CONDITION(instance As DRRQT_CONDITION)
    End Sub
  Partial Private Sub DeleteDRRQT_CONDITION(instance As DRRQT_CONDITION)
    End Sub
  Partial Private Sub InsertDRRQT_PRODUCER(instance As DRRQT_PRODUCER)
    End Sub
  Partial Private Sub UpdateDRRQT_PRODUCER(instance As DRRQT_PRODUCER)
    End Sub
  Partial Private Sub DeleteDRRQT_PRODUCER(instance As DRRQT_PRODUCER)
    End Sub
  Partial Private Sub InsertDRRQT_PROPERTy(instance As DRRQT_PROPERTy)
    End Sub
  Partial Private Sub UpdateDRRQT_PROPERTy(instance As DRRQT_PROPERTy)
    End Sub
  Partial Private Sub DeleteDRRQT_PROPERTy(instance As DRRQT_PROPERTy)
    End Sub
  Partial Private Sub InsertDRRQT_PRODUCER_OTHER(instance As DRRQT_PRODUCER_OTHER)
    End Sub
  Partial Private Sub UpdateDRRQT_PRODUCER_OTHER(instance As DRRQT_PRODUCER_OTHER)
    End Sub
  Partial Private Sub DeleteDRRQT_PRODUCER_OTHER(instance As DRRQT_PRODUCER_OTHER)
    End Sub
  Partial Private Sub InsertDRRGT_DRUG_PER_UNIT(instance As DRRGT_DRUG_PER_UNIT)
    End Sub
  Partial Private Sub UpdateDRRGT_DRUG_PER_UNIT(instance As DRRGT_DRUG_PER_UNIT)
    End Sub
  Partial Private Sub DeleteDRRGT_DRUG_PER_UNIT(instance As DRRGT_DRUG_PER_UNIT)
    End Sub
  Partial Private Sub InsertDRRQT_DRUG_PER_UNIT(instance As DRRQT_DRUG_PER_UNIT)
    End Sub
  Partial Private Sub UpdateDRRQT_DRUG_PER_UNIT(instance As DRRQT_DRUG_PER_UNIT)
    End Sub
  Partial Private Sub DeleteDRRQT_DRUG_PER_UNIT(instance As DRRQT_DRUG_PER_UNIT)
    End Sub
  Partial Private Sub Insertlcnrequest(instance As lcnrequest)
    End Sub
  Partial Private Sub Updatelcnrequest(instance As lcnrequest)
    End Sub
  Partial Private Sub Deletelcnrequest(instance As lcnrequest)
    End Sub
  Partial Private Sub InsertDRRGT_DTB(instance As DRRGT_DTB)
    End Sub
  Partial Private Sub UpdateDRRGT_DTB(instance As DRRGT_DTB)
    End Sub
  Partial Private Sub DeleteDRRGT_DTB(instance As DRRGT_DTB)
    End Sub
  Partial Private Sub InsertDRRQT_DTB(instance As DRRQT_DTB)
    End Sub
  Partial Private Sub UpdateDRRQT_DTB(instance As DRRQT_DTB)
    End Sub
  Partial Private Sub DeleteDRRQT_DTB(instance As DRRQT_DTB)
    End Sub
  Partial Private Sub InsertDRRGT_NAME_DRUG_EXPORT(instance As DRRGT_NAME_DRUG_EXPORT)
    End Sub
  Partial Private Sub UpdateDRRGT_NAME_DRUG_EXPORT(instance As DRRGT_NAME_DRUG_EXPORT)
    End Sub
  Partial Private Sub DeleteDRRGT_NAME_DRUG_EXPORT(instance As DRRGT_NAME_DRUG_EXPORT)
    End Sub
  Partial Private Sub InsertDRRQT_NAME_DRUG_EXPORT(instance As DRRQT_NAME_DRUG_EXPORT)
    End Sub
  Partial Private Sub UpdateDRRQT_NAME_DRUG_EXPORT(instance As DRRQT_NAME_DRUG_EXPORT)
    End Sub
  Partial Private Sub DeleteDRRQT_NAME_DRUG_EXPORT(instance As DRRQT_NAME_DRUG_EXPORT)
    End Sub
  Partial Private Sub InsertDRRQT_KEEP_DRUG(instance As DRRQT_KEEP_DRUG)
    End Sub
  Partial Private Sub UpdateDRRQT_KEEP_DRUG(instance As DRRQT_KEEP_DRUG)
    End Sub
  Partial Private Sub DeleteDRRQT_KEEP_DRUG(instance As DRRQT_KEEP_DRUG)
    End Sub
  Partial Private Sub InsertDRRQT_REFER(instance As DRRQT_REFER)
    End Sub
  Partial Private Sub UpdateDRRQT_REFER(instance As DRRQT_REFER)
    End Sub
  Partial Private Sub DeleteDRRQT_REFER(instance As DRRQT_REFER)
    End Sub
  Partial Private Sub InsertDRRGT_REFER(instance As DRRGT_REFER)
    End Sub
  Partial Private Sub UpdateDRRGT_REFER(instance As DRRGT_REFER)
    End Sub
  Partial Private Sub DeleteDRRGT_REFER(instance As DRRGT_REFER)
    End Sub
  Partial Private Sub Insertdramlsubtp(instance As dramlsubtp)
    End Sub
  Partial Private Sub Updatedramlsubtp(instance As dramlsubtp)
    End Sub
  Partial Private Sub Deletedramlsubtp(instance As dramlsubtp)
    End Sub
  Partial Private Sub InsertMAS_NOTICE(instance As MAS_NOTICE)
    End Sub
  Partial Private Sub UpdateMAS_NOTICE(instance As MAS_NOTICE)
    End Sub
  Partial Private Sub DeleteMAS_NOTICE(instance As MAS_NOTICE)
    End Sub
  Partial Private Sub Insertdrsunit(instance As drsunit)
    End Sub
  Partial Private Sub Updatedrsunit(instance As drsunit)
    End Sub
  Partial Private Sub Deletedrsunit(instance As drsunit)
    End Sub
  Partial Private Sub InsertDRRQT_PRODUCER_IN(instance As DRRQT_PRODUCER_IN)
    End Sub
  Partial Private Sub UpdateDRRQT_PRODUCER_IN(instance As DRRQT_PRODUCER_IN)
    End Sub
  Partial Private Sub DeleteDRRQT_PRODUCER_IN(instance As DRRQT_PRODUCER_IN)
    End Sub
  Partial Private Sub InsertREGIST_FILE_ATTACH(instance As REGIST_FILE_ATTACH)
    End Sub
  Partial Private Sub UpdateREGIST_FILE_ATTACH(instance As REGIST_FILE_ATTACH)
    End Sub
  Partial Private Sub DeleteREGIST_FILE_ATTACH(instance As REGIST_FILE_ATTACH)
    End Sub
  Partial Private Sub Insertdrramldrg(instance As drramldrg)
    End Sub
  Partial Private Sub Updatedrramldrg(instance As drramldrg)
    End Sub
  Partial Private Sub Deletedrramldrg(instance As drramldrg)
    End Sub
  Partial Private Sub InsertLCN_EXTEND_LITE_PAY(instance As LCN_EXTEND_LITE_PAY)
    End Sub
  Partial Private Sub UpdateLCN_EXTEND_LITE_PAY(instance As LCN_EXTEND_LITE_PAY)
    End Sub
  Partial Private Sub DeleteLCN_EXTEND_LITE_PAY(instance As LCN_EXTEND_LITE_PAY)
    End Sub
  Partial Private Sub Insertdrramluse(instance As drramluse)
    End Sub
  Partial Private Sub Updatedrramluse(instance As drramluse)
    End Sub
  Partial Private Sub Deletedrramluse(instance As drramluse)
    End Sub
  Partial Private Sub Insertdramluse(instance As dramluse)
    End Sub
  Partial Private Sub Updatedramluse(instance As dramluse)
    End Sub
  Partial Private Sub Deletedramluse(instance As dramluse)
    End Sub
  Partial Private Sub InsertDRRQT_DTL_TEXT(instance As DRRQT_DTL_TEXT)
    End Sub
  Partial Private Sub UpdateDRRQT_DTL_TEXT(instance As DRRQT_DTL_TEXT)
    End Sub
  Partial Private Sub DeleteDRRQT_DTL_TEXT(instance As DRRQT_DTL_TEXT)
    End Sub
  Partial Private Sub InsertDRRGT_DTL_TEXT(instance As DRRGT_DTL_TEXT)
    End Sub
  Partial Private Sub UpdateDRRGT_DTL_TEXT(instance As DRRGT_DTL_TEXT)
    End Sub
  Partial Private Sub DeleteDRRGT_DTL_TEXT(instance As DRRGT_DTL_TEXT)
    End Sub
  Partial Private Sub InsertDALCN_PHR_CANCEL(instance As DALCN_PHR_CANCEL)
    End Sub
  Partial Private Sub UpdateDALCN_PHR_CANCEL(instance As DALCN_PHR_CANCEL)
    End Sub
  Partial Private Sub DeleteDALCN_PHR_CANCEL(instance As DALCN_PHR_CANCEL)
    End Sub
  Partial Private Sub InsertDALCN_PHR_CANCEL_DETAIL(instance As DALCN_PHR_CANCEL_DETAIL)
    End Sub
  Partial Private Sub UpdateDALCN_PHR_CANCEL_DETAIL(instance As DALCN_PHR_CANCEL_DETAIL)
    End Sub
  Partial Private Sub DeleteDALCN_PHR_CANCEL_DETAIL(instance As DALCN_PHR_CANCEL_DETAIL)
    End Sub
  Partial Private Sub InsertDRUG_REGISTRATION_KEEP_DRUG(instance As DRUG_REGISTRATION_KEEP_DRUG)
    End Sub
  Partial Private Sub UpdateDRUG_REGISTRATION_KEEP_DRUG(instance As DRUG_REGISTRATION_KEEP_DRUG)
    End Sub
  Partial Private Sub DeleteDRUG_REGISTRATION_KEEP_DRUG(instance As DRUG_REGISTRATION_KEEP_DRUG)
    End Sub
  Partial Private Sub InsertDRRQT_PAY_STEP(instance As DRRQT_PAY_STEP)
    End Sub
  Partial Private Sub UpdateDRRQT_PAY_STEP(instance As DRRQT_PAY_STEP)
    End Sub
  Partial Private Sub DeleteDRRQT_PAY_STEP(instance As DRRQT_PAY_STEP)
    End Sub
  Partial Private Sub InsertDRUG_REGISTRATION_PACKAGE_DETAIL(instance As DRUG_REGISTRATION_PACKAGE_DETAIL)
    End Sub
  Partial Private Sub UpdateDRUG_REGISTRATION_PACKAGE_DETAIL(instance As DRUG_REGISTRATION_PACKAGE_DETAIL)
    End Sub
  Partial Private Sub DeleteDRUG_REGISTRATION_PACKAGE_DETAIL(instance As DRUG_REGISTRATION_PACKAGE_DETAIL)
    End Sub
  Partial Private Sub InsertMAS_TYPE_REQUEST_AMOUNT(instance As MAS_TYPE_REQUEST_AMOUNT)
    End Sub
  Partial Private Sub UpdateMAS_TYPE_REQUEST_AMOUNT(instance As MAS_TYPE_REQUEST_AMOUNT)
    End Sub
  Partial Private Sub DeleteMAS_TYPE_REQUEST_AMOUNT(instance As MAS_TYPE_REQUEST_AMOUNT)
    End Sub
  Partial Private Sub InsertE_TRACKING_LOG(instance As E_TRACKING_LOG)
    End Sub
  Partial Private Sub UpdateE_TRACKING_LOG(instance As E_TRACKING_LOG)
    End Sub
  Partial Private Sub DeleteE_TRACKING_LOG(instance As E_TRACKING_LOG)
    End Sub
  Partial Private Sub InsertLOG_EDIT_MIGRATE(instance As LOG_EDIT_MIGRATE)
    End Sub
  Partial Private Sub UpdateLOG_EDIT_MIGRATE(instance As LOG_EDIT_MIGRATE)
    End Sub
  Partial Private Sub DeleteLOG_EDIT_MIGRATE(instance As LOG_EDIT_MIGRATE)
    End Sub
  Partial Private Sub InsertDRRQT_PACKAGE_DETAIL(instance As DRRQT_PACKAGE_DETAIL)
    End Sub
  Partial Private Sub UpdateDRRQT_PACKAGE_DETAIL(instance As DRRQT_PACKAGE_DETAIL)
    End Sub
  Partial Private Sub DeleteDRRQT_PACKAGE_DETAIL(instance As DRRQT_PACKAGE_DETAIL)
    End Sub
  Partial Private Sub InsertDRRGT_PACKAGE_DETAIL(instance As DRRGT_PACKAGE_DETAIL)
    End Sub
  Partial Private Sub UpdateDRRGT_PACKAGE_DETAIL(instance As DRRGT_PACKAGE_DETAIL)
    End Sub
  Partial Private Sub DeleteDRRGT_PACKAGE_DETAIL(instance As DRRGT_PACKAGE_DETAIL)
    End Sub
  Partial Private Sub InsertDRRGT_COLOR(instance As DRRGT_COLOR)
    End Sub
  Partial Private Sub UpdateDRRGT_COLOR(instance As DRRGT_COLOR)
    End Sub
  Partial Private Sub DeleteDRRGT_COLOR(instance As DRRGT_COLOR)
    End Sub
  Partial Private Sub InsertDRRQT_COLOR(instance As DRRQT_COLOR)
    End Sub
  Partial Private Sub UpdateDRRQT_COLOR(instance As DRRQT_COLOR)
    End Sub
  Partial Private Sub DeleteDRRQT_COLOR(instance As DRRQT_COLOR)
    End Sub
  Partial Private Sub InsertMAS_BIO_UNIT(instance As MAS_BIO_UNIT)
    End Sub
  Partial Private Sub UpdateMAS_BIO_UNIT(instance As MAS_BIO_UNIT)
    End Sub
  Partial Private Sub DeleteMAS_BIO_UNIT(instance As MAS_BIO_UNIT)
    End Sub
  Partial Private Sub InsertDRRGT_NO_USE(instance As DRRGT_NO_USE)
    End Sub
  Partial Private Sub UpdateDRRGT_NO_USE(instance As DRRGT_NO_USE)
    End Sub
  Partial Private Sub DeleteDRRGT_NO_USE(instance As DRRGT_NO_USE)
    End Sub
  Partial Private Sub InsertDRRQT_NO_USE(instance As DRRQT_NO_USE)
    End Sub
  Partial Private Sub UpdateDRRQT_NO_USE(instance As DRRQT_NO_USE)
    End Sub
  Partial Private Sub DeleteDRRQT_NO_USE(instance As DRRQT_NO_USE)
    End Sub
  Partial Private Sub InsertDRUG_REGISTRATION_ANIMAL(instance As DRUG_REGISTRATION_ANIMAL)
    End Sub
  Partial Private Sub UpdateDRUG_REGISTRATION_ANIMAL(instance As DRUG_REGISTRATION_ANIMAL)
    End Sub
  Partial Private Sub DeleteDRUG_REGISTRATION_ANIMAL(instance As DRUG_REGISTRATION_ANIMAL)
    End Sub
  Partial Private Sub InsertDRUG_REGISTRATION_ANIMAL_SUB(instance As DRUG_REGISTRATION_ANIMAL_SUB)
    End Sub
  Partial Private Sub UpdateDRUG_REGISTRATION_ANIMAL_SUB(instance As DRUG_REGISTRATION_ANIMAL_SUB)
    End Sub
  Partial Private Sub DeleteDRUG_REGISTRATION_ANIMAL_SUB(instance As DRUG_REGISTRATION_ANIMAL_SUB)
    End Sub
  Partial Private Sub InsertE_TRACKING_HEAD_CURRENT_STATUS(instance As E_TRACKING_HEAD_CURRENT_STATUS)
    End Sub
  Partial Private Sub UpdateE_TRACKING_HEAD_CURRENT_STATUS(instance As E_TRACKING_HEAD_CURRENT_STATUS)
    End Sub
  Partial Private Sub DeleteE_TRACKING_HEAD_CURRENT_STATUS(instance As E_TRACKING_HEAD_CURRENT_STATUS)
    End Sub
  Partial Private Sub InsertE_TRACKING_STOP_TIME(instance As E_TRACKING_STOP_TIME)
    End Sub
  Partial Private Sub UpdateE_TRACKING_STOP_TIME(instance As E_TRACKING_STOP_TIME)
    End Sub
  Partial Private Sub DeleteE_TRACKING_STOP_TIME(instance As E_TRACKING_STOP_TIME)
    End Sub
  Partial Private Sub InsertDRRGT_LABEL(instance As DRRGT_LABEL)
    End Sub
  Partial Private Sub UpdateDRRGT_LABEL(instance As DRRGT_LABEL)
    End Sub
  Partial Private Sub DeleteDRRGT_LABEL(instance As DRRGT_LABEL)
    End Sub
  Partial Private Sub InsertDRRQT_LABEL(instance As DRRQT_LABEL)
    End Sub
  Partial Private Sub UpdateDRRQT_LABEL(instance As DRRQT_LABEL)
    End Sub
  Partial Private Sub DeleteDRRQT_LABEL(instance As DRRQT_LABEL)
    End Sub
  Partial Private Sub InsertDRRGT_EDIT_INDEX(instance As DRRGT_EDIT_INDEX)
    End Sub
  Partial Private Sub UpdateDRRGT_EDIT_INDEX(instance As DRRGT_EDIT_INDEX)
    End Sub
  Partial Private Sub DeleteDRRGT_EDIT_INDEX(instance As DRRGT_EDIT_INDEX)
    End Sub
  Partial Private Sub InsertDRRGT_EDIT_REQUEST_COLOR(instance As DRRGT_EDIT_REQUEST_COLOR)
    End Sub
  Partial Private Sub UpdateDRRGT_EDIT_REQUEST_COLOR(instance As DRRGT_EDIT_REQUEST_COLOR)
    End Sub
  Partial Private Sub DeleteDRRGT_EDIT_REQUEST_COLOR(instance As DRRGT_EDIT_REQUEST_COLOR)
    End Sub
  Partial Private Sub InsertDRUG_PROJECT_DRUG_LIST(instance As DRUG_PROJECT_DRUG_LIST)
    End Sub
  Partial Private Sub UpdateDRUG_PROJECT_DRUG_LIST(instance As DRUG_PROJECT_DRUG_LIST)
    End Sub
  Partial Private Sub DeleteDRUG_PROJECT_DRUG_LIST(instance As DRUG_PROJECT_DRUG_LIST)
    End Sub
  Partial Private Sub InsertXML_NAME(instance As XML_NAME)
    End Sub
  Partial Private Sub UpdateXML_NAME(instance As XML_NAME)
    End Sub
  Partial Private Sub DeleteXML_NAME(instance As XML_NAME)
    End Sub
  Partial Private Sub InsertDRRGT_EDIT_REQUEST_CA(instance As DRRGT_EDIT_REQUEST_CA)
    End Sub
  Partial Private Sub UpdateDRRGT_EDIT_REQUEST_CA(instance As DRRGT_EDIT_REQUEST_CA)
    End Sub
  Partial Private Sub DeleteDRRGT_EDIT_REQUEST_CA(instance As DRRGT_EDIT_REQUEST_CA)
    End Sub
  Partial Private Sub InsertDRRGT_APPOINTMENT(instance As DRRGT_APPOINTMENT)
    End Sub
  Partial Private Sub UpdateDRRGT_APPOINTMENT(instance As DRRGT_APPOINTMENT)
    End Sub
  Partial Private Sub DeleteDRRGT_APPOINTMENT(instance As DRRGT_APPOINTMENT)
    End Sub
  Partial Private Sub InsertDRRGT_EDIT_REQUEST_PACKAGE_DETAIL(instance As DRRGT_EDIT_REQUEST_PACKAGE_DETAIL)
    End Sub
  Partial Private Sub UpdateDRRGT_EDIT_REQUEST_PACKAGE_DETAIL(instance As DRRGT_EDIT_REQUEST_PACKAGE_DETAIL)
    End Sub
  Partial Private Sub DeleteDRRGT_EDIT_REQUEST_PACKAGE_DETAIL(instance As DRRGT_EDIT_REQUEST_PACKAGE_DETAIL)
    End Sub
  Partial Private Sub InsertMAS_DRUG_SHAPE(instance As MAS_DRUG_SHAPE)
    End Sub
  Partial Private Sub UpdateMAS_DRUG_SHAPE(instance As MAS_DRUG_SHAPE)
    End Sub
  Partial Private Sub DeleteMAS_DRUG_SHAPE(instance As MAS_DRUG_SHAPE)
    End Sub
  Partial Private Sub Insertdactg(instance As dactg)
    End Sub
  Partial Private Sub Updatedactg(instance As dactg)
    End Sub
  Partial Private Sub Deletedactg(instance As dactg)
    End Sub
  Partial Private Sub Insertdrclass(instance As drclass)
    End Sub
  Partial Private Sub Updatedrclass(instance As drclass)
    End Sub
  Partial Private Sub Deletedrclass(instance As drclass)
    End Sub
  Partial Private Sub Insertdrdosage(instance As drdosage)
    End Sub
  Partial Private Sub Updatedrdosage(instance As drdosage)
    End Sub
  Partial Private Sub Deletedrdosage(instance As drdosage)
    End Sub
  Partial Private Sub Insertdrkdofdrg(instance As drkdofdrg)
    End Sub
  Partial Private Sub Updatedrkdofdrg(instance As drkdofdrg)
    End Sub
  Partial Private Sub Deletedrkdofdrg(instance As drkdofdrg)
    End Sub
  Partial Private Sub InsertDRRGT_KEEP_DRUG(instance As DRRGT_KEEP_DRUG)
    End Sub
  Partial Private Sub UpdateDRRGT_KEEP_DRUG(instance As DRRGT_KEEP_DRUG)
    End Sub
  Partial Private Sub DeleteDRRGT_KEEP_DRUG(instance As DRRGT_KEEP_DRUG)
    End Sub
  Partial Private Sub InsertDRRGT_SUBSTITUTE(instance As DRRGT_SUBSTITUTE)
    End Sub
  Partial Private Sub UpdateDRRGT_SUBSTITUTE(instance As DRRGT_SUBSTITUTE)
    End Sub
  Partial Private Sub DeleteDRRGT_SUBSTITUTE(instance As DRRGT_SUBSTITUTE)
    End Sub
  Partial Private Sub InsertMAS_STAFF_POSITION(instance As MAS_STAFF_POSITION)
    End Sub
  Partial Private Sub UpdateMAS_STAFF_POSITION(instance As MAS_STAFF_POSITION)
    End Sub
  Partial Private Sub DeleteMAS_STAFF_POSITION(instance As MAS_STAFF_POSITION)
    End Sub
  Partial Private Sub InsertMAS_SUBSTITUTE_TEMPLATE(instance As MAS_SUBSTITUTE_TEMPLATE)
    End Sub
  Partial Private Sub UpdateMAS_SUBSTITUTE_TEMPLATE(instance As MAS_SUBSTITUTE_TEMPLATE)
    End Sub
  Partial Private Sub DeleteMAS_SUBSTITUTE_TEMPLATE(instance As MAS_SUBSTITUTE_TEMPLATE)
    End Sub
  Partial Private Sub InsertDRUG_REGISTRATION(instance As DRUG_REGISTRATION)
    End Sub
  Partial Private Sub UpdateDRUG_REGISTRATION(instance As DRUG_REGISTRATION)
    End Sub
  Partial Private Sub DeleteDRUG_REGISTRATION(instance As DRUG_REGISTRATION)
    End Sub
  Partial Private Sub InsertDRRGT_PI(instance As DRRGT_PI)
    End Sub
  Partial Private Sub UpdateDRRGT_PI(instance As DRRGT_PI)
    End Sub
  Partial Private Sub DeleteDRRGT_PI(instance As DRRGT_PI)
    End Sub
  Partial Private Sub InsertDRRGT_PIL(instance As DRRGT_PIL)
    End Sub
  Partial Private Sub UpdateDRRGT_PIL(instance As DRRGT_PIL)
    End Sub
  Partial Private Sub DeleteDRRGT_PIL(instance As DRRGT_PIL)
    End Sub
  Partial Private Sub InsertDRRGT_SPC(instance As DRRGT_SPC)
    End Sub
  Partial Private Sub UpdateDRRGT_SPC(instance As DRRGT_SPC)
    End Sub
  Partial Private Sub DeleteDRRGT_SPC(instance As DRRGT_SPC)
    End Sub
  Partial Private Sub Insertdrfrgnaddr(instance As drfrgnaddr)
    End Sub
  Partial Private Sub Updatedrfrgnaddr(instance As drfrgnaddr)
    End Sub
  Partial Private Sub Deletedrfrgnaddr(instance As drfrgnaddr)
    End Sub
  Partial Private Sub Insertsyspdcfrgn(instance As syspdcfrgn)
    End Sub
  Partial Private Sub Updatesyspdcfrgn(instance As syspdcfrgn)
    End Sub
  Partial Private Sub Deletesyspdcfrgn(instance As syspdcfrgn)
    End Sub
  Partial Private Sub InsertDRRGT_EACH(instance As DRRGT_EACH)
    End Sub
  Partial Private Sub UpdateDRRGT_EACH(instance As DRRGT_EACH)
    End Sub
  Partial Private Sub DeleteDRRGT_EACH(instance As DRRGT_EACH)
    End Sub
  Partial Private Sub InsertDRRQT_EACH(instance As DRRQT_EACH)
    End Sub
  Partial Private Sub UpdateDRRQT_EACH(instance As DRRQT_EACH)
    End Sub
  Partial Private Sub DeleteDRRQT_EACH(instance As DRRQT_EACH)
    End Sub
  Partial Private Sub InsertDRRQT_APPOINTMENT(instance As DRRQT_APPOINTMENT)
    End Sub
  Partial Private Sub UpdateDRRQT_APPOINTMENT(instance As DRRQT_APPOINTMENT)
    End Sub
  Partial Private Sub DeleteDRRQT_APPOINTMENT(instance As DRRQT_APPOINTMENT)
    End Sub
  Partial Private Sub InsertLOG_DH_ERROR(instance As LOG_DH_ERROR)
    End Sub
  Partial Private Sub UpdateLOG_DH_ERROR(instance As LOG_DH_ERROR)
    End Sub
  Partial Private Sub DeleteLOG_DH_ERROR(instance As LOG_DH_ERROR)
    End Sub
  Partial Private Sub InsertLOG_EDIT_TABEAN(instance As LOG_EDIT_TABEAN)
    End Sub
  Partial Private Sub UpdateLOG_EDIT_TABEAN(instance As LOG_EDIT_TABEAN)
    End Sub
  Partial Private Sub DeleteLOG_EDIT_TABEAN(instance As LOG_EDIT_TABEAN)
    End Sub
  Partial Private Sub InsertDRRGT_EQTO(instance As DRRGT_EQTO)
    End Sub
  Partial Private Sub UpdateDRRGT_EQTO(instance As DRRGT_EQTO)
    End Sub
  Partial Private Sub DeleteDRRGT_EQTO(instance As DRRGT_EQTO)
    End Sub
  Partial Private Sub InsertDRRQT_EQTO(instance As DRRQT_EQTO)
    End Sub
  Partial Private Sub UpdateDRRQT_EQTO(instance As DRRQT_EQTO)
    End Sub
  Partial Private Sub DeleteDRRQT_EQTO(instance As DRRQT_EQTO)
    End Sub
  Partial Private Sub Insertdramldrg(instance As dramldrg)
    End Sub
  Partial Private Sub Updatedramldrg(instance As dramldrg)
    End Sub
  Partial Private Sub Deletedramldrg(instance As dramldrg)
    End Sub
  Partial Private Sub InsertLOG_A_ERROR(instance As LOG_A_ERROR)
    End Sub
  Partial Private Sub UpdateLOG_A_ERROR(instance As LOG_A_ERROR)
    End Sub
  Partial Private Sub DeleteLOG_A_ERROR(instance As LOG_A_ERROR)
    End Sub
  Partial Private Sub Insertdalcn(instance As dalcn)
    End Sub
  Partial Private Sub Updatedalcn(instance As dalcn)
    End Sub
  Partial Private Sub Deletedalcn(instance As dalcn)
    End Sub
  Partial Private Sub Insertdrrqt(instance As drrqt)
    End Sub
  Partial Private Sub Updatedrrqt(instance As drrqt)
    End Sub
  Partial Private Sub Deletedrrqt(instance As drrqt)
    End Sub
  Partial Private Sub Insertdrrgt(instance As drrgt)
    End Sub
  Partial Private Sub Updatedrrgt(instance As drrgt)
    End Sub
  Partial Private Sub Deletedrrgt(instance As drrgt)
    End Sub
  Partial Private Sub Insert_15_TAMRAP_ATC(instance As _15_TAMRAP_ATC)
    End Sub
  Partial Private Sub Update_15_TAMRAP_ATC(instance As _15_TAMRAP_ATC)
    End Sub
  Partial Private Sub Delete_15_TAMRAP_ATC(instance As _15_TAMRAP_ATC)
    End Sub
  Partial Private Sub Insert_15_TAMRAP_DTL(instance As _15_TAMRAP_DTL)
    End Sub
  Partial Private Sub Update_15_TAMRAP_DTL(instance As _15_TAMRAP_DTL)
    End Sub
  Partial Private Sub Delete_15_TAMRAP_DTL(instance As _15_TAMRAP_DTL)
    End Sub
  Partial Private Sub Insert_15_TAMRAP_EACH(instance As _15_TAMRAP_EACH)
    End Sub
  Partial Private Sub Update_15_TAMRAP_EACH(instance As _15_TAMRAP_EACH)
    End Sub
  Partial Private Sub Delete_15_TAMRAP_EACH(instance As _15_TAMRAP_EACH)
    End Sub
  Partial Private Sub Insert_15_TAMRAP_PACKSIZE(instance As _15_TAMRAP_PACKSIZE)
    End Sub
  Partial Private Sub Update_15_TAMRAP_PACKSIZE(instance As _15_TAMRAP_PACKSIZE)
    End Sub
  Partial Private Sub Delete_15_TAMRAP_PACKSIZE(instance As _15_TAMRAP_PACKSIZE)
    End Sub
  Partial Private Sub InsertLOG_MULTITAB(instance As LOG_MULTITAB)
    End Sub
  Partial Private Sub UpdateLOG_MULTITAB(instance As LOG_MULTITAB)
    End Sub
  Partial Private Sub DeleteLOG_MULTITAB(instance As LOG_MULTITAB)
    End Sub
  Partial Private Sub InsertDRUG_REGISTRATION_EQTO(instance As DRUG_REGISTRATION_EQTO)
    End Sub
  Partial Private Sub UpdateDRUG_REGISTRATION_EQTO(instance As DRUG_REGISTRATION_EQTO)
    End Sub
  Partial Private Sub DeleteDRUG_REGISTRATION_EQTO(instance As DRUG_REGISTRATION_EQTO)
    End Sub
  Partial Private Sub InsertE_TRACKING_RQT_LOG(instance As E_TRACKING_RQT_LOG)
    End Sub
  Partial Private Sub UpdateE_TRACKING_RQT_LOG(instance As E_TRACKING_RQT_LOG)
    End Sub
  Partial Private Sub DeleteE_TRACKING_RQT_LOG(instance As E_TRACKING_RQT_LOG)
    End Sub
  Partial Private Sub InsertE_TRACKING_RQT_STOP_TIME(instance As E_TRACKING_RQT_STOP_TIME)
    End Sub
  Partial Private Sub UpdateE_TRACKING_RQT_STOP_TIME(instance As E_TRACKING_RQT_STOP_TIME)
    End Sub
  Partial Private Sub DeleteE_TRACKING_RQT_STOP_TIME(instance As E_TRACKING_RQT_STOP_TIME)
    End Sub
  Partial Private Sub InsertE_TRACKING_STATUS_RQT_ALL(instance As E_TRACKING_STATUS_RQT_ALL)
    End Sub
  Partial Private Sub UpdateE_TRACKING_STATUS_RQT_ALL(instance As E_TRACKING_STATUS_RQT_ALL)
    End Sub
  Partial Private Sub DeleteE_TRACKING_STATUS_RQT_ALL(instance As E_TRACKING_STATUS_RQT_ALL)
    End Sub
  Partial Private Sub InsertLCN_EXTEND_LITE_OPEN(instance As LCN_EXTEND_LITE_OPEN)
    End Sub
  Partial Private Sub UpdateLCN_EXTEND_LITE_OPEN(instance As LCN_EXTEND_LITE_OPEN)
    End Sub
  Partial Private Sub DeleteLCN_EXTEND_LITE_OPEN(instance As LCN_EXTEND_LITE_OPEN)
    End Sub
  Partial Private Sub InsertDRRGT_DETAIL_CA(instance As DRRGT_DETAIL_CA)
    End Sub
  Partial Private Sub UpdateDRRGT_DETAIL_CA(instance As DRRGT_DETAIL_CA)
    End Sub
  Partial Private Sub DeleteDRRGT_DETAIL_CA(instance As DRRGT_DETAIL_CA)
    End Sub
  Partial Private Sub InsertDRRQT_DETAIL_CA(instance As DRRQT_DETAIL_CA)
    End Sub
  Partial Private Sub UpdateDRRQT_DETAIL_CA(instance As DRRQT_DETAIL_CA)
    End Sub
  Partial Private Sub DeleteDRRQT_DETAIL_CA(instance As DRRQT_DETAIL_CA)
    End Sub
  Partial Private Sub Insert_15_TAMRAP_TEMPLATE(instance As _15_TAMRAP_TEMPLATE)
    End Sub
  Partial Private Sub Update_15_TAMRAP_TEMPLATE(instance As _15_TAMRAP_TEMPLATE)
    End Sub
  Partial Private Sub Delete_15_TAMRAP_TEMPLATE(instance As _15_TAMRAP_TEMPLATE)
    End Sub
  Partial Private Sub Insert_15_TAMRAP_EQTO(instance As _15_TAMRAP_EQTO)
    End Sub
  Partial Private Sub Update_15_TAMRAP_EQTO(instance As _15_TAMRAP_EQTO)
    End Sub
  Partial Private Sub Delete_15_TAMRAP_EQTO(instance As _15_TAMRAP_EQTO)
    End Sub
  Partial Private Sub Insertgenno_temp(instance As genno_temp)
    End Sub
  Partial Private Sub Updategenno_temp(instance As genno_temp)
    End Sub
  Partial Private Sub Deletegenno_temp(instance As genno_temp)
    End Sub
  Partial Private Sub Insert_15_TAMRAP_IOWA_DDL(instance As _15_TAMRAP_IOWA_DDL)
    End Sub
  Partial Private Sub Update_15_TAMRAP_IOWA_DDL(instance As _15_TAMRAP_IOWA_DDL)
    End Sub
  Partial Private Sub Delete_15_TAMRAP_IOWA_DDL(instance As _15_TAMRAP_IOWA_DDL)
    End Sub
  Partial Private Sub Insert_15_TAMRAP_EQTO_DDL(instance As _15_TAMRAP_EQTO_DDL)
    End Sub
  Partial Private Sub Update_15_TAMRAP_EQTO_DDL(instance As _15_TAMRAP_EQTO_DDL)
    End Sub
  Partial Private Sub Delete_15_TAMRAP_EQTO_DDL(instance As _15_TAMRAP_EQTO_DDL)
    End Sub
  Partial Private Sub Insert_15_TAMRAP_GENERAL(instance As _15_TAMRAP_GENERAL)
    End Sub
  Partial Private Sub Update_15_TAMRAP_GENERAL(instance As _15_TAMRAP_GENERAL)
    End Sub
  Partial Private Sub Delete_15_TAMRAP_GENERAL(instance As _15_TAMRAP_GENERAL)
    End Sub
  Partial Private Sub Insert_15_TAMRAP_PACK_DETAIL(instance As _15_TAMRAP_PACK_DETAIL)
    End Sub
  Partial Private Sub Update_15_TAMRAP_PACK_DETAIL(instance As _15_TAMRAP_PACK_DETAIL)
    End Sub
  Partial Private Sub Delete_15_TAMRAP_PACK_DETAIL(instance As _15_TAMRAP_PACK_DETAIL)
    End Sub
  Partial Private Sub Insert_15_TAMRAP_CONDITION(instance As _15_TAMRAP_CONDITION)
    End Sub
  Partial Private Sub Update_15_TAMRAP_CONDITION(instance As _15_TAMRAP_CONDITION)
    End Sub
  Partial Private Sub Delete_15_TAMRAP_CONDITION(instance As _15_TAMRAP_CONDITION)
    End Sub
  Partial Private Sub InsertMAS_TAMRAP_NAME(instance As MAS_TAMRAP_NAME)
    End Sub
  Partial Private Sub UpdateMAS_TAMRAP_NAME(instance As MAS_TAMRAP_NAME)
    End Sub
  Partial Private Sub DeleteMAS_TAMRAP_NAME(instance As MAS_TAMRAP_NAME)
    End Sub
  Partial Private Sub InsertLOG_EDIT_PRODUCT_ESUB_BC(instance As LOG_EDIT_PRODUCT_ESUB_BC)
    End Sub
  Partial Private Sub UpdateLOG_EDIT_PRODUCT_ESUB_BC(instance As LOG_EDIT_PRODUCT_ESUB_BC)
    End Sub
  Partial Private Sub DeleteLOG_EDIT_PRODUCT_ESUB_BC(instance As LOG_EDIT_PRODUCT_ESUB_BC)
    End Sub
  Partial Private Sub InsertA_TEST(instance As A_TEST)
    End Sub
  Partial Private Sub UpdateA_TEST(instance As A_TEST)
    End Sub
  Partial Private Sub DeleteA_TEST(instance As A_TEST)
    End Sub
  Partial Private Sub InsertTEMP_NCT_DALCN(instance As TEMP_NCT_DALCN)
    End Sub
  Partial Private Sub UpdateTEMP_NCT_DALCN(instance As TEMP_NCT_DALCN)
    End Sub
  Partial Private Sub DeleteTEMP_NCT_DALCN(instance As TEMP_NCT_DALCN)
    End Sub
  Partial Private Sub InsertDDL_VORJOR(instance As DDL_VORJOR)
    End Sub
  Partial Private Sub UpdateDDL_VORJOR(instance As DDL_VORJOR)
    End Sub
  Partial Private Sub DeleteDDL_VORJOR(instance As DDL_VORJOR)
    End Sub
  Partial Private Sub InsertMAS_RECEIVER_EDIT_RQT(instance As MAS_RECEIVER_EDIT_RQT)
    End Sub
  Partial Private Sub UpdateMAS_RECEIVER_EDIT_RQT(instance As MAS_RECEIVER_EDIT_RQT)
    End Sub
  Partial Private Sub DeleteMAS_RECEIVER_EDIT_RQT(instance As MAS_RECEIVER_EDIT_RQT)
    End Sub
  Partial Private Sub InsertDALCN_PHR(instance As DALCN_PHR)
    End Sub
  Partial Private Sub UpdateDALCN_PHR(instance As DALCN_PHR)
    End Sub
  Partial Private Sub DeleteDALCN_PHR(instance As DALCN_PHR)
    End Sub
  Partial Private Sub InsertCER_EXTEND_CASCHEMICAL(instance As CER_EXTEND_CASCHEMICAL)
    End Sub
  Partial Private Sub UpdateCER_EXTEND_CASCHEMICAL(instance As CER_EXTEND_CASCHEMICAL)
    End Sub
  Partial Private Sub DeleteCER_EXTEND_CASCHEMICAL(instance As CER_EXTEND_CASCHEMICAL)
    End Sub
  Partial Private Sub InsertCER_EXTEND_MANUFACTURE(instance As CER_EXTEND_MANUFACTURE)
    End Sub
  Partial Private Sub UpdateCER_EXTEND_MANUFACTURE(instance As CER_EXTEND_MANUFACTURE)
    End Sub
  Partial Private Sub DeleteCER_EXTEND_MANUFACTURE(instance As CER_EXTEND_MANUFACTURE)
    End Sub
  Partial Private Sub InsertCER_EXTEND_MANUFACTURE_RQT(instance As CER_EXTEND_MANUFACTURE_RQT)
    End Sub
  Partial Private Sub UpdateCER_EXTEND_MANUFACTURE_RQT(instance As CER_EXTEND_MANUFACTURE_RQT)
    End Sub
  Partial Private Sub DeleteCER_EXTEND_MANUFACTURE_RQT(instance As CER_EXTEND_MANUFACTURE_RQT)
    End Sub
  Partial Private Sub InsertCER_EXTEND_CASCHEMICAL_RQT(instance As CER_EXTEND_CASCHEMICAL_RQT)
    End Sub
  Partial Private Sub UpdateCER_EXTEND_CASCHEMICAL_RQT(instance As CER_EXTEND_CASCHEMICAL_RQT)
    End Sub
  Partial Private Sub DeleteCER_EXTEND_CASCHEMICAL_RQT(instance As CER_EXTEND_CASCHEMICAL_RQT)
    End Sub
  Partial Private Sub InsertDRRGT_ADDR(instance As DRRGT_ADDR)
    End Sub
  Partial Private Sub UpdateDRRGT_ADDR(instance As DRRGT_ADDR)
    End Sub
  Partial Private Sub DeleteDRRGT_ADDR(instance As DRRGT_ADDR)
    End Sub
  Partial Private Sub InsertDRUG_CONSIDER_REQUEST(instance As DRUG_CONSIDER_REQUEST)
    End Sub
  Partial Private Sub UpdateDRUG_CONSIDER_REQUEST(instance As DRUG_CONSIDER_REQUEST)
    End Sub
  Partial Private Sub DeleteDRUG_CONSIDER_REQUEST(instance As DRUG_CONSIDER_REQUEST)
    End Sub
  Partial Private Sub InsertDALCN_EDIT_REQUEST(instance As DALCN_EDIT_REQUEST)
    End Sub
  Partial Private Sub UpdateDALCN_EDIT_REQUEST(instance As DALCN_EDIT_REQUEST)
    End Sub
  Partial Private Sub DeleteDALCN_EDIT_REQUEST(instance As DALCN_EDIT_REQUEST)
    End Sub
  Partial Private Sub InsertDRUG_REGISTRATION_EACH(instance As DRUG_REGISTRATION_EACH)
    End Sub
  Partial Private Sub UpdateDRUG_REGISTRATION_EACH(instance As DRUG_REGISTRATION_EACH)
    End Sub
  Partial Private Sub DeleteDRUG_REGISTRATION_EACH(instance As DRUG_REGISTRATION_EACH)
    End Sub
  Partial Private Sub InsertLCN_EXTEND_LITE(instance As LCN_EXTEND_LITE)
    End Sub
  Partial Private Sub UpdateLCN_EXTEND_LITE(instance As LCN_EXTEND_LITE)
    End Sub
  Partial Private Sub DeleteLCN_EXTEND_LITE(instance As LCN_EXTEND_LITE)
    End Sub
  Partial Private Sub InsertLCN_EXTEND_LITE_GPP(instance As LCN_EXTEND_LITE_GPP)
    End Sub
  Partial Private Sub UpdateLCN_EXTEND_LITE_GPP(instance As LCN_EXTEND_LITE_GPP)
    End Sub
  Partial Private Sub DeleteLCN_EXTEND_LITE_GPP(instance As LCN_EXTEND_LITE_GPP)
    End Sub
  Partial Private Sub InsertDALCN_NCT_SUBSTITUTE(instance As DALCN_NCT_SUBSTITUTE)
    End Sub
  Partial Private Sub UpdateDALCN_NCT_SUBSTITUTE(instance As DALCN_NCT_SUBSTITUTE)
    End Sub
  Partial Private Sub DeleteDALCN_NCT_SUBSTITUTE(instance As DALCN_NCT_SUBSTITUTE)
    End Sub
  Partial Private Sub InsertTRANSACTION_UPLOAD(instance As TRANSACTION_UPLOAD)
    End Sub
  Partial Private Sub UpdateTRANSACTION_UPLOAD(instance As TRANSACTION_UPLOAD)
    End Sub
  Partial Private Sub DeleteTRANSACTION_UPLOAD(instance As TRANSACTION_UPLOAD)
    End Sub
  Partial Private Sub Insertdh15rqt(instance As dh15rqt)
    End Sub
  Partial Private Sub Updatedh15rqt(instance As dh15rqt)
    End Sub
  Partial Private Sub Deletedh15rqt(instance As dh15rqt)
    End Sub
  Partial Private Sub InsertCER(instance As CER)
    End Sub
  Partial Private Sub UpdateCER(instance As CER)
    End Sub
  Partial Private Sub DeleteCER(instance As CER)
    End Sub
  Partial Private Sub InsertMAS_NYMSTAFF_PROCESS(instance As MAS_NYMSTAFF_PROCESS)
    End Sub
  Partial Private Sub UpdateMAS_NYMSTAFF_PROCESS(instance As MAS_NYMSTAFF_PROCESS)
    End Sub
  Partial Private Sub DeleteMAS_NYMSTAFF_PROCESS(instance As MAS_NYMSTAFF_PROCESS)
    End Sub
  Partial Private Sub InsertMAS_STAFF_OFFER(instance As MAS_STAFF_OFFER)
    End Sub
  Partial Private Sub UpdateMAS_STAFF_OFFER(instance As MAS_STAFF_OFFER)
    End Sub
  Partial Private Sub DeleteMAS_STAFF_OFFER(instance As MAS_STAFF_OFFER)
    End Sub
  Partial Private Sub InsertDALCN_IMPORT_DRUG_GROUP_DETAIL2(instance As DALCN_IMPORT_DRUG_GROUP_DETAIL2)
    End Sub
  Partial Private Sub UpdateDALCN_IMPORT_DRUG_GROUP_DETAIL2(instance As DALCN_IMPORT_DRUG_GROUP_DETAIL2)
    End Sub
  Partial Private Sub DeleteDALCN_IMPORT_DRUG_GROUP_DETAIL2(instance As DALCN_IMPORT_DRUG_GROUP_DETAIL2)
    End Sub
  Partial Private Sub InsertDALCN_IMPORT_DRUG_GROUP_DETAIL1(instance As DALCN_IMPORT_DRUG_GROUP_DETAIL1)
    End Sub
  Partial Private Sub UpdateDALCN_IMPORT_DRUG_GROUP_DETAIL1(instance As DALCN_IMPORT_DRUG_GROUP_DETAIL1)
    End Sub
  Partial Private Sub DeleteDALCN_IMPORT_DRUG_GROUP_DETAIL1(instance As DALCN_IMPORT_DRUG_GROUP_DETAIL1)
    End Sub
  Partial Private Sub InsertMAS_ORG_NAME_NYM(instance As MAS_ORG_NAME_NYM)
    End Sub
  Partial Private Sub UpdateMAS_ORG_NAME_NYM(instance As MAS_ORG_NAME_NYM)
    End Sub
  Partial Private Sub DeleteMAS_ORG_NAME_NYM(instance As MAS_ORG_NAME_NYM)
    End Sub
  Partial Private Sub InsertDALCN_LOCATION_ADDRESS(instance As DALCN_LOCATION_ADDRESS)
    End Sub
  Partial Private Sub UpdateDALCN_LOCATION_ADDRESS(instance As DALCN_LOCATION_ADDRESS)
    End Sub
  Partial Private Sub DeleteDALCN_LOCATION_ADDRESS(instance As DALCN_LOCATION_ADDRESS)
    End Sub
  Partial Private Sub InsertDRUG_REGISTRATION_DETAIL_CA(instance As DRUG_REGISTRATION_DETAIL_CA)
    End Sub
  Partial Private Sub UpdateDRUG_REGISTRATION_DETAIL_CA(instance As DRUG_REGISTRATION_DETAIL_CA)
    End Sub
  Partial Private Sub DeleteDRUG_REGISTRATION_DETAIL_CA(instance As DRUG_REGISTRATION_DETAIL_CA)
    End Sub
  Partial Private Sub InsertCHEMICAL_REQUEST(instance As CHEMICAL_REQUEST)
    End Sub
  Partial Private Sub UpdateCHEMICAL_REQUEST(instance As CHEMICAL_REQUEST)
    End Sub
  Partial Private Sub DeleteCHEMICAL_REQUEST(instance As CHEMICAL_REQUEST)
    End Sub
  Partial Private Sub InsertCHEMICAL_REQUEST1(instance As CHEMICAL_REQUEST1)
    End Sub
  Partial Private Sub UpdateCHEMICAL_REQUEST1(instance As CHEMICAL_REQUEST1)
    End Sub
  Partial Private Sub DeleteCHEMICAL_REQUEST1(instance As CHEMICAL_REQUEST1)
    End Sub
  Partial Private Sub InsertMAS_CHEMICAL(instance As MAS_CHEMICAL)
    End Sub
  Partial Private Sub UpdateMAS_CHEMICAL(instance As MAS_CHEMICAL)
    End Sub
  Partial Private Sub DeleteMAS_CHEMICAL(instance As MAS_CHEMICAL)
    End Sub
  Partial Private Sub InsertLOG_STATUS_D(instance As LOG_STATUS_D)
    End Sub
  Partial Private Sub UpdateLOG_STATUS_D(instance As LOG_STATUS_D)
    End Sub
  Partial Private Sub DeleteLOG_STATUS_D(instance As LOG_STATUS_D)
    End Sub
  Partial Private Sub Insertdriowa(instance As driowa)
    End Sub
  Partial Private Sub Updatedriowa(instance As driowa)
    End Sub
  Partial Private Sub Deletedriowa(instance As driowa)
    End Sub
  Partial Private Sub InsertMAS_STATUS(instance As MAS_STATUS)
    End Sub
  Partial Private Sub UpdateMAS_STATUS(instance As MAS_STATUS)
    End Sub
  Partial Private Sub DeleteMAS_STATUS(instance As MAS_STATUS)
    End Sub
  Partial Private Sub InsertCHANGE_NAME_REQUEST_DETAIL(instance As CHANGE_NAME_REQUEST_DETAIL)
    End Sub
  Partial Private Sub UpdateCHANGE_NAME_REQUEST_DETAIL(instance As CHANGE_NAME_REQUEST_DETAIL)
    End Sub
  Partial Private Sub DeleteCHANGE_NAME_REQUEST_DETAIL(instance As CHANGE_NAME_REQUEST_DETAIL)
    End Sub
  Partial Private Sub InsertCHANGE_NAME_REQUEST(instance As CHANGE_NAME_REQUEST)
    End Sub
  Partial Private Sub UpdateCHANGE_NAME_REQUEST(instance As CHANGE_NAME_REQUEST)
    End Sub
  Partial Private Sub DeleteCHANGE_NAME_REQUEST(instance As CHANGE_NAME_REQUEST)
    End Sub
  Partial Private Sub Insertdrsamp(instance As drsamp)
    End Sub
  Partial Private Sub Updatedrsamp(instance As drsamp)
    End Sub
  Partial Private Sub Deletedrsamp(instance As drsamp)
    End Sub
  Partial Private Sub InsertLOG_CHANGE_STATUS_MN(instance As LOG_CHANGE_STATUS_MN)
    End Sub
  Partial Private Sub UpdateLOG_CHANGE_STATUS_MN(instance As LOG_CHANGE_STATUS_MN)
    End Sub
  Partial Private Sub DeleteLOG_CHANGE_STATUS_MN(instance As LOG_CHANGE_STATUS_MN)
    End Sub
  Partial Private Sub InsertDRSAMP_EDIT_REQUEST(instance As DRSAMP_EDIT_REQUEST)
    End Sub
  Partial Private Sub UpdateDRSAMP_EDIT_REQUEST(instance As DRSAMP_EDIT_REQUEST)
    End Sub
  Partial Private Sub DeleteDRSAMP_EDIT_REQUEST(instance As DRSAMP_EDIT_REQUEST)
    End Sub
  Partial Private Sub InsertDRRGT_EDIT_APPOINTMENT(instance As DRRGT_EDIT_APPOINTMENT)
    End Sub
  Partial Private Sub UpdateDRRGT_EDIT_APPOINTMENT(instance As DRRGT_EDIT_APPOINTMENT)
    End Sub
  Partial Private Sub DeleteDRRGT_EDIT_APPOINTMENT(instance As DRRGT_EDIT_APPOINTMENT)
    End Sub
  Partial Private Sub InsertDRRGT_EDIT_REQUEST(instance As DRRGT_EDIT_REQUEST)
    End Sub
  Partial Private Sub UpdateDRRGT_EDIT_REQUEST(instance As DRRGT_EDIT_REQUEST)
    End Sub
  Partial Private Sub DeleteDRRGT_EDIT_REQUEST(instance As DRRGT_EDIT_REQUEST)
    End Sub
  Partial Private Sub InsertSTAFF_ASSIGNING_WORK(instance As STAFF_ASSIGNING_WORK)
    End Sub
  Partial Private Sub UpdateSTAFF_ASSIGNING_WORK(instance As STAFF_ASSIGNING_WORK)
    End Sub
  Partial Private Sub DeleteSTAFF_ASSIGNING_WORK(instance As STAFF_ASSIGNING_WORK)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("LGT_DRUGConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property RECIVEs() As System.Data.Linq.Table(Of RECIVE)
		Get
			Return Me.GetTable(Of RECIVE)
		End Get
	End Property
	
	Public ReadOnly Property TEMPLATEs() As System.Data.Linq.Table(Of TEMPLATE)
		Get
			Return Me.GetTable(Of TEMPLATE)
		End Get
	End Property
	
	Public ReadOnly Property TYPE_TEMPLATEs() As System.Data.Linq.Table(Of TYPE_TEMPLATE)
		Get
			Return Me.GetTable(Of TYPE_TEMPLATE)
		End Get
	End Property
	
	Public ReadOnly Property TYPEs() As System.Data.Linq.Table(Of TYPE)
		Get
			Return Me.GetTable(Of TYPE)
		End Get
	End Property
	
	Public ReadOnly Property CO_INFOs() As System.Data.Linq.Table(Of CO_INFO)
		Get
			Return Me.GetTable(Of CO_INFO)
		End Get
	End Property
	
	Public ReadOnly Property darqts() As System.Data.Linq.Table(Of darqt)
		Get
			Return Me.GetTable(Of darqt)
		End Get
	End Property
	
	Public ReadOnly Property dalcnctgs() As System.Data.Linq.Table(Of dalcnctg)
		Get
			Return Me.GetTable(Of dalcnctg)
		End Get
	End Property
	
	Public ReadOnly Property dalcnkeps() As System.Data.Linq.Table(Of dalcnkep)
		Get
			Return Me.GetTable(Of dalcnkep)
		End Get
	End Property
	
	Public ReadOnly Property dalcnphrs() As System.Data.Linq.Table(Of dalcnphr)
		Get
			Return Me.GetTable(Of dalcnphr)
		End Get
	End Property
	
	Public ReadOnly Property dasubctgs() As System.Data.Linq.Table(Of dasubctg)
		Get
			Return Me.GetTable(Of dasubctg)
		End Get
	End Property
	
	Public ReadOnly Property dakeplctnms() As System.Data.Linq.Table(Of dakeplctnm)
		Get
			Return Me.GetTable(Of dakeplctnm)
		End Get
	End Property
	
	Public ReadOnly Property dacnphdtls() As System.Data.Linq.Table(Of dacnphdtl)
		Get
			Return Me.GetTable(Of dacnphdtl)
		End Get
	End Property
	
	Public ReadOnly Property dacncphrs() As System.Data.Linq.Table(Of dacncphr)
		Get
			Return Me.GetTable(Of dacncphr)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_KEPs() As System.Data.Linq.Table(Of DALCN_KEP)
		Get
			Return Me.GetTable(Of DALCN_KEP)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_WORKTIMEs() As System.Data.Linq.Table(Of DALCN_WORKTIME)
		Get
			Return Me.GetTable(Of DALCN_WORKTIME)
		End Get
	End Property
	
	Public ReadOnly Property sysplaces() As System.Data.Linq.Table(Of sysplace)
		Get
			Return Me.GetTable(Of sysplace)
		End Get
	End Property
	
	Public ReadOnly Property drpcbdrgs() As System.Data.Linq.Table(Of drpcbdrg)
		Get
			Return Me.GetTable(Of drpcbdrg)
		End Get
	End Property
	
	Public ReadOnly Property dh15frgns() As System.Data.Linq.Table(Of dh15frgn)
		Get
			Return Me.GetTable(Of dh15frgn)
		End Get
	End Property
	
	Public ReadOnly Property dh15rqtdts() As System.Data.Linq.Table(Of dh15rqtdt)
		Get
			Return Me.GetTable(Of dh15rqtdt)
		End Get
	End Property
	
	Public ReadOnly Property dh15tdgts() As System.Data.Linq.Table(Of dh15tdgt)
		Get
			Return Me.GetTable(Of dh15tdgt)
		End Get
	End Property
	
	Public ReadOnly Property dh15tpdcfrgns() As System.Data.Linq.Table(Of dh15tpdcfrgn)
		Get
			Return Me.GetTable(Of dh15tpdcfrgn)
		End Get
	End Property
	
	Public ReadOnly Property drsampfmlnos() As System.Data.Linq.Table(Of drsampfmlno)
		Get
			Return Me.GetTable(Of drsampfmlno)
		End Get
	End Property
	
	Public ReadOnly Property drimpdrgs() As System.Data.Linq.Table(Of drimpdrg)
		Get
			Return Me.GetTable(Of drimpdrg)
		End Get
	End Property
	
	Public ReadOnly Property drimpfrgns() As System.Data.Linq.Table(Of drimpfrgn)
		Get
			Return Me.GetTable(Of drimpfrgn)
		End Get
	End Property
	
	Public ReadOnly Property dacncs() As System.Data.Linq.Table(Of dacnc)
		Get
			Return Me.GetTable(Of dacnc)
		End Get
	End Property
	
	Public ReadOnly Property dacnccs() As System.Data.Linq.Table(Of dacncc)
		Get
			Return Me.GetTable(Of dacncc)
		End Get
	End Property
	
	Public ReadOnly Property dacnsds() As System.Data.Linq.Table(Of dacnsd)
		Get
			Return Me.GetTable(Of dacnsd)
		End Get
	End Property
	
	Public ReadOnly Property dacscds() As System.Data.Linq.Table(Of dacscd)
		Get
			Return Me.GetTable(Of dacscd)
		End Get
	End Property
	
	Public ReadOnly Property dalcntypes() As System.Data.Linq.Table(Of dalcntype)
		Get
			Return Me.GetTable(Of dalcntype)
		End Get
	End Property
	
	Public ReadOnly Property daphrcds() As System.Data.Linq.Table(Of daphrcd)
		Get
			Return Me.GetTable(Of daphrcd)
		End Get
	End Property
	
	Public ReadOnly Property daweeks() As System.Data.Linq.Table(Of daweek)
		Get
			Return Me.GetTable(Of daweek)
		End Get
	End Property
	
	Public ReadOnly Property djpctypes() As System.Data.Linq.Table(Of djpctype)
		Get
			Return Me.GetTable(Of djpctype)
		End Get
	End Property
	
	Public ReadOnly Property dramlparts() As System.Data.Linq.Table(Of dramlpart)
		Get
			Return Me.GetTable(Of dramlpart)
		End Get
	End Property
	
	Public ReadOnly Property dramltypes() As System.Data.Linq.Table(Of dramltype)
		Get
			Return Me.GetTable(Of dramltype)
		End Get
	End Property
	
	Public ReadOnly Property dramlusetps() As System.Data.Linq.Table(Of dramlusetp)
		Get
			Return Me.GetTable(Of dramlusetp)
		End Get
	End Property
	
	Public ReadOnly Property drpcbojects() As System.Data.Linq.Table(Of drpcboject)
		Get
			Return Me.GetTable(Of drpcboject)
		End Get
	End Property
	
	Public ReadOnly Property drpcbtypes() As System.Data.Linq.Table(Of drpcbtype)
		Get
			Return Me.GetTable(Of drpcbtype)
		End Get
	End Property
	
	Public ReadOnly Property drstdtests() As System.Data.Linq.Table(Of drstdtest)
		Get
			Return Me.GetTable(Of drstdtest)
		End Get
	End Property
	
	Public ReadOnly Property drstngs() As System.Data.Linq.Table(Of drstng)
		Get
			Return Me.GetTable(Of drstng)
		End Get
	End Property
	
	Public ReadOnly Property sysisocnts() As System.Data.Linq.Table(Of sysisocnt)
		Get
			Return Me.GetTable(Of sysisocnt)
		End Get
	End Property
	
	Public ReadOnly Property TRANSACTION_DOWNLOADs() As System.Data.Linq.Table(Of TRANSACTION_DOWNLOAD)
		Get
			Return Me.GetTable(Of TRANSACTION_DOWNLOAD)
		End Get
	End Property
	
	Public ReadOnly Property PROCESS_NAMEs() As System.Data.Linq.Table(Of PROCESS_NAME)
		Get
			Return Me.GetTable(Of PROCESS_NAME)
		End Get
	End Property
	
	Public ReadOnly Property drpcbs() As System.Data.Linq.Table(Of drpcb)
		Get
			Return Me.GetTable(Of drpcb)
		End Get
	End Property
	
	Public ReadOnly Property lgt_impcerrefs() As System.Data.Linq.Table(Of lgt_impcerref)
		Get
			Return Me.GetTable(Of lgt_impcerref)
		End Get
	End Property
	
	Public ReadOnly Property CER_DRTYPEs() As System.Data.Linq.Table(Of CER_DRTYPE)
		Get
			Return Me.GetTable(Of CER_DRTYPE)
		End Get
	End Property
	
	Public ReadOnly Property CER_REFs() As System.Data.Linq.Table(Of CER_REF)
		Get
			Return Me.GetTable(Of CER_REF)
		End Get
	End Property
	
	Public ReadOnly Property GEN_NO_01s() As System.Data.Linq.Table(Of GEN_NO_01)
		Get
			Return Me.GetTable(Of GEN_NO_01)
		End Get
	End Property
	
	Public ReadOnly Property GEN_NO_02s() As System.Data.Linq.Table(Of GEN_NO_02)
		Get
			Return Me.GetTable(Of GEN_NO_02)
		End Get
	End Property
	
	Public ReadOnly Property GEN_NO_03s() As System.Data.Linq.Table(Of GEN_NO_03)
		Get
			Return Me.GetTable(Of GEN_NO_03)
		End Get
	End Property
	
	Public ReadOnly Property GEN_NO_05s() As System.Data.Linq.Table(Of GEN_NO_05)
		Get
			Return Me.GetTable(Of GEN_NO_05)
		End Get
	End Property
	
	Public ReadOnly Property GEN_NO_06s() As System.Data.Linq.Table(Of GEN_NO_06)
		Get
			Return Me.GetTable(Of GEN_NO_06)
		End Get
	End Property
	
	Public ReadOnly Property GEN_NO_07s() As System.Data.Linq.Table(Of GEN_NO_07)
		Get
			Return Me.GetTable(Of GEN_NO_07)
		End Get
	End Property
	
	Public ReadOnly Property GEN_NO_08s() As System.Data.Linq.Table(Of GEN_NO_08)
		Get
			Return Me.GetTable(Of GEN_NO_08)
		End Get
	End Property
	
	Public ReadOnly Property GEN_NO_09s() As System.Data.Linq.Table(Of GEN_NO_09)
		Get
			Return Me.GetTable(Of GEN_NO_09)
		End Get
	End Property
	
	Public ReadOnly Property GEN_NO_10s() As System.Data.Linq.Table(Of GEN_NO_10)
		Get
			Return Me.GetTable(Of GEN_NO_10)
		End Get
	End Property
	
	Public ReadOnly Property GEN_NO_11s() As System.Data.Linq.Table(Of GEN_NO_11)
		Get
			Return Me.GetTable(Of GEN_NO_11)
		End Get
	End Property
	
	Public ReadOnly Property GEN_NO_12s() As System.Data.Linq.Table(Of GEN_NO_12)
		Get
			Return Me.GetTable(Of GEN_NO_12)
		End Get
	End Property
	
	Public ReadOnly Property EDIT_REQUESTs() As System.Data.Linq.Table(Of EDIT_REQUEST)
		Get
			Return Me.GetTable(Of EDIT_REQUEST)
		End Get
	End Property
	
	Public ReadOnly Property drrgtnewdgs() As System.Data.Linq.Table(Of drrgtnewdg)
		Get
			Return Me.GetTable(Of drrgtnewdg)
		End Get
	End Property
	
	Public ReadOnly Property drpcksizes() As System.Data.Linq.Table(Of drpcksize)
		Get
			Return Me.GetTable(Of drpcksize)
		End Get
	End Property
	
	Public ReadOnly Property drusedrgs() As System.Data.Linq.Table(Of drusedrg)
		Get
			Return Me.GetTable(Of drusedrg)
		End Get
	End Property
	
	Public ReadOnly Property drspecs() As System.Data.Linq.Table(Of drspec)
		Get
			Return Me.GetTable(Of drspec)
		End Get
	End Property
	
	Public ReadOnly Property dreqtos() As System.Data.Linq.Table(Of dreqto)
		Get
			Return Me.GetTable(Of dreqto)
		End Get
	End Property
	
	Public ReadOnly Property drfmls() As System.Data.Linq.Table(Of drfml)
		Get
			Return Me.GetTable(Of drfml)
		End Get
	End Property
	
	Public ReadOnly Property drfmlnos() As System.Data.Linq.Table(Of drfmlno)
		Get
			Return Me.GetTable(Of drfmlno)
		End Get
	End Property
	
	Public ReadOnly Property drdrgchrs() As System.Data.Linq.Table(Of drdrgchr)
		Get
			Return Me.GetTable(Of drdrgchr)
		End Get
	End Property
	
	Public ReadOnly Property drfrgns() As System.Data.Linq.Table(Of drfrgn)
		Get
			Return Me.GetTable(Of drfrgn)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_IN_PROJECTs() As System.Data.Linq.Table(Of DRUG_IN_PROJECT)
		Get
			Return Me.GetTable(Of DRUG_IN_PROJECT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_RESEARCHERs() As System.Data.Linq.Table(Of MAS_RESEARCHER)
		Get
			Return Me.GetTable(Of MAS_RESEARCHER)
		End Get
	End Property
	
	Public ReadOnly Property TH_RESEARCH_LOCATIONs() As System.Data.Linq.Table(Of TH_RESEARCH_LOCATION)
		Get
			Return Me.GetTable(Of TH_RESEARCH_LOCATION)
		End Get
	End Property
	
	Public ReadOnly Property dalcnaddrs() As System.Data.Linq.Table(Of dalcnaddr)
		Get
			Return Me.GetTable(Of dalcnaddr)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TEMPLATE_PROCESSes() As System.Data.Linq.Table(Of MAS_TEMPLATE_PROCESS)
		Get
			Return Me.GetTable(Of MAS_TEMPLATE_PROCESS)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACK_STAFF_STATUS() As System.Data.Linq.Table(Of E_TRACK_STAFF_STATUS)
		Get
			Return Me.GetTable(Of E_TRACK_STAFF_STATUS)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MAIN_GROUP_STATUS() As System.Data.Linq.Table(Of MAS_MAIN_GROUP_STATUS)
		Get
			Return Me.GetTable(Of MAS_MAIN_GROUP_STATUS)
		End Get
	End Property
	
	Public ReadOnly Property DETAIL_MAIN_GROUP_STATUS() As System.Data.Linq.Table(Of DETAIL_MAIN_GROUP_STATUS)
		Get
			Return Me.GetTable(Of DETAIL_MAIN_GROUP_STATUS)
		End Get
	End Property
	
	Public ReadOnly Property DATE_MODIFY_STATUS() As System.Data.Linq.Table(Of DATE_MODIFY_STATUS)
		Get
			Return Me.GetTable(Of DATE_MODIFY_STATUS)
		End Get
	End Property
	
	Public ReadOnly Property lgt_impcers() As System.Data.Linq.Table(Of lgt_impcer)
		Get
			Return Me.GetTable(Of lgt_impcer)
		End Get
	End Property
	
	Public ReadOnly Property TEMPLATE_ATTACHes() As System.Data.Linq.Table(Of TEMPLATE_ATTACH)
		Get
			Return Me.GetTable(Of TEMPLATE_ATTACH)
		End Get
	End Property
	
	Public ReadOnly Property GEN_RCVNOs() As System.Data.Linq.Table(Of GEN_RCVNO)
		Get
			Return Me.GetTable(Of GEN_RCVNO)
		End Get
	End Property
	
	Public ReadOnly Property TRANFER_LOCATIONs() As System.Data.Linq.Table(Of TRANFER_LOCATION)
		Get
			Return Me.GetTable(Of TRANFER_LOCATION)
		End Get
	End Property
	
	Public ReadOnly Property STATUS_DATEs() As System.Data.Linq.Table(Of STATUS_DATE)
		Get
			Return Me.GetTable(Of STATUS_DATE)
		End Get
	End Property
	
	Public ReadOnly Property DH15_DETAIL_MANUFACTUREs() As System.Data.Linq.Table(Of DH15_DETAIL_MANUFACTURE)
		Get
			Return Me.GetTable(Of DH15_DETAIL_MANUFACTURE)
		End Get
	End Property
	
	Public ReadOnly Property GEN_DH15TDGT_NOs() As System.Data.Linq.Table(Of GEN_DH15TDGT_NO)
		Get
			Return Me.GetTable(Of GEN_DH15TDGT_NO)
		End Get
	End Property
	
	Public ReadOnly Property DH15_DETAIL_MANUFACTURE1s() As System.Data.Linq.Table(Of DH15_DETAIL_MANUFACTURE1)
		Get
			Return Me.GetTable(Of DH15_DETAIL_MANUFACTURE1)
		End Get
	End Property
	
	Public ReadOnly Property GEN_NO_04s() As System.Data.Linq.Table(Of GEN_NO_04)
		Get
			Return Me.GetTable(Of GEN_NO_04)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CATEGORY_DRUGs() As System.Data.Linq.Table(Of MAS_CATEGORY_DRUG)
		Get
			Return Me.GetTable(Of MAS_CATEGORY_DRUG)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_DETAIL_ROLEs() As System.Data.Linq.Table(Of DRRGT_DETAIL_ROLE)
		Get
			Return Me.GetTable(Of DRRGT_DETAIL_ROLE)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACKING_STAFFs() As System.Data.Linq.Table(Of E_TRACKING_STAFF)
		Get
			Return Me.GetTable(Of E_TRACKING_STAFF)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACKING_STAFF_CITIZEN_IDs() As System.Data.Linq.Table(Of E_TRACKING_STAFF_CITIZEN_ID)
		Get
			Return Me.GetTable(Of E_TRACKING_STAFF_CITIZEN_ID)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_PROJECTs() As System.Data.Linq.Table(Of DRUG_PROJECT)
		Get
			Return Me.GetTable(Of DRUG_PROJECT)
		End Get
	End Property
	
	Public ReadOnly Property drimpfors() As System.Data.Linq.Table(Of drimpfor)
		Get
			Return Me.GetTable(Of drimpfor)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_MODIFY_REQUESTs() As System.Data.Linq.Table(Of DRUG_MODIFY_REQUEST)
		Get
			Return Me.GetTable(Of DRUG_MODIFY_REQUEST)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MENUs() As System.Data.Linq.Table(Of MAS_MENU)
		Get
			Return Me.GetTable(Of MAS_MENU)
		End Get
	End Property
	
	Public ReadOnly Property MAS_E_TRACKING_GAPs() As System.Data.Linq.Table(Of MAS_E_TRACKING_GAP)
		Get
			Return Me.GetTable(Of MAS_E_TRACKING_GAP)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_PRODUCT_DR_GROUPs() As System.Data.Linq.Table(Of DRUG_PRODUCT_DR_GROUP)
		Get
			Return Me.GetTable(Of DRUG_PRODUCT_DR_GROUP)
		End Get
	End Property
	
	Public ReadOnly Property GEN_NO_17s() As System.Data.Linq.Table(Of GEN_NO_17)
		Get
			Return Me.GetTable(Of GEN_NO_17)
		End Get
	End Property
	
	Public ReadOnly Property GEN_NO_18s() As System.Data.Linq.Table(Of GEN_NO_18)
		Get
			Return Me.GetTable(Of GEN_NO_18)
		End Get
	End Property
	
	Public ReadOnly Property MAS_WORK_GROUPs() As System.Data.Linq.Table(Of MAS_WORK_GROUP)
		Get
			Return Me.GetTable(Of MAS_WORK_GROUP)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_TERM_TO_USEs() As System.Data.Linq.Table(Of DRUG_TERM_TO_USE)
		Get
			Return Me.GetTable(Of DRUG_TERM_TO_USE)
		End Get
	End Property
	
	Public ReadOnly Property GEN_NO_16s() As System.Data.Linq.Table(Of GEN_NO_16)
		Get
			Return Me.GetTable(Of GEN_NO_16)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_PRODUCT_IOWAs() As System.Data.Linq.Table(Of DRUG_PRODUCT_IOWA)
		Get
			Return Me.GetTable(Of DRUG_PRODUCT_IOWA)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_PRODUCT_ADDRs() As System.Data.Linq.Table(Of DRUG_PRODUCT_ADDR)
		Get
			Return Me.GetTable(Of DRUG_PRODUCT_ADDR)
		End Get
	End Property
	
	Public ReadOnly Property syswrkunts() As System.Data.Linq.Table(Of syswrkunt)
		Get
			Return Me.GetTable(Of syswrkunt)
		End Get
	End Property
	
	Public ReadOnly Property MAS_E_TRACKING_GROUPs() As System.Data.Linq.Table(Of MAS_E_TRACKING_GROUP)
		Get
			Return Me.GetTable(Of MAS_E_TRACKING_GROUP)
		End Get
	End Property
	
	Public ReadOnly Property CONSIDER_REQ_PRINT_HISTORies() As System.Data.Linq.Table(Of CONSIDER_REQ_PRINT_HISTORY)
		Get
			Return Me.GetTable(Of CONSIDER_REQ_PRINT_HISTORY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MENU_AUTOs() As System.Data.Linq.Table(Of MAS_MENU_AUTO)
		Get
			Return Me.GetTable(Of MAS_MENU_AUTO)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_PRODUCTION_DRUG_GROUP_DES_DETAILs() As System.Data.Linq.Table(Of DALCN_PRODUCTION_DRUG_GROUP_DES_DETAIL)
		Get
			Return Me.GetTable(Of DALCN_PRODUCTION_DRUG_GROUP_DES_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_PRODUCTION_DRUG_GROUP_DETAILs() As System.Data.Linq.Table(Of DALCN_PRODUCTION_DRUG_GROUP_DETAIL)
		Get
			Return Me.GetTable(Of DALCN_PRODUCTION_DRUG_GROUP_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUG_GROUPs() As System.Data.Linq.Table(Of MAS_DRUG_GROUP)
		Get
			Return Me.GetTable(Of MAS_DRUG_GROUP)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACKING_BASEs() As System.Data.Linq.Table(Of E_TRACKING_BASE)
		Get
			Return Me.GetTable(Of E_TRACKING_BASE)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_PRODUCTION_DRUG_TYPE_DETAILs() As System.Data.Linq.Table(Of DALCN_PRODUCTION_DRUG_TYPE_DETAIL)
		Get
			Return Me.GetTable(Of DALCN_PRODUCTION_DRUG_TYPE_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_PRODUCTION_DRUG_TYPE_DETAIL2s() As System.Data.Linq.Table(Of DALCN_PRODUCTION_DRUG_TYPE_DETAIL2)
		Get
			Return Me.GetTable(Of DALCN_PRODUCTION_DRUG_TYPE_DETAIL2)
		End Get
	End Property
	
	Public ReadOnly Property LCN_EXTENDs() As System.Data.Linq.Table(Of LCN_EXTEND)
		Get
			Return Me.GetTable(Of LCN_EXTEND)
		End Get
	End Property
	
	Public ReadOnly Property MAS_E_TRACKING_STATUS() As System.Data.Linq.Table(Of MAS_E_TRACKING_STATUS)
		Get
			Return Me.GetTable(Of MAS_E_TRACKING_STATUS)
		End Get
	End Property
	
	Public ReadOnly Property MAS_EXPERT_SKILLs() As System.Data.Linq.Table(Of MAS_EXPERT_SKILL)
		Get
			Return Me.GetTable(Of MAS_EXPERT_SKILL)
		End Get
	End Property
	
	Public ReadOnly Property DH15_DETAIL_CERs() As System.Data.Linq.Table(Of DH15_DETAIL_CER)
		Get
			Return Me.GetTable(Of DH15_DETAIL_CER)
		End Get
	End Property
	
	Public ReadOnly Property sysstaffs() As System.Data.Linq.Table(Of sysstaff)
		Get
			Return Me.GetTable(Of sysstaff)
		End Get
	End Property
	
	Public ReadOnly Property MAS_E_TRACKING_REPORT_PROCESSes() As System.Data.Linq.Table(Of MAS_E_TRACKING_REPORT_PROCESS)
		Get
			Return Me.GetTable(Of MAS_E_TRACKING_REPORT_PROCESS)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACKING_WORK_DAY_REPORT_DETAILs() As System.Data.Linq.Table(Of E_TRACKING_WORK_DAY_REPORT_DETAIL)
		Get
			Return Me.GetTable(Of E_TRACKING_WORK_DAY_REPORT_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_E_TRACKING_PERIOD_NAMEs() As System.Data.Linq.Table(Of MAS_E_TRACKING_PERIOD_NAME)
		Get
			Return Me.GetTable(Of MAS_E_TRACKING_PERIOD_NAME)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_PRODUCT_ID_UNIT_DETAILs() As System.Data.Linq.Table(Of DRUG_PRODUCT_ID_UNIT_DETAIL)
		Get
			Return Me.GetTable(Of DRUG_PRODUCT_ID_UNIT_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property dcunits() As System.Data.Linq.Table(Of dcunit)
		Get
			Return Me.GetTable(Of dcunit)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACKING_WORK_DAY_REQUEST_DETAILs() As System.Data.Linq.Table(Of E_TRACKING_WORK_DAY_REQUEST_DETAIL)
		Get
			Return Me.GetTable(Of E_TRACKING_WORK_DAY_REQUEST_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_BIO_PACKs() As System.Data.Linq.Table(Of MAS_BIO_PACK)
		Get
			Return Me.GetTable(Of MAS_BIO_PACK)
		End Get
	End Property
	
	Public ReadOnly Property MAS_HERB_TYPEs() As System.Data.Linq.Table(Of MAS_HERB_TYPE)
		Get
			Return Me.GetTable(Of MAS_HERB_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_HERB_OR_ANIMAL_PARTs() As System.Data.Linq.Table(Of MAS_HERB_OR_ANIMAL_PART)
		Get
			Return Me.GetTable(Of MAS_HERB_OR_ANIMAL_PART)
		End Get
	End Property
	
	Public ReadOnly Property MAS_BIO_TYPEs() As System.Data.Linq.Table(Of MAS_BIO_TYPE)
		Get
			Return Me.GetTable(Of MAS_BIO_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property CHEMICAL_HERB_DETAILs() As System.Data.Linq.Table(Of CHEMICAL_HERB_DETAIL)
		Get
			Return Me.GetTable(Of CHEMICAL_HERB_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_HERB_OR_ANIMAL_PART1s() As System.Data.Linq.Table(Of MAS_HERB_OR_ANIMAL_PART1)
		Get
			Return Me.GetTable(Of MAS_HERB_OR_ANIMAL_PART1)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DOCUMENT_RECEIVERs() As System.Data.Linq.Table(Of MAS_DOCUMENT_RECEIVER)
		Get
			Return Me.GetTable(Of MAS_DOCUMENT_RECEIVER)
		End Get
	End Property
	
	Public ReadOnly Property CHEMICAL_REQUEST_STANDARD_IOWAs() As System.Data.Linq.Table(Of CHEMICAL_REQUEST_STANDARD_IOWA)
		Get
			Return Me.GetTable(Of CHEMICAL_REQUEST_STANDARD_IOWA)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CHEMICAL_LIST16s() As System.Data.Linq.Table(Of MAS_CHEMICAL_LIST16)
		Get
			Return Me.GetTable(Of MAS_CHEMICAL_LIST16)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_SELL_TYPEs() As System.Data.Linq.Table(Of DALCN_SELL_TYPE)
		Get
			Return Me.GetTable(Of DALCN_SELL_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property CER_DETAIL_MANUFACTUREs() As System.Data.Linq.Table(Of CER_DETAIL_MANUFACTURE)
		Get
			Return Me.GetTable(Of CER_DETAIL_MANUFACTURE)
		End Get
	End Property
	
	Public ReadOnly Property CHEMICAL_REQUEST_DETAILs() As System.Data.Linq.Table(Of CHEMICAL_REQUEST_DETAIL)
		Get
			Return Me.GetTable(Of CHEMICAL_REQUEST_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property CER_DETAIL_CASCHEMICALs() As System.Data.Linq.Table(Of CER_DETAIL_CASCHEMICAL)
		Get
			Return Me.GetTable(Of CER_DETAIL_CASCHEMICAL)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_PRODUCT_ATCs() As System.Data.Linq.Table(Of DRUG_PRODUCT_ATC)
		Get
			Return Me.GetTable(Of DRUG_PRODUCT_ATC)
		End Get
	End Property
	
	Public ReadOnly Property MAS_NEWs() As System.Data.Linq.Table(Of MAS_NEW)
		Get
			Return Me.GetTable(Of MAS_NEW)
		End Get
	End Property
	
	Public ReadOnly Property DH15_DETAIL_CASCHEMICALs() As System.Data.Linq.Table(Of DH15_DETAIL_CASCHEMICAL)
		Get
			Return Me.GetTable(Of DH15_DETAIL_CASCHEMICAL)
		End Get
	End Property
	
	Public ReadOnly Property FILE_ATTACHes() As System.Data.Linq.Table(Of FILE_ATTACH)
		Get
			Return Me.GetTable(Of FILE_ATTACH)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MENU_CHEMI_LABELs() As System.Data.Linq.Table(Of MAS_MENU_CHEMI_LABEL)
		Get
			Return Me.GetTable(Of MAS_MENU_CHEMI_LABEL)
		End Get
	End Property
	
	Public ReadOnly Property DRSAMP_DETAIL_CAs() As System.Data.Linq.Table(Of DRSAMP_DETAIL_CA)
		Get
			Return Me.GetTable(Of DRSAMP_DETAIL_CA)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ADMIN_HEADER_LINKs() As System.Data.Linq.Table(Of MAS_ADMIN_HEADER_LINK)
		Get
			Return Me.GetTable(Of MAS_ADMIN_HEADER_LINK)
		End Get
	End Property
	
	Public ReadOnly Property MAS_NAV_ACTIVE_DETAILs() As System.Data.Linq.Table(Of MAS_NAV_ACTIVE_DETAIL)
		Get
			Return Me.GetTable(Of MAS_NAV_ACTIVE_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property GEN_RCVNO_REQUESTs() As System.Data.Linq.Table(Of GEN_RCVNO_REQUEST)
		Get
			Return Me.GetTable(Of GEN_RCVNO_REQUEST)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACKING_WORK_DAY_REPORTs() As System.Data.Linq.Table(Of E_TRACKING_WORK_DAY_REPORT)
		Get
			Return Me.GetTable(Of E_TRACKING_WORK_DAY_REPORT)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUG_PRODUCT_NAMEs() As System.Data.Linq.Table(Of MAS_DRUG_PRODUCT_NAME)
		Get
			Return Me.GetTable(Of MAS_DRUG_PRODUCT_NAME)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_PRODUCTION_GROUPs() As System.Data.Linq.Table(Of DALCN_PRODUCTION_GROUP)
		Get
			Return Me.GetTable(Of DALCN_PRODUCTION_GROUP)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUG_GROUP_HEADs() As System.Data.Linq.Table(Of MAS_DRUG_GROUP_HEAD)
		Get
			Return Me.GetTable(Of MAS_DRUG_GROUP_HEAD)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACKING_DETAIL_STATUS() As System.Data.Linq.Table(Of E_TRACKING_DETAIL_STATUS)
		Get
			Return Me.GetTable(Of E_TRACKING_DETAIL_STATUS)
		End Get
	End Property
	
	Public ReadOnly Property MAS_E_TRACKING_STATUS_NAMEs() As System.Data.Linq.Table(Of MAS_E_TRACKING_STATUS_NAME)
		Get
			Return Me.GetTable(Of MAS_E_TRACKING_STATUS_NAME)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACKING_EXPERT_ROUNDs() As System.Data.Linq.Table(Of E_TRACKING_EXPERT_ROUND)
		Get
			Return Me.GetTable(Of E_TRACKING_EXPERT_ROUND)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACKING_CURRENT_STATUS() As System.Data.Linq.Table(Of E_TRACKING_CURRENT_STATUS)
		Get
			Return Me.GetTable(Of E_TRACKING_CURRENT_STATUS)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACKING_STATUS_ADDs() As System.Data.Linq.Table(Of E_TRACKING_STATUS_ADD)
		Get
			Return Me.GetTable(Of E_TRACKING_STATUS_ADD)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_REGISTRATION_ATC_DETAILs() As System.Data.Linq.Table(Of DRUG_REGISTRATION_ATC_DETAIL)
		Get
			Return Me.GetTable(Of DRUG_REGISTRATION_ATC_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_REGISTRATION_PROPERTies() As System.Data.Linq.Table(Of DRUG_REGISTRATION_PROPERTy)
		Get
			Return Me.GetTable(Of DRUG_REGISTRATION_PROPERTy)
		End Get
	End Property
	
	Public ReadOnly Property CER_FOREIGN_MANUFACTUREs() As System.Data.Linq.Table(Of CER_FOREIGN_MANUFACTURE)
		Get
			Return Me.GetTable(Of CER_FOREIGN_MANUFACTURE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_HEAD_STATUS_E_TRACKINGs() As System.Data.Linq.Table(Of MAS_HEAD_STATUS_E_TRACKING)
		Get
			Return Me.GetTable(Of MAS_HEAD_STATUS_E_TRACKING)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_PHR_HISTORies() As System.Data.Linq.Table(Of DALCN_PHR_HISTORY)
		Get
			Return Me.GetTable(Of DALCN_PHR_HISTORY)
		End Get
	End Property
	
	Public ReadOnly Property daphrfunctcds() As System.Data.Linq.Table(Of daphrfunctcd)
		Get
			Return Me.GetTable(Of daphrfunctcd)
		End Get
	End Property
	
	Public ReadOnly Property LOG_STATUS() As System.Data.Linq.Table(Of LOG_STATUS)
		Get
			Return Me.GetTable(Of LOG_STATUS)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_PHR_CANCEL_SELFs() As System.Data.Linq.Table(Of DALCN_PHR_CANCEL_SELF)
		Get
			Return Me.GetTable(Of DALCN_PHR_CANCEL_SELF)
		End Get
	End Property
	
	Public ReadOnly Property LCN_CANCELs() As System.Data.Linq.Table(Of LCN_CANCEL)
		Get
			Return Me.GetTable(Of LCN_CANCEL)
		End Get
	End Property
	
	Public ReadOnly Property CER_EXTEND_DETAILs() As System.Data.Linq.Table(Of CER_EXTEND_DETAIL)
		Get
			Return Me.GetTable(Of CER_EXTEND_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property CER_EXTENDs() As System.Data.Linq.Table(Of CER_EXTEND)
		Get
			Return Me.GetTable(Of CER_EXTEND)
		End Get
	End Property
	
	Public ReadOnly Property MAS_NEW_WORK_GROUPs() As System.Data.Linq.Table(Of MAS_NEW_WORK_GROUP)
		Get
			Return Me.GetTable(Of MAS_NEW_WORK_GROUP)
		End Get
	End Property
	
	Public ReadOnly Property EDT_HISTORies() As System.Data.Linq.Table(Of EDT_HISTORY)
		Get
			Return Me.GetTable(Of EDT_HISTORY)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TYPE_REQUESTs() As System.Data.Linq.Table(Of MAS_TYPE_REQUEST)
		Get
			Return Me.GetTable(Of MAS_TYPE_REQUEST)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_REQUEST_CENTERs() As System.Data.Linq.Table(Of DRUG_REQUEST_CENTER)
		Get
			Return Me.GetTable(Of DRUG_REQUEST_CENTER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_LCN_EXTEND_TYPEs() As System.Data.Linq.Table(Of MAS_LCN_EXTEND_TYPE)
		Get
			Return Me.GetTable(Of MAS_LCN_EXTEND_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_PROFESSIONAL_NAMEs() As System.Data.Linq.Table(Of MAS_PROFESSIONAL_NAME)
		Get
			Return Me.GetTable(Of MAS_PROFESSIONAL_NAME)
		End Get
	End Property
	
	Public ReadOnly Property MAS_EXPERT_NAMEs() As System.Data.Linq.Table(Of MAS_EXPERT_NAME)
		Get
			Return Me.GetTable(Of MAS_EXPERT_NAME)
		End Get
	End Property
	
	Public ReadOnly Property CER_FOREIGNs() As System.Data.Linq.Table(Of CER_FOREIGN)
		Get
			Return Me.GetTable(Of CER_FOREIGN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_UNIT_CONTAINs() As System.Data.Linq.Table(Of MAS_UNIT_CONTAIN)
		Get
			Return Me.GetTable(Of MAS_UNIT_CONTAIN)
		End Get
	End Property
	
	Public ReadOnly Property EDT_COUNTs() As System.Data.Linq.Table(Of EDT_COUNT)
		Get
			Return Me.GetTable(Of EDT_COUNT)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_PRODUCT_IDs() As System.Data.Linq.Table(Of DRUG_PRODUCT_ID)
		Get
			Return Me.GetTable(Of DRUG_PRODUCT_ID)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_PROJECT_DRUG_ACTIVE_INGREDIENTs() As System.Data.Linq.Table(Of DRUG_PROJECT_DRUG_ACTIVE_INGREDIENT)
		Get
			Return Me.GetTable(Of DRUG_PROJECT_DRUG_ACTIVE_INGREDIENT)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_ATC_DETAILs() As System.Data.Linq.Table(Of DRRGT_ATC_DETAIL)
		Get
			Return Me.GetTable(Of DRRGT_ATC_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_PROPERTies() As System.Data.Linq.Table(Of DRRGT_PROPERTy)
		Get
			Return Me.GetTable(Of DRRGT_PROPERTy)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_PROJECT_RESEARCH_FACILITies() As System.Data.Linq.Table(Of DRUG_PROJECT_RESEARCH_FACILITY)
		Get
			Return Me.GetTable(Of DRUG_PROJECT_RESEARCH_FACILITY)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_PROJECT_CLINICAL_LABORATORies() As System.Data.Linq.Table(Of DRUG_PROJECT_CLINICAL_LABORATORY)
		Get
			Return Me.GetTable(Of DRUG_PROJECT_CLINICAL_LABORATORY)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_PROJECT_SUMMARY_LOGs() As System.Data.Linq.Table(Of DRUG_PROJECT_SUMMARY_LOG)
		Get
			Return Me.GetTable(Of DRUG_PROJECT_SUMMARY_LOG)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_NORYORMOR1_IMPORTs() As System.Data.Linq.Table(Of DRUG_NORYORMOR1_IMPORT)
		Get
			Return Me.GetTable(Of DRUG_NORYORMOR1_IMPORT)
		End Get
	End Property
	
	Public ReadOnly Property DRSAMP_PACKAGE_DETAILs() As System.Data.Linq.Table(Of DRSAMP_PACKAGE_DETAIL)
		Get
			Return Me.GetTable(Of DRSAMP_PACKAGE_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ADMIN_GROUP_BUTTONs() As System.Data.Linq.Table(Of MAS_ADMIN_GROUP_BUTTON)
		Get
			Return Me.GetTable(Of MAS_ADMIN_GROUP_BUTTON)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_LOCATION_BSNs() As System.Data.Linq.Table(Of DALCN_LOCATION_BSN)
		Get
			Return Me.GetTable(Of DALCN_LOCATION_BSN)
		End Get
	End Property
	
	Public ReadOnly Property MAS_EXPERT_COMMENTs() As System.Data.Linq.Table(Of MAS_EXPERT_COMMENT)
		Get
			Return Me.GetTable(Of MAS_EXPERT_COMMENT)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACKING_EXPERT_SELECTEDs() As System.Data.Linq.Table(Of E_TRACKING_EXPERT_SELECTED)
		Get
			Return Me.GetTable(Of E_TRACKING_EXPERT_SELECTED)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_PROJECT_SUMMARies() As System.Data.Linq.Table(Of DRUG_PROJECT_SUMMARY)
		Get
			Return Me.GetTable(Of DRUG_PROJECT_SUMMARY)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_DETAIL_LOCATION_KEEPs() As System.Data.Linq.Table(Of DALCN_DETAIL_LOCATION_KEEP)
		Get
			Return Me.GetTable(Of DALCN_DETAIL_LOCATION_KEEP)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_NORYORMOR4_DONATE_DETAILs() As System.Data.Linq.Table(Of DRUG_NORYORMOR4_DONATE_DETAIL)
		Get
			Return Me.GetTable(Of DRUG_NORYORMOR4_DONATE_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_NORYORMOR_PROOFs() As System.Data.Linq.Table(Of DRUG_NORYORMOR_PROOF)
		Get
			Return Me.GetTable(Of DRUG_NORYORMOR_PROOF)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ADMIN_BUTTONs() As System.Data.Linq.Table(Of MAS_ADMIN_BUTTON)
		Get
			Return Me.GetTable(Of MAS_ADMIN_BUTTON)
		End Get
	End Property
	
	Public ReadOnly Property drdrgtypes() As System.Data.Linq.Table(Of drdrgtype)
		Get
			Return Me.GetTable(Of drdrgtype)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_REGISTRATION_PROP_AND_DETAILs() As System.Data.Linq.Table(Of DRUG_REGISTRATION_PROP_AND_DETAIL)
		Get
			Return Me.GetTable(Of DRUG_REGISTRATION_PROP_AND_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_PROPERTIES_AND_DETAILs() As System.Data.Linq.Table(Of DRRGT_PROPERTIES_AND_DETAIL)
		Get
			Return Me.GetTable(Of DRRGT_PROPERTIES_AND_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TABEAN_TEMPLATEs() As System.Data.Linq.Table(Of MAS_TABEAN_TEMPLATE)
		Get
			Return Me.GetTable(Of MAS_TABEAN_TEMPLATE)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_DRUG_GROUPs() As System.Data.Linq.Table(Of DRRGT_DRUG_GROUP)
		Get
			Return Me.GetTable(Of DRRGT_DRUG_GROUP)
		End Get
	End Property
	
	Public ReadOnly Property ATC_DRUGs() As System.Data.Linq.Table(Of ATC_DRUG)
		Get
			Return Me.GetTable(Of ATC_DRUG)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_PRODUCER_OTHERs() As System.Data.Linq.Table(Of DRRGT_PRODUCER_OTHER)
		Get
			Return Me.GetTable(Of DRRGT_PRODUCER_OTHER)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_PRODUCER_INs() As System.Data.Linq.Table(Of DRRGT_PRODUCER_IN)
		Get
			Return Me.GetTable(Of DRRGT_PRODUCER_IN)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_CONDITIONs() As System.Data.Linq.Table(Of DRRGT_CONDITION)
		Get
			Return Me.GetTable(Of DRRGT_CONDITION)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_REGISTRATION_COLORs() As System.Data.Linq.Table(Of DRUG_REGISTRATION_COLOR)
		Get
			Return Me.GetTable(Of DRUG_REGISTRATION_COLOR)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_PRODUCERs() As System.Data.Linq.Table(Of DRRGT_PRODUCER)
		Get
			Return Me.GetTable(Of DRRGT_PRODUCER)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_REGISTRATION_PRODUCER_INs() As System.Data.Linq.Table(Of DRUG_REGISTRATION_PRODUCER_IN)
		Get
			Return Me.GetTable(Of DRUG_REGISTRATION_PRODUCER_IN)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_REGISTRATION_PRODUCERs() As System.Data.Linq.Table(Of DRUG_REGISTRATION_PRODUCER)
		Get
			Return Me.GetTable(Of DRUG_REGISTRATION_PRODUCER)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_REGISTRATION_DRUG_USEs() As System.Data.Linq.Table(Of DRUG_REGISTRATION_DRUG_USE)
		Get
			Return Me.GetTable(Of DRUG_REGISTRATION_DRUG_USE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUG_PACKAGINGs() As System.Data.Linq.Table(Of MAS_DRUG_PACKAGING)
		Get
			Return Me.GetTable(Of MAS_DRUG_PACKAGING)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_UNITs() As System.Data.Linq.Table(Of DRUG_UNIT)
		Get
			Return Me.GetTable(Of DRUG_UNIT)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_ATC_DETAILs() As System.Data.Linq.Table(Of DRRQT_ATC_DETAIL)
		Get
			Return Me.GetTable(Of DRRQT_ATC_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_PROPERTIES_AND_DETAILs() As System.Data.Linq.Table(Of DRRQT_PROPERTIES_AND_DETAIL)
		Get
			Return Me.GetTable(Of DRRQT_PROPERTIES_AND_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_CONDITIONs() As System.Data.Linq.Table(Of DRRQT_CONDITION)
		Get
			Return Me.GetTable(Of DRRQT_CONDITION)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_PRODUCERs() As System.Data.Linq.Table(Of DRRQT_PRODUCER)
		Get
			Return Me.GetTable(Of DRRQT_PRODUCER)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_PROPERTies() As System.Data.Linq.Table(Of DRRQT_PROPERTy)
		Get
			Return Me.GetTable(Of DRRQT_PROPERTy)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_PRODUCER_OTHERs() As System.Data.Linq.Table(Of DRRQT_PRODUCER_OTHER)
		Get
			Return Me.GetTable(Of DRRQT_PRODUCER_OTHER)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_DRUG_PER_UNITs() As System.Data.Linq.Table(Of DRRGT_DRUG_PER_UNIT)
		Get
			Return Me.GetTable(Of DRRGT_DRUG_PER_UNIT)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_DRUG_PER_UNITs() As System.Data.Linq.Table(Of DRRQT_DRUG_PER_UNIT)
		Get
			Return Me.GetTable(Of DRRQT_DRUG_PER_UNIT)
		End Get
	End Property
	
	Public ReadOnly Property lcnrequests() As System.Data.Linq.Table(Of lcnrequest)
		Get
			Return Me.GetTable(Of lcnrequest)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_DTBs() As System.Data.Linq.Table(Of DRRGT_DTB)
		Get
			Return Me.GetTable(Of DRRGT_DTB)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_DTBs() As System.Data.Linq.Table(Of DRRQT_DTB)
		Get
			Return Me.GetTable(Of DRRQT_DTB)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_NAME_DRUG_EXPORTs() As System.Data.Linq.Table(Of DRRGT_NAME_DRUG_EXPORT)
		Get
			Return Me.GetTable(Of DRRGT_NAME_DRUG_EXPORT)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_NAME_DRUG_EXPORTs() As System.Data.Linq.Table(Of DRRQT_NAME_DRUG_EXPORT)
		Get
			Return Me.GetTable(Of DRRQT_NAME_DRUG_EXPORT)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_KEEP_DRUGs() As System.Data.Linq.Table(Of DRRQT_KEEP_DRUG)
		Get
			Return Me.GetTable(Of DRRQT_KEEP_DRUG)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_REFERs() As System.Data.Linq.Table(Of DRRQT_REFER)
		Get
			Return Me.GetTable(Of DRRQT_REFER)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_REFERs() As System.Data.Linq.Table(Of DRRGT_REFER)
		Get
			Return Me.GetTable(Of DRRGT_REFER)
		End Get
	End Property
	
	Public ReadOnly Property dramlsubtps() As System.Data.Linq.Table(Of dramlsubtp)
		Get
			Return Me.GetTable(Of dramlsubtp)
		End Get
	End Property
	
	Public ReadOnly Property MAS_NOTICEs() As System.Data.Linq.Table(Of MAS_NOTICE)
		Get
			Return Me.GetTable(Of MAS_NOTICE)
		End Get
	End Property
	
	Public ReadOnly Property drsunits() As System.Data.Linq.Table(Of drsunit)
		Get
			Return Me.GetTable(Of drsunit)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_PRODUCER_INs() As System.Data.Linq.Table(Of DRRQT_PRODUCER_IN)
		Get
			Return Me.GetTable(Of DRRQT_PRODUCER_IN)
		End Get
	End Property
	
	Public ReadOnly Property REGIST_FILE_ATTACHes() As System.Data.Linq.Table(Of REGIST_FILE_ATTACH)
		Get
			Return Me.GetTable(Of REGIST_FILE_ATTACH)
		End Get
	End Property
	
	Public ReadOnly Property drramldrgs() As System.Data.Linq.Table(Of drramldrg)
		Get
			Return Me.GetTable(Of drramldrg)
		End Get
	End Property
	
	Public ReadOnly Property LCN_EXTEND_LITE_PAYs() As System.Data.Linq.Table(Of LCN_EXTEND_LITE_PAY)
		Get
			Return Me.GetTable(Of LCN_EXTEND_LITE_PAY)
		End Get
	End Property
	
	Public ReadOnly Property drramluses() As System.Data.Linq.Table(Of drramluse)
		Get
			Return Me.GetTable(Of drramluse)
		End Get
	End Property
	
	Public ReadOnly Property dramluses() As System.Data.Linq.Table(Of dramluse)
		Get
			Return Me.GetTable(Of dramluse)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_DTL_TEXTs() As System.Data.Linq.Table(Of DRRQT_DTL_TEXT)
		Get
			Return Me.GetTable(Of DRRQT_DTL_TEXT)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_DTL_TEXTs() As System.Data.Linq.Table(Of DRRGT_DTL_TEXT)
		Get
			Return Me.GetTable(Of DRRGT_DTL_TEXT)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_PHR_CANCELs() As System.Data.Linq.Table(Of DALCN_PHR_CANCEL)
		Get
			Return Me.GetTable(Of DALCN_PHR_CANCEL)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_PHR_CANCEL_DETAILs() As System.Data.Linq.Table(Of DALCN_PHR_CANCEL_DETAIL)
		Get
			Return Me.GetTable(Of DALCN_PHR_CANCEL_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_REGISTRATION_KEEP_DRUGs() As System.Data.Linq.Table(Of DRUG_REGISTRATION_KEEP_DRUG)
		Get
			Return Me.GetTable(Of DRUG_REGISTRATION_KEEP_DRUG)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_PAY_STEPs() As System.Data.Linq.Table(Of DRRQT_PAY_STEP)
		Get
			Return Me.GetTable(Of DRRQT_PAY_STEP)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_REGISTRATION_PACKAGE_DETAILs() As System.Data.Linq.Table(Of DRUG_REGISTRATION_PACKAGE_DETAIL)
		Get
			Return Me.GetTable(Of DRUG_REGISTRATION_PACKAGE_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TYPE_REQUEST_AMOUNTs() As System.Data.Linq.Table(Of MAS_TYPE_REQUEST_AMOUNT)
		Get
			Return Me.GetTable(Of MAS_TYPE_REQUEST_AMOUNT)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACKING_LOGs() As System.Data.Linq.Table(Of E_TRACKING_LOG)
		Get
			Return Me.GetTable(Of E_TRACKING_LOG)
		End Get
	End Property
	
	Public ReadOnly Property LOG_EDIT_MIGRATEs() As System.Data.Linq.Table(Of LOG_EDIT_MIGRATE)
		Get
			Return Me.GetTable(Of LOG_EDIT_MIGRATE)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_PACKAGE_DETAILs() As System.Data.Linq.Table(Of DRRQT_PACKAGE_DETAIL)
		Get
			Return Me.GetTable(Of DRRQT_PACKAGE_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_PACKAGE_DETAILs() As System.Data.Linq.Table(Of DRRGT_PACKAGE_DETAIL)
		Get
			Return Me.GetTable(Of DRRGT_PACKAGE_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_COLORs() As System.Data.Linq.Table(Of DRRGT_COLOR)
		Get
			Return Me.GetTable(Of DRRGT_COLOR)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_COLORs() As System.Data.Linq.Table(Of DRRQT_COLOR)
		Get
			Return Me.GetTable(Of DRRQT_COLOR)
		End Get
	End Property
	
	Public ReadOnly Property MAS_BIO_UNITs() As System.Data.Linq.Table(Of MAS_BIO_UNIT)
		Get
			Return Me.GetTable(Of MAS_BIO_UNIT)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_NO_USEs() As System.Data.Linq.Table(Of DRRGT_NO_USE)
		Get
			Return Me.GetTable(Of DRRGT_NO_USE)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_NO_USEs() As System.Data.Linq.Table(Of DRRQT_NO_USE)
		Get
			Return Me.GetTable(Of DRRQT_NO_USE)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_REGISTRATION_ANIMALs() As System.Data.Linq.Table(Of DRUG_REGISTRATION_ANIMAL)
		Get
			Return Me.GetTable(Of DRUG_REGISTRATION_ANIMAL)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_REGISTRATION_ANIMAL_SUBs() As System.Data.Linq.Table(Of DRUG_REGISTRATION_ANIMAL_SUB)
		Get
			Return Me.GetTable(Of DRUG_REGISTRATION_ANIMAL_SUB)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACKING_HEAD_CURRENT_STATUS() As System.Data.Linq.Table(Of E_TRACKING_HEAD_CURRENT_STATUS)
		Get
			Return Me.GetTable(Of E_TRACKING_HEAD_CURRENT_STATUS)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACKING_STOP_TIMEs() As System.Data.Linq.Table(Of E_TRACKING_STOP_TIME)
		Get
			Return Me.GetTable(Of E_TRACKING_STOP_TIME)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_LABELs() As System.Data.Linq.Table(Of DRRGT_LABEL)
		Get
			Return Me.GetTable(Of DRRGT_LABEL)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_LABELs() As System.Data.Linq.Table(Of DRRQT_LABEL)
		Get
			Return Me.GetTable(Of DRRQT_LABEL)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_EDIT_INDEXes() As System.Data.Linq.Table(Of DRRGT_EDIT_INDEX)
		Get
			Return Me.GetTable(Of DRRGT_EDIT_INDEX)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_EDIT_REQUEST_COLORs() As System.Data.Linq.Table(Of DRRGT_EDIT_REQUEST_COLOR)
		Get
			Return Me.GetTable(Of DRRGT_EDIT_REQUEST_COLOR)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_PROJECT_DRUG_LISTs() As System.Data.Linq.Table(Of DRUG_PROJECT_DRUG_LIST)
		Get
			Return Me.GetTable(Of DRUG_PROJECT_DRUG_LIST)
		End Get
	End Property
	
	Public ReadOnly Property XML_NAMEs() As System.Data.Linq.Table(Of XML_NAME)
		Get
			Return Me.GetTable(Of XML_NAME)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_EDIT_REQUEST_CAs() As System.Data.Linq.Table(Of DRRGT_EDIT_REQUEST_CA)
		Get
			Return Me.GetTable(Of DRRGT_EDIT_REQUEST_CA)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_APPOINTMENTs() As System.Data.Linq.Table(Of DRRGT_APPOINTMENT)
		Get
			Return Me.GetTable(Of DRRGT_APPOINTMENT)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_EDIT_REQUEST_PACKAGE_DETAILs() As System.Data.Linq.Table(Of DRRGT_EDIT_REQUEST_PACKAGE_DETAIL)
		Get
			Return Me.GetTable(Of DRRGT_EDIT_REQUEST_PACKAGE_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property MAS_DRUG_SHAPEs() As System.Data.Linq.Table(Of MAS_DRUG_SHAPE)
		Get
			Return Me.GetTable(Of MAS_DRUG_SHAPE)
		End Get
	End Property
	
	Public ReadOnly Property dactgs() As System.Data.Linq.Table(Of dactg)
		Get
			Return Me.GetTable(Of dactg)
		End Get
	End Property
	
	Public ReadOnly Property drclasses() As System.Data.Linq.Table(Of drclass)
		Get
			Return Me.GetTable(Of drclass)
		End Get
	End Property
	
	Public ReadOnly Property drdosages() As System.Data.Linq.Table(Of drdosage)
		Get
			Return Me.GetTable(Of drdosage)
		End Get
	End Property
	
	Public ReadOnly Property drkdofdrgs() As System.Data.Linq.Table(Of drkdofdrg)
		Get
			Return Me.GetTable(Of drkdofdrg)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_KEEP_DRUGs() As System.Data.Linq.Table(Of DRRGT_KEEP_DRUG)
		Get
			Return Me.GetTable(Of DRRGT_KEEP_DRUG)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_SUBSTITUTEs() As System.Data.Linq.Table(Of DRRGT_SUBSTITUTE)
		Get
			Return Me.GetTable(Of DRRGT_SUBSTITUTE)
		End Get
	End Property
	
	Public ReadOnly Property MAS_STAFF_POSITIONs() As System.Data.Linq.Table(Of MAS_STAFF_POSITION)
		Get
			Return Me.GetTable(Of MAS_STAFF_POSITION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_SUBSTITUTE_TEMPLATEs() As System.Data.Linq.Table(Of MAS_SUBSTITUTE_TEMPLATE)
		Get
			Return Me.GetTable(Of MAS_SUBSTITUTE_TEMPLATE)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_REGISTRATIONs() As System.Data.Linq.Table(Of DRUG_REGISTRATION)
		Get
			Return Me.GetTable(Of DRUG_REGISTRATION)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_PIs() As System.Data.Linq.Table(Of DRRGT_PI)
		Get
			Return Me.GetTable(Of DRRGT_PI)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_PILs() As System.Data.Linq.Table(Of DRRGT_PIL)
		Get
			Return Me.GetTable(Of DRRGT_PIL)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_SPCs() As System.Data.Linq.Table(Of DRRGT_SPC)
		Get
			Return Me.GetTable(Of DRRGT_SPC)
		End Get
	End Property
	
	Public ReadOnly Property drfrgnaddrs() As System.Data.Linq.Table(Of drfrgnaddr)
		Get
			Return Me.GetTable(Of drfrgnaddr)
		End Get
	End Property
	
	Public ReadOnly Property syspdcfrgns() As System.Data.Linq.Table(Of syspdcfrgn)
		Get
			Return Me.GetTable(Of syspdcfrgn)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_EACHes() As System.Data.Linq.Table(Of DRRGT_EACH)
		Get
			Return Me.GetTable(Of DRRGT_EACH)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_EACHes() As System.Data.Linq.Table(Of DRRQT_EACH)
		Get
			Return Me.GetTable(Of DRRQT_EACH)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_APPOINTMENTs() As System.Data.Linq.Table(Of DRRQT_APPOINTMENT)
		Get
			Return Me.GetTable(Of DRRQT_APPOINTMENT)
		End Get
	End Property
	
	Public ReadOnly Property LOG_DH_ERRORs() As System.Data.Linq.Table(Of LOG_DH_ERROR)
		Get
			Return Me.GetTable(Of LOG_DH_ERROR)
		End Get
	End Property
	
	Public ReadOnly Property LOG_EDIT_TABEANs() As System.Data.Linq.Table(Of LOG_EDIT_TABEAN)
		Get
			Return Me.GetTable(Of LOG_EDIT_TABEAN)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_EQTOs() As System.Data.Linq.Table(Of DRRGT_EQTO)
		Get
			Return Me.GetTable(Of DRRGT_EQTO)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_EQTOs() As System.Data.Linq.Table(Of DRRQT_EQTO)
		Get
			Return Me.GetTable(Of DRRQT_EQTO)
		End Get
	End Property
	
	Public ReadOnly Property dramldrgs() As System.Data.Linq.Table(Of dramldrg)
		Get
			Return Me.GetTable(Of dramldrg)
		End Get
	End Property
	
	Public ReadOnly Property LOG_A_ERRORs() As System.Data.Linq.Table(Of LOG_A_ERROR)
		Get
			Return Me.GetTable(Of LOG_A_ERROR)
		End Get
	End Property
	
	Public ReadOnly Property case1411_s() As System.Data.Linq.Table(Of case1411_)
		Get
			Return Me.GetTable(Of case1411_)
		End Get
	End Property
	
	Public ReadOnly Property dalcns() As System.Data.Linq.Table(Of dalcn)
		Get
			Return Me.GetTable(Of dalcn)
		End Get
	End Property
	
	Public ReadOnly Property drrqts() As System.Data.Linq.Table(Of drrqt)
		Get
			Return Me.GetTable(Of drrqt)
		End Get
	End Property
	
	Public ReadOnly Property drrgts() As System.Data.Linq.Table(Of drrgt)
		Get
			Return Me.GetTable(Of drrgt)
		End Get
	End Property
	
	Public ReadOnly Property _15_TAMRAP_ATCs() As System.Data.Linq.Table(Of _15_TAMRAP_ATC)
		Get
			Return Me.GetTable(Of _15_TAMRAP_ATC)
		End Get
	End Property
	
	Public ReadOnly Property _15_TAMRAP_DTLs() As System.Data.Linq.Table(Of _15_TAMRAP_DTL)
		Get
			Return Me.GetTable(Of _15_TAMRAP_DTL)
		End Get
	End Property
	
	Public ReadOnly Property _15_TAMRAP_EACHes() As System.Data.Linq.Table(Of _15_TAMRAP_EACH)
		Get
			Return Me.GetTable(Of _15_TAMRAP_EACH)
		End Get
	End Property
	
	Public ReadOnly Property _15_TAMRAP_PACKSIZEs() As System.Data.Linq.Table(Of _15_TAMRAP_PACKSIZE)
		Get
			Return Me.GetTable(Of _15_TAMRAP_PACKSIZE)
		End Get
	End Property
	
	Public ReadOnly Property LOG_MULTITABs() As System.Data.Linq.Table(Of LOG_MULTITAB)
		Get
			Return Me.GetTable(Of LOG_MULTITAB)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_REGISTRATION_EQTOs() As System.Data.Linq.Table(Of DRUG_REGISTRATION_EQTO)
		Get
			Return Me.GetTable(Of DRUG_REGISTRATION_EQTO)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACKING_RQT_LOGs() As System.Data.Linq.Table(Of E_TRACKING_RQT_LOG)
		Get
			Return Me.GetTable(Of E_TRACKING_RQT_LOG)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACKING_RQT_STOP_TIMEs() As System.Data.Linq.Table(Of E_TRACKING_RQT_STOP_TIME)
		Get
			Return Me.GetTable(Of E_TRACKING_RQT_STOP_TIME)
		End Get
	End Property
	
	Public ReadOnly Property E_TRACKING_STATUS_RQT_ALLs() As System.Data.Linq.Table(Of E_TRACKING_STATUS_RQT_ALL)
		Get
			Return Me.GetTable(Of E_TRACKING_STATUS_RQT_ALL)
		End Get
	End Property
	
	Public ReadOnly Property LCN_EXTEND_LITE_OPENs() As System.Data.Linq.Table(Of LCN_EXTEND_LITE_OPEN)
		Get
			Return Me.GetTable(Of LCN_EXTEND_LITE_OPEN)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_DETAIL_CAs() As System.Data.Linq.Table(Of DRRGT_DETAIL_CA)
		Get
			Return Me.GetTable(Of DRRGT_DETAIL_CA)
		End Get
	End Property
	
	Public ReadOnly Property DRRQT_DETAIL_CAs() As System.Data.Linq.Table(Of DRRQT_DETAIL_CA)
		Get
			Return Me.GetTable(Of DRRQT_DETAIL_CA)
		End Get
	End Property
	
	Public ReadOnly Property _15_TAMRAP_TEMPLATEs() As System.Data.Linq.Table(Of _15_TAMRAP_TEMPLATE)
		Get
			Return Me.GetTable(Of _15_TAMRAP_TEMPLATE)
		End Get
	End Property
	
	Public ReadOnly Property _15_TAMRAP_EQTOs() As System.Data.Linq.Table(Of _15_TAMRAP_EQTO)
		Get
			Return Me.GetTable(Of _15_TAMRAP_EQTO)
		End Get
	End Property
	
	Public ReadOnly Property genno_temps() As System.Data.Linq.Table(Of genno_temp)
		Get
			Return Me.GetTable(Of genno_temp)
		End Get
	End Property
	
	Public ReadOnly Property _15_TAMRAP_IOWA_DDLs() As System.Data.Linq.Table(Of _15_TAMRAP_IOWA_DDL)
		Get
			Return Me.GetTable(Of _15_TAMRAP_IOWA_DDL)
		End Get
	End Property
	
	Public ReadOnly Property _15_TAMRAP_EQTO_DDLs() As System.Data.Linq.Table(Of _15_TAMRAP_EQTO_DDL)
		Get
			Return Me.GetTable(Of _15_TAMRAP_EQTO_DDL)
		End Get
	End Property
	
	Public ReadOnly Property _15_TAMRAP_GENERALs() As System.Data.Linq.Table(Of _15_TAMRAP_GENERAL)
		Get
			Return Me.GetTable(Of _15_TAMRAP_GENERAL)
		End Get
	End Property
	
	Public ReadOnly Property _15_TAMRAP_PACK_DETAILs() As System.Data.Linq.Table(Of _15_TAMRAP_PACK_DETAIL)
		Get
			Return Me.GetTable(Of _15_TAMRAP_PACK_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property _15_TAMRAP_CONDITIONs() As System.Data.Linq.Table(Of _15_TAMRAP_CONDITION)
		Get
			Return Me.GetTable(Of _15_TAMRAP_CONDITION)
		End Get
	End Property
	
	Public ReadOnly Property MAS_TAMRAP_NAMEs() As System.Data.Linq.Table(Of MAS_TAMRAP_NAME)
		Get
			Return Me.GetTable(Of MAS_TAMRAP_NAME)
		End Get
	End Property
	
	Public ReadOnly Property LOG_EDIT_PRODUCT_ESUB_BCs() As System.Data.Linq.Table(Of LOG_EDIT_PRODUCT_ESUB_BC)
		Get
			Return Me.GetTable(Of LOG_EDIT_PRODUCT_ESUB_BC)
		End Get
	End Property
	
	Public ReadOnly Property A_TESTs() As System.Data.Linq.Table(Of A_TEST)
		Get
			Return Me.GetTable(Of A_TEST)
		End Get
	End Property
	
	Public ReadOnly Property TEMP_NCT_DALCNs() As System.Data.Linq.Table(Of TEMP_NCT_DALCN)
		Get
			Return Me.GetTable(Of TEMP_NCT_DALCN)
		End Get
	End Property
	
	Public ReadOnly Property DDL_VORJORs() As System.Data.Linq.Table(Of DDL_VORJOR)
		Get
			Return Me.GetTable(Of DDL_VORJOR)
		End Get
	End Property
	
	Public ReadOnly Property MAS_RECEIVER_EDIT_RQTs() As System.Data.Linq.Table(Of MAS_RECEIVER_EDIT_RQT)
		Get
			Return Me.GetTable(Of MAS_RECEIVER_EDIT_RQT)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_PHRs() As System.Data.Linq.Table(Of DALCN_PHR)
		Get
			Return Me.GetTable(Of DALCN_PHR)
		End Get
	End Property
	
	Public ReadOnly Property CER_EXTEND_CASCHEMICALs() As System.Data.Linq.Table(Of CER_EXTEND_CASCHEMICAL)
		Get
			Return Me.GetTable(Of CER_EXTEND_CASCHEMICAL)
		End Get
	End Property
	
	Public ReadOnly Property CER_EXTEND_MANUFACTUREs() As System.Data.Linq.Table(Of CER_EXTEND_MANUFACTURE)
		Get
			Return Me.GetTable(Of CER_EXTEND_MANUFACTURE)
		End Get
	End Property
	
	Public ReadOnly Property CER_EXTEND_MANUFACTURE_RQTs() As System.Data.Linq.Table(Of CER_EXTEND_MANUFACTURE_RQT)
		Get
			Return Me.GetTable(Of CER_EXTEND_MANUFACTURE_RQT)
		End Get
	End Property
	
	Public ReadOnly Property CER_EXTEND_CASCHEMICAL_RQTs() As System.Data.Linq.Table(Of CER_EXTEND_CASCHEMICAL_RQT)
		Get
			Return Me.GetTable(Of CER_EXTEND_CASCHEMICAL_RQT)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_ADDRs() As System.Data.Linq.Table(Of DRRGT_ADDR)
		Get
			Return Me.GetTable(Of DRRGT_ADDR)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_CONSIDER_REQUESTs() As System.Data.Linq.Table(Of DRUG_CONSIDER_REQUEST)
		Get
			Return Me.GetTable(Of DRUG_CONSIDER_REQUEST)
		End Get
	End Property
	
	Public ReadOnly Property MAS_MENU_AUTO2s() As System.Data.Linq.Table(Of MAS_MENU_AUTO2)
		Get
			Return Me.GetTable(Of MAS_MENU_AUTO2)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_EDIT_REQUESTs() As System.Data.Linq.Table(Of DALCN_EDIT_REQUEST)
		Get
			Return Me.GetTable(Of DALCN_EDIT_REQUEST)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_REGISTRATION_EACHes() As System.Data.Linq.Table(Of DRUG_REGISTRATION_EACH)
		Get
			Return Me.GetTable(Of DRUG_REGISTRATION_EACH)
		End Get
	End Property
	
	Public ReadOnly Property LCN_EXTEND_LITEs() As System.Data.Linq.Table(Of LCN_EXTEND_LITE)
		Get
			Return Me.GetTable(Of LCN_EXTEND_LITE)
		End Get
	End Property
	
	Public ReadOnly Property LCN_EXTEND_LITE_GPPs() As System.Data.Linq.Table(Of LCN_EXTEND_LITE_GPP)
		Get
			Return Me.GetTable(Of LCN_EXTEND_LITE_GPP)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_NCT_SUBSTITUTEs() As System.Data.Linq.Table(Of DALCN_NCT_SUBSTITUTE)
		Get
			Return Me.GetTable(Of DALCN_NCT_SUBSTITUTE)
		End Get
	End Property
	
	Public ReadOnly Property TRANSACTION_UPLOADs() As System.Data.Linq.Table(Of TRANSACTION_UPLOAD)
		Get
			Return Me.GetTable(Of TRANSACTION_UPLOAD)
		End Get
	End Property
	
	Public ReadOnly Property dh15rqts() As System.Data.Linq.Table(Of dh15rqt)
		Get
			Return Me.GetTable(Of dh15rqt)
		End Get
	End Property
	
	Public ReadOnly Property CERs() As System.Data.Linq.Table(Of CER)
		Get
			Return Me.GetTable(Of CER)
		End Get
	End Property
	
	Public ReadOnly Property MAS_NYMSTAFF_PROCESSes() As System.Data.Linq.Table(Of MAS_NYMSTAFF_PROCESS)
		Get
			Return Me.GetTable(Of MAS_NYMSTAFF_PROCESS)
		End Get
	End Property
	
	Public ReadOnly Property MAS_STAFF_OFFERs() As System.Data.Linq.Table(Of MAS_STAFF_OFFER)
		Get
			Return Me.GetTable(Of MAS_STAFF_OFFER)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_IMPORT_DRUG_GROUP_DETAIL2s() As System.Data.Linq.Table(Of DALCN_IMPORT_DRUG_GROUP_DETAIL2)
		Get
			Return Me.GetTable(Of DALCN_IMPORT_DRUG_GROUP_DETAIL2)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_IMPORT_DRUG_GROUP_DETAIL1s() As System.Data.Linq.Table(Of DALCN_IMPORT_DRUG_GROUP_DETAIL1)
		Get
			Return Me.GetTable(Of DALCN_IMPORT_DRUG_GROUP_DETAIL1)
		End Get
	End Property
	
	Public ReadOnly Property MAS_ORG_NAME_NYMs() As System.Data.Linq.Table(Of MAS_ORG_NAME_NYM)
		Get
			Return Me.GetTable(Of MAS_ORG_NAME_NYM)
		End Get
	End Property
	
	Public ReadOnly Property DALCN_LOCATION_ADDRESSes() As System.Data.Linq.Table(Of DALCN_LOCATION_ADDRESS)
		Get
			Return Me.GetTable(Of DALCN_LOCATION_ADDRESS)
		End Get
	End Property
	
	Public ReadOnly Property driowa_temps() As System.Data.Linq.Table(Of driowa_temp)
		Get
			Return Me.GetTable(Of driowa_temp)
		End Get
	End Property
	
	Public ReadOnly Property DRUG_REGISTRATION_DETAIL_CAs() As System.Data.Linq.Table(Of DRUG_REGISTRATION_DETAIL_CA)
		Get
			Return Me.GetTable(Of DRUG_REGISTRATION_DETAIL_CA)
		End Get
	End Property
	
	Public ReadOnly Property CHEMICAL_REQUESTs() As System.Data.Linq.Table(Of CHEMICAL_REQUEST)
		Get
			Return Me.GetTable(Of CHEMICAL_REQUEST)
		End Get
	End Property
	
	Public ReadOnly Property CHEMICAL_REQUEST1s() As System.Data.Linq.Table(Of CHEMICAL_REQUEST1)
		Get
			Return Me.GetTable(Of CHEMICAL_REQUEST1)
		End Get
	End Property
	
	Public ReadOnly Property MAS_CHEMICALs() As System.Data.Linq.Table(Of MAS_CHEMICAL)
		Get
			Return Me.GetTable(Of MAS_CHEMICAL)
		End Get
	End Property
	
	Public ReadOnly Property LOG_STATUS_Ds() As System.Data.Linq.Table(Of LOG_STATUS_D)
		Get
			Return Me.GetTable(Of LOG_STATUS_D)
		End Get
	End Property
	
	Public ReadOnly Property driowas() As System.Data.Linq.Table(Of driowa)
		Get
			Return Me.GetTable(Of driowa)
		End Get
	End Property
	
	Public ReadOnly Property MAS_STATUS() As System.Data.Linq.Table(Of MAS_STATUS)
		Get
			Return Me.GetTable(Of MAS_STATUS)
		End Get
	End Property
	
	Public ReadOnly Property CHANGE_NAME_REQUEST_DETAILs() As System.Data.Linq.Table(Of CHANGE_NAME_REQUEST_DETAIL)
		Get
			Return Me.GetTable(Of CHANGE_NAME_REQUEST_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property CHANGE_NAME_REQUESTs() As System.Data.Linq.Table(Of CHANGE_NAME_REQUEST)
		Get
			Return Me.GetTable(Of CHANGE_NAME_REQUEST)
		End Get
	End Property
	
	Public ReadOnly Property drsamps() As System.Data.Linq.Table(Of drsamp)
		Get
			Return Me.GetTable(Of drsamp)
		End Get
	End Property
	
	Public ReadOnly Property LOG_CHANGE_STATUS_MNs() As System.Data.Linq.Table(Of LOG_CHANGE_STATUS_MN)
		Get
			Return Me.GetTable(Of LOG_CHANGE_STATUS_MN)
		End Get
	End Property
	
	Public ReadOnly Property DRSAMP_EDIT_REQUESTs() As System.Data.Linq.Table(Of DRSAMP_EDIT_REQUEST)
		Get
			Return Me.GetTable(Of DRSAMP_EDIT_REQUEST)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_EDIT_APPOINTMENTs() As System.Data.Linq.Table(Of DRRGT_EDIT_APPOINTMENT)
		Get
			Return Me.GetTable(Of DRRGT_EDIT_APPOINTMENT)
		End Get
	End Property
	
	Public ReadOnly Property DRRGT_EDIT_REQUESTs() As System.Data.Linq.Table(Of DRRGT_EDIT_REQUEST)
		Get
			Return Me.GetTable(Of DRRGT_EDIT_REQUEST)
		End Get
	End Property
	
	Public ReadOnly Property STAFF_ASSIGNING_WORKs() As System.Data.Linq.Table(Of STAFF_ASSIGNING_WORK)
		Get
			Return Me.GetTable(Of STAFF_ASSIGNING_WORK)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RECIVE")>  _
Partial Public Class RECIVE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer = CType(Nothing, Integer)
	
	Private _RCVNO As String
	
	Private _CITIZ_NO As String
	
	Private _STATUS As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _YEAR As System.Nullable(Of Integer)
	
	Private _FEE_NO As String
	
	Private _LCNSID As System.Nullable(Of Integer)
	
	Private _LCNNO As System.Nullable(Of Integer)
	
	Private _LCTCD As System.Nullable(Of Integer)
	
	Private _RGNO As System.Nullable(Of Integer)
	
	Private _FEEABBR As System.Nullable(Of Integer)
	
	Private _AMT As System.Nullable(Of Decimal)
	
	Private _TYPE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnCITIZ_NOChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZ_NOChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnFEE_NOChanging(value As String)
    End Sub
    Partial Private Sub OnFEE_NOChanged()
    End Sub
    Partial Private Sub OnLCNSIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCNSIDChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnLCTCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCTCDChanged()
    End Sub
    Partial Private Sub OnRGNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRGNOChanged()
    End Sub
    Partial Private Sub OnFEEABBRChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFEEABBRChanged()
    End Sub
    Partial Private Sub OnAMTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAMTChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public ReadOnly Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="NVarChar(50)")>  _
	Public Property RCVNO() As String
		Get
			Return Me._RCVNO
		End Get
		Set
			If (String.Equals(Me._RCVNO, value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZ_NO", DbType:="NVarChar(50)")>  _
	Public Property CITIZ_NO() As String
		Get
			Return Me._CITIZ_NO
		End Get
		Set
			If (String.Equals(Me._CITIZ_NO, value) = false) Then
				Me.OnCITIZ_NOChanging(value)
				Me.SendPropertyChanging
				Me._CITIZ_NO = value
				Me.SendPropertyChanged("CITIZ_NO")
				Me.OnCITIZ_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="Int")>  _
	Public Property STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS
		End Get
		Set
			If (Me._STATUS.Equals(value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="Int")>  _
	Public Property YEAR() As System.Nullable(Of Integer)
		Get
			Return Me._YEAR
		End Get
		Set
			If (Me._YEAR.Equals(value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FEE_NO", DbType:="NVarChar(50)")>  _
	Public Property FEE_NO() As String
		Get
			Return Me._FEE_NO
		End Get
		Set
			If (String.Equals(Me._FEE_NO, value) = false) Then
				Me.OnFEE_NOChanging(value)
				Me.SendPropertyChanging
				Me._FEE_NO = value
				Me.SendPropertyChanged("FEE_NO")
				Me.OnFEE_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNSID", DbType:="Int")>  _
	Public Property LCNSID() As System.Nullable(Of Integer)
		Get
			Return Me._LCNSID
		End Get
		Set
			If (Me._LCNSID.Equals(value) = false) Then
				Me.OnLCNSIDChanging(value)
				Me.SendPropertyChanging
				Me._LCNSID = value
				Me.SendPropertyChanged("LCNSID")
				Me.OnLCNSIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="Int")>  _
	Public Property LCNNO() As System.Nullable(Of Integer)
		Get
			Return Me._LCNNO
		End Get
		Set
			If (Me._LCNNO.Equals(value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCTCD", DbType:="Int")>  _
	Public Property LCTCD() As System.Nullable(Of Integer)
		Get
			Return Me._LCTCD
		End Get
		Set
			If (Me._LCTCD.Equals(value) = false) Then
				Me.OnLCTCDChanging(value)
				Me.SendPropertyChanging
				Me._LCTCD = value
				Me.SendPropertyChanged("LCTCD")
				Me.OnLCTCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGNO", DbType:="Int")>  _
	Public Property RGNO() As System.Nullable(Of Integer)
		Get
			Return Me._RGNO
		End Get
		Set
			If (Me._RGNO.Equals(value) = false) Then
				Me.OnRGNOChanging(value)
				Me.SendPropertyChanging
				Me._RGNO = value
				Me.SendPropertyChanged("RGNO")
				Me.OnRGNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FEEABBR", DbType:="Int")>  _
	Public Property FEEABBR() As System.Nullable(Of Integer)
		Get
			Return Me._FEEABBR
		End Get
		Set
			If (Me._FEEABBR.Equals(value) = false) Then
				Me.OnFEEABBRChanging(value)
				Me.SendPropertyChanging
				Me._FEEABBR = value
				Me.SendPropertyChanged("FEEABBR")
				Me.OnFEEABBRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMT", DbType:="Decimal(12,2)")>  _
	Public Property AMT() As System.Nullable(Of Decimal)
		Get
			Return Me._AMT
		End Get
		Set
			If (Me._AMT.Equals(value) = false) Then
				Me.OnAMTChanging(value)
				Me.SendPropertyChanging
				Me._AMT = value
				Me.SendPropertyChanged("AMT")
				Me.OnAMTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="Int")>  _
	Public Property TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE
		End Get
		Set
			If (Me._TYPE.Equals(value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TEMPLATE")>  _
Partial Public Class TEMPLATE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer = CType(Nothing, Integer)
	
	Private _TEMPLATE_NO As System.Nullable(Of Integer)
	
	Private _WEIDTH_MIN As System.Nullable(Of Integer)
	
	Private _WEIGTH_MAX As System.Nullable(Of Single)
	
	Private _FK_IDA As String
	
	Private _GROUP_CAL As System.Nullable(Of Integer)
	
	Private _AMT As System.Nullable(Of Decimal)
	
	Private _FEEABBR As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTEMPLATE_NOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTEMPLATE_NOChanged()
    End Sub
    Partial Private Sub OnWEIDTH_MINChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWEIDTH_MINChanged()
    End Sub
    Partial Private Sub OnWEIGTH_MAXChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnWEIGTH_MAXChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnGROUP_CALChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_CALChanged()
    End Sub
    Partial Private Sub OnAMTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAMTChanged()
    End Sub
    Partial Private Sub OnFEEABBRChanging(value As String)
    End Sub
    Partial Private Sub OnFEEABBRChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public ReadOnly Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPLATE_NO", DbType:="Int")>  _
	Public Property TEMPLATE_NO() As System.Nullable(Of Integer)
		Get
			Return Me._TEMPLATE_NO
		End Get
		Set
			If (Me._TEMPLATE_NO.Equals(value) = false) Then
				Me.OnTEMPLATE_NOChanging(value)
				Me.SendPropertyChanging
				Me._TEMPLATE_NO = value
				Me.SendPropertyChanged("TEMPLATE_NO")
				Me.OnTEMPLATE_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEIDTH_MIN", DbType:="Int")>  _
	Public Property WEIDTH_MIN() As System.Nullable(Of Integer)
		Get
			Return Me._WEIDTH_MIN
		End Get
		Set
			If (Me._WEIDTH_MIN.Equals(value) = false) Then
				Me.OnWEIDTH_MINChanging(value)
				Me.SendPropertyChanging
				Me._WEIDTH_MIN = value
				Me.SendPropertyChanged("WEIDTH_MIN")
				Me.OnWEIDTH_MINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEIGTH_MAX", DbType:="Real")>  _
	Public Property WEIGTH_MAX() As System.Nullable(Of Single)
		Get
			Return Me._WEIGTH_MAX
		End Get
		Set
			If (Me._WEIGTH_MAX.Equals(value) = false) Then
				Me.OnWEIGTH_MAXChanging(value)
				Me.SendPropertyChanging
				Me._WEIGTH_MAX = value
				Me.SendPropertyChanged("WEIGTH_MAX")
				Me.OnWEIGTH_MAXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(50)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_CAL", DbType:="Int")>  _
	Public Property GROUP_CAL() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_CAL
		End Get
		Set
			If (Me._GROUP_CAL.Equals(value) = false) Then
				Me.OnGROUP_CALChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_CAL = value
				Me.SendPropertyChanged("GROUP_CAL")
				Me.OnGROUP_CALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMT", DbType:="Money")>  _
	Public Property AMT() As System.Nullable(Of Decimal)
		Get
			Return Me._AMT
		End Get
		Set
			If (Me._AMT.Equals(value) = false) Then
				Me.OnAMTChanging(value)
				Me.SendPropertyChanging
				Me._AMT = value
				Me.SendPropertyChanged("AMT")
				Me.OnAMTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FEEABBR", DbType:="NVarChar(MAX)")>  _
	Public Property FEEABBR() As String
		Get
			Return Me._FEEABBR
		End Get
		Set
			If (String.Equals(Me._FEEABBR, value) = false) Then
				Me.OnFEEABBRChanging(value)
				Me.SendPropertyChanging
				Me._FEEABBR = value
				Me.SendPropertyChanged("FEEABBR")
				Me.OnFEEABBRChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TYPE_TEMPLATE")>  _
Partial Public Class TYPE_TEMPLATE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer = CType(Nothing, Integer)
	
	Private _TYPE_WORK As String
	
	Private _TYPE_DOC As System.Nullable(Of Integer)
	
	Private _TYPE_PRODUCT As System.Nullable(Of Integer)
	
	Private _TEMPLATE_NO As System.Nullable(Of Integer)
	
	Private _PVNCD As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTYPE_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_WORKChanged()
    End Sub
    Partial Private Sub OnTYPE_DOCChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_DOCChanged()
    End Sub
    Partial Private Sub OnTYPE_PRODUCTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_PRODUCTChanged()
    End Sub
    Partial Private Sub OnTEMPLATE_NOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTEMPLATE_NOChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public ReadOnly Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_WORK", DbType:="NVarChar(50)")>  _
	Public Property TYPE_WORK() As String
		Get
			Return Me._TYPE_WORK
		End Get
		Set
			If (String.Equals(Me._TYPE_WORK, value) = false) Then
				Me.OnTYPE_WORKChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_WORK = value
				Me.SendPropertyChanged("TYPE_WORK")
				Me.OnTYPE_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_DOC", DbType:="Int")>  _
	Public Property TYPE_DOC() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_DOC
		End Get
		Set
			If (Me._TYPE_DOC.Equals(value) = false) Then
				Me.OnTYPE_DOCChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_DOC = value
				Me.SendPropertyChanged("TYPE_DOC")
				Me.OnTYPE_DOCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_PRODUCT", DbType:="Int")>  _
	Public Property TYPE_PRODUCT() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_PRODUCT
		End Get
		Set
			If (Me._TYPE_PRODUCT.Equals(value) = false) Then
				Me.OnTYPE_PRODUCTChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_PRODUCT = value
				Me.SendPropertyChanged("TYPE_PRODUCT")
				Me.OnTYPE_PRODUCTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPLATE_NO", DbType:="Int")>  _
	Public Property TEMPLATE_NO() As System.Nullable(Of Integer)
		Get
			Return Me._TEMPLATE_NO
		End Get
		Set
			If (Me._TEMPLATE_NO.Equals(value) = false) Then
				Me.OnTEMPLATE_NOChanging(value)
				Me.SendPropertyChanging
				Me._TEMPLATE_NO = value
				Me.SendPropertyChanged("TEMPLATE_NO")
				Me.OnTEMPLATE_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="Int")>  _
	Public Property PVNCD() As System.Nullable(Of Integer)
		Get
			Return Me._PVNCD
		End Get
		Set
			If (Me._PVNCD.Equals(value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TYPE")>  _
Partial Public Class TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer = CType(Nothing, Integer)
	
	Private _TYPE_ID As System.Nullable(Of Integer)
	
	Private _TYPE_NAAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_IDChanged()
    End Sub
    Partial Private Sub OnTYPE_NAAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_NAAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public ReadOnly Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_ID", DbType:="Int")>  _
	Public Property TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_ID
		End Get
		Set
			If (Me._TYPE_ID.Equals(value) = false) Then
				Me.OnTYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_ID = value
				Me.SendPropertyChanged("TYPE_ID")
				Me.OnTYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_NAAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_NAAME() As String
		Get
			Return Me._TYPE_NAAME
		End Get
		Set
			If (String.Equals(Me._TYPE_NAAME, value) = false) Then
				Me.OnTYPE_NAAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_NAAME = value
				Me.SendPropertyChanged("TYPE_NAAME")
				Me.OnTYPE_NAAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.CO_INFO")>  _
Partial Public Class CO_INFO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer = CType(Nothing, Integer)
	
	Private _CO_ID As System.Nullable(Of Integer)
	
	Private _CO_NAME As String
	
	Private _CO_W As System.Nullable(Of Integer)
	
	Private _CO_H As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCO_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCO_IDChanged()
    End Sub
    Partial Private Sub OnCO_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCO_NAMEChanged()
    End Sub
    Partial Private Sub OnCO_WChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCO_WChanged()
    End Sub
    Partial Private Sub OnCO_HChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCO_HChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public ReadOnly Property ID() As Integer
		Get
			Return Me._ID
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CO_ID", DbType:="Int")>  _
	Public Property CO_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CO_ID
		End Get
		Set
			If (Me._CO_ID.Equals(value) = false) Then
				Me.OnCO_IDChanging(value)
				Me.SendPropertyChanging
				Me._CO_ID = value
				Me.SendPropertyChanged("CO_ID")
				Me.OnCO_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CO_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CO_NAME() As String
		Get
			Return Me._CO_NAME
		End Get
		Set
			If (String.Equals(Me._CO_NAME, value) = false) Then
				Me.OnCO_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CO_NAME = value
				Me.SendPropertyChanged("CO_NAME")
				Me.OnCO_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CO_W", DbType:="Int")>  _
	Public Property CO_W() As System.Nullable(Of Integer)
		Get
			Return Me._CO_W
		End Get
		Set
			If (Me._CO_W.Equals(value) = false) Then
				Me.OnCO_WChanging(value)
				Me.SendPropertyChanging
				Me._CO_W = value
				Me.SendPropertyChanged("CO_W")
				Me.OnCO_WChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CO_H", DbType:="Int")>  _
	Public Property CO_H() As System.Nullable(Of Integer)
		Get
			Return Me._CO_H
		End Get
		Set
			If (Me._CO_H.Equals(value) = false) Then
				Me.OnCO_HChanging(value)
				Me.SendPropertyChanging
				Me._CO_H = value
				Me.SendPropertyChanged("CO_H")
				Me.OnCO_HChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.darqt")>  _
Partial Public Class darqt
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _lcntpcd As String
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _pvnabbr As String
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _lcnscd As System.Nullable(Of Integer)
	
	Private _lctnmcd As System.Nullable(Of Integer)
	
	Private _lctcd As System.Nullable(Of Integer)
	
	Private _bsnid As System.Nullable(Of Integer)
	
	Private _bsncd As System.Nullable(Of Integer)
	
	Private _bsnlctcd As System.Nullable(Of Integer)
	
	Private _opentime As String
	
	Private _bsnage As System.Nullable(Of Short)
	
	Private _remark As String
	
	Private _phrflg As System.Nullable(Of Char)
	
	Private _cnsdcd As System.Nullable(Of Short)
	
	Private _cnsddate As System.Nullable(Of Date)
	
	Private _appdate As System.Nullable(Of Date)
	
	Private _expyear As System.Nullable(Of Short)
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _fdano As String
	
	Private _cscd As System.Nullable(Of Short)
	
	Private _rqttpcd As System.Nullable(Of Short)
	
	Private _cndno As System.Nullable(Of Integer)
	
	Private _jpctpcd As System.Nullable(Of Short)
	
	Private _dvcd As System.Nullable(Of Short)
	
	Private _feepayst As System.Nullable(Of Short)
	
	Private _feetpcd As System.Nullable(Of Integer)
	
	Private _feeno As System.Nullable(Of Integer)
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnpvnabbrChanging(value As String)
    End Sub
    Partial Private Sub OnpvnabbrChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnlctnmcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctnmcdChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnbsnidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbsnidChanged()
    End Sub
    Partial Private Sub OnbsncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbsncdChanged()
    End Sub
    Partial Private Sub OnbsnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbsnlctcdChanged()
    End Sub
    Partial Private Sub OnopentimeChanging(value As String)
    End Sub
    Partial Private Sub OnopentimeChanged()
    End Sub
    Partial Private Sub OnbsnageChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnbsnageChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    Partial Private Sub OnphrflgChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnphrflgChanged()
    End Sub
    Partial Private Sub OncnsdcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncnsdcdChanged()
    End Sub
    Partial Private Sub OncnsddateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncnsddateChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OnexpyearChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnexpyearChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnfdanoChanging(value As String)
    End Sub
    Partial Private Sub OnfdanoChanged()
    End Sub
    Partial Private Sub OncscdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncscdChanged()
    End Sub
    Partial Private Sub OnrqttpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnrqttpcdChanged()
    End Sub
    Partial Private Sub OncndnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncndnoChanged()
    End Sub
    Partial Private Sub OnjpctpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnjpctpcdChanged()
    End Sub
    Partial Private Sub OndvcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OndvcdChanged()
    End Sub
    Partial Private Sub OnfeepaystChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnfeepaystChanged()
    End Sub
    Partial Private Sub OnfeetpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfeetpcdChanged()
    End Sub
    Partial Private Sub OnfeenoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfeenoChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnabbr", DbType:="VarChar(5)")>  _
	Public Property pvnabbr() As String
		Get
			Return Me._pvnabbr
		End Get
		Set
			If (String.Equals(Me._pvnabbr, value) = false) Then
				Me.OnpvnabbrChanging(value)
				Me.SendPropertyChanging
				Me._pvnabbr = value
				Me.SendPropertyChanged("pvnabbr")
				Me.OnpvnabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="Date")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="Int")>  _
	Public Property lcnscd() As System.Nullable(Of Integer)
		Get
			Return Me._lcnscd
		End Get
		Set
			If (Me._lcnscd.Equals(value) = false) Then
				Me.OnlcnscdChanging(value)
				Me.SendPropertyChanging
				Me._lcnscd = value
				Me.SendPropertyChanged("lcnscd")
				Me.OnlcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmcd", DbType:="Int")>  _
	Public Property lctnmcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctnmcd
		End Get
		Set
			If (Me._lctnmcd.Equals(value) = false) Then
				Me.OnlctnmcdChanging(value)
				Me.SendPropertyChanging
				Me._lctnmcd = value
				Me.SendPropertyChanged("lctnmcd")
				Me.OnlctnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int")>  _
	Public Property lctcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctcd
		End Get
		Set
			If (Me._lctcd.Equals(value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsnid", DbType:="Int")>  _
	Public Property bsnid() As System.Nullable(Of Integer)
		Get
			Return Me._bsnid
		End Get
		Set
			If (Me._bsnid.Equals(value) = false) Then
				Me.OnbsnidChanging(value)
				Me.SendPropertyChanging
				Me._bsnid = value
				Me.SendPropertyChanged("bsnid")
				Me.OnbsnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsncd", DbType:="Int")>  _
	Public Property bsncd() As System.Nullable(Of Integer)
		Get
			Return Me._bsncd
		End Get
		Set
			If (Me._bsncd.Equals(value) = false) Then
				Me.OnbsncdChanging(value)
				Me.SendPropertyChanging
				Me._bsncd = value
				Me.SendPropertyChanged("bsncd")
				Me.OnbsncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsnlctcd", DbType:="Int")>  _
	Public Property bsnlctcd() As System.Nullable(Of Integer)
		Get
			Return Me._bsnlctcd
		End Get
		Set
			If (Me._bsnlctcd.Equals(value) = false) Then
				Me.OnbsnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._bsnlctcd = value
				Me.SendPropertyChanged("bsnlctcd")
				Me.OnbsnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opentime", DbType:="VarChar(150)")>  _
	Public Property opentime() As String
		Get
			Return Me._opentime
		End Get
		Set
			If (String.Equals(Me._opentime, value) = false) Then
				Me.OnopentimeChanging(value)
				Me.SendPropertyChanging
				Me._opentime = value
				Me.SendPropertyChanged("opentime")
				Me.OnopentimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsnage", DbType:="SmallInt")>  _
	Public Property bsnage() As System.Nullable(Of Short)
		Get
			Return Me._bsnage
		End Get
		Set
			If (Me._bsnage.Equals(value) = false) Then
				Me.OnbsnageChanging(value)
				Me.SendPropertyChanging
				Me._bsnage = value
				Me.SendPropertyChanged("bsnage")
				Me.OnbsnageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="VarChar(100)")>  _
	Public Property remark() As String
		Get
			Return Me._remark
		End Get
		Set
			If (String.Equals(Me._remark, value) = false) Then
				Me.OnremarkChanging(value)
				Me.SendPropertyChanging
				Me._remark = value
				Me.SendPropertyChanged("remark")
				Me.OnremarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrflg", DbType:="Char(1)")>  _
	Public Property phrflg() As System.Nullable(Of Char)
		Get
			Return Me._phrflg
		End Get
		Set
			If (Me._phrflg.Equals(value) = false) Then
				Me.OnphrflgChanging(value)
				Me.SendPropertyChanging
				Me._phrflg = value
				Me.SendPropertyChanged("phrflg")
				Me.OnphrflgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnsdcd", DbType:="SmallInt")>  _
	Public Property cnsdcd() As System.Nullable(Of Short)
		Get
			Return Me._cnsdcd
		End Get
		Set
			If (Me._cnsdcd.Equals(value) = false) Then
				Me.OncnsdcdChanging(value)
				Me.SendPropertyChanging
				Me._cnsdcd = value
				Me.SendPropertyChanged("cnsdcd")
				Me.OncnsdcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnsddate", DbType:="Date")>  _
	Public Property cnsddate() As System.Nullable(Of Date)
		Get
			Return Me._cnsddate
		End Get
		Set
			If (Me._cnsddate.Equals(value) = false) Then
				Me.OncnsddateChanging(value)
				Me.SendPropertyChanging
				Me._cnsddate = value
				Me.SendPropertyChanged("cnsddate")
				Me.OncnsddateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="Date")>  _
	Public Property appdate() As System.Nullable(Of Date)
		Get
			Return Me._appdate
		End Get
		Set
			If (Me._appdate.Equals(value) = false) Then
				Me.OnappdateChanging(value)
				Me.SendPropertyChanging
				Me._appdate = value
				Me.SendPropertyChanged("appdate")
				Me.OnappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expyear", DbType:="SmallInt")>  _
	Public Property expyear() As System.Nullable(Of Short)
		Get
			Return Me._expyear
		End Get
		Set
			If (Me._expyear.Equals(value) = false) Then
				Me.OnexpyearChanging(value)
				Me.SendPropertyChanging
				Me._expyear = value
				Me.SendPropertyChanged("expyear")
				Me.OnexpyearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fdano", DbType:="VarChar(8)")>  _
	Public Property fdano() As String
		Get
			Return Me._fdano
		End Get
		Set
			If (String.Equals(Me._fdano, value) = false) Then
				Me.OnfdanoChanging(value)
				Me.SendPropertyChanging
				Me._fdano = value
				Me.SendPropertyChanged("fdano")
				Me.OnfdanoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cscd", DbType:="SmallInt")>  _
	Public Property cscd() As System.Nullable(Of Short)
		Get
			Return Me._cscd
		End Get
		Set
			If (Me._cscd.Equals(value) = false) Then
				Me.OncscdChanging(value)
				Me.SendPropertyChanging
				Me._cscd = value
				Me.SendPropertyChanged("cscd")
				Me.OncscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rqttpcd", DbType:="SmallInt")>  _
	Public Property rqttpcd() As System.Nullable(Of Short)
		Get
			Return Me._rqttpcd
		End Get
		Set
			If (Me._rqttpcd.Equals(value) = false) Then
				Me.OnrqttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rqttpcd = value
				Me.SendPropertyChanged("rqttpcd")
				Me.OnrqttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cndno", DbType:="Int")>  _
	Public Property cndno() As System.Nullable(Of Integer)
		Get
			Return Me._cndno
		End Get
		Set
			If (Me._cndno.Equals(value) = false) Then
				Me.OncndnoChanging(value)
				Me.SendPropertyChanging
				Me._cndno = value
				Me.SendPropertyChanged("cndno")
				Me.OncndnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jpctpcd", DbType:="SmallInt")>  _
	Public Property jpctpcd() As System.Nullable(Of Short)
		Get
			Return Me._jpctpcd
		End Get
		Set
			If (Me._jpctpcd.Equals(value) = false) Then
				Me.OnjpctpcdChanging(value)
				Me.SendPropertyChanging
				Me._jpctpcd = value
				Me.SendPropertyChanged("jpctpcd")
				Me.OnjpctpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvcd", DbType:="SmallInt")>  _
	Public Property dvcd() As System.Nullable(Of Short)
		Get
			Return Me._dvcd
		End Get
		Set
			If (Me._dvcd.Equals(value) = false) Then
				Me.OndvcdChanging(value)
				Me.SendPropertyChanging
				Me._dvcd = value
				Me.SendPropertyChanged("dvcd")
				Me.OndvcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feepayst", DbType:="SmallInt")>  _
	Public Property feepayst() As System.Nullable(Of Short)
		Get
			Return Me._feepayst
		End Get
		Set
			If (Me._feepayst.Equals(value) = false) Then
				Me.OnfeepaystChanging(value)
				Me.SendPropertyChanging
				Me._feepayst = value
				Me.SendPropertyChanged("feepayst")
				Me.OnfeepaystChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feetpcd", DbType:="Int")>  _
	Public Property feetpcd() As System.Nullable(Of Integer)
		Get
			Return Me._feetpcd
		End Get
		Set
			If (Me._feetpcd.Equals(value) = false) Then
				Me.OnfeetpcdChanging(value)
				Me.SendPropertyChanging
				Me._feetpcd = value
				Me.SendPropertyChanged("feetpcd")
				Me.OnfeetpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feeno", DbType:="Int")>  _
	Public Property feeno() As System.Nullable(Of Integer)
		Get
			Return Me._feeno
		End Get
		Set
			If (Me._feeno.Equals(value) = false) Then
				Me.OnfeenoChanging(value)
				Me.SendPropertyChanging
				Me._feeno = value
				Me.SendPropertyChanged("feeno")
				Me.OnfeenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.dalcnctg")>  _
Partial Public Class dalcnctg
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _lcntpcd As String
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _ctgcd As System.Nullable(Of Short)
	
	Private _pdcst As System.Nullable(Of Short)
	
	Private _packst As System.Nullable(Of Short)
	
	Private _remark As String
	
	Private _orderno As System.Nullable(Of Short)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnctgcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnctgcdChanged()
    End Sub
    Partial Private Sub OnpdcstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpdcstChanged()
    End Sub
    Partial Private Sub OnpackstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpackstChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    Partial Private Sub OnordernoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnordernoChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctgcd", DbType:="SmallInt")>  _
	Public Property ctgcd() As System.Nullable(Of Short)
		Get
			Return Me._ctgcd
		End Get
		Set
			If (Me._ctgcd.Equals(value) = false) Then
				Me.OnctgcdChanging(value)
				Me.SendPropertyChanging
				Me._ctgcd = value
				Me.SendPropertyChanged("ctgcd")
				Me.OnctgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pdcst", DbType:="SmallInt")>  _
	Public Property pdcst() As System.Nullable(Of Short)
		Get
			Return Me._pdcst
		End Get
		Set
			If (Me._pdcst.Equals(value) = false) Then
				Me.OnpdcstChanging(value)
				Me.SendPropertyChanging
				Me._pdcst = value
				Me.SendPropertyChanged("pdcst")
				Me.OnpdcstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_packst", DbType:="SmallInt")>  _
	Public Property packst() As System.Nullable(Of Short)
		Get
			Return Me._packst
		End Get
		Set
			If (Me._packst.Equals(value) = false) Then
				Me.OnpackstChanging(value)
				Me.SendPropertyChanging
				Me._packst = value
				Me.SendPropertyChanged("packst")
				Me.OnpackstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="VarChar(30)")>  _
	Public Property remark() As String
		Get
			Return Me._remark
		End Get
		Set
			If (String.Equals(Me._remark, value) = false) Then
				Me.OnremarkChanging(value)
				Me.SendPropertyChanging
				Me._remark = value
				Me.SendPropertyChanged("remark")
				Me.OnremarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_orderno", DbType:="SmallInt")>  _
	Public Property orderno() As System.Nullable(Of Short)
		Get
			Return Me._orderno
		End Get
		Set
			If (Me._orderno.Equals(value) = false) Then
				Me.OnordernoChanging(value)
				Me.SendPropertyChanging
				Me._orderno = value
				Me.SendPropertyChanged("orderno")
				Me.OnordernoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.dalcnkep")>  _
Partial Public Class dalcnkep
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _lcntpcd As String
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _lctcd As System.Nullable(Of Integer)
	
	Private _keplctnmcd As System.Nullable(Of Integer)
	
	Private _orderno As System.Nullable(Of Short)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnkeplctnmcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnkeplctnmcdChanged()
    End Sub
    Partial Private Sub OnordernoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnordernoChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int")>  _
	Public Property lctcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctcd
		End Get
		Set
			If (Me._lctcd.Equals(value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_keplctnmcd", DbType:="Int")>  _
	Public Property keplctnmcd() As System.Nullable(Of Integer)
		Get
			Return Me._keplctnmcd
		End Get
		Set
			If (Me._keplctnmcd.Equals(value) = false) Then
				Me.OnkeplctnmcdChanging(value)
				Me.SendPropertyChanging
				Me._keplctnmcd = value
				Me.SendPropertyChanged("keplctnmcd")
				Me.OnkeplctnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_orderno", DbType:="SmallInt")>  _
	Public Property orderno() As System.Nullable(Of Short)
		Get
			Return Me._orderno
		End Get
		Set
			If (Me._orderno.Equals(value) = false) Then
				Me.OnordernoChanging(value)
				Me.SendPropertyChanging
				Me._orderno = value
				Me.SendPropertyChanged("orderno")
				Me.OnordernoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.dalcnphr")>  _
Partial Public Class dalcnphr
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _lcntpcd As String
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _phrcd As System.Nullable(Of Short)
	
	Private _phrid As System.Nullable(Of Integer)
	
	Private _phrnmcd As System.Nullable(Of Integer)
	
	Private _phrno As String
	
	Private _opentime As String
	
	Private _phrcncst As System.Nullable(Of Short)
	
	Private _functcd As System.Nullable(Of Short)
	
	Private _orderno As System.Nullable(Of Short)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnphrcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnphrcdChanged()
    End Sub
    Partial Private Sub OnphridChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnphridChanged()
    End Sub
    Partial Private Sub OnphrnmcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnphrnmcdChanged()
    End Sub
    Partial Private Sub OnphrnoChanging(value As String)
    End Sub
    Partial Private Sub OnphrnoChanged()
    End Sub
    Partial Private Sub OnopentimeChanging(value As String)
    End Sub
    Partial Private Sub OnopentimeChanged()
    End Sub
    Partial Private Sub OnphrcncstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnphrcncstChanged()
    End Sub
    Partial Private Sub OnfunctcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnfunctcdChanged()
    End Sub
    Partial Private Sub OnordernoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnordernoChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrcd", DbType:="SmallInt")>  _
	Public Property phrcd() As System.Nullable(Of Short)
		Get
			Return Me._phrcd
		End Get
		Set
			If (Me._phrcd.Equals(value) = false) Then
				Me.OnphrcdChanging(value)
				Me.SendPropertyChanging
				Me._phrcd = value
				Me.SendPropertyChanged("phrcd")
				Me.OnphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrid", DbType:="Int")>  _
	Public Property phrid() As System.Nullable(Of Integer)
		Get
			Return Me._phrid
		End Get
		Set
			If (Me._phrid.Equals(value) = false) Then
				Me.OnphridChanging(value)
				Me.SendPropertyChanging
				Me._phrid = value
				Me.SendPropertyChanged("phrid")
				Me.OnphridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrnmcd", DbType:="Int")>  _
	Public Property phrnmcd() As System.Nullable(Of Integer)
		Get
			Return Me._phrnmcd
		End Get
		Set
			If (Me._phrnmcd.Equals(value) = false) Then
				Me.OnphrnmcdChanging(value)
				Me.SendPropertyChanging
				Me._phrnmcd = value
				Me.SendPropertyChanged("phrnmcd")
				Me.OnphrnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrno", DbType:="VarChar(20)")>  _
	Public Property phrno() As String
		Get
			Return Me._phrno
		End Get
		Set
			If (String.Equals(Me._phrno, value) = false) Then
				Me.OnphrnoChanging(value)
				Me.SendPropertyChanging
				Me._phrno = value
				Me.SendPropertyChanged("phrno")
				Me.OnphrnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opentime", DbType:="VarChar(150)")>  _
	Public Property opentime() As String
		Get
			Return Me._opentime
		End Get
		Set
			If (String.Equals(Me._opentime, value) = false) Then
				Me.OnopentimeChanging(value)
				Me.SendPropertyChanging
				Me._opentime = value
				Me.SendPropertyChanged("opentime")
				Me.OnopentimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrcncst", DbType:="SmallInt")>  _
	Public Property phrcncst() As System.Nullable(Of Short)
		Get
			Return Me._phrcncst
		End Get
		Set
			If (Me._phrcncst.Equals(value) = false) Then
				Me.OnphrcncstChanging(value)
				Me.SendPropertyChanging
				Me._phrcncst = value
				Me.SendPropertyChanged("phrcncst")
				Me.OnphrcncstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_functcd", DbType:="SmallInt")>  _
	Public Property functcd() As System.Nullable(Of Short)
		Get
			Return Me._functcd
		End Get
		Set
			If (Me._functcd.Equals(value) = false) Then
				Me.OnfunctcdChanging(value)
				Me.SendPropertyChanging
				Me._functcd = value
				Me.SendPropertyChanged("functcd")
				Me.OnfunctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_orderno", DbType:="SmallInt")>  _
	Public Property orderno() As System.Nullable(Of Short)
		Get
			Return Me._orderno
		End Get
		Set
			If (Me._orderno.Equals(value) = false) Then
				Me.OnordernoChanging(value)
				Me.SendPropertyChanging
				Me._orderno = value
				Me.SendPropertyChanged("orderno")
				Me.OnordernoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.dasubctg")>  _
Partial Public Class dasubctg
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ctgcd As System.Nullable(Of Short)
	
	Private _subctgcd As System.Nullable(Of Short)
	
	Private _subctgtha As String
	
	Private _subctgeng As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnctgcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnctgcdChanged()
    End Sub
    Partial Private Sub OnsubctgcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnsubctgcdChanged()
    End Sub
    Partial Private Sub OnsubctgthaChanging(value As String)
    End Sub
    Partial Private Sub OnsubctgthaChanged()
    End Sub
    Partial Private Sub OnsubctgengChanging(value As String)
    End Sub
    Partial Private Sub OnsubctgengChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctgcd", DbType:="SmallInt")>  _
	Public Property ctgcd() As System.Nullable(Of Short)
		Get
			Return Me._ctgcd
		End Get
		Set
			If (Me._ctgcd.Equals(value) = false) Then
				Me.OnctgcdChanging(value)
				Me.SendPropertyChanging
				Me._ctgcd = value
				Me.SendPropertyChanged("ctgcd")
				Me.OnctgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_subctgcd", DbType:="SmallInt")>  _
	Public Property subctgcd() As System.Nullable(Of Short)
		Get
			Return Me._subctgcd
		End Get
		Set
			If (Me._subctgcd.Equals(value) = false) Then
				Me.OnsubctgcdChanging(value)
				Me.SendPropertyChanging
				Me._subctgcd = value
				Me.SendPropertyChanged("subctgcd")
				Me.OnsubctgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_subctgtha", DbType:="VarChar(80)")>  _
	Public Property subctgtha() As String
		Get
			Return Me._subctgtha
		End Get
		Set
			If (String.Equals(Me._subctgtha, value) = false) Then
				Me.OnsubctgthaChanging(value)
				Me.SendPropertyChanging
				Me._subctgtha = value
				Me.SendPropertyChanged("subctgtha")
				Me.OnsubctgthaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_subctgeng", DbType:="VarChar(80)")>  _
	Public Property subctgeng() As String
		Get
			Return Me._subctgeng
		End Get
		Set
			If (String.Equals(Me._subctgeng, value) = false) Then
				Me.OnsubctgengChanging(value)
				Me.SendPropertyChanging
				Me._subctgeng = value
				Me.SendPropertyChanged("subctgeng")
				Me.OnsubctgengChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.dakeplctnm")>  _
Partial Public Class dakeplctnm
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _keplctnmcd As System.Nullable(Of Integer)
	
	Private _thakeplctnm As String
	
	Private _engkeplctnm As String
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnkeplctnmcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnkeplctnmcdChanged()
    End Sub
    Partial Private Sub OnthakeplctnmChanging(value As String)
    End Sub
    Partial Private Sub OnthakeplctnmChanged()
    End Sub
    Partial Private Sub OnengkeplctnmChanging(value As String)
    End Sub
    Partial Private Sub OnengkeplctnmChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_keplctnmcd", DbType:="Int")>  _
	Public Property keplctnmcd() As System.Nullable(Of Integer)
		Get
			Return Me._keplctnmcd
		End Get
		Set
			If (Me._keplctnmcd.Equals(value) = false) Then
				Me.OnkeplctnmcdChanging(value)
				Me.SendPropertyChanging
				Me._keplctnmcd = value
				Me.SendPropertyChanged("keplctnmcd")
				Me.OnkeplctnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thakeplctnm", DbType:="VarChar(80)")>  _
	Public Property thakeplctnm() As String
		Get
			Return Me._thakeplctnm
		End Get
		Set
			If (String.Equals(Me._thakeplctnm, value) = false) Then
				Me.OnthakeplctnmChanging(value)
				Me.SendPropertyChanging
				Me._thakeplctnm = value
				Me.SendPropertyChanged("thakeplctnm")
				Me.OnthakeplctnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engkeplctnm", DbType:="VarChar(80)")>  _
	Public Property engkeplctnm() As String
		Get
			Return Me._engkeplctnm
		End Get
		Set
			If (String.Equals(Me._engkeplctnm, value) = false) Then
				Me.OnengkeplctnmChanging(value)
				Me.SendPropertyChanging
				Me._engkeplctnm = value
				Me.SendPropertyChanged("engkeplctnm")
				Me.OnengkeplctnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.dacnphdtl")>  _
Partial Public Class dacnphdtl
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Integer)
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rid As System.Nullable(Of Integer)
	
	Private _apppvncd As System.Nullable(Of Integer)
	
	Private _applcntpcd As String
	
	Private _applcnno As System.Nullable(Of Integer)
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _lctnmcd As System.Nullable(Of Integer)
	
	Private _opentime As String
	
	Private _cncdate As System.Nullable(Of Date)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnapppvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnapppvncdChanged()
    End Sub
    Partial Private Sub OnapplcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnapplcntpcdChanged()
    End Sub
    Partial Private Sub OnapplcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnapplcnnoChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlctnmcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctnmcdChanged()
    End Sub
    Partial Private Sub OnopentimeChanging(value As String)
    End Sub
    Partial Private Sub OnopentimeChanged()
    End Sub
    Partial Private Sub OncncdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncncdateChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="Int")>  _
	Public Property rid() As System.Nullable(Of Integer)
		Get
			Return Me._rid
		End Get
		Set
			If (Me._rid.Equals(value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apppvncd", DbType:="Int")>  _
	Public Property apppvncd() As System.Nullable(Of Integer)
		Get
			Return Me._apppvncd
		End Get
		Set
			If (Me._apppvncd.Equals(value) = false) Then
				Me.OnapppvncdChanging(value)
				Me.SendPropertyChanging
				Me._apppvncd = value
				Me.SendPropertyChanged("apppvncd")
				Me.OnapppvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_applcntpcd", DbType:="NVarChar(50)")>  _
	Public Property applcntpcd() As String
		Get
			Return Me._applcntpcd
		End Get
		Set
			If (String.Equals(Me._applcntpcd, value) = false) Then
				Me.OnapplcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._applcntpcd = value
				Me.SendPropertyChanged("applcntpcd")
				Me.OnapplcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_applcnno", DbType:="Int")>  _
	Public Property applcnno() As System.Nullable(Of Integer)
		Get
			Return Me._applcnno
		End Get
		Set
			If (Me._applcnno.Equals(value) = false) Then
				Me.OnapplcnnoChanging(value)
				Me.SendPropertyChanging
				Me._applcnno = value
				Me.SendPropertyChanged("applcnno")
				Me.OnapplcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmcd", DbType:="Int")>  _
	Public Property lctnmcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctnmcd
		End Get
		Set
			If (Me._lctnmcd.Equals(value) = false) Then
				Me.OnlctnmcdChanging(value)
				Me.SendPropertyChanging
				Me._lctnmcd = value
				Me.SendPropertyChanged("lctnmcd")
				Me.OnlctnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opentime", DbType:="NVarChar(MAX)")>  _
	Public Property opentime() As String
		Get
			Return Me._opentime
		End Get
		Set
			If (String.Equals(Me._opentime, value) = false) Then
				Me.OnopentimeChanging(value)
				Me.SendPropertyChanging
				Me._opentime = value
				Me.SendPropertyChanged("opentime")
				Me.OnopentimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncdate", DbType:="Date")>  _
	Public Property cncdate() As System.Nullable(Of Date)
		Get
			Return Me._cncdate
		End Get
		Set
			If (Me._cncdate.Equals(value) = false) Then
				Me.OncncdateChanging(value)
				Me.SendPropertyChanging
				Me._cncdate = value
				Me.SendPropertyChanged("cncdate")
				Me.OncncdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.dacncphr")>  _
Partial Public Class dacncphr
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Integer)
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _phrno As String
	
	Private _phrid As System.Nullable(Of Integer)
	
	Private _phrnmcd As System.Nullable(Of Integer)
	
	Private _cnsdcd As System.Nullable(Of Short)
	
	Private _appdate As System.Nullable(Of Date)
	
	Private _cscd As System.Nullable(Of Short)
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnphrnoChanging(value As String)
    End Sub
    Partial Private Sub OnphrnoChanged()
    End Sub
    Partial Private Sub OnphridChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnphridChanged()
    End Sub
    Partial Private Sub OnphrnmcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnphrnmcdChanged()
    End Sub
    Partial Private Sub OncnsdcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncnsdcdChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OncscdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncscdChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="Date")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrno", DbType:="NVarChar(MAX)")>  _
	Public Property phrno() As String
		Get
			Return Me._phrno
		End Get
		Set
			If (String.Equals(Me._phrno, value) = false) Then
				Me.OnphrnoChanging(value)
				Me.SendPropertyChanging
				Me._phrno = value
				Me.SendPropertyChanged("phrno")
				Me.OnphrnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrid", DbType:="Int")>  _
	Public Property phrid() As System.Nullable(Of Integer)
		Get
			Return Me._phrid
		End Get
		Set
			If (Me._phrid.Equals(value) = false) Then
				Me.OnphridChanging(value)
				Me.SendPropertyChanging
				Me._phrid = value
				Me.SendPropertyChanged("phrid")
				Me.OnphridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrnmcd", DbType:="Int")>  _
	Public Property phrnmcd() As System.Nullable(Of Integer)
		Get
			Return Me._phrnmcd
		End Get
		Set
			If (Me._phrnmcd.Equals(value) = false) Then
				Me.OnphrnmcdChanging(value)
				Me.SendPropertyChanging
				Me._phrnmcd = value
				Me.SendPropertyChanged("phrnmcd")
				Me.OnphrnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnsdcd", DbType:="SmallInt")>  _
	Public Property cnsdcd() As System.Nullable(Of Short)
		Get
			Return Me._cnsdcd
		End Get
		Set
			If (Me._cnsdcd.Equals(value) = false) Then
				Me.OncnsdcdChanging(value)
				Me.SendPropertyChanging
				Me._cnsdcd = value
				Me.SendPropertyChanged("cnsdcd")
				Me.OncnsdcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="Date")>  _
	Public Property appdate() As System.Nullable(Of Date)
		Get
			Return Me._appdate
		End Get
		Set
			If (Me._appdate.Equals(value) = false) Then
				Me.OnappdateChanging(value)
				Me.SendPropertyChanging
				Me._appdate = value
				Me.SendPropertyChanged("appdate")
				Me.OnappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cscd", DbType:="SmallInt")>  _
	Public Property cscd() As System.Nullable(Of Short)
		Get
			Return Me._cscd
		End Get
		Set
			If (Me._cscd.Equals(value) = false) Then
				Me.OncscdChanging(value)
				Me.SendPropertyChanging
				Me._cscd = value
				Me.SendPropertyChanged("cscd")
				Me.OncscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_KEP")>  _
Partial Public Class DALCN_KEP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _thaaddr As String
	
	Private _engaddr As String
	
	Private _room As String
	
	Private _mu As String
	
	Private _floor As String
	
	Private _thasoi As String
	
	Private _engsoi As String
	
	Private _building As String
	
	Private _tharoad As String
	
	Private _engroad As String
	
	Private _thmblcd As System.Nullable(Of Integer)
	
	Private _amphrcd As System.Nullable(Of Integer)
	
	Private _chngwtcd As System.Nullable(Of Integer)
	
	Private _zipcode As String
	
	Private _tel As String
	
	Private _fax As String
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _pvcode As String
	
	Private _amcode As String
	
	Private _ttcode As String
	
	Private _branch As String
	
	Private _DALCN_IDA As System.Nullable(Of Integer)
	
	Private _LCNNO As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnthaaddrChanging(value As String)
    End Sub
    Partial Private Sub OnthaaddrChanged()
    End Sub
    Partial Private Sub OnengaddrChanging(value As String)
    End Sub
    Partial Private Sub OnengaddrChanged()
    End Sub
    Partial Private Sub OnroomChanging(value As String)
    End Sub
    Partial Private Sub OnroomChanged()
    End Sub
    Partial Private Sub OnmuChanging(value As String)
    End Sub
    Partial Private Sub OnmuChanged()
    End Sub
    Partial Private Sub OnfloorChanging(value As String)
    End Sub
    Partial Private Sub OnfloorChanged()
    End Sub
    Partial Private Sub OnthasoiChanging(value As String)
    End Sub
    Partial Private Sub OnthasoiChanged()
    End Sub
    Partial Private Sub OnengsoiChanging(value As String)
    End Sub
    Partial Private Sub OnengsoiChanged()
    End Sub
    Partial Private Sub OnbuildingChanging(value As String)
    End Sub
    Partial Private Sub OnbuildingChanged()
    End Sub
    Partial Private Sub OntharoadChanging(value As String)
    End Sub
    Partial Private Sub OntharoadChanged()
    End Sub
    Partial Private Sub OnengroadChanging(value As String)
    End Sub
    Partial Private Sub OnengroadChanged()
    End Sub
    Partial Private Sub OnthmblcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnthmblcdChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnzipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnzipcodeChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnpvcodeChanging(value As String)
    End Sub
    Partial Private Sub OnpvcodeChanged()
    End Sub
    Partial Private Sub OnamcodeChanging(value As String)
    End Sub
    Partial Private Sub OnamcodeChanged()
    End Sub
    Partial Private Sub OnttcodeChanging(value As String)
    End Sub
    Partial Private Sub OnttcodeChanged()
    End Sub
    Partial Private Sub OnbranchChanging(value As String)
    End Sub
    Partial Private Sub OnbranchChanged()
    End Sub
    Partial Private Sub OnDALCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDALCN_IDAChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaaddr", DbType:="VarChar(MAX)")>  _
	Public Property thaaddr() As String
		Get
			Return Me._thaaddr
		End Get
		Set
			If (String.Equals(Me._thaaddr, value) = false) Then
				Me.OnthaaddrChanging(value)
				Me.SendPropertyChanging
				Me._thaaddr = value
				Me.SendPropertyChanged("thaaddr")
				Me.OnthaaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engaddr", DbType:="VarChar(MAX)")>  _
	Public Property engaddr() As String
		Get
			Return Me._engaddr
		End Get
		Set
			If (String.Equals(Me._engaddr, value) = false) Then
				Me.OnengaddrChanging(value)
				Me.SendPropertyChanging
				Me._engaddr = value
				Me.SendPropertyChanged("engaddr")
				Me.OnengaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_room", DbType:="VarChar(MAX)")>  _
	Public Property room() As String
		Get
			Return Me._room
		End Get
		Set
			If (String.Equals(Me._room, value) = false) Then
				Me.OnroomChanging(value)
				Me.SendPropertyChanging
				Me._room = value
				Me.SendPropertyChanged("room")
				Me.OnroomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mu", DbType:="Char(3)")>  _
	Public Property mu() As String
		Get
			Return Me._mu
		End Get
		Set
			If (String.Equals(Me._mu, value) = false) Then
				Me.OnmuChanging(value)
				Me.SendPropertyChanging
				Me._mu = value
				Me.SendPropertyChanged("mu")
				Me.OnmuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_floor", DbType:="VarChar(MAX)")>  _
	Public Property floor() As String
		Get
			Return Me._floor
		End Get
		Set
			If (String.Equals(Me._floor, value) = false) Then
				Me.OnfloorChanging(value)
				Me.SendPropertyChanging
				Me._floor = value
				Me.SendPropertyChanged("floor")
				Me.OnfloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thasoi", DbType:="VarChar(MAX)")>  _
	Public Property thasoi() As String
		Get
			Return Me._thasoi
		End Get
		Set
			If (String.Equals(Me._thasoi, value) = false) Then
				Me.OnthasoiChanging(value)
				Me.SendPropertyChanging
				Me._thasoi = value
				Me.SendPropertyChanged("thasoi")
				Me.OnthasoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engsoi", DbType:="VarChar(MAX)")>  _
	Public Property engsoi() As String
		Get
			Return Me._engsoi
		End Get
		Set
			If (String.Equals(Me._engsoi, value) = false) Then
				Me.OnengsoiChanging(value)
				Me.SendPropertyChanging
				Me._engsoi = value
				Me.SendPropertyChanged("engsoi")
				Me.OnengsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_building", DbType:="VarChar(MAX)")>  _
	Public Property building() As String
		Get
			Return Me._building
		End Get
		Set
			If (String.Equals(Me._building, value) = false) Then
				Me.OnbuildingChanging(value)
				Me.SendPropertyChanging
				Me._building = value
				Me.SendPropertyChanged("building")
				Me.OnbuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoad", DbType:="VarChar(MAX)")>  _
	Public Property tharoad() As String
		Get
			Return Me._tharoad
		End Get
		Set
			If (String.Equals(Me._tharoad, value) = false) Then
				Me.OntharoadChanging(value)
				Me.SendPropertyChanging
				Me._tharoad = value
				Me.SendPropertyChanged("tharoad")
				Me.OntharoadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engroad", DbType:="VarChar(MAX)")>  _
	Public Property engroad() As String
		Get
			Return Me._engroad
		End Get
		Set
			If (String.Equals(Me._engroad, value) = false) Then
				Me.OnengroadChanging(value)
				Me.SendPropertyChanging
				Me._engroad = value
				Me.SendPropertyChanged("engroad")
				Me.OnengroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd", DbType:="Int")>  _
	Public Property thmblcd() As System.Nullable(Of Integer)
		Get
			Return Me._thmblcd
		End Get
		Set
			If (Me._thmblcd.Equals(value) = false) Then
				Me.OnthmblcdChanging(value)
				Me.SendPropertyChanging
				Me._thmblcd = value
				Me.SendPropertyChanged("thmblcd")
				Me.OnthmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="Int")>  _
	Public Property amphrcd() As System.Nullable(Of Integer)
		Get
			Return Me._amphrcd
		End Get
		Set
			If (Me._amphrcd.Equals(value) = false) Then
				Me.OnamphrcdChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd = value
				Me.SendPropertyChanged("amphrcd")
				Me.OnamphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="Int")>  _
	Public Property chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (Me._chngwtcd.Equals(value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_zipcode", DbType:="VarChar(MAX)")>  _
	Public Property zipcode() As String
		Get
			Return Me._zipcode
		End Get
		Set
			If (String.Equals(Me._zipcode, value) = false) Then
				Me.OnzipcodeChanging(value)
				Me.SendPropertyChanging
				Me._zipcode = value
				Me.SendPropertyChanged("zipcode")
				Me.OnzipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="VarChar(MAX)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="VarChar(MAX)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvcode", DbType:="VarChar(MAX)")>  _
	Public Property pvcode() As String
		Get
			Return Me._pvcode
		End Get
		Set
			If (String.Equals(Me._pvcode, value) = false) Then
				Me.OnpvcodeChanging(value)
				Me.SendPropertyChanging
				Me._pvcode = value
				Me.SendPropertyChanged("pvcode")
				Me.OnpvcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amcode", DbType:="VarChar(MAX)")>  _
	Public Property amcode() As String
		Get
			Return Me._amcode
		End Get
		Set
			If (String.Equals(Me._amcode, value) = false) Then
				Me.OnamcodeChanging(value)
				Me.SendPropertyChanging
				Me._amcode = value
				Me.SendPropertyChanged("amcode")
				Me.OnamcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ttcode", DbType:="VarChar(MAX)")>  _
	Public Property ttcode() As String
		Get
			Return Me._ttcode
		End Get
		Set
			If (String.Equals(Me._ttcode, value) = false) Then
				Me.OnttcodeChanging(value)
				Me.SendPropertyChanging
				Me._ttcode = value
				Me.SendPropertyChanged("ttcode")
				Me.OnttcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_branch", DbType:="VarChar(MAX)")>  _
	Public Property branch() As String
		Get
			Return Me._branch
		End Get
		Set
			If (String.Equals(Me._branch, value) = false) Then
				Me.OnbranchChanging(value)
				Me.SendPropertyChanging
				Me._branch = value
				Me.SendPropertyChanged("branch")
				Me.OnbranchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DALCN_IDA", DbType:="Int")>  _
	Public Property DALCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._DALCN_IDA
		End Get
		Set
			If (Me._DALCN_IDA.Equals(value) = false) Then
				Me.OnDALCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._DALCN_IDA = value
				Me.SendPropertyChanged("DALCN_IDA")
				Me.OnDALCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="Int")>  _
	Public Property LCNNO() As System.Nullable(Of Integer)
		Get
			Return Me._LCNNO
		End Get
		Set
			If (Me._LCNNO.Equals(value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_WORKTIME")>  _
Partial Public Class DALCN_WORKTIME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _WORKTIME_IDA As Integer
	
	Private _WORKTIME_DAY As System.Nullable(Of Integer)
	
	Private _WORKTIME_HOUR_START As String
	
	Private _WORKTIME_MIN_START As String
	
	Private _WORKTIME_HOUR_END As String
	
	Private _WORKTIME_MIN_END As String
	
	Private _WORKTIME_STATUS As System.Nullable(Of Boolean)
	
	Private _PHR_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FR_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWORKTIME_IDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnWORKTIME_IDAChanged()
    End Sub
    Partial Private Sub OnWORKTIME_DAYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWORKTIME_DAYChanged()
    End Sub
    Partial Private Sub OnWORKTIME_HOUR_STARTChanging(value As String)
    End Sub
    Partial Private Sub OnWORKTIME_HOUR_STARTChanged()
    End Sub
    Partial Private Sub OnWORKTIME_MIN_STARTChanging(value As String)
    End Sub
    Partial Private Sub OnWORKTIME_MIN_STARTChanged()
    End Sub
    Partial Private Sub OnWORKTIME_HOUR_ENDChanging(value As String)
    End Sub
    Partial Private Sub OnWORKTIME_HOUR_ENDChanged()
    End Sub
    Partial Private Sub OnWORKTIME_MIN_ENDChanging(value As String)
    End Sub
    Partial Private Sub OnWORKTIME_MIN_ENDChanged()
    End Sub
    Partial Private Sub OnWORKTIME_STATUSChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnWORKTIME_STATUSChanged()
    End Sub
    Partial Private Sub OnPHR_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHR_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFR_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFR_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORKTIME_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property WORKTIME_IDA() As Integer
		Get
			Return Me._WORKTIME_IDA
		End Get
		Set
			If ((Me._WORKTIME_IDA = value)  _
						= false) Then
				Me.OnWORKTIME_IDAChanging(value)
				Me.SendPropertyChanging
				Me._WORKTIME_IDA = value
				Me.SendPropertyChanged("WORKTIME_IDA")
				Me.OnWORKTIME_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORKTIME_DAY", DbType:="Int")>  _
	Public Property WORKTIME_DAY() As System.Nullable(Of Integer)
		Get
			Return Me._WORKTIME_DAY
		End Get
		Set
			If (Me._WORKTIME_DAY.Equals(value) = false) Then
				Me.OnWORKTIME_DAYChanging(value)
				Me.SendPropertyChanging
				Me._WORKTIME_DAY = value
				Me.SendPropertyChanged("WORKTIME_DAY")
				Me.OnWORKTIME_DAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORKTIME_HOUR_START", DbType:="NVarChar(MAX)")>  _
	Public Property WORKTIME_HOUR_START() As String
		Get
			Return Me._WORKTIME_HOUR_START
		End Get
		Set
			If (String.Equals(Me._WORKTIME_HOUR_START, value) = false) Then
				Me.OnWORKTIME_HOUR_STARTChanging(value)
				Me.SendPropertyChanging
				Me._WORKTIME_HOUR_START = value
				Me.SendPropertyChanged("WORKTIME_HOUR_START")
				Me.OnWORKTIME_HOUR_STARTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORKTIME_MIN_START", DbType:="NVarChar(MAX)")>  _
	Public Property WORKTIME_MIN_START() As String
		Get
			Return Me._WORKTIME_MIN_START
		End Get
		Set
			If (String.Equals(Me._WORKTIME_MIN_START, value) = false) Then
				Me.OnWORKTIME_MIN_STARTChanging(value)
				Me.SendPropertyChanging
				Me._WORKTIME_MIN_START = value
				Me.SendPropertyChanged("WORKTIME_MIN_START")
				Me.OnWORKTIME_MIN_STARTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORKTIME_HOUR_END", DbType:="NVarChar(MAX)")>  _
	Public Property WORKTIME_HOUR_END() As String
		Get
			Return Me._WORKTIME_HOUR_END
		End Get
		Set
			If (String.Equals(Me._WORKTIME_HOUR_END, value) = false) Then
				Me.OnWORKTIME_HOUR_ENDChanging(value)
				Me.SendPropertyChanging
				Me._WORKTIME_HOUR_END = value
				Me.SendPropertyChanged("WORKTIME_HOUR_END")
				Me.OnWORKTIME_HOUR_ENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORKTIME_MIN_END", DbType:="NVarChar(MAX)")>  _
	Public Property WORKTIME_MIN_END() As String
		Get
			Return Me._WORKTIME_MIN_END
		End Get
		Set
			If (String.Equals(Me._WORKTIME_MIN_END, value) = false) Then
				Me.OnWORKTIME_MIN_ENDChanging(value)
				Me.SendPropertyChanging
				Me._WORKTIME_MIN_END = value
				Me.SendPropertyChanged("WORKTIME_MIN_END")
				Me.OnWORKTIME_MIN_ENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORKTIME_STATUS", DbType:="Bit")>  _
	Public Property WORKTIME_STATUS() As System.Nullable(Of Boolean)
		Get
			Return Me._WORKTIME_STATUS
		End Get
		Set
			If (Me._WORKTIME_STATUS.Equals(value) = false) Then
				Me.OnWORKTIME_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._WORKTIME_STATUS = value
				Me.SendPropertyChanged("WORKTIME_STATUS")
				Me.OnWORKTIME_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_IDA", DbType:="Int")>  _
	Public Property PHR_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._PHR_IDA
		End Get
		Set
			If (Me._PHR_IDA.Equals(value) = false) Then
				Me.OnPHR_IDAChanging(value)
				Me.SendPropertyChanging
				Me._PHR_IDA = value
				Me.SendPropertyChanged("PHR_IDA")
				Me.OnPHR_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FR_IDA", DbType:="Int")>  _
	Public Property FR_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FR_IDA
		End Get
		Set
			If (Me._FR_IDA.Equals(value) = false) Then
				Me.OnFR_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FR_IDA = value
				Me.SendPropertyChanged("FR_IDA")
				Me.OnFR_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.sysplace")>  _
Partial Public Class sysplace
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _trans_ID As System.Nullable(Of Integer)
	
	Private _nameplace As String
	
	Private _number_addr As String
	
	Private _room As String
	
	Private _moo As String
	
	Private _floor As String
	
	Private _soi As String
	
	Private _building As String
	
	Private _road As String
	
	Private _thmblcd As System.Nullable(Of Integer)
	
	Private _amphrcd As System.Nullable(Of Integer)
	
	Private _chngwtcd As System.Nullable(Of Integer)
	
	Private _tel_home As String
	
	Private _tel_telephone As String
	
	Private _type_process As System.Nullable(Of Integer)
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _houseno As String
	
	Private _gln As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub Ontrans_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ontrans_IDChanged()
    End Sub
    Partial Private Sub OnnameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnnameplaceChanged()
    End Sub
    Partial Private Sub Onnumber_addrChanging(value As String)
    End Sub
    Partial Private Sub Onnumber_addrChanged()
    End Sub
    Partial Private Sub OnroomChanging(value As String)
    End Sub
    Partial Private Sub OnroomChanged()
    End Sub
    Partial Private Sub OnmooChanging(value As String)
    End Sub
    Partial Private Sub OnmooChanged()
    End Sub
    Partial Private Sub OnfloorChanging(value As String)
    End Sub
    Partial Private Sub OnfloorChanged()
    End Sub
    Partial Private Sub OnsoiChanging(value As String)
    End Sub
    Partial Private Sub OnsoiChanged()
    End Sub
    Partial Private Sub OnbuildingChanging(value As String)
    End Sub
    Partial Private Sub OnbuildingChanged()
    End Sub
    Partial Private Sub OnroadChanging(value As String)
    End Sub
    Partial Private Sub OnroadChanged()
    End Sub
    Partial Private Sub OnthmblcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnthmblcdChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub Ontel_homeChanging(value As String)
    End Sub
    Partial Private Sub Ontel_homeChanged()
    End Sub
    Partial Private Sub Ontel_telephoneChanging(value As String)
    End Sub
    Partial Private Sub Ontel_telephoneChanged()
    End Sub
    Partial Private Sub Ontype_processChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ontype_processChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnhousenoChanging(value As String)
    End Sub
    Partial Private Sub OnhousenoChanged()
    End Sub
    Partial Private Sub OnglnChanging(value As String)
    End Sub
    Partial Private Sub OnglnChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trans_ID", DbType:="Int")>  _
	Public Property trans_ID() As System.Nullable(Of Integer)
		Get
			Return Me._trans_ID
		End Get
		Set
			If (Me._trans_ID.Equals(value) = false) Then
				Me.Ontrans_IDChanging(value)
				Me.SendPropertyChanging
				Me._trans_ID = value
				Me.SendPropertyChanged("trans_ID")
				Me.Ontrans_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nameplace", DbType:="VarChar(MAX)")>  _
	Public Property nameplace() As String
		Get
			Return Me._nameplace
		End Get
		Set
			If (String.Equals(Me._nameplace, value) = false) Then
				Me.OnnameplaceChanging(value)
				Me.SendPropertyChanging
				Me._nameplace = value
				Me.SendPropertyChanged("nameplace")
				Me.OnnameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_number_addr", DbType:="VarChar(MAX)")>  _
	Public Property number_addr() As String
		Get
			Return Me._number_addr
		End Get
		Set
			If (String.Equals(Me._number_addr, value) = false) Then
				Me.Onnumber_addrChanging(value)
				Me.SendPropertyChanging
				Me._number_addr = value
				Me.SendPropertyChanged("number_addr")
				Me.Onnumber_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_room", DbType:="VarChar(MAX)")>  _
	Public Property room() As String
		Get
			Return Me._room
		End Get
		Set
			If (String.Equals(Me._room, value) = false) Then
				Me.OnroomChanging(value)
				Me.SendPropertyChanging
				Me._room = value
				Me.SendPropertyChanged("room")
				Me.OnroomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_moo", DbType:="VarChar(MAX)")>  _
	Public Property moo() As String
		Get
			Return Me._moo
		End Get
		Set
			If (String.Equals(Me._moo, value) = false) Then
				Me.OnmooChanging(value)
				Me.SendPropertyChanging
				Me._moo = value
				Me.SendPropertyChanged("moo")
				Me.OnmooChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_floor", DbType:="VarChar(MAX)")>  _
	Public Property floor() As String
		Get
			Return Me._floor
		End Get
		Set
			If (String.Equals(Me._floor, value) = false) Then
				Me.OnfloorChanging(value)
				Me.SendPropertyChanging
				Me._floor = value
				Me.SendPropertyChanged("floor")
				Me.OnfloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_soi", DbType:="VarChar(MAX)")>  _
	Public Property soi() As String
		Get
			Return Me._soi
		End Get
		Set
			If (String.Equals(Me._soi, value) = false) Then
				Me.OnsoiChanging(value)
				Me.SendPropertyChanging
				Me._soi = value
				Me.SendPropertyChanged("soi")
				Me.OnsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_building", DbType:="VarChar(MAX)")>  _
	Public Property building() As String
		Get
			Return Me._building
		End Get
		Set
			If (String.Equals(Me._building, value) = false) Then
				Me.OnbuildingChanging(value)
				Me.SendPropertyChanging
				Me._building = value
				Me.SendPropertyChanged("building")
				Me.OnbuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_road", DbType:="VarChar(MAX)")>  _
	Public Property road() As String
		Get
			Return Me._road
		End Get
		Set
			If (String.Equals(Me._road, value) = false) Then
				Me.OnroadChanging(value)
				Me.SendPropertyChanging
				Me._road = value
				Me.SendPropertyChanged("road")
				Me.OnroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd", DbType:="Int")>  _
	Public Property thmblcd() As System.Nullable(Of Integer)
		Get
			Return Me._thmblcd
		End Get
		Set
			If (Me._thmblcd.Equals(value) = false) Then
				Me.OnthmblcdChanging(value)
				Me.SendPropertyChanging
				Me._thmblcd = value
				Me.SendPropertyChanged("thmblcd")
				Me.OnthmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="Int")>  _
	Public Property amphrcd() As System.Nullable(Of Integer)
		Get
			Return Me._amphrcd
		End Get
		Set
			If (Me._amphrcd.Equals(value) = false) Then
				Me.OnamphrcdChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd = value
				Me.SendPropertyChanged("amphrcd")
				Me.OnamphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="Int")>  _
	Public Property chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (Me._chngwtcd.Equals(value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel_home", DbType:="VarChar(MAX)")>  _
	Public Property tel_home() As String
		Get
			Return Me._tel_home
		End Get
		Set
			If (String.Equals(Me._tel_home, value) = false) Then
				Me.Ontel_homeChanging(value)
				Me.SendPropertyChanging
				Me._tel_home = value
				Me.SendPropertyChanged("tel_home")
				Me.Ontel_homeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel_telephone", DbType:="VarChar(MAX)")>  _
	Public Property tel_telephone() As String
		Get
			Return Me._tel_telephone
		End Get
		Set
			If (String.Equals(Me._tel_telephone, value) = false) Then
				Me.Ontel_telephoneChanging(value)
				Me.SendPropertyChanging
				Me._tel_telephone = value
				Me.SendPropertyChanged("tel_telephone")
				Me.Ontel_telephoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type_process", DbType:="Int")>  _
	Public Property type_process() As System.Nullable(Of Integer)
		Get
			Return Me._type_process
		End Get
		Set
			If (Me._type_process.Equals(value) = false) Then
				Me.Ontype_processChanging(value)
				Me.SendPropertyChanging
				Me._type_process = value
				Me.SendPropertyChanged("type_process")
				Me.Ontype_processChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_houseno", DbType:="NVarChar(50)")>  _
	Public Property houseno() As String
		Get
			Return Me._houseno
		End Get
		Set
			If (String.Equals(Me._houseno, value) = false) Then
				Me.OnhousenoChanging(value)
				Me.SendPropertyChanging
				Me._houseno = value
				Me.SendPropertyChanged("houseno")
				Me.OnhousenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gln", DbType:="NVarChar(50)")>  _
	Public Property gln() As String
		Get
			Return Me._gln
		End Get
		Set
			If (String.Equals(Me._gln, value) = false) Then
				Me.OnglnChanging(value)
				Me.SendPropertyChanging
				Me._gln = value
				Me.SendPropertyChanged("gln")
				Me.OnglnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drpcbdrg")>  _
Partial Public Class drpcbdrg
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rid As System.Nullable(Of Short)
	
	Private _apvncd As System.Nullable(Of Short)
	
	Private _adrgtpcd As String
	
	Private _argttpcd As String
	
	Private _argtno As System.Nullable(Of Integer)
	
	Private _thadrgnm As String
	
	Private _engdrgnm As String
	
	Private _drgexpst As System.Nullable(Of Short)
	
	Private _drgbiost As System.Nullable(Of Short)
	
	Private _drgnewst As System.Nullable(Of Short)
	
	Private _sqty As System.Nullable(Of Integer)
	
	Private _sunitcd As System.Nullable(Of Integer)
	
	Private _nqty As System.Nullable(Of Integer)
	
	Private _nunitcd As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnapvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnapvncdChanged()
    End Sub
    Partial Private Sub OnadrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OnadrgtpcdChanged()
    End Sub
    Partial Private Sub OnargttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnargttpcdChanged()
    End Sub
    Partial Private Sub OnargtnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnargtnoChanged()
    End Sub
    Partial Private Sub OnthadrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadrgnmChanged()
    End Sub
    Partial Private Sub OnengdrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgnmChanged()
    End Sub
    Partial Private Sub OndrgexpstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OndrgexpstChanged()
    End Sub
    Partial Private Sub OndrgbiostChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OndrgbiostChanged()
    End Sub
    Partial Private Sub OndrgnewstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OndrgnewstChanged()
    End Sub
    Partial Private Sub OnsqtyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsqtyChanged()
    End Sub
    Partial Private Sub OnsunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsunitcdChanged()
    End Sub
    Partial Private Sub OnnqtyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnnqtyChanged()
    End Sub
    Partial Private Sub OnnunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnnunitcdChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="SmallInt")>  _
	Public Property rid() As System.Nullable(Of Short)
		Get
			Return Me._rid
		End Get
		Set
			If (Me._rid.Equals(value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apvncd", DbType:="SmallInt")>  _
	Public Property apvncd() As System.Nullable(Of Short)
		Get
			Return Me._apvncd
		End Get
		Set
			If (Me._apvncd.Equals(value) = false) Then
				Me.OnapvncdChanging(value)
				Me.SendPropertyChanging
				Me._apvncd = value
				Me.SendPropertyChanged("apvncd")
				Me.OnapvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_adrgtpcd", DbType:="VarChar(1)")>  _
	Public Property adrgtpcd() As String
		Get
			Return Me._adrgtpcd
		End Get
		Set
			If (String.Equals(Me._adrgtpcd, value) = false) Then
				Me.OnadrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._adrgtpcd = value
				Me.SendPropertyChanged("adrgtpcd")
				Me.OnadrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_argttpcd", DbType:="VarChar(3)")>  _
	Public Property argttpcd() As String
		Get
			Return Me._argttpcd
		End Get
		Set
			If (String.Equals(Me._argttpcd, value) = false) Then
				Me.OnargttpcdChanging(value)
				Me.SendPropertyChanging
				Me._argttpcd = value
				Me.SendPropertyChanged("argttpcd")
				Me.OnargttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_argtno", DbType:="Int")>  _
	Public Property argtno() As System.Nullable(Of Integer)
		Get
			Return Me._argtno
		End Get
		Set
			If (Me._argtno.Equals(value) = false) Then
				Me.OnargtnoChanging(value)
				Me.SendPropertyChanging
				Me._argtno = value
				Me.SendPropertyChanged("argtno")
				Me.OnargtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadrgnm() As String
		Get
			Return Me._thadrgnm
		End Get
		Set
			If (String.Equals(Me._thadrgnm, value) = false) Then
				Me.OnthadrgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadrgnm = value
				Me.SendPropertyChanged("thadrgnm")
				Me.OnthadrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgnm() As String
		Get
			Return Me._engdrgnm
		End Get
		Set
			If (String.Equals(Me._engdrgnm, value) = false) Then
				Me.OnengdrgnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgnm = value
				Me.SendPropertyChanged("engdrgnm")
				Me.OnengdrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgexpst", DbType:="SmallInt")>  _
	Public Property drgexpst() As System.Nullable(Of Short)
		Get
			Return Me._drgexpst
		End Get
		Set
			If (Me._drgexpst.Equals(value) = false) Then
				Me.OndrgexpstChanging(value)
				Me.SendPropertyChanging
				Me._drgexpst = value
				Me.SendPropertyChanged("drgexpst")
				Me.OndrgexpstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgbiost", DbType:="SmallInt")>  _
	Public Property drgbiost() As System.Nullable(Of Short)
		Get
			Return Me._drgbiost
		End Get
		Set
			If (Me._drgbiost.Equals(value) = false) Then
				Me.OndrgbiostChanging(value)
				Me.SendPropertyChanging
				Me._drgbiost = value
				Me.SendPropertyChanged("drgbiost")
				Me.OndrgbiostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgnewst", DbType:="SmallInt")>  _
	Public Property drgnewst() As System.Nullable(Of Short)
		Get
			Return Me._drgnewst
		End Get
		Set
			If (Me._drgnewst.Equals(value) = false) Then
				Me.OndrgnewstChanging(value)
				Me.SendPropertyChanging
				Me._drgnewst = value
				Me.SendPropertyChanged("drgnewst")
				Me.OndrgnewstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sqty", DbType:="Int")>  _
	Public Property sqty() As System.Nullable(Of Integer)
		Get
			Return Me._sqty
		End Get
		Set
			If (Me._sqty.Equals(value) = false) Then
				Me.OnsqtyChanging(value)
				Me.SendPropertyChanging
				Me._sqty = value
				Me.SendPropertyChanged("sqty")
				Me.OnsqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitcd", DbType:="Int")>  _
	Public Property sunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sunitcd
		End Get
		Set
			If (Me._sunitcd.Equals(value) = false) Then
				Me.OnsunitcdChanging(value)
				Me.SendPropertyChanging
				Me._sunitcd = value
				Me.SendPropertyChanged("sunitcd")
				Me.OnsunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nqty", DbType:="Int")>  _
	Public Property nqty() As System.Nullable(Of Integer)
		Get
			Return Me._nqty
		End Get
		Set
			If (Me._nqty.Equals(value) = false) Then
				Me.OnnqtyChanging(value)
				Me.SendPropertyChanging
				Me._nqty = value
				Me.SendPropertyChanged("nqty")
				Me.OnnqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nunitcd", DbType:="Int")>  _
	Public Property nunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._nunitcd
		End Get
		Set
			If (Me._nunitcd.Equals(value) = false) Then
				Me.OnnunitcdChanging(value)
				Me.SendPropertyChanging
				Me._nunitcd = value
				Me.SendPropertyChanged("nunitcd")
				Me.OnnunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dh15frgn")>  _
Partial Public Class dh15frgn
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _lcntpcd As String
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _frgncd As System.Nullable(Of Integer)
	
	Private _cntcd As String
	
	Private _pvnabbr As String
	
	Private _frgnst As System.Nullable(Of Short)
	
	Private _frgnpst As System.Nullable(Of Short)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnfrgncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfrgncdChanged()
    End Sub
    Partial Private Sub OncntcdChanging(value As String)
    End Sub
    Partial Private Sub OncntcdChanged()
    End Sub
    Partial Private Sub OnpvnabbrChanging(value As String)
    End Sub
    Partial Private Sub OnpvnabbrChanged()
    End Sub
    Partial Private Sub OnfrgnstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnfrgnstChanged()
    End Sub
    Partial Private Sub OnfrgnpstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnfrgnpstChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd", DbType:="Int")>  _
	Public Property frgncd() As System.Nullable(Of Integer)
		Get
			Return Me._frgncd
		End Get
		Set
			If (Me._frgncd.Equals(value) = false) Then
				Me.OnfrgncdChanging(value)
				Me.SendPropertyChanging
				Me._frgncd = value
				Me.SendPropertyChanged("frgncd")
				Me.OnfrgncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cntcd", DbType:="Char(3)")>  _
	Public Property cntcd() As String
		Get
			Return Me._cntcd
		End Get
		Set
			If (String.Equals(Me._cntcd, value) = false) Then
				Me.OncntcdChanging(value)
				Me.SendPropertyChanging
				Me._cntcd = value
				Me.SendPropertyChanged("cntcd")
				Me.OncntcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnabbr", DbType:="VarChar(5)")>  _
	Public Property pvnabbr() As String
		Get
			Return Me._pvnabbr
		End Get
		Set
			If (String.Equals(Me._pvnabbr, value) = false) Then
				Me.OnpvnabbrChanging(value)
				Me.SendPropertyChanging
				Me._pvnabbr = value
				Me.SendPropertyChanged("pvnabbr")
				Me.OnpvnabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgnst", DbType:="SmallInt")>  _
	Public Property frgnst() As System.Nullable(Of Short)
		Get
			Return Me._frgnst
		End Get
		Set
			If (Me._frgnst.Equals(value) = false) Then
				Me.OnfrgnstChanging(value)
				Me.SendPropertyChanging
				Me._frgnst = value
				Me.SendPropertyChanged("frgnst")
				Me.OnfrgnstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgnpst", DbType:="SmallInt")>  _
	Public Property frgnpst() As System.Nullable(Of Short)
		Get
			Return Me._frgnpst
		End Get
		Set
			If (Me._frgnpst.Equals(value) = false) Then
				Me.OnfrgnpstChanging(value)
				Me.SendPropertyChanging
				Me._frgnpst = value
				Me.SendPropertyChanged("frgnpst")
				Me.OnfrgnpstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dh15rqtdt")>  _
Partial Public Class dh15rqtdt
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rid As System.Nullable(Of Short)
	
	Private _iowacd As String
	
	Private _gradecd As System.Nullable(Of Integer)
	
	Private _frgncd As System.Nullable(Of Integer)
	
	Private _cntcd As String
	
	Private _cnsdcd As System.Nullable(Of Short)
	
	Private _frgnappno As String
	
	Private _phm15dgt As String
	
	Private _trdpdnm As String
	
	Private _frgncd2 As System.Nullable(Of Integer)
	
	Private _cntcd2 As String
	
	Private _filename As String
	
	Private _webid As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OniowacdChanging(value As String)
    End Sub
    Partial Private Sub OniowacdChanged()
    End Sub
    Partial Private Sub OngradecdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OngradecdChanged()
    End Sub
    Partial Private Sub OnfrgncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfrgncdChanged()
    End Sub
    Partial Private Sub OncntcdChanging(value As String)
    End Sub
    Partial Private Sub OncntcdChanged()
    End Sub
    Partial Private Sub OncnsdcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncnsdcdChanged()
    End Sub
    Partial Private Sub OnfrgnappnoChanging(value As String)
    End Sub
    Partial Private Sub OnfrgnappnoChanged()
    End Sub
    Partial Private Sub Onphm15dgtChanging(value As String)
    End Sub
    Partial Private Sub Onphm15dgtChanged()
    End Sub
    Partial Private Sub OntrdpdnmChanging(value As String)
    End Sub
    Partial Private Sub OntrdpdnmChanged()
    End Sub
    Partial Private Sub Onfrgncd2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onfrgncd2Changed()
    End Sub
    Partial Private Sub Oncntcd2Changing(value As String)
    End Sub
    Partial Private Sub Oncntcd2Changed()
    End Sub
    Partial Private Sub OnfilenameChanging(value As String)
    End Sub
    Partial Private Sub OnfilenameChanged()
    End Sub
    Partial Private Sub OnwebidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnwebidChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="SmallInt")>  _
	Public Property rid() As System.Nullable(Of Short)
		Get
			Return Me._rid
		End Get
		Set
			If (Me._rid.Equals(value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowacd", DbType:="VarChar(16)")>  _
	Public Property iowacd() As String
		Get
			Return Me._iowacd
		End Get
		Set
			If (String.Equals(Me._iowacd, value) = false) Then
				Me.OniowacdChanging(value)
				Me.SendPropertyChanging
				Me._iowacd = value
				Me.SendPropertyChanged("iowacd")
				Me.OniowacdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gradecd", DbType:="Int")>  _
	Public Property gradecd() As System.Nullable(Of Integer)
		Get
			Return Me._gradecd
		End Get
		Set
			If (Me._gradecd.Equals(value) = false) Then
				Me.OngradecdChanging(value)
				Me.SendPropertyChanging
				Me._gradecd = value
				Me.SendPropertyChanged("gradecd")
				Me.OngradecdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd", DbType:="Int")>  _
	Public Property frgncd() As System.Nullable(Of Integer)
		Get
			Return Me._frgncd
		End Get
		Set
			If (Me._frgncd.Equals(value) = false) Then
				Me.OnfrgncdChanging(value)
				Me.SendPropertyChanging
				Me._frgncd = value
				Me.SendPropertyChanged("frgncd")
				Me.OnfrgncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cntcd", DbType:="Char(3)")>  _
	Public Property cntcd() As String
		Get
			Return Me._cntcd
		End Get
		Set
			If (String.Equals(Me._cntcd, value) = false) Then
				Me.OncntcdChanging(value)
				Me.SendPropertyChanging
				Me._cntcd = value
				Me.SendPropertyChanged("cntcd")
				Me.OncntcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnsdcd", DbType:="SmallInt")>  _
	Public Property cnsdcd() As System.Nullable(Of Short)
		Get
			Return Me._cnsdcd
		End Get
		Set
			If (Me._cnsdcd.Equals(value) = false) Then
				Me.OncnsdcdChanging(value)
				Me.SendPropertyChanging
				Me._cnsdcd = value
				Me.SendPropertyChanged("cnsdcd")
				Me.OncnsdcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgnappno", DbType:="VarChar(30)")>  _
	Public Property frgnappno() As String
		Get
			Return Me._frgnappno
		End Get
		Set
			If (String.Equals(Me._frgnappno, value) = false) Then
				Me.OnfrgnappnoChanging(value)
				Me.SendPropertyChanging
				Me._frgnappno = value
				Me.SendPropertyChanged("frgnappno")
				Me.OnfrgnappnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phm15dgt", DbType:="VarChar(15)")>  _
	Public Property phm15dgt() As String
		Get
			Return Me._phm15dgt
		End Get
		Set
			If (String.Equals(Me._phm15dgt, value) = false) Then
				Me.Onphm15dgtChanging(value)
				Me.SendPropertyChanging
				Me._phm15dgt = value
				Me.SendPropertyChanged("phm15dgt")
				Me.Onphm15dgtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trdpdnm", DbType:="VarChar(250)")>  _
	Public Property trdpdnm() As String
		Get
			Return Me._trdpdnm
		End Get
		Set
			If (String.Equals(Me._trdpdnm, value) = false) Then
				Me.OntrdpdnmChanging(value)
				Me.SendPropertyChanging
				Me._trdpdnm = value
				Me.SendPropertyChanged("trdpdnm")
				Me.OntrdpdnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd2", DbType:="Int")>  _
	Public Property frgncd2() As System.Nullable(Of Integer)
		Get
			Return Me._frgncd2
		End Get
		Set
			If (Me._frgncd2.Equals(value) = false) Then
				Me.Onfrgncd2Changing(value)
				Me.SendPropertyChanging
				Me._frgncd2 = value
				Me.SendPropertyChanged("frgncd2")
				Me.Onfrgncd2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cntcd2", DbType:="Char(3)")>  _
	Public Property cntcd2() As String
		Get
			Return Me._cntcd2
		End Get
		Set
			If (String.Equals(Me._cntcd2, value) = false) Then
				Me.Oncntcd2Changing(value)
				Me.SendPropertyChanging
				Me._cntcd2 = value
				Me.SendPropertyChanged("cntcd2")
				Me.Oncntcd2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_filename", DbType:="VarChar(70)")>  _
	Public Property filename() As String
		Get
			Return Me._filename
		End Get
		Set
			If (String.Equals(Me._filename, value) = false) Then
				Me.OnfilenameChanging(value)
				Me.SendPropertyChanging
				Me._filename = value
				Me.SendPropertyChanged("filename")
				Me.OnfilenameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_webid", DbType:="Int")>  _
	Public Property webid() As System.Nullable(Of Integer)
		Get
			Return Me._webid
		End Get
		Set
			If (Me._webid.Equals(value) = false) Then
				Me.OnwebidChanging(value)
				Me.SendPropertyChanging
				Me._webid = value
				Me.SendPropertyChanged("webid")
				Me.OnwebidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dh15tdgt")>  _
Partial Public Class dh15tdgt
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _lcntpcd As String
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _phm15dgt As String
	
	Private _pvnabbr As String
	
	Private _iowacd As String
	
	Private _gradecd As System.Nullable(Of Integer)
	
	Private _frgncd As System.Nullable(Of Integer)
	
	Private _cntcd As String
	
	Private _frgnappno As String
	
	Private _cnccd As System.Nullable(Of Short)
	
	Private _cncdate As System.Nullable(Of Date)
	
	Private _cnccause As String
	
	Private _trdpdnm As String
	
	Private _frgncd2 As System.Nullable(Of Integer)
	
	Private _cntcd2 As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub Onphm15dgtChanging(value As String)
    End Sub
    Partial Private Sub Onphm15dgtChanged()
    End Sub
    Partial Private Sub OnpvnabbrChanging(value As String)
    End Sub
    Partial Private Sub OnpvnabbrChanged()
    End Sub
    Partial Private Sub OniowacdChanging(value As String)
    End Sub
    Partial Private Sub OniowacdChanged()
    End Sub
    Partial Private Sub OngradecdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OngradecdChanged()
    End Sub
    Partial Private Sub OnfrgncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfrgncdChanged()
    End Sub
    Partial Private Sub OncntcdChanging(value As String)
    End Sub
    Partial Private Sub OncntcdChanged()
    End Sub
    Partial Private Sub OnfrgnappnoChanging(value As String)
    End Sub
    Partial Private Sub OnfrgnappnoChanged()
    End Sub
    Partial Private Sub OncnccdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncnccdChanged()
    End Sub
    Partial Private Sub OncncdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncncdateChanged()
    End Sub
    Partial Private Sub OncnccauseChanging(value As String)
    End Sub
    Partial Private Sub OncnccauseChanged()
    End Sub
    Partial Private Sub OntrdpdnmChanging(value As String)
    End Sub
    Partial Private Sub OntrdpdnmChanged()
    End Sub
    Partial Private Sub Onfrgncd2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onfrgncd2Changed()
    End Sub
    Partial Private Sub Oncntcd2Changing(value As String)
    End Sub
    Partial Private Sub Oncntcd2Changed()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phm15dgt", DbType:="NVarChar(MAX)")>  _
	Public Property phm15dgt() As String
		Get
			Return Me._phm15dgt
		End Get
		Set
			If (String.Equals(Me._phm15dgt, value) = false) Then
				Me.Onphm15dgtChanging(value)
				Me.SendPropertyChanging
				Me._phm15dgt = value
				Me.SendPropertyChanged("phm15dgt")
				Me.Onphm15dgtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnabbr", DbType:="VarChar(5)")>  _
	Public Property pvnabbr() As String
		Get
			Return Me._pvnabbr
		End Get
		Set
			If (String.Equals(Me._pvnabbr, value) = false) Then
				Me.OnpvnabbrChanging(value)
				Me.SendPropertyChanging
				Me._pvnabbr = value
				Me.SendPropertyChanged("pvnabbr")
				Me.OnpvnabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowacd", DbType:="NVarChar(MAX)")>  _
	Public Property iowacd() As String
		Get
			Return Me._iowacd
		End Get
		Set
			If (String.Equals(Me._iowacd, value) = false) Then
				Me.OniowacdChanging(value)
				Me.SendPropertyChanging
				Me._iowacd = value
				Me.SendPropertyChanged("iowacd")
				Me.OniowacdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gradecd", DbType:="Int")>  _
	Public Property gradecd() As System.Nullable(Of Integer)
		Get
			Return Me._gradecd
		End Get
		Set
			If (Me._gradecd.Equals(value) = false) Then
				Me.OngradecdChanging(value)
				Me.SendPropertyChanging
				Me._gradecd = value
				Me.SendPropertyChanged("gradecd")
				Me.OngradecdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd", DbType:="Int")>  _
	Public Property frgncd() As System.Nullable(Of Integer)
		Get
			Return Me._frgncd
		End Get
		Set
			If (Me._frgncd.Equals(value) = false) Then
				Me.OnfrgncdChanging(value)
				Me.SendPropertyChanging
				Me._frgncd = value
				Me.SendPropertyChanged("frgncd")
				Me.OnfrgncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cntcd", DbType:="Char(3)")>  _
	Public Property cntcd() As String
		Get
			Return Me._cntcd
		End Get
		Set
			If (String.Equals(Me._cntcd, value) = false) Then
				Me.OncntcdChanging(value)
				Me.SendPropertyChanging
				Me._cntcd = value
				Me.SendPropertyChanged("cntcd")
				Me.OncntcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgnappno", DbType:="NVarChar(MAX)")>  _
	Public Property frgnappno() As String
		Get
			Return Me._frgnappno
		End Get
		Set
			If (String.Equals(Me._frgnappno, value) = false) Then
				Me.OnfrgnappnoChanging(value)
				Me.SendPropertyChanging
				Me._frgnappno = value
				Me.SendPropertyChanged("frgnappno")
				Me.OnfrgnappnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccd", DbType:="SmallInt")>  _
	Public Property cnccd() As System.Nullable(Of Short)
		Get
			Return Me._cnccd
		End Get
		Set
			If (Me._cnccd.Equals(value) = false) Then
				Me.OncnccdChanging(value)
				Me.SendPropertyChanging
				Me._cnccd = value
				Me.SendPropertyChanged("cnccd")
				Me.OncnccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncdate", DbType:="Date")>  _
	Public Property cncdate() As System.Nullable(Of Date)
		Get
			Return Me._cncdate
		End Get
		Set
			If (Me._cncdate.Equals(value) = false) Then
				Me.OncncdateChanging(value)
				Me.SendPropertyChanging
				Me._cncdate = value
				Me.SendPropertyChanged("cncdate")
				Me.OncncdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccause", DbType:="NVarChar(MAX)")>  _
	Public Property cnccause() As String
		Get
			Return Me._cnccause
		End Get
		Set
			If (String.Equals(Me._cnccause, value) = false) Then
				Me.OncnccauseChanging(value)
				Me.SendPropertyChanging
				Me._cnccause = value
				Me.SendPropertyChanged("cnccause")
				Me.OncnccauseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trdpdnm", DbType:="NVarChar(MAX)")>  _
	Public Property trdpdnm() As String
		Get
			Return Me._trdpdnm
		End Get
		Set
			If (String.Equals(Me._trdpdnm, value) = false) Then
				Me.OntrdpdnmChanging(value)
				Me.SendPropertyChanging
				Me._trdpdnm = value
				Me.SendPropertyChanged("trdpdnm")
				Me.OntrdpdnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd2", DbType:="Int")>  _
	Public Property frgncd2() As System.Nullable(Of Integer)
		Get
			Return Me._frgncd2
		End Get
		Set
			If (Me._frgncd2.Equals(value) = false) Then
				Me.Onfrgncd2Changing(value)
				Me.SendPropertyChanging
				Me._frgncd2 = value
				Me.SendPropertyChanged("frgncd2")
				Me.Onfrgncd2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cntcd2", DbType:="Char(3)")>  _
	Public Property cntcd2() As String
		Get
			Return Me._cntcd2
		End Get
		Set
			If (String.Equals(Me._cntcd2, value) = false) Then
				Me.Oncntcd2Changing(value)
				Me.SendPropertyChanging
				Me._cntcd2 = value
				Me.SendPropertyChanged("cntcd2")
				Me.Oncntcd2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dh15tpdcfrgn")>  _
Partial Public Class dh15tpdcfrgn
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _frgncd As System.Nullable(Of Integer)
	
	Private _prefixcd As System.Nullable(Of Short)
	
	Private _engfrgnnm As String
	
	Private _thafrgnnm As String
	
	Private _suffixcd As System.Nullable(Of Short)
	
	Private _frgnst As System.Nullable(Of Short)
	
	Private _frgnpst As System.Nullable(Of Short)
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnfrgncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfrgncdChanged()
    End Sub
    Partial Private Sub OnprefixcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnprefixcdChanged()
    End Sub
    Partial Private Sub OnengfrgnnmChanging(value As String)
    End Sub
    Partial Private Sub OnengfrgnnmChanged()
    End Sub
    Partial Private Sub OnthafrgnnmChanging(value As String)
    End Sub
    Partial Private Sub OnthafrgnnmChanged()
    End Sub
    Partial Private Sub OnsuffixcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnsuffixcdChanged()
    End Sub
    Partial Private Sub OnfrgnstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnfrgnstChanged()
    End Sub
    Partial Private Sub OnfrgnpstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnfrgnpstChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd", DbType:="Int")>  _
	Public Property frgncd() As System.Nullable(Of Integer)
		Get
			Return Me._frgncd
		End Get
		Set
			If (Me._frgncd.Equals(value) = false) Then
				Me.OnfrgncdChanging(value)
				Me.SendPropertyChanging
				Me._frgncd = value
				Me.SendPropertyChanged("frgncd")
				Me.OnfrgncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prefixcd", DbType:="SmallInt")>  _
	Public Property prefixcd() As System.Nullable(Of Short)
		Get
			Return Me._prefixcd
		End Get
		Set
			If (Me._prefixcd.Equals(value) = false) Then
				Me.OnprefixcdChanging(value)
				Me.SendPropertyChanging
				Me._prefixcd = value
				Me.SendPropertyChanged("prefixcd")
				Me.OnprefixcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engfrgnnm", DbType:="VarChar(150)")>  _
	Public Property engfrgnnm() As String
		Get
			Return Me._engfrgnnm
		End Get
		Set
			If (String.Equals(Me._engfrgnnm, value) = false) Then
				Me.OnengfrgnnmChanging(value)
				Me.SendPropertyChanging
				Me._engfrgnnm = value
				Me.SendPropertyChanged("engfrgnnm")
				Me.OnengfrgnnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thafrgnnm", DbType:="VarChar(150)")>  _
	Public Property thafrgnnm() As String
		Get
			Return Me._thafrgnnm
		End Get
		Set
			If (String.Equals(Me._thafrgnnm, value) = false) Then
				Me.OnthafrgnnmChanging(value)
				Me.SendPropertyChanging
				Me._thafrgnnm = value
				Me.SendPropertyChanged("thafrgnnm")
				Me.OnthafrgnnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suffixcd", DbType:="SmallInt")>  _
	Public Property suffixcd() As System.Nullable(Of Short)
		Get
			Return Me._suffixcd
		End Get
		Set
			If (Me._suffixcd.Equals(value) = false) Then
				Me.OnsuffixcdChanging(value)
				Me.SendPropertyChanging
				Me._suffixcd = value
				Me.SendPropertyChanged("suffixcd")
				Me.OnsuffixcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgnst", DbType:="SmallInt")>  _
	Public Property frgnst() As System.Nullable(Of Short)
		Get
			Return Me._frgnst
		End Get
		Set
			If (Me._frgnst.Equals(value) = false) Then
				Me.OnfrgnstChanging(value)
				Me.SendPropertyChanging
				Me._frgnst = value
				Me.SendPropertyChanged("frgnst")
				Me.OnfrgnstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgnpst", DbType:="SmallInt")>  _
	Public Property frgnpst() As System.Nullable(Of Short)
		Get
			Return Me._frgnpst
		End Get
		Set
			If (Me._frgnpst.Equals(value) = false) Then
				Me.OnfrgnpstChanging(value)
				Me.SendPropertyChanging
				Me._frgnpst = value
				Me.SendPropertyChanged("frgnpst")
				Me.OnfrgnpstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drsampfmlno")>  _
Partial Public Class drsampfmlno
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _flineno As System.Nullable(Of Integer)
	
	Private _drgqty As System.Nullable(Of Decimal)
	
	Private _sunitcd As System.Nullable(Of Integer)
	
	Private _drgcdt As String
	
	Private _drgperunit As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnflinenoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnflinenoChanged()
    End Sub
    Partial Private Sub OndrgqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OndrgqtyChanged()
    End Sub
    Partial Private Sub OnsunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsunitcdChanged()
    End Sub
    Partial Private Sub OndrgcdtChanging(value As String)
    End Sub
    Partial Private Sub OndrgcdtChanged()
    End Sub
    Partial Private Sub OndrgperunitChanging(value As String)
    End Sub
    Partial Private Sub OndrgperunitChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flineno", DbType:="Int")>  _
	Public Property flineno() As System.Nullable(Of Integer)
		Get
			Return Me._flineno
		End Get
		Set
			If (Me._flineno.Equals(value) = false) Then
				Me.OnflinenoChanging(value)
				Me.SendPropertyChanging
				Me._flineno = value
				Me.SendPropertyChanged("flineno")
				Me.OnflinenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgqty", DbType:="Decimal(9,5)")>  _
	Public Property drgqty() As System.Nullable(Of Decimal)
		Get
			Return Me._drgqty
		End Get
		Set
			If (Me._drgqty.Equals(value) = false) Then
				Me.OndrgqtyChanging(value)
				Me.SendPropertyChanging
				Me._drgqty = value
				Me.SendPropertyChanged("drgqty")
				Me.OndrgqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitcd", DbType:="Int")>  _
	Public Property sunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sunitcd
		End Get
		Set
			If (Me._sunitcd.Equals(value) = false) Then
				Me.OnsunitcdChanging(value)
				Me.SendPropertyChanging
				Me._sunitcd = value
				Me.SendPropertyChanged("sunitcd")
				Me.OnsunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgcdt", DbType:="NVarChar(MAX)")>  _
	Public Property drgcdt() As String
		Get
			Return Me._drgcdt
		End Get
		Set
			If (String.Equals(Me._drgcdt, value) = false) Then
				Me.OndrgcdtChanging(value)
				Me.SendPropertyChanging
				Me._drgcdt = value
				Me.SendPropertyChanged("drgcdt")
				Me.OndrgcdtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgperunit", DbType:="NVarChar(MAX)")>  _
	Public Property drgperunit() As String
		Get
			Return Me._drgperunit
		End Get
		Set
			If (String.Equals(Me._drgperunit, value) = false) Then
				Me.OndrgperunitChanging(value)
				Me.SendPropertyChanging
				Me._drgperunit = value
				Me.SendPropertyChanged("drgperunit")
				Me.OndrgperunitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drimpdrg")>  _
Partial Public Class drimpdrg
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rid As System.Nullable(Of Integer)
	
	Private _thadrgnm As String
	
	Private _engdrgnm As String
	
	Private _dsqty As System.Nullable(Of Decimal)
	
	Private _dsunitcd As System.Nullable(Of Integer)
	
	Private _pqty As System.Nullable(Of Decimal)
	
	Private _punitcd As System.Nullable(Of Integer)
	
	Private _packsize As System.Nullable(Of Decimal)
	
	Private _packunitcd As System.Nullable(Of Integer)
	
	Private _impqty As System.Nullable(Of Decimal)
	
	Private _impunitcd As System.Nullable(Of Integer)
	
	Private _frgncd As System.Nullable(Of Integer)
	
	Private _cntcd As String
	
	Private _dsgcd As System.Nullable(Of Short)
	
	Private _potency As String
	
	Private _detail As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnthadrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadrgnmChanged()
    End Sub
    Partial Private Sub OnengdrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgnmChanged()
    End Sub
    Partial Private Sub OndsqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OndsqtyChanged()
    End Sub
    Partial Private Sub OndsunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OndsunitcdChanged()
    End Sub
    Partial Private Sub OnpqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnpqtyChanged()
    End Sub
    Partial Private Sub OnpunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpunitcdChanged()
    End Sub
    Partial Private Sub OnpacksizeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnpacksizeChanged()
    End Sub
    Partial Private Sub OnpackunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpackunitcdChanged()
    End Sub
    Partial Private Sub OnimpqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnimpqtyChanged()
    End Sub
    Partial Private Sub OnimpunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnimpunitcdChanged()
    End Sub
    Partial Private Sub OnfrgncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfrgncdChanged()
    End Sub
    Partial Private Sub OncntcdChanging(value As String)
    End Sub
    Partial Private Sub OncntcdChanged()
    End Sub
    Partial Private Sub OndsgcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OndsgcdChanged()
    End Sub
    Partial Private Sub OnpotencyChanging(value As String)
    End Sub
    Partial Private Sub OnpotencyChanged()
    End Sub
    Partial Private Sub OndetailChanging(value As String)
    End Sub
    Partial Private Sub OndetailChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="Int")>  _
	Public Property rid() As System.Nullable(Of Integer)
		Get
			Return Me._rid
		End Get
		Set
			If (Me._rid.Equals(value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadrgnm() As String
		Get
			Return Me._thadrgnm
		End Get
		Set
			If (String.Equals(Me._thadrgnm, value) = false) Then
				Me.OnthadrgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadrgnm = value
				Me.SendPropertyChanged("thadrgnm")
				Me.OnthadrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgnm() As String
		Get
			Return Me._engdrgnm
		End Get
		Set
			If (String.Equals(Me._engdrgnm, value) = false) Then
				Me.OnengdrgnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgnm = value
				Me.SendPropertyChanged("engdrgnm")
				Me.OnengdrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsqty", DbType:="Decimal(12,4)")>  _
	Public Property dsqty() As System.Nullable(Of Decimal)
		Get
			Return Me._dsqty
		End Get
		Set
			If (Me._dsqty.Equals(value) = false) Then
				Me.OndsqtyChanging(value)
				Me.SendPropertyChanging
				Me._dsqty = value
				Me.SendPropertyChanged("dsqty")
				Me.OndsqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsunitcd", DbType:="Int")>  _
	Public Property dsunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._dsunitcd
		End Get
		Set
			If (Me._dsunitcd.Equals(value) = false) Then
				Me.OndsunitcdChanging(value)
				Me.SendPropertyChanging
				Me._dsunitcd = value
				Me.SendPropertyChanged("dsunitcd")
				Me.OndsunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pqty", DbType:="Decimal(12,4)")>  _
	Public Property pqty() As System.Nullable(Of Decimal)
		Get
			Return Me._pqty
		End Get
		Set
			If (Me._pqty.Equals(value) = false) Then
				Me.OnpqtyChanging(value)
				Me.SendPropertyChanging
				Me._pqty = value
				Me.SendPropertyChanged("pqty")
				Me.OnpqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_punitcd", DbType:="Int")>  _
	Public Property punitcd() As System.Nullable(Of Integer)
		Get
			Return Me._punitcd
		End Get
		Set
			If (Me._punitcd.Equals(value) = false) Then
				Me.OnpunitcdChanging(value)
				Me.SendPropertyChanging
				Me._punitcd = value
				Me.SendPropertyChanged("punitcd")
				Me.OnpunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_packsize", DbType:="Decimal(12,4)")>  _
	Public Property packsize() As System.Nullable(Of Decimal)
		Get
			Return Me._packsize
		End Get
		Set
			If (Me._packsize.Equals(value) = false) Then
				Me.OnpacksizeChanging(value)
				Me.SendPropertyChanging
				Me._packsize = value
				Me.SendPropertyChanged("packsize")
				Me.OnpacksizeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_packunitcd", DbType:="Int")>  _
	Public Property packunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._packunitcd
		End Get
		Set
			If (Me._packunitcd.Equals(value) = false) Then
				Me.OnpackunitcdChanging(value)
				Me.SendPropertyChanging
				Me._packunitcd = value
				Me.SendPropertyChanged("packunitcd")
				Me.OnpackunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_impqty", DbType:="Decimal(12,4)")>  _
	Public Property impqty() As System.Nullable(Of Decimal)
		Get
			Return Me._impqty
		End Get
		Set
			If (Me._impqty.Equals(value) = false) Then
				Me.OnimpqtyChanging(value)
				Me.SendPropertyChanging
				Me._impqty = value
				Me.SendPropertyChanged("impqty")
				Me.OnimpqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_impunitcd", DbType:="Int")>  _
	Public Property impunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._impunitcd
		End Get
		Set
			If (Me._impunitcd.Equals(value) = false) Then
				Me.OnimpunitcdChanging(value)
				Me.SendPropertyChanging
				Me._impunitcd = value
				Me.SendPropertyChanged("impunitcd")
				Me.OnimpunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd", DbType:="Int")>  _
	Public Property frgncd() As System.Nullable(Of Integer)
		Get
			Return Me._frgncd
		End Get
		Set
			If (Me._frgncd.Equals(value) = false) Then
				Me.OnfrgncdChanging(value)
				Me.SendPropertyChanging
				Me._frgncd = value
				Me.SendPropertyChanged("frgncd")
				Me.OnfrgncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cntcd", DbType:="Char(3)")>  _
	Public Property cntcd() As String
		Get
			Return Me._cntcd
		End Get
		Set
			If (String.Equals(Me._cntcd, value) = false) Then
				Me.OncntcdChanging(value)
				Me.SendPropertyChanging
				Me._cntcd = value
				Me.SendPropertyChanged("cntcd")
				Me.OncntcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsgcd", DbType:="SmallInt")>  _
	Public Property dsgcd() As System.Nullable(Of Short)
		Get
			Return Me._dsgcd
		End Get
		Set
			If (Me._dsgcd.Equals(value) = false) Then
				Me.OndsgcdChanging(value)
				Me.SendPropertyChanging
				Me._dsgcd = value
				Me.SendPropertyChanged("dsgcd")
				Me.OndsgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_potency", DbType:="NVarChar(MAX)")>  _
	Public Property potency() As String
		Get
			Return Me._potency
		End Get
		Set
			If (String.Equals(Me._potency, value) = false) Then
				Me.OnpotencyChanging(value)
				Me.SendPropertyChanging
				Me._potency = value
				Me.SendPropertyChanged("potency")
				Me.OnpotencyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_detail", DbType:="NVarChar(MAX)")>  _
	Public Property detail() As String
		Get
			Return Me._detail
		End Get
		Set
			If (String.Equals(Me._detail, value) = false) Then
				Me.OndetailChanging(value)
				Me.SendPropertyChanging
				Me._detail = value
				Me.SendPropertyChanged("detail")
				Me.OndetailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drimpfrgn")>  _
Partial Public Class drimpfrgn
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rid As System.Nullable(Of Integer)
	
	Private _frid As System.Nullable(Of Short)
	
	Private _engfrgnnm As String
	
	Private _addr As String
	
	Private _cntcd As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnfridChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnfridChanged()
    End Sub
    Partial Private Sub OnengfrgnnmChanging(value As String)
    End Sub
    Partial Private Sub OnengfrgnnmChanged()
    End Sub
    Partial Private Sub OnaddrChanging(value As String)
    End Sub
    Partial Private Sub OnaddrChanged()
    End Sub
    Partial Private Sub OncntcdChanging(value As String)
    End Sub
    Partial Private Sub OncntcdChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="Int")>  _
	Public Property rid() As System.Nullable(Of Integer)
		Get
			Return Me._rid
		End Get
		Set
			If (Me._rid.Equals(value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frid", DbType:="SmallInt")>  _
	Public Property frid() As System.Nullable(Of Short)
		Get
			Return Me._frid
		End Get
		Set
			If (Me._frid.Equals(value) = false) Then
				Me.OnfridChanging(value)
				Me.SendPropertyChanging
				Me._frid = value
				Me.SendPropertyChanged("frid")
				Me.OnfridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engfrgnnm", DbType:="NVarChar(MAX)")>  _
	Public Property engfrgnnm() As String
		Get
			Return Me._engfrgnnm
		End Get
		Set
			If (String.Equals(Me._engfrgnnm, value) = false) Then
				Me.OnengfrgnnmChanging(value)
				Me.SendPropertyChanging
				Me._engfrgnnm = value
				Me.SendPropertyChanged("engfrgnnm")
				Me.OnengfrgnnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_addr", DbType:="NVarChar(MAX)")>  _
	Public Property addr() As String
		Get
			Return Me._addr
		End Get
		Set
			If (String.Equals(Me._addr, value) = false) Then
				Me.OnaddrChanging(value)
				Me.SendPropertyChanging
				Me._addr = value
				Me.SendPropertyChanged("addr")
				Me.OnaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cntcd", DbType:="Char(3)")>  _
	Public Property cntcd() As String
		Get
			Return Me._cntcd
		End Get
		Set
			If (String.Equals(Me._cntcd, value) = false) Then
				Me.OncntcdChanging(value)
				Me.SendPropertyChanging
				Me._cntcd = value
				Me.SendPropertyChanged("cntcd")
				Me.OncntcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dacnc")>  _
Partial Public Class dacnc
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _cnccd As System.Nullable(Of Integer)
	
	Private _cncnm As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OncnccdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncnccdChanged()
    End Sub
    Partial Private Sub OncncnmChanging(value As String)
    End Sub
    Partial Private Sub OncncnmChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccd", DbType:="Int")>  _
	Public Property cnccd() As System.Nullable(Of Integer)
		Get
			Return Me._cnccd
		End Get
		Set
			If (Me._cnccd.Equals(value) = false) Then
				Me.OncnccdChanging(value)
				Me.SendPropertyChanging
				Me._cnccd = value
				Me.SendPropertyChanged("cnccd")
				Me.OncnccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncnm", DbType:="NVarChar(MAX)")>  _
	Public Property cncnm() As String
		Get
			Return Me._cncnm
		End Get
		Set
			If (String.Equals(Me._cncnm, value) = false) Then
				Me.OncncnmChanging(value)
				Me.SendPropertyChanging
				Me._cncnm = value
				Me.SendPropertyChanged("cncnm")
				Me.OncncnmChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dacnccs")>  _
Partial Public Class dacncc
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _cnccscd As Short
	
	Private _cnccsnm As String
	
	Private _cnccsst As System.Nullable(Of Short)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OncnccscdChanging(value As Short)
    End Sub
    Partial Private Sub OncnccscdChanged()
    End Sub
    Partial Private Sub OncnccsnmChanging(value As String)
    End Sub
    Partial Private Sub OncnccsnmChanged()
    End Sub
    Partial Private Sub OncnccsstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncnccsstChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccscd", DbType:="SmallInt NOT NULL")>  _
	Public Property cnccscd() As Short
		Get
			Return Me._cnccscd
		End Get
		Set
			If ((Me._cnccscd = value)  _
						= false) Then
				Me.OncnccscdChanging(value)
				Me.SendPropertyChanging
				Me._cnccscd = value
				Me.SendPropertyChanged("cnccscd")
				Me.OncnccscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccsnm", DbType:="NVarChar(MAX)")>  _
	Public Property cnccsnm() As String
		Get
			Return Me._cnccsnm
		End Get
		Set
			If (String.Equals(Me._cnccsnm, value) = false) Then
				Me.OncnccsnmChanging(value)
				Me.SendPropertyChanging
				Me._cnccsnm = value
				Me.SendPropertyChanged("cnccsnm")
				Me.OncnccsnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccsst", DbType:="SmallInt")>  _
	Public Property cnccsst() As System.Nullable(Of Short)
		Get
			Return Me._cnccsst
		End Get
		Set
			If (Me._cnccsst.Equals(value) = false) Then
				Me.OncnccsstChanging(value)
				Me.SendPropertyChanging
				Me._cnccsst = value
				Me.SendPropertyChanged("cnccsst")
				Me.OncnccsstChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dacnsd")>  _
Partial Public Class dacnsd
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _cnsdcd As System.Nullable(Of Integer)
	
	Private _cnsdnm As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OncnsdcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncnsdcdChanged()
    End Sub
    Partial Private Sub OncnsdnmChanging(value As String)
    End Sub
    Partial Private Sub OncnsdnmChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnsdcd", DbType:="Int")>  _
	Public Property cnsdcd() As System.Nullable(Of Integer)
		Get
			Return Me._cnsdcd
		End Get
		Set
			If (Me._cnsdcd.Equals(value) = false) Then
				Me.OncnsdcdChanging(value)
				Me.SendPropertyChanging
				Me._cnsdcd = value
				Me.SendPropertyChanged("cnsdcd")
				Me.OncnsdcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnsdnm", DbType:="NVarChar(MAX)")>  _
	Public Property cnsdnm() As String
		Get
			Return Me._cnsdnm
		End Get
		Set
			If (String.Equals(Me._cnsdnm, value) = false) Then
				Me.OncnsdnmChanging(value)
				Me.SendPropertyChanging
				Me._cnsdnm = value
				Me.SendPropertyChanged("cnsdnm")
				Me.OncnsdnmChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dacscd")>  _
Partial Public Class dacscd
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _cscd As System.Nullable(Of Integer)
	
	Private _csnm As String
	
	Private _csst As System.Nullable(Of Integer)
	
	Private _remark As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OncscdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncscdChanged()
    End Sub
    Partial Private Sub OncsnmChanging(value As String)
    End Sub
    Partial Private Sub OncsnmChanged()
    End Sub
    Partial Private Sub OncsstChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncsstChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cscd", DbType:="Int")>  _
	Public Property cscd() As System.Nullable(Of Integer)
		Get
			Return Me._cscd
		End Get
		Set
			If (Me._cscd.Equals(value) = false) Then
				Me.OncscdChanging(value)
				Me.SendPropertyChanging
				Me._cscd = value
				Me.SendPropertyChanged("cscd")
				Me.OncscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_csnm", DbType:="NVarChar(MAX)")>  _
	Public Property csnm() As String
		Get
			Return Me._csnm
		End Get
		Set
			If (String.Equals(Me._csnm, value) = false) Then
				Me.OncsnmChanging(value)
				Me.SendPropertyChanging
				Me._csnm = value
				Me.SendPropertyChanged("csnm")
				Me.OncsnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_csst", DbType:="Int")>  _
	Public Property csst() As System.Nullable(Of Integer)
		Get
			Return Me._csst
		End Get
		Set
			If (Me._csst.Equals(value) = false) Then
				Me.OncsstChanging(value)
				Me.SendPropertyChanging
				Me._csst = value
				Me.SendPropertyChanged("csst")
				Me.OncsstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="NVarChar(MAX)")>  _
	Public Property remark() As String
		Get
			Return Me._remark
		End Get
		Set
			If (String.Equals(Me._remark, value) = false) Then
				Me.OnremarkChanging(value)
				Me.SendPropertyChanging
				Me._remark = value
				Me.SendPropertyChanged("remark")
				Me.OnremarkChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dalcntype")>  _
Partial Public Class dalcntype
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _lcntpcd As String
	
	Private _lcntpnm As String
	
	Private _lcntpnmeng As String
	
	Private _grplcncd As System.Nullable(Of Integer)
	
	Private _useinpvn As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcntpnmChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpnmChanged()
    End Sub
    Partial Private Sub OnlcntpnmengChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpnmengChanged()
    End Sub
    Partial Private Sub OngrplcncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OngrplcncdChanged()
    End Sub
    Partial Private Sub OnuseinpvnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnuseinpvnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpnm", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpnm() As String
		Get
			Return Me._lcntpnm
		End Get
		Set
			If (String.Equals(Me._lcntpnm, value) = false) Then
				Me.OnlcntpnmChanging(value)
				Me.SendPropertyChanging
				Me._lcntpnm = value
				Me.SendPropertyChanged("lcntpnm")
				Me.OnlcntpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpnmeng", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpnmeng() As String
		Get
			Return Me._lcntpnmeng
		End Get
		Set
			If (String.Equals(Me._lcntpnmeng, value) = false) Then
				Me.OnlcntpnmengChanging(value)
				Me.SendPropertyChanging
				Me._lcntpnmeng = value
				Me.SendPropertyChanged("lcntpnmeng")
				Me.OnlcntpnmengChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grplcncd", DbType:="Int")>  _
	Public Property grplcncd() As System.Nullable(Of Integer)
		Get
			Return Me._grplcncd
		End Get
		Set
			If (Me._grplcncd.Equals(value) = false) Then
				Me.OngrplcncdChanging(value)
				Me.SendPropertyChanging
				Me._grplcncd = value
				Me.SendPropertyChanged("grplcncd")
				Me.OngrplcncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_useinpvn", DbType:="Int")>  _
	Public Property useinpvn() As System.Nullable(Of Integer)
		Get
			Return Me._useinpvn
		End Get
		Set
			If (Me._useinpvn.Equals(value) = false) Then
				Me.OnuseinpvnChanging(value)
				Me.SendPropertyChanging
				Me._useinpvn = value
				Me.SendPropertyChanged("useinpvn")
				Me.OnuseinpvnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.daphrcd")>  _
Partial Public Class daphrcd
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _phrcd As System.Nullable(Of Integer)
	
	Private _phrnm As String
	
	Private _lcndtlnm As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnphrcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnphrcdChanged()
    End Sub
    Partial Private Sub OnphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnphrnmChanged()
    End Sub
    Partial Private Sub OnlcndtlnmChanging(value As String)
    End Sub
    Partial Private Sub OnlcndtlnmChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrcd", DbType:="Int")>  _
	Public Property phrcd() As System.Nullable(Of Integer)
		Get
			Return Me._phrcd
		End Get
		Set
			If (Me._phrcd.Equals(value) = false) Then
				Me.OnphrcdChanging(value)
				Me.SendPropertyChanging
				Me._phrcd = value
				Me.SendPropertyChanged("phrcd")
				Me.OnphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrnm", DbType:="NVarChar(MAX)")>  _
	Public Property phrnm() As String
		Get
			Return Me._phrnm
		End Get
		Set
			If (String.Equals(Me._phrnm, value) = false) Then
				Me.OnphrnmChanging(value)
				Me.SendPropertyChanging
				Me._phrnm = value
				Me.SendPropertyChanged("phrnm")
				Me.OnphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcndtlnm", DbType:="NVarChar(MAX)")>  _
	Public Property lcndtlnm() As String
		Get
			Return Me._lcndtlnm
		End Get
		Set
			If (String.Equals(Me._lcndtlnm, value) = false) Then
				Me.OnlcndtlnmChanging(value)
				Me.SendPropertyChanging
				Me._lcndtlnm = value
				Me.SendPropertyChanged("lcndtlnm")
				Me.OnlcndtlnmChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.daweek")>  _
Partial Public Class daweek
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _weekcd As System.Nullable(Of Integer)
	
	Private _weeknm As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnweekcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnweekcdChanged()
    End Sub
    Partial Private Sub OnweeknmChanging(value As String)
    End Sub
    Partial Private Sub OnweeknmChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weekcd", DbType:="Int")>  _
	Public Property weekcd() As System.Nullable(Of Integer)
		Get
			Return Me._weekcd
		End Get
		Set
			If (Me._weekcd.Equals(value) = false) Then
				Me.OnweekcdChanging(value)
				Me.SendPropertyChanging
				Me._weekcd = value
				Me.SendPropertyChanged("weekcd")
				Me.OnweekcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weeknm", DbType:="NVarChar(MAX)")>  _
	Public Property weeknm() As String
		Get
			Return Me._weeknm
		End Get
		Set
			If (String.Equals(Me._weeknm, value) = false) Then
				Me.OnweeknmChanging(value)
				Me.SendPropertyChanging
				Me._weeknm = value
				Me.SendPropertyChanged("weeknm")
				Me.OnweeknmChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.djpctype")>  _
Partial Public Class djpctype
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _jpctpcd As System.Nullable(Of Integer)
	
	Private _jpctpnm As String
	
	Private _jpcyear As System.Nullable(Of Integer)
	
	Private _jpcabbr As String
	
	Private _jpcst As System.Nullable(Of Integer)
	
	Private _stdno As System.Nullable(Of Integer)
	
	Private _notice1 As System.Nullable(Of Integer)
	
	Private _notice2 As System.Nullable(Of Integer)
	
	Private _orderno As System.Nullable(Of Integer)
	
	Private _rqttpcd As System.Nullable(Of Integer)
	
	Private _grpjpctpcd As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnjpctpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnjpctpcdChanged()
    End Sub
    Partial Private Sub OnjpctpnmChanging(value As String)
    End Sub
    Partial Private Sub OnjpctpnmChanged()
    End Sub
    Partial Private Sub OnjpcyearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnjpcyearChanged()
    End Sub
    Partial Private Sub OnjpcabbrChanging(value As String)
    End Sub
    Partial Private Sub OnjpcabbrChanged()
    End Sub
    Partial Private Sub OnjpcstChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnjpcstChanged()
    End Sub
    Partial Private Sub OnstdnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnstdnoChanged()
    End Sub
    Partial Private Sub Onnotice1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onnotice1Changed()
    End Sub
    Partial Private Sub Onnotice2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onnotice2Changed()
    End Sub
    Partial Private Sub OnordernoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnordernoChanged()
    End Sub
    Partial Private Sub OnrqttpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrqttpcdChanged()
    End Sub
    Partial Private Sub OngrpjpctpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OngrpjpctpcdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jpctpcd", DbType:="Int")>  _
	Public Property jpctpcd() As System.Nullable(Of Integer)
		Get
			Return Me._jpctpcd
		End Get
		Set
			If (Me._jpctpcd.Equals(value) = false) Then
				Me.OnjpctpcdChanging(value)
				Me.SendPropertyChanging
				Me._jpctpcd = value
				Me.SendPropertyChanged("jpctpcd")
				Me.OnjpctpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jpctpnm", DbType:="NVarChar(MAX)")>  _
	Public Property jpctpnm() As String
		Get
			Return Me._jpctpnm
		End Get
		Set
			If (String.Equals(Me._jpctpnm, value) = false) Then
				Me.OnjpctpnmChanging(value)
				Me.SendPropertyChanging
				Me._jpctpnm = value
				Me.SendPropertyChanged("jpctpnm")
				Me.OnjpctpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jpcyear", DbType:="Int")>  _
	Public Property jpcyear() As System.Nullable(Of Integer)
		Get
			Return Me._jpcyear
		End Get
		Set
			If (Me._jpcyear.Equals(value) = false) Then
				Me.OnjpcyearChanging(value)
				Me.SendPropertyChanging
				Me._jpcyear = value
				Me.SendPropertyChanged("jpcyear")
				Me.OnjpcyearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jpcabbr", DbType:="NVarChar(MAX)")>  _
	Public Property jpcabbr() As String
		Get
			Return Me._jpcabbr
		End Get
		Set
			If (String.Equals(Me._jpcabbr, value) = false) Then
				Me.OnjpcabbrChanging(value)
				Me.SendPropertyChanging
				Me._jpcabbr = value
				Me.SendPropertyChanged("jpcabbr")
				Me.OnjpcabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jpcst", DbType:="Int")>  _
	Public Property jpcst() As System.Nullable(Of Integer)
		Get
			Return Me._jpcst
		End Get
		Set
			If (Me._jpcst.Equals(value) = false) Then
				Me.OnjpcstChanging(value)
				Me.SendPropertyChanging
				Me._jpcst = value
				Me.SendPropertyChanged("jpcst")
				Me.OnjpcstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stdno", DbType:="Int")>  _
	Public Property stdno() As System.Nullable(Of Integer)
		Get
			Return Me._stdno
		End Get
		Set
			If (Me._stdno.Equals(value) = false) Then
				Me.OnstdnoChanging(value)
				Me.SendPropertyChanging
				Me._stdno = value
				Me.SendPropertyChanged("stdno")
				Me.OnstdnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_notice1", DbType:="Int")>  _
	Public Property notice1() As System.Nullable(Of Integer)
		Get
			Return Me._notice1
		End Get
		Set
			If (Me._notice1.Equals(value) = false) Then
				Me.Onnotice1Changing(value)
				Me.SendPropertyChanging
				Me._notice1 = value
				Me.SendPropertyChanged("notice1")
				Me.Onnotice1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_notice2", DbType:="Int")>  _
	Public Property notice2() As System.Nullable(Of Integer)
		Get
			Return Me._notice2
		End Get
		Set
			If (Me._notice2.Equals(value) = false) Then
				Me.Onnotice2Changing(value)
				Me.SendPropertyChanging
				Me._notice2 = value
				Me.SendPropertyChanged("notice2")
				Me.Onnotice2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_orderno", DbType:="Int")>  _
	Public Property orderno() As System.Nullable(Of Integer)
		Get
			Return Me._orderno
		End Get
		Set
			If (Me._orderno.Equals(value) = false) Then
				Me.OnordernoChanging(value)
				Me.SendPropertyChanging
				Me._orderno = value
				Me.SendPropertyChanged("orderno")
				Me.OnordernoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rqttpcd", DbType:="Int")>  _
	Public Property rqttpcd() As System.Nullable(Of Integer)
		Get
			Return Me._rqttpcd
		End Get
		Set
			If (Me._rqttpcd.Equals(value) = false) Then
				Me.OnrqttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rqttpcd = value
				Me.SendPropertyChanged("rqttpcd")
				Me.OnrqttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grpjpctpcd", DbType:="Int")>  _
	Public Property grpjpctpcd() As System.Nullable(Of Integer)
		Get
			Return Me._grpjpctpcd
		End Get
		Set
			If (Me._grpjpctpcd.Equals(value) = false) Then
				Me.OngrpjpctpcdChanging(value)
				Me.SendPropertyChanging
				Me._grpjpctpcd = value
				Me.SendPropertyChanged("grpjpctpcd")
				Me.OngrpjpctpcdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dramlpart")>  _
Partial Public Class dramlpart
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ampartcd As System.Nullable(Of Integer)
	
	Private _ampartnm As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnampartcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnampartcdChanged()
    End Sub
    Partial Private Sub OnampartnmChanging(value As String)
    End Sub
    Partial Private Sub OnampartnmChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ampartcd", DbType:="Int")>  _
	Public Property ampartcd() As System.Nullable(Of Integer)
		Get
			Return Me._ampartcd
		End Get
		Set
			If (Me._ampartcd.Equals(value) = false) Then
				Me.OnampartcdChanging(value)
				Me.SendPropertyChanging
				Me._ampartcd = value
				Me.SendPropertyChanged("ampartcd")
				Me.OnampartcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ampartnm", DbType:="NVarChar(MAX)")>  _
	Public Property ampartnm() As String
		Get
			Return Me._ampartnm
		End Get
		Set
			If (String.Equals(Me._ampartnm, value) = false) Then
				Me.OnampartnmChanging(value)
				Me.SendPropertyChanging
				Me._ampartnm = value
				Me.SendPropertyChanged("ampartnm")
				Me.OnampartnmChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dramltype")>  _
Partial Public Class dramltype
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _amltpcd As System.Nullable(Of Integer)
	
	Private _amltpnm As String
	
	Private _amltpnmeng As String
	
	Private _amlgrptpcd As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnamltpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnamltpcdChanged()
    End Sub
    Partial Private Sub OnamltpnmChanging(value As String)
    End Sub
    Partial Private Sub OnamltpnmChanged()
    End Sub
    Partial Private Sub OnamltpnmengChanging(value As String)
    End Sub
    Partial Private Sub OnamltpnmengChanged()
    End Sub
    Partial Private Sub OnamlgrptpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnamlgrptpcdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amltpcd", DbType:="Int")>  _
	Public Property amltpcd() As System.Nullable(Of Integer)
		Get
			Return Me._amltpcd
		End Get
		Set
			If (Me._amltpcd.Equals(value) = false) Then
				Me.OnamltpcdChanging(value)
				Me.SendPropertyChanging
				Me._amltpcd = value
				Me.SendPropertyChanged("amltpcd")
				Me.OnamltpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amltpnm", DbType:="NVarChar(MAX)")>  _
	Public Property amltpnm() As String
		Get
			Return Me._amltpnm
		End Get
		Set
			If (String.Equals(Me._amltpnm, value) = false) Then
				Me.OnamltpnmChanging(value)
				Me.SendPropertyChanging
				Me._amltpnm = value
				Me.SendPropertyChanged("amltpnm")
				Me.OnamltpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amltpnmeng", DbType:="NVarChar(MAX)")>  _
	Public Property amltpnmeng() As String
		Get
			Return Me._amltpnmeng
		End Get
		Set
			If (String.Equals(Me._amltpnmeng, value) = false) Then
				Me.OnamltpnmengChanging(value)
				Me.SendPropertyChanging
				Me._amltpnmeng = value
				Me.SendPropertyChanged("amltpnmeng")
				Me.OnamltpnmengChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amlgrptpcd", DbType:="Int")>  _
	Public Property amlgrptpcd() As System.Nullable(Of Integer)
		Get
			Return Me._amlgrptpcd
		End Get
		Set
			If (Me._amlgrptpcd.Equals(value) = false) Then
				Me.OnamlgrptpcdChanging(value)
				Me.SendPropertyChanging
				Me._amlgrptpcd = value
				Me.SendPropertyChanged("amlgrptpcd")
				Me.OnamlgrptpcdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dramlusetp")>  _
Partial Public Class dramlusetp
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _usetpcd As System.Nullable(Of Integer)
	
	Private _usetpnm As String
	
	Private _usetpnmeng As String
	
	Private _catbcd As System.Nullable(Of Short)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnusetpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnusetpcdChanged()
    End Sub
    Partial Private Sub OnusetpnmChanging(value As String)
    End Sub
    Partial Private Sub OnusetpnmChanged()
    End Sub
    Partial Private Sub OnusetpnmengChanging(value As String)
    End Sub
    Partial Private Sub OnusetpnmengChanged()
    End Sub
    Partial Private Sub OncatbcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncatbcdChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usetpcd", DbType:="Int")>  _
	Public Property usetpcd() As System.Nullable(Of Integer)
		Get
			Return Me._usetpcd
		End Get
		Set
			If (Me._usetpcd.Equals(value) = false) Then
				Me.OnusetpcdChanging(value)
				Me.SendPropertyChanging
				Me._usetpcd = value
				Me.SendPropertyChanged("usetpcd")
				Me.OnusetpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usetpnm", DbType:="NVarChar(MAX)")>  _
	Public Property usetpnm() As String
		Get
			Return Me._usetpnm
		End Get
		Set
			If (String.Equals(Me._usetpnm, value) = false) Then
				Me.OnusetpnmChanging(value)
				Me.SendPropertyChanging
				Me._usetpnm = value
				Me.SendPropertyChanged("usetpnm")
				Me.OnusetpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usetpnmeng", DbType:="NVarChar(MAX)")>  _
	Public Property usetpnmeng() As String
		Get
			Return Me._usetpnmeng
		End Get
		Set
			If (String.Equals(Me._usetpnmeng, value) = false) Then
				Me.OnusetpnmengChanging(value)
				Me.SendPropertyChanging
				Me._usetpnmeng = value
				Me.SendPropertyChanged("usetpnmeng")
				Me.OnusetpnmengChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_catbcd", DbType:="SmallInt")>  _
	Public Property catbcd() As System.Nullable(Of Short)
		Get
			Return Me._catbcd
		End Get
		Set
			If (Me._catbcd.Equals(value) = false) Then
				Me.OncatbcdChanging(value)
				Me.SendPropertyChanging
				Me._catbcd = value
				Me.SendPropertyChanged("catbcd")
				Me.OncatbcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drpcboject")>  _
Partial Public Class drpcboject
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _objcd As System.Nullable(Of Short)
	
	Private _objnm As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnobjcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnobjcdChanged()
    End Sub
    Partial Private Sub OnobjnmChanging(value As String)
    End Sub
    Partial Private Sub OnobjnmChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_objcd", DbType:="SmallInt")>  _
	Public Property objcd() As System.Nullable(Of Short)
		Get
			Return Me._objcd
		End Get
		Set
			If (Me._objcd.Equals(value) = false) Then
				Me.OnobjcdChanging(value)
				Me.SendPropertyChanging
				Me._objcd = value
				Me.SendPropertyChanged("objcd")
				Me.OnobjcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_objnm", DbType:="NVarChar(MAX)")>  _
	Public Property objnm() As String
		Get
			Return Me._objnm
		End Get
		Set
			If (String.Equals(Me._objnm, value) = false) Then
				Me.OnobjnmChanging(value)
				Me.SendPropertyChanging
				Me._objnm = value
				Me.SendPropertyChanged("objnm")
				Me.OnobjnmChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drpcbtype")>  _
Partial Public Class drpcbtype
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pcbtpcd As System.Nullable(Of Short)
	
	Private _pcbtpnm As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpcbtpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpcbtpcdChanged()
    End Sub
    Partial Private Sub OnpcbtpnmChanging(value As String)
    End Sub
    Partial Private Sub OnpcbtpnmChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pcbtpcd", DbType:="SmallInt")>  _
	Public Property pcbtpcd() As System.Nullable(Of Short)
		Get
			Return Me._pcbtpcd
		End Get
		Set
			If (Me._pcbtpcd.Equals(value) = false) Then
				Me.OnpcbtpcdChanging(value)
				Me.SendPropertyChanging
				Me._pcbtpcd = value
				Me.SendPropertyChanged("pcbtpcd")
				Me.OnpcbtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pcbtpnm", DbType:="NVarChar(MAX)")>  _
	Public Property pcbtpnm() As String
		Get
			Return Me._pcbtpnm
		End Get
		Set
			If (String.Equals(Me._pcbtpnm, value) = false) Then
				Me.OnpcbtpnmChanging(value)
				Me.SendPropertyChanging
				Me._pcbtpnm = value
				Me.SendPropertyChanged("pcbtpnm")
				Me.OnpcbtpnmChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drstdtest")>  _
Partial Public Class drstdtest
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _testcd As System.Nullable(Of Integer)
	
	Private _testnm As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OntestcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntestcdChanged()
    End Sub
    Partial Private Sub OntestnmChanging(value As String)
    End Sub
    Partial Private Sub OntestnmChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_testcd", DbType:="Int")>  _
	Public Property testcd() As System.Nullable(Of Integer)
		Get
			Return Me._testcd
		End Get
		Set
			If (Me._testcd.Equals(value) = false) Then
				Me.OntestcdChanging(value)
				Me.SendPropertyChanging
				Me._testcd = value
				Me.SendPropertyChanged("testcd")
				Me.OntestcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_testnm", DbType:="NVarChar(MAX)")>  _
	Public Property testnm() As String
		Get
			Return Me._testnm
		End Get
		Set
			If (String.Equals(Me._testnm, value) = false) Then
				Me.OntestnmChanging(value)
				Me.SendPropertyChanging
				Me._testnm = value
				Me.SendPropertyChanged("testnm")
				Me.OntestnmChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drstng")>  _
Partial Public Class drstng
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _stngcd As System.Nullable(Of Short)
	
	Private _stngnm As String
	
	Private _stngvl As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnstngcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnstngcdChanged()
    End Sub
    Partial Private Sub OnstngnmChanging(value As String)
    End Sub
    Partial Private Sub OnstngnmChanged()
    End Sub
    Partial Private Sub OnstngvlChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnstngvlChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stngcd", DbType:="SmallInt")>  _
	Public Property stngcd() As System.Nullable(Of Short)
		Get
			Return Me._stngcd
		End Get
		Set
			If (Me._stngcd.Equals(value) = false) Then
				Me.OnstngcdChanging(value)
				Me.SendPropertyChanging
				Me._stngcd = value
				Me.SendPropertyChanged("stngcd")
				Me.OnstngcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stngnm", DbType:="NVarChar(MAX)")>  _
	Public Property stngnm() As String
		Get
			Return Me._stngnm
		End Get
		Set
			If (String.Equals(Me._stngnm, value) = false) Then
				Me.OnstngnmChanging(value)
				Me.SendPropertyChanging
				Me._stngnm = value
				Me.SendPropertyChanged("stngnm")
				Me.OnstngnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stngvl", DbType:="Float")>  _
	Public Property stngvl() As System.Nullable(Of Double)
		Get
			Return Me._stngvl
		End Get
		Set
			If (Me._stngvl.Equals(value) = false) Then
				Me.OnstngvlChanging(value)
				Me.SendPropertyChanging
				Me._stngvl = value
				Me.SendPropertyChanged("stngvl")
				Me.OnstngvlChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.sysisocnt")>  _
Partial Public Class sysisocnt
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _alpha3 As String
	
	Private _isocode As System.Nullable(Of Integer)
	
	Private _alpha2 As String
	
	Private _engcntnm As String
	
	Private _thacntnm As String
	
	Private _offengnm As String
	
	Private _offthanm As String
	
	Private _maincd As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub Onalpha3Changing(value As String)
    End Sub
    Partial Private Sub Onalpha3Changed()
    End Sub
    Partial Private Sub OnisocodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnisocodeChanged()
    End Sub
    Partial Private Sub Onalpha2Changing(value As String)
    End Sub
    Partial Private Sub Onalpha2Changed()
    End Sub
    Partial Private Sub OnengcntnmChanging(value As String)
    End Sub
    Partial Private Sub OnengcntnmChanged()
    End Sub
    Partial Private Sub OnthacntnmChanging(value As String)
    End Sub
    Partial Private Sub OnthacntnmChanged()
    End Sub
    Partial Private Sub OnoffengnmChanging(value As String)
    End Sub
    Partial Private Sub OnoffengnmChanged()
    End Sub
    Partial Private Sub OnoffthanmChanging(value As String)
    End Sub
    Partial Private Sub OnoffthanmChanged()
    End Sub
    Partial Private Sub OnmaincdChanging(value As String)
    End Sub
    Partial Private Sub OnmaincdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_alpha3", DbType:="VarChar(3)")>  _
	Public Property alpha3() As String
		Get
			Return Me._alpha3
		End Get
		Set
			If (String.Equals(Me._alpha3, value) = false) Then
				Me.Onalpha3Changing(value)
				Me.SendPropertyChanging
				Me._alpha3 = value
				Me.SendPropertyChanged("alpha3")
				Me.Onalpha3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isocode", DbType:="Int")>  _
	Public Property isocode() As System.Nullable(Of Integer)
		Get
			Return Me._isocode
		End Get
		Set
			If (Me._isocode.Equals(value) = false) Then
				Me.OnisocodeChanging(value)
				Me.SendPropertyChanging
				Me._isocode = value
				Me.SendPropertyChanged("isocode")
				Me.OnisocodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_alpha2", DbType:="VarChar(2)")>  _
	Public Property alpha2() As String
		Get
			Return Me._alpha2
		End Get
		Set
			If (String.Equals(Me._alpha2, value) = false) Then
				Me.Onalpha2Changing(value)
				Me.SendPropertyChanging
				Me._alpha2 = value
				Me.SendPropertyChanged("alpha2")
				Me.Onalpha2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engcntnm", DbType:="NVarChar(MAX)")>  _
	Public Property engcntnm() As String
		Get
			Return Me._engcntnm
		End Get
		Set
			If (String.Equals(Me._engcntnm, value) = false) Then
				Me.OnengcntnmChanging(value)
				Me.SendPropertyChanging
				Me._engcntnm = value
				Me.SendPropertyChanged("engcntnm")
				Me.OnengcntnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thacntnm", DbType:="NVarChar(MAX)")>  _
	Public Property thacntnm() As String
		Get
			Return Me._thacntnm
		End Get
		Set
			If (String.Equals(Me._thacntnm, value) = false) Then
				Me.OnthacntnmChanging(value)
				Me.SendPropertyChanging
				Me._thacntnm = value
				Me.SendPropertyChanged("thacntnm")
				Me.OnthacntnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_offengnm", DbType:="NVarChar(MAX)")>  _
	Public Property offengnm() As String
		Get
			Return Me._offengnm
		End Get
		Set
			If (String.Equals(Me._offengnm, value) = false) Then
				Me.OnoffengnmChanging(value)
				Me.SendPropertyChanging
				Me._offengnm = value
				Me.SendPropertyChanged("offengnm")
				Me.OnoffengnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_offthanm", DbType:="NVarChar(MAX)")>  _
	Public Property offthanm() As String
		Get
			Return Me._offthanm
		End Get
		Set
			If (String.Equals(Me._offthanm, value) = false) Then
				Me.OnoffthanmChanging(value)
				Me.SendPropertyChanging
				Me._offthanm = value
				Me.SendPropertyChanged("offthanm")
				Me.OnoffthanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_maincd", DbType:="VarChar(3)")>  _
	Public Property maincd() As String
		Get
			Return Me._maincd
		End Get
		Set
			If (String.Equals(Me._maincd, value) = false) Then
				Me.OnmaincdChanging(value)
				Me.SendPropertyChanging
				Me._maincd = value
				Me.SendPropertyChanged("maincd")
				Me.OnmaincdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRANSACTION_DOWNLOAD")>  _
Partial Public Class TRANSACTION_DOWNLOAD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CITIEZEN_ID As String
	
	Private _CITIEZEN_ID_AUTHORIZE As String
	
	Private _EMAIL As String
	
	Private _DOWNLOAD_DATE As System.Nullable(Of Date)
	
	Private _STATUS As String
	
	Private _DESCRIPTION As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnDOWNLOAD_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDOWNLOAD_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID() As String
		Get
			Return Me._CITIEZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID, value) = false) Then
				Me.OnCITIEZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID = value
				Me.SendPropertyChanged("CITIEZEN_ID")
				Me.OnCITIEZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIEZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIEZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIEZEN_ID_AUTHORIZE")
				Me.OnCITIEZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOWNLOAD_DATE", DbType:="DateTime")>  _
	Public Property DOWNLOAD_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DOWNLOAD_DATE
		End Get
		Set
			If (Me._DOWNLOAD_DATE.Equals(value) = false) Then
				Me.OnDOWNLOAD_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DOWNLOAD_DATE = value
				Me.SendPropertyChanged("DOWNLOAD_DATE")
				Me.OnDOWNLOAD_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(50)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PROCESS_NAME")>  _
Partial Public Class PROCESS_NAME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _PROCESS_NAME As String
	
	Private _PROCESS_DESCRIPTION As String
	
	Private _SYSTEM_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanged()
    End Sub
    Partial Private Sub OnPROCESS_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnSYSTEM_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSYSTEM_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_NAME() As String
		Get
			Return Me._PROCESS_NAME
		End Get
		Set
			If (String.Equals(Me._PROCESS_NAME, value) = false) Then
				Me.OnPROCESS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_NAME = value
				Me.SendPropertyChanged("PROCESS_NAME")
				Me.OnPROCESS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_DESCRIPTION() As String
		Get
			Return Me._PROCESS_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._PROCESS_DESCRIPTION, value) = false) Then
				Me.OnPROCESS_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_DESCRIPTION = value
				Me.SendPropertyChanged("PROCESS_DESCRIPTION")
				Me.OnPROCESS_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYSTEM_ID", DbType:="Int")>  _
	Public Property SYSTEM_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SYSTEM_ID
		End Get
		Set
			If (Me._SYSTEM_ID.Equals(value) = false) Then
				Me.OnSYSTEM_IDChanging(value)
				Me.SendPropertyChanging
				Me._SYSTEM_ID = value
				Me.SendPropertyChanged("SYSTEM_ID")
				Me.OnSYSTEM_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drpcb")>  _
Partial Public Class drpcb
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _pcbtpcd As System.Nullable(Of Short)
	
	Private _lpvncd As System.Nullable(Of Short)
	
	Private _lcntpcd As String
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _lcnscd As System.Nullable(Of Integer)
	
	Private _lctnmcd As System.Nullable(Of Integer)
	
	Private _lctcd As System.Nullable(Of Integer)
	
	Private _cnsdcd As System.Nullable(Of Short)
	
	Private _appdate As System.Nullable(Of Date)
	
	Private _cnccd As System.Nullable(Of Short)
	
	Private _cncdate As System.Nullable(Of Date)
	
	Private _cscd As System.Nullable(Of Short)
	
	Private _rsbstfcd As System.Nullable(Of Integer)
	
	Private _jpctpcd As System.Nullable(Of Short)
	
	Private _rqttpcd As System.Nullable(Of Integer)
	
	Private _objcd As System.Nullable(Of Short)
	
	Private _cndno As System.Nullable(Of Integer)
	
	Private _appvno As String
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnpcbtpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpcbtpcdChanged()
    End Sub
    Partial Private Sub OnlpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnlpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnlctnmcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctnmcdChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OncnsdcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncnsdcdChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OncnccdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncnccdChanged()
    End Sub
    Partial Private Sub OncncdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncncdateChanged()
    End Sub
    Partial Private Sub OncscdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncscdChanged()
    End Sub
    Partial Private Sub OnrsbstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrsbstfcdChanged()
    End Sub
    Partial Private Sub OnjpctpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnjpctpcdChanged()
    End Sub
    Partial Private Sub OnrqttpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrqttpcdChanged()
    End Sub
    Partial Private Sub OnobjcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnobjcdChanged()
    End Sub
    Partial Private Sub OncndnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncndnoChanged()
    End Sub
    Partial Private Sub OnappvnoChanging(value As String)
    End Sub
    Partial Private Sub OnappvnoChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="Date")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pcbtpcd", DbType:="SmallInt")>  _
	Public Property pcbtpcd() As System.Nullable(Of Short)
		Get
			Return Me._pcbtpcd
		End Get
		Set
			If (Me._pcbtpcd.Equals(value) = false) Then
				Me.OnpcbtpcdChanging(value)
				Me.SendPropertyChanging
				Me._pcbtpcd = value
				Me.SendPropertyChanged("pcbtpcd")
				Me.OnpcbtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lpvncd", DbType:="SmallInt")>  _
	Public Property lpvncd() As System.Nullable(Of Short)
		Get
			Return Me._lpvncd
		End Get
		Set
			If (Me._lpvncd.Equals(value) = false) Then
				Me.OnlpvncdChanging(value)
				Me.SendPropertyChanging
				Me._lpvncd = value
				Me.SendPropertyChanged("lpvncd")
				Me.OnlpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="Int")>  _
	Public Property lcnscd() As System.Nullable(Of Integer)
		Get
			Return Me._lcnscd
		End Get
		Set
			If (Me._lcnscd.Equals(value) = false) Then
				Me.OnlcnscdChanging(value)
				Me.SendPropertyChanging
				Me._lcnscd = value
				Me.SendPropertyChanged("lcnscd")
				Me.OnlcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmcd", DbType:="Int")>  _
	Public Property lctnmcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctnmcd
		End Get
		Set
			If (Me._lctnmcd.Equals(value) = false) Then
				Me.OnlctnmcdChanging(value)
				Me.SendPropertyChanging
				Me._lctnmcd = value
				Me.SendPropertyChanged("lctnmcd")
				Me.OnlctnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int")>  _
	Public Property lctcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctcd
		End Get
		Set
			If (Me._lctcd.Equals(value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnsdcd", DbType:="SmallInt")>  _
	Public Property cnsdcd() As System.Nullable(Of Short)
		Get
			Return Me._cnsdcd
		End Get
		Set
			If (Me._cnsdcd.Equals(value) = false) Then
				Me.OncnsdcdChanging(value)
				Me.SendPropertyChanging
				Me._cnsdcd = value
				Me.SendPropertyChanged("cnsdcd")
				Me.OncnsdcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="Date")>  _
	Public Property appdate() As System.Nullable(Of Date)
		Get
			Return Me._appdate
		End Get
		Set
			If (Me._appdate.Equals(value) = false) Then
				Me.OnappdateChanging(value)
				Me.SendPropertyChanging
				Me._appdate = value
				Me.SendPropertyChanged("appdate")
				Me.OnappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccd", DbType:="SmallInt")>  _
	Public Property cnccd() As System.Nullable(Of Short)
		Get
			Return Me._cnccd
		End Get
		Set
			If (Me._cnccd.Equals(value) = false) Then
				Me.OncnccdChanging(value)
				Me.SendPropertyChanging
				Me._cnccd = value
				Me.SendPropertyChanged("cnccd")
				Me.OncnccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncdate", DbType:="Date")>  _
	Public Property cncdate() As System.Nullable(Of Date)
		Get
			Return Me._cncdate
		End Get
		Set
			If (Me._cncdate.Equals(value) = false) Then
				Me.OncncdateChanging(value)
				Me.SendPropertyChanging
				Me._cncdate = value
				Me.SendPropertyChanged("cncdate")
				Me.OncncdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cscd", DbType:="SmallInt")>  _
	Public Property cscd() As System.Nullable(Of Short)
		Get
			Return Me._cscd
		End Get
		Set
			If (Me._cscd.Equals(value) = false) Then
				Me.OncscdChanging(value)
				Me.SendPropertyChanging
				Me._cscd = value
				Me.SendPropertyChanged("cscd")
				Me.OncscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsbstfcd", DbType:="Int")>  _
	Public Property rsbstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._rsbstfcd
		End Get
		Set
			If (Me._rsbstfcd.Equals(value) = false) Then
				Me.OnrsbstfcdChanging(value)
				Me.SendPropertyChanging
				Me._rsbstfcd = value
				Me.SendPropertyChanged("rsbstfcd")
				Me.OnrsbstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jpctpcd", DbType:="SmallInt")>  _
	Public Property jpctpcd() As System.Nullable(Of Short)
		Get
			Return Me._jpctpcd
		End Get
		Set
			If (Me._jpctpcd.Equals(value) = false) Then
				Me.OnjpctpcdChanging(value)
				Me.SendPropertyChanging
				Me._jpctpcd = value
				Me.SendPropertyChanged("jpctpcd")
				Me.OnjpctpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rqttpcd", DbType:="Int")>  _
	Public Property rqttpcd() As System.Nullable(Of Integer)
		Get
			Return Me._rqttpcd
		End Get
		Set
			If (Me._rqttpcd.Equals(value) = false) Then
				Me.OnrqttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rqttpcd = value
				Me.SendPropertyChanged("rqttpcd")
				Me.OnrqttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_objcd", DbType:="SmallInt")>  _
	Public Property objcd() As System.Nullable(Of Short)
		Get
			Return Me._objcd
		End Get
		Set
			If (Me._objcd.Equals(value) = false) Then
				Me.OnobjcdChanging(value)
				Me.SendPropertyChanging
				Me._objcd = value
				Me.SendPropertyChanged("objcd")
				Me.OnobjcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cndno", DbType:="Int")>  _
	Public Property cndno() As System.Nullable(Of Integer)
		Get
			Return Me._cndno
		End Get
		Set
			If (Me._cndno.Equals(value) = false) Then
				Me.OncndnoChanging(value)
				Me.SendPropertyChanging
				Me._cndno = value
				Me.SendPropertyChanged("cndno")
				Me.OncndnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appvno", DbType:="VarChar(20)")>  _
	Public Property appvno() As String
		Get
			Return Me._appvno
		End Get
		Set
			If (String.Equals(Me._appvno, value) = false) Then
				Me.OnappvnoChanging(value)
				Me.SendPropertyChanging
				Me._appvno = value
				Me.SendPropertyChanged("appvno")
				Me.OnappvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.lgt_impcerref")>  _
Partial Public Class lgt_impcerref
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rid As System.Nullable(Of Short)
	
	Private _appvno As String
	
	Private _NewCode As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnappvnoChanging(value As String)
    End Sub
    Partial Private Sub OnappvnoChanged()
    End Sub
    Partial Private Sub OnNewCodeChanging(value As String)
    End Sub
    Partial Private Sub OnNewCodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="SmallInt")>  _
	Public Property rid() As System.Nullable(Of Short)
		Get
			Return Me._rid
		End Get
		Set
			If (Me._rid.Equals(value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appvno", DbType:="VarChar(20)")>  _
	Public Property appvno() As String
		Get
			Return Me._appvno
		End Get
		Set
			If (String.Equals(Me._appvno, value) = false) Then
				Me.OnappvnoChanging(value)
				Me.SendPropertyChanging
				Me._appvno = value
				Me.SendPropertyChanged("appvno")
				Me.OnappvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NewCode", DbType:="NVarChar(MAX)")>  _
	Public Property NewCode() As String
		Get
			Return Me._NewCode
		End Get
		Set
			If (String.Equals(Me._NewCode, value) = false) Then
				Me.OnNewCodeChanging(value)
				Me.SendPropertyChanging
				Me._NewCode = value
				Me.SendPropertyChanged("NewCode")
				Me.OnNewCodeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_DRTYPE")>  _
Partial Public Class CER_DRTYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CER_IDA As String
	
	Private _CER_FDTYPE As String
	
	Private _CER_FDTYPE_LAW As String
	
	Private _TRANSECTION_ID_UPLOAD As String
	
	Private _FK_IDA As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCER_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnCER_IDAChanged()
    End Sub
    Partial Private Sub OnCER_FDTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnCER_FDTYPEChanged()
    End Sub
    Partial Private Sub OnCER_FDTYPE_LAWChanging(value As String)
    End Sub
    Partial Private Sub OnCER_FDTYPE_LAWChanged()
    End Sub
    Partial Private Sub OnTRANSECTION_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnTRANSECTION_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property CER_IDA() As String
		Get
			Return Me._CER_IDA
		End Get
		Set
			If (String.Equals(Me._CER_IDA, value) = false) Then
				Me.OnCER_IDAChanging(value)
				Me.SendPropertyChanging
				Me._CER_IDA = value
				Me.SendPropertyChanged("CER_IDA")
				Me.OnCER_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_FDTYPE", DbType:="NVarChar(MAX)")>  _
	Public Property CER_FDTYPE() As String
		Get
			Return Me._CER_FDTYPE
		End Get
		Set
			If (String.Equals(Me._CER_FDTYPE, value) = false) Then
				Me.OnCER_FDTYPEChanging(value)
				Me.SendPropertyChanging
				Me._CER_FDTYPE = value
				Me.SendPropertyChanged("CER_FDTYPE")
				Me.OnCER_FDTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_FDTYPE_LAW", DbType:="NVarChar(MAX)")>  _
	Public Property CER_FDTYPE_LAW() As String
		Get
			Return Me._CER_FDTYPE_LAW
		End Get
		Set
			If (String.Equals(Me._CER_FDTYPE_LAW, value) = false) Then
				Me.OnCER_FDTYPE_LAWChanging(value)
				Me.SendPropertyChanging
				Me._CER_FDTYPE_LAW = value
				Me.SendPropertyChanged("CER_FDTYPE_LAW")
				Me.OnCER_FDTYPE_LAWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSECTION_ID_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property TRANSECTION_ID_UPLOAD() As String
		Get
			Return Me._TRANSECTION_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._TRANSECTION_ID_UPLOAD, value) = false) Then
				Me.OnTRANSECTION_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._TRANSECTION_ID_UPLOAD = value
				Me.SendPropertyChanged("TRANSECTION_ID_UPLOAD")
				Me.OnTRANSECTION_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_REF")>  _
Partial Public Class CER_REF
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FREGNTF_IDA As System.Nullable(Of Integer)
	
	Private _CERNO As String
	
	Private _TRANSECTION_ID_UPLOAD As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFREGNTF_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFREGNTF_IDAChanged()
    End Sub
    Partial Private Sub OnCERNOChanging(value As String)
    End Sub
    Partial Private Sub OnCERNOChanged()
    End Sub
    Partial Private Sub OnTRANSECTION_ID_UPLOADChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRANSECTION_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FREGNTF_IDA", DbType:="Int")>  _
	Public Property FREGNTF_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FREGNTF_IDA
		End Get
		Set
			If (Me._FREGNTF_IDA.Equals(value) = false) Then
				Me.OnFREGNTF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FREGNTF_IDA = value
				Me.SendPropertyChanged("FREGNTF_IDA")
				Me.OnFREGNTF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CERNO", DbType:="NVarChar(MAX)")>  _
	Public Property CERNO() As String
		Get
			Return Me._CERNO
		End Get
		Set
			If (String.Equals(Me._CERNO, value) = false) Then
				Me.OnCERNOChanging(value)
				Me.SendPropertyChanging
				Me._CERNO = value
				Me.SendPropertyChanged("CERNO")
				Me.OnCERNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSECTION_ID_UPLOAD", DbType:="Int")>  _
	Public Property TRANSECTION_ID_UPLOAD() As System.Nullable(Of Integer)
		Get
			Return Me._TRANSECTION_ID_UPLOAD
		End Get
		Set
			If (Me._TRANSECTION_ID_UPLOAD.Equals(value) = false) Then
				Me.OnTRANSECTION_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._TRANSECTION_ID_UPLOAD = value
				Me.SendPropertyChanged("TRANSECTION_ID_UPLOAD")
				Me.OnTRANSECTION_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_NO_01")>  _
Partial Public Class GEN_NO_01
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_NO_02")>  _
Partial Public Class GEN_NO_02
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_NO_03")>  _
Partial Public Class GEN_NO_03
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_NO_05")>  _
Partial Public Class GEN_NO_05
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_NO_06")>  _
Partial Public Class GEN_NO_06
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_NO_07")>  _
Partial Public Class GEN_NO_07
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_NO_08")>  _
Partial Public Class GEN_NO_08
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_NO_09")>  _
Partial Public Class GEN_NO_09
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_NO_10")>  _
Partial Public Class GEN_NO_10
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_NO_11")>  _
Partial Public Class GEN_NO_11
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_NO_12")>  _
Partial Public Class GEN_NO_12
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EDIT_REQUEST")>  _
Partial Public Class EDIT_REQUEST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _LIST_CHANGE As String
	
	Private _EDIT_LIST As String
	
	Private _EDIT_FROM As String
	
	Private _EDIT_BECOME As String
	
	Private _SELECT_TYPE_DRUG As String
	
	Private _DOCUMENT_NOTICS As String
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _CHK_LABEL As System.Nullable(Of Integer)
	
	Private _CHK_LEAFLET As System.Nullable(Of Integer)
	
	Private _CHK_PACKING As System.Nullable(Of Integer)
	
	Private _CHK_DRUG_NAME As System.Nullable(Of Integer)
	
	Private _CHK_DRUG_STYLE As System.Nullable(Of Integer)
	
	Private _CHK_METHOD As System.Nullable(Of Integer)
	
	Private _CHK_DRUG_FORMULARY As System.Nullable(Of Integer)
	
	Private _CHK_OTHER As System.Nullable(Of Integer)
	
	Private _CITIZEN_ID As String
	
	Private _CITIZEN_ID_UPLOAD As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnLIST_CHANGEChanging(value As String)
    End Sub
    Partial Private Sub OnLIST_CHANGEChanged()
    End Sub
    Partial Private Sub OnEDIT_LISTChanging(value As String)
    End Sub
    Partial Private Sub OnEDIT_LISTChanged()
    End Sub
    Partial Private Sub OnEDIT_FROMChanging(value As String)
    End Sub
    Partial Private Sub OnEDIT_FROMChanged()
    End Sub
    Partial Private Sub OnEDIT_BECOMEChanging(value As String)
    End Sub
    Partial Private Sub OnEDIT_BECOMEChanged()
    End Sub
    Partial Private Sub OnSELECT_TYPE_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnSELECT_TYPE_DRUGChanged()
    End Sub
    Partial Private Sub OnDOCUMENT_NOTICSChanging(value As String)
    End Sub
    Partial Private Sub OnDOCUMENT_NOTICSChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnCHK_LABELChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHK_LABELChanged()
    End Sub
    Partial Private Sub OnCHK_LEAFLETChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHK_LEAFLETChanged()
    End Sub
    Partial Private Sub OnCHK_PACKINGChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHK_PACKINGChanged()
    End Sub
    Partial Private Sub OnCHK_DRUG_NAMEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHK_DRUG_NAMEChanged()
    End Sub
    Partial Private Sub OnCHK_DRUG_STYLEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHK_DRUG_STYLEChanged()
    End Sub
    Partial Private Sub OnCHK_METHODChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHK_METHODChanged()
    End Sub
    Partial Private Sub OnCHK_DRUG_FORMULARYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHK_DRUG_FORMULARYChanged()
    End Sub
    Partial Private Sub OnCHK_OTHERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHK_OTHERChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LIST_CHANGE", DbType:="NVarChar(MAX)")>  _
	Public Property LIST_CHANGE() As String
		Get
			Return Me._LIST_CHANGE
		End Get
		Set
			If (String.Equals(Me._LIST_CHANGE, value) = false) Then
				Me.OnLIST_CHANGEChanging(value)
				Me.SendPropertyChanging
				Me._LIST_CHANGE = value
				Me.SendPropertyChanged("LIST_CHANGE")
				Me.OnLIST_CHANGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_LIST", DbType:="NVarChar(MAX)")>  _
	Public Property EDIT_LIST() As String
		Get
			Return Me._EDIT_LIST
		End Get
		Set
			If (String.Equals(Me._EDIT_LIST, value) = false) Then
				Me.OnEDIT_LISTChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_LIST = value
				Me.SendPropertyChanged("EDIT_LIST")
				Me.OnEDIT_LISTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_FROM", DbType:="NVarChar(MAX)")>  _
	Public Property EDIT_FROM() As String
		Get
			Return Me._EDIT_FROM
		End Get
		Set
			If (String.Equals(Me._EDIT_FROM, value) = false) Then
				Me.OnEDIT_FROMChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_FROM = value
				Me.SendPropertyChanged("EDIT_FROM")
				Me.OnEDIT_FROMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_BECOME", DbType:="NVarChar(MAX)")>  _
	Public Property EDIT_BECOME() As String
		Get
			Return Me._EDIT_BECOME
		End Get
		Set
			If (String.Equals(Me._EDIT_BECOME, value) = false) Then
				Me.OnEDIT_BECOMEChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_BECOME = value
				Me.SendPropertyChanged("EDIT_BECOME")
				Me.OnEDIT_BECOMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SELECT_TYPE_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property SELECT_TYPE_DRUG() As String
		Get
			Return Me._SELECT_TYPE_DRUG
		End Get
		Set
			If (String.Equals(Me._SELECT_TYPE_DRUG, value) = false) Then
				Me.OnSELECT_TYPE_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._SELECT_TYPE_DRUG = value
				Me.SendPropertyChanged("SELECT_TYPE_DRUG")
				Me.OnSELECT_TYPE_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOCUMENT_NOTICS", DbType:="NVarChar(MAX)")>  _
	Public Property DOCUMENT_NOTICS() As String
		Get
			Return Me._DOCUMENT_NOTICS
		End Get
		Set
			If (String.Equals(Me._DOCUMENT_NOTICS, value) = false) Then
				Me.OnDOCUMENT_NOTICSChanging(value)
				Me.SendPropertyChanging
				Me._DOCUMENT_NOTICS = value
				Me.SendPropertyChanged("DOCUMENT_NOTICS")
				Me.OnDOCUMENT_NOTICSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_LABEL", DbType:="Int")>  _
	Public Property CHK_LABEL() As System.Nullable(Of Integer)
		Get
			Return Me._CHK_LABEL
		End Get
		Set
			If (Me._CHK_LABEL.Equals(value) = false) Then
				Me.OnCHK_LABELChanging(value)
				Me.SendPropertyChanging
				Me._CHK_LABEL = value
				Me.SendPropertyChanged("CHK_LABEL")
				Me.OnCHK_LABELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_LEAFLET", DbType:="Int")>  _
	Public Property CHK_LEAFLET() As System.Nullable(Of Integer)
		Get
			Return Me._CHK_LEAFLET
		End Get
		Set
			If (Me._CHK_LEAFLET.Equals(value) = false) Then
				Me.OnCHK_LEAFLETChanging(value)
				Me.SendPropertyChanging
				Me._CHK_LEAFLET = value
				Me.SendPropertyChanged("CHK_LEAFLET")
				Me.OnCHK_LEAFLETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_PACKING", DbType:="Int")>  _
	Public Property CHK_PACKING() As System.Nullable(Of Integer)
		Get
			Return Me._CHK_PACKING
		End Get
		Set
			If (Me._CHK_PACKING.Equals(value) = false) Then
				Me.OnCHK_PACKINGChanging(value)
				Me.SendPropertyChanging
				Me._CHK_PACKING = value
				Me.SendPropertyChanged("CHK_PACKING")
				Me.OnCHK_PACKINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_DRUG_NAME", DbType:="Int")>  _
	Public Property CHK_DRUG_NAME() As System.Nullable(Of Integer)
		Get
			Return Me._CHK_DRUG_NAME
		End Get
		Set
			If (Me._CHK_DRUG_NAME.Equals(value) = false) Then
				Me.OnCHK_DRUG_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CHK_DRUG_NAME = value
				Me.SendPropertyChanged("CHK_DRUG_NAME")
				Me.OnCHK_DRUG_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_DRUG_STYLE", DbType:="Int")>  _
	Public Property CHK_DRUG_STYLE() As System.Nullable(Of Integer)
		Get
			Return Me._CHK_DRUG_STYLE
		End Get
		Set
			If (Me._CHK_DRUG_STYLE.Equals(value) = false) Then
				Me.OnCHK_DRUG_STYLEChanging(value)
				Me.SendPropertyChanging
				Me._CHK_DRUG_STYLE = value
				Me.SendPropertyChanged("CHK_DRUG_STYLE")
				Me.OnCHK_DRUG_STYLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_METHOD", DbType:="Int")>  _
	Public Property CHK_METHOD() As System.Nullable(Of Integer)
		Get
			Return Me._CHK_METHOD
		End Get
		Set
			If (Me._CHK_METHOD.Equals(value) = false) Then
				Me.OnCHK_METHODChanging(value)
				Me.SendPropertyChanging
				Me._CHK_METHOD = value
				Me.SendPropertyChanged("CHK_METHOD")
				Me.OnCHK_METHODChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_DRUG_FORMULARY", DbType:="Int")>  _
	Public Property CHK_DRUG_FORMULARY() As System.Nullable(Of Integer)
		Get
			Return Me._CHK_DRUG_FORMULARY
		End Get
		Set
			If (Me._CHK_DRUG_FORMULARY.Equals(value) = false) Then
				Me.OnCHK_DRUG_FORMULARYChanging(value)
				Me.SendPropertyChanging
				Me._CHK_DRUG_FORMULARY = value
				Me.SendPropertyChanged("CHK_DRUG_FORMULARY")
				Me.OnCHK_DRUG_FORMULARYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_OTHER", DbType:="Int")>  _
	Public Property CHK_OTHER() As System.Nullable(Of Integer)
		Get
			Return Me._CHK_OTHER
		End Get
		Set
			If (Me._CHK_OTHER.Equals(value) = false) Then
				Me.OnCHK_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._CHK_OTHER = value
				Me.SendPropertyChanged("CHK_OTHER")
				Me.OnCHK_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_UPLOAD() As String
		Get
			Return Me._CITIZEN_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_UPLOAD, value) = false) Then
				Me.OnCITIZEN_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_ID_UPLOAD")
				Me.OnCITIZEN_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drrgtnewdg")>  _
Partial Public Class drrgtnewdg
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As System.Nullable(Of Integer)
	
	Private _newdrgcd As System.Nullable(Of Short)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnnewdrgcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnnewdrgcdChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="VarChar(3)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="Int")>  _
	Public Property rgtno() As System.Nullable(Of Integer)
		Get
			Return Me._rgtno
		End Get
		Set
			If (Me._rgtno.Equals(value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_newdrgcd", DbType:="SmallInt")>  _
	Public Property newdrgcd() As System.Nullable(Of Short)
		Get
			Return Me._newdrgcd
		End Get
		Set
			If (Me._newdrgcd.Equals(value) = false) Then
				Me.OnnewdrgcdChanging(value)
				Me.SendPropertyChanging
				Me._newdrgcd = value
				Me.SendPropertyChanged("newdrgcd")
				Me.OnnewdrgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drpcksize")>  _
Partial Public Class drpcksize
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As System.Nullable(Of Integer)
	
	Private _pcksize As System.Data.Linq.Binary
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnpcksizeChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnpcksizeChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="VarChar(3)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="Int")>  _
	Public Property rgtno() As System.Nullable(Of Integer)
		Get
			Return Me._rgtno
		End Get
		Set
			If (Me._rgtno.Equals(value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pcksize", DbType:="Image", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property pcksize() As System.Data.Linq.Binary
		Get
			Return Me._pcksize
		End Get
		Set
			If (Object.Equals(Me._pcksize, value) = false) Then
				Me.OnpcksizeChanging(value)
				Me.SendPropertyChanging
				Me._pcksize = value
				Me.SendPropertyChanged("pcksize")
				Me.OnpcksizeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drusedrg")>  _
Partial Public Class drusedrg
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As System.Nullable(Of Integer)
	
	Private _usedrg As System.Data.Linq.Binary
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnusedrgChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnusedrgChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="VarChar(3)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="Int")>  _
	Public Property rgtno() As System.Nullable(Of Integer)
		Get
			Return Me._rgtno
		End Get
		Set
			If (Me._rgtno.Equals(value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usedrg", DbType:="Image", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property usedrg() As System.Data.Linq.Binary
		Get
			Return Me._usedrg
		End Get
		Set
			If (Object.Equals(Me._usedrg, value) = false) Then
				Me.OnusedrgChanging(value)
				Me.SendPropertyChanging
				Me._usedrg = value
				Me.SendPropertyChanged("usedrg")
				Me.OnusedrgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drspec")>  _
Partial Public Class drspec
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As System.Nullable(Of Integer)
	
	Private _testcd As System.Nullable(Of Integer)
	
	Private _require As String
	
	Private _method As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OntestcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntestcdChanged()
    End Sub
    Partial Private Sub OnrequireChanging(value As String)
    End Sub
    Partial Private Sub OnrequireChanged()
    End Sub
    Partial Private Sub OnmethodChanging(value As String)
    End Sub
    Partial Private Sub OnmethodChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="VarChar(3)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="Int")>  _
	Public Property rgtno() As System.Nullable(Of Integer)
		Get
			Return Me._rgtno
		End Get
		Set
			If (Me._rgtno.Equals(value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_testcd", DbType:="Int")>  _
	Public Property testcd() As System.Nullable(Of Integer)
		Get
			Return Me._testcd
		End Get
		Set
			If (Me._testcd.Equals(value) = false) Then
				Me.OntestcdChanging(value)
				Me.SendPropertyChanging
				Me._testcd = value
				Me.SendPropertyChanged("testcd")
				Me.OntestcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_require", DbType:="NVarChar(MAX)")>  _
	Public Property require() As String
		Get
			Return Me._require
		End Get
		Set
			If (String.Equals(Me._require, value) = false) Then
				Me.OnrequireChanging(value)
				Me.SendPropertyChanging
				Me._require = value
				Me.SendPropertyChanged("require")
				Me.OnrequireChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_method", DbType:="NVarChar(MAX)")>  _
	Public Property method() As String
		Get
			Return Me._method
		End Get
		Set
			If (String.Equals(Me._method, value) = false) Then
				Me.OnmethodChanging(value)
				Me.SendPropertyChanging
				Me._method = value
				Me.SendPropertyChanged("method")
				Me.OnmethodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dreqto")>  _
Partial Public Class dreqto
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Integer)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As System.Nullable(Of Integer)
	
	Private _flineno As System.Nullable(Of Integer)
	
	Private _rid As System.Nullable(Of Integer)
	
	Private _elineno As System.Nullable(Of Integer)
	
	Private _eiowacd As String
	
	Private _qty As String
	
	Private _mltplr As System.Nullable(Of Integer)
	
	Private _stngcd As System.Nullable(Of Short)
	
	Private _sunitcd As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnflinenoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnflinenoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnelinenoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnelinenoChanged()
    End Sub
    Partial Private Sub OneiowacdChanging(value As String)
    End Sub
    Partial Private Sub OneiowacdChanged()
    End Sub
    Partial Private Sub OnqtyChanging(value As String)
    End Sub
    Partial Private Sub OnqtyChanged()
    End Sub
    Partial Private Sub OnmltplrChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnmltplrChanged()
    End Sub
    Partial Private Sub OnstngcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnstngcdChanged()
    End Sub
    Partial Private Sub OnsunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsunitcdChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="VarChar(3)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="Int")>  _
	Public Property rgtno() As System.Nullable(Of Integer)
		Get
			Return Me._rgtno
		End Get
		Set
			If (Me._rgtno.Equals(value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flineno", DbType:="Int")>  _
	Public Property flineno() As System.Nullable(Of Integer)
		Get
			Return Me._flineno
		End Get
		Set
			If (Me._flineno.Equals(value) = false) Then
				Me.OnflinenoChanging(value)
				Me.SendPropertyChanging
				Me._flineno = value
				Me.SendPropertyChanged("flineno")
				Me.OnflinenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="Int")>  _
	Public Property rid() As System.Nullable(Of Integer)
		Get
			Return Me._rid
		End Get
		Set
			If (Me._rid.Equals(value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_elineno", DbType:="Int")>  _
	Public Property elineno() As System.Nullable(Of Integer)
		Get
			Return Me._elineno
		End Get
		Set
			If (Me._elineno.Equals(value) = false) Then
				Me.OnelinenoChanging(value)
				Me.SendPropertyChanging
				Me._elineno = value
				Me.SendPropertyChanged("elineno")
				Me.OnelinenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_eiowacd", DbType:="NVarChar(MAX)")>  _
	Public Property eiowacd() As String
		Get
			Return Me._eiowacd
		End Get
		Set
			If (String.Equals(Me._eiowacd, value) = false) Then
				Me.OneiowacdChanging(value)
				Me.SendPropertyChanging
				Me._eiowacd = value
				Me.SendPropertyChanged("eiowacd")
				Me.OneiowacdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_qty", DbType:="NVarChar(MAX)")>  _
	Public Property qty() As String
		Get
			Return Me._qty
		End Get
		Set
			If (String.Equals(Me._qty, value) = false) Then
				Me.OnqtyChanging(value)
				Me.SendPropertyChanging
				Me._qty = value
				Me.SendPropertyChanged("qty")
				Me.OnqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mltplr", DbType:="Int")>  _
	Public Property mltplr() As System.Nullable(Of Integer)
		Get
			Return Me._mltplr
		End Get
		Set
			If (Me._mltplr.Equals(value) = false) Then
				Me.OnmltplrChanging(value)
				Me.SendPropertyChanging
				Me._mltplr = value
				Me.SendPropertyChanged("mltplr")
				Me.OnmltplrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stngcd", DbType:="SmallInt")>  _
	Public Property stngcd() As System.Nullable(Of Short)
		Get
			Return Me._stngcd
		End Get
		Set
			If (Me._stngcd.Equals(value) = false) Then
				Me.OnstngcdChanging(value)
				Me.SendPropertyChanging
				Me._stngcd = value
				Me.SendPropertyChanged("stngcd")
				Me.OnstngcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitcd", DbType:="Int")>  _
	Public Property sunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sunitcd
		End Get
		Set
			If (Me._sunitcd.Equals(value) = false) Then
				Me.OnsunitcdChanging(value)
				Me.SendPropertyChanging
				Me._sunitcd = value
				Me.SendPropertyChanged("sunitcd")
				Me.OnsunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drfml")>  _
Partial Public Class drfml
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As System.Nullable(Of Integer)
	
	Private _flineno As System.Nullable(Of Integer)
	
	Private _rid As System.Nullable(Of Integer)
	
	Private _fiowacd As String
	
	Private _qtytxt As String
	
	Private _qty As System.Nullable(Of Decimal)
	
	Private _qunitcd As System.Nullable(Of Integer)
	
	Private _biocdtst As System.Nullable(Of Integer)
	
	Private _sbioqty As System.Nullable(Of Decimal)
	
	Private _sbiosqno As System.Nullable(Of Decimal)
	
	Private _sbiounitcd As System.Nullable(Of Integer)
	
	Private _ebioqty As System.Nullable(Of Decimal)
	
	Private _ebiosqno As System.Nullable(Of Decimal)
	
	Private _ebiounitcd As System.Nullable(Of Integer)
	
	Private _aori As String
	
	Private _mltplr As System.Nullable(Of Integer)
	
	Private _stngcd As System.Nullable(Of Short)
	
	Private _sunitcd As System.Nullable(Of Integer)
	
	Private _funccd As System.Nullable(Of Integer)
	
	Private _fmlst As System.Nullable(Of Integer)
	
	Private _remark As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnflinenoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnflinenoChanged()
    End Sub
    Partial Private Sub OnridChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnridChanged()
    End Sub
    Partial Private Sub OnfiowacdChanging(value As String)
    End Sub
    Partial Private Sub OnfiowacdChanged()
    End Sub
    Partial Private Sub OnqtytxtChanging(value As String)
    End Sub
    Partial Private Sub OnqtytxtChanged()
    End Sub
    Partial Private Sub OnqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnqtyChanged()
    End Sub
    Partial Private Sub OnqunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnqunitcdChanged()
    End Sub
    Partial Private Sub OnbiocdtstChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbiocdtstChanged()
    End Sub
    Partial Private Sub OnsbioqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnsbioqtyChanged()
    End Sub
    Partial Private Sub OnsbiosqnoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnsbiosqnoChanged()
    End Sub
    Partial Private Sub OnsbiounitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsbiounitcdChanged()
    End Sub
    Partial Private Sub OnebioqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnebioqtyChanged()
    End Sub
    Partial Private Sub OnebiosqnoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnebiosqnoChanged()
    End Sub
    Partial Private Sub OnebiounitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnebiounitcdChanged()
    End Sub
    Partial Private Sub OnaoriChanging(value As String)
    End Sub
    Partial Private Sub OnaoriChanged()
    End Sub
    Partial Private Sub OnmltplrChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnmltplrChanged()
    End Sub
    Partial Private Sub OnstngcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnstngcdChanged()
    End Sub
    Partial Private Sub OnsunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsunitcdChanged()
    End Sub
    Partial Private Sub OnfunccdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfunccdChanged()
    End Sub
    Partial Private Sub OnfmlstChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfmlstChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="VarChar(3)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="Int")>  _
	Public Property rgtno() As System.Nullable(Of Integer)
		Get
			Return Me._rgtno
		End Get
		Set
			If (Me._rgtno.Equals(value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flineno", DbType:="Int")>  _
	Public Property flineno() As System.Nullable(Of Integer)
		Get
			Return Me._flineno
		End Get
		Set
			If (Me._flineno.Equals(value) = false) Then
				Me.OnflinenoChanging(value)
				Me.SendPropertyChanging
				Me._flineno = value
				Me.SendPropertyChanged("flineno")
				Me.OnflinenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rid", DbType:="Int")>  _
	Public Property rid() As System.Nullable(Of Integer)
		Get
			Return Me._rid
		End Get
		Set
			If (Me._rid.Equals(value) = false) Then
				Me.OnridChanging(value)
				Me.SendPropertyChanging
				Me._rid = value
				Me.SendPropertyChanged("rid")
				Me.OnridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fiowacd", DbType:="NVarChar(MAX)")>  _
	Public Property fiowacd() As String
		Get
			Return Me._fiowacd
		End Get
		Set
			If (String.Equals(Me._fiowacd, value) = false) Then
				Me.OnfiowacdChanging(value)
				Me.SendPropertyChanging
				Me._fiowacd = value
				Me.SendPropertyChanged("fiowacd")
				Me.OnfiowacdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_qtytxt", DbType:="NVarChar(MAX)")>  _
	Public Property qtytxt() As String
		Get
			Return Me._qtytxt
		End Get
		Set
			If (String.Equals(Me._qtytxt, value) = false) Then
				Me.OnqtytxtChanging(value)
				Me.SendPropertyChanging
				Me._qtytxt = value
				Me.SendPropertyChanged("qtytxt")
				Me.OnqtytxtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_qty", DbType:="Decimal(14,8)")>  _
	Public Property qty() As System.Nullable(Of Decimal)
		Get
			Return Me._qty
		End Get
		Set
			If (Me._qty.Equals(value) = false) Then
				Me.OnqtyChanging(value)
				Me.SendPropertyChanging
				Me._qty = value
				Me.SendPropertyChanged("qty")
				Me.OnqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_qunitcd", DbType:="Int")>  _
	Public Property qunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._qunitcd
		End Get
		Set
			If (Me._qunitcd.Equals(value) = false) Then
				Me.OnqunitcdChanging(value)
				Me.SendPropertyChanging
				Me._qunitcd = value
				Me.SendPropertyChanged("qunitcd")
				Me.OnqunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_biocdtst", DbType:="Int")>  _
	Public Property biocdtst() As System.Nullable(Of Integer)
		Get
			Return Me._biocdtst
		End Get
		Set
			If (Me._biocdtst.Equals(value) = false) Then
				Me.OnbiocdtstChanging(value)
				Me.SendPropertyChanging
				Me._biocdtst = value
				Me.SendPropertyChanged("biocdtst")
				Me.OnbiocdtstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbioqty", DbType:="Decimal(14,8)")>  _
	Public Property sbioqty() As System.Nullable(Of Decimal)
		Get
			Return Me._sbioqty
		End Get
		Set
			If (Me._sbioqty.Equals(value) = false) Then
				Me.OnsbioqtyChanging(value)
				Me.SendPropertyChanging
				Me._sbioqty = value
				Me.SendPropertyChanged("sbioqty")
				Me.OnsbioqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbiosqno", DbType:="Decimal(14,8)")>  _
	Public Property sbiosqno() As System.Nullable(Of Decimal)
		Get
			Return Me._sbiosqno
		End Get
		Set
			If (Me._sbiosqno.Equals(value) = false) Then
				Me.OnsbiosqnoChanging(value)
				Me.SendPropertyChanging
				Me._sbiosqno = value
				Me.SendPropertyChanged("sbiosqno")
				Me.OnsbiosqnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbiounitcd", DbType:="Int")>  _
	Public Property sbiounitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sbiounitcd
		End Get
		Set
			If (Me._sbiounitcd.Equals(value) = false) Then
				Me.OnsbiounitcdChanging(value)
				Me.SendPropertyChanging
				Me._sbiounitcd = value
				Me.SendPropertyChanged("sbiounitcd")
				Me.OnsbiounitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ebioqty", DbType:="Decimal(14,8)")>  _
	Public Property ebioqty() As System.Nullable(Of Decimal)
		Get
			Return Me._ebioqty
		End Get
		Set
			If (Me._ebioqty.Equals(value) = false) Then
				Me.OnebioqtyChanging(value)
				Me.SendPropertyChanging
				Me._ebioqty = value
				Me.SendPropertyChanged("ebioqty")
				Me.OnebioqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ebiosqno", DbType:="Decimal(14,8)")>  _
	Public Property ebiosqno() As System.Nullable(Of Decimal)
		Get
			Return Me._ebiosqno
		End Get
		Set
			If (Me._ebiosqno.Equals(value) = false) Then
				Me.OnebiosqnoChanging(value)
				Me.SendPropertyChanging
				Me._ebiosqno = value
				Me.SendPropertyChanged("ebiosqno")
				Me.OnebiosqnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ebiounitcd", DbType:="Int")>  _
	Public Property ebiounitcd() As System.Nullable(Of Integer)
		Get
			Return Me._ebiounitcd
		End Get
		Set
			If (Me._ebiounitcd.Equals(value) = false) Then
				Me.OnebiounitcdChanging(value)
				Me.SendPropertyChanging
				Me._ebiounitcd = value
				Me.SendPropertyChanged("ebiounitcd")
				Me.OnebiounitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aori", DbType:="NVarChar(MAX)")>  _
	Public Property aori() As String
		Get
			Return Me._aori
		End Get
		Set
			If (String.Equals(Me._aori, value) = false) Then
				Me.OnaoriChanging(value)
				Me.SendPropertyChanging
				Me._aori = value
				Me.SendPropertyChanged("aori")
				Me.OnaoriChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mltplr", DbType:="Int")>  _
	Public Property mltplr() As System.Nullable(Of Integer)
		Get
			Return Me._mltplr
		End Get
		Set
			If (Me._mltplr.Equals(value) = false) Then
				Me.OnmltplrChanging(value)
				Me.SendPropertyChanging
				Me._mltplr = value
				Me.SendPropertyChanged("mltplr")
				Me.OnmltplrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stngcd", DbType:="SmallInt")>  _
	Public Property stngcd() As System.Nullable(Of Short)
		Get
			Return Me._stngcd
		End Get
		Set
			If (Me._stngcd.Equals(value) = false) Then
				Me.OnstngcdChanging(value)
				Me.SendPropertyChanging
				Me._stngcd = value
				Me.SendPropertyChanged("stngcd")
				Me.OnstngcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitcd", DbType:="Int")>  _
	Public Property sunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sunitcd
		End Get
		Set
			If (Me._sunitcd.Equals(value) = false) Then
				Me.OnsunitcdChanging(value)
				Me.SendPropertyChanging
				Me._sunitcd = value
				Me.SendPropertyChanged("sunitcd")
				Me.OnsunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_funccd", DbType:="Int")>  _
	Public Property funccd() As System.Nullable(Of Integer)
		Get
			Return Me._funccd
		End Get
		Set
			If (Me._funccd.Equals(value) = false) Then
				Me.OnfunccdChanging(value)
				Me.SendPropertyChanging
				Me._funccd = value
				Me.SendPropertyChanged("funccd")
				Me.OnfunccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fmlst", DbType:="Int")>  _
	Public Property fmlst() As System.Nullable(Of Integer)
		Get
			Return Me._fmlst
		End Get
		Set
			If (Me._fmlst.Equals(value) = false) Then
				Me.OnfmlstChanging(value)
				Me.SendPropertyChanging
				Me._fmlst = value
				Me.SendPropertyChanged("fmlst")
				Me.OnfmlstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="NVarChar(MAX)")>  _
	Public Property remark() As String
		Get
			Return Me._remark
		End Get
		Set
			If (String.Equals(Me._remark, value) = false) Then
				Me.OnremarkChanging(value)
				Me.SendPropertyChanging
				Me._remark = value
				Me.SendPropertyChanged("remark")
				Me.OnremarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drfmlno")>  _
Partial Public Class drfmlno
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As System.Nullable(Of Integer)
	
	Private _flineno As System.Nullable(Of Integer)
	
	Private _drgqty As System.Nullable(Of Decimal)
	
	Private _sunitcd As System.Nullable(Of Integer)
	
	Private _drgcdt As String
	
	Private _drgperunit As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnflinenoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnflinenoChanged()
    End Sub
    Partial Private Sub OndrgqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OndrgqtyChanged()
    End Sub
    Partial Private Sub OnsunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsunitcdChanged()
    End Sub
    Partial Private Sub OndrgcdtChanging(value As String)
    End Sub
    Partial Private Sub OndrgcdtChanged()
    End Sub
    Partial Private Sub OndrgperunitChanging(value As String)
    End Sub
    Partial Private Sub OndrgperunitChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="VarChar(3)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="Int")>  _
	Public Property rgtno() As System.Nullable(Of Integer)
		Get
			Return Me._rgtno
		End Get
		Set
			If (Me._rgtno.Equals(value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flineno", DbType:="Int")>  _
	Public Property flineno() As System.Nullable(Of Integer)
		Get
			Return Me._flineno
		End Get
		Set
			If (Me._flineno.Equals(value) = false) Then
				Me.OnflinenoChanging(value)
				Me.SendPropertyChanging
				Me._flineno = value
				Me.SendPropertyChanged("flineno")
				Me.OnflinenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgqty", DbType:="Decimal(10,5)")>  _
	Public Property drgqty() As System.Nullable(Of Decimal)
		Get
			Return Me._drgqty
		End Get
		Set
			If (Me._drgqty.Equals(value) = false) Then
				Me.OndrgqtyChanging(value)
				Me.SendPropertyChanging
				Me._drgqty = value
				Me.SendPropertyChanged("drgqty")
				Me.OndrgqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitcd", DbType:="Int")>  _
	Public Property sunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sunitcd
		End Get
		Set
			If (Me._sunitcd.Equals(value) = false) Then
				Me.OnsunitcdChanging(value)
				Me.SendPropertyChanging
				Me._sunitcd = value
				Me.SendPropertyChanged("sunitcd")
				Me.OnsunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgcdt", DbType:="VarChar(100)")>  _
	Public Property drgcdt() As String
		Get
			Return Me._drgcdt
		End Get
		Set
			If (String.Equals(Me._drgcdt, value) = false) Then
				Me.OndrgcdtChanging(value)
				Me.SendPropertyChanging
				Me._drgcdt = value
				Me.SendPropertyChanged("drgcdt")
				Me.OndrgcdtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgperunit", DbType:="VarChar(80)")>  _
	Public Property drgperunit() As String
		Get
			Return Me._drgperunit
		End Get
		Set
			If (String.Equals(Me._drgperunit, value) = false) Then
				Me.OndrgperunitChanging(value)
				Me.SendPropertyChanging
				Me._drgperunit = value
				Me.SendPropertyChanged("drgperunit")
				Me.OndrgperunitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drdrgchr")>  _
Partial Public Class drdrgchr
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Integer)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As System.Nullable(Of Integer)
	
	Private _seqno As System.Nullable(Of Integer)
	
	Private _drgchrtha As String
	
	Private _drgchreng As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnseqnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnseqnoChanged()
    End Sub
    Partial Private Sub OndrgchrthaChanging(value As String)
    End Sub
    Partial Private Sub OndrgchrthaChanged()
    End Sub
    Partial Private Sub OndrgchrengChanging(value As String)
    End Sub
    Partial Private Sub OndrgchrengChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="VarChar(3)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="Int")>  _
	Public Property rgtno() As System.Nullable(Of Integer)
		Get
			Return Me._rgtno
		End Get
		Set
			If (Me._rgtno.Equals(value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_seqno", DbType:="Int")>  _
	Public Property seqno() As System.Nullable(Of Integer)
		Get
			Return Me._seqno
		End Get
		Set
			If (Me._seqno.Equals(value) = false) Then
				Me.OnseqnoChanging(value)
				Me.SendPropertyChanging
				Me._seqno = value
				Me.SendPropertyChanged("seqno")
				Me.OnseqnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgchrtha", DbType:="VarChar(250)")>  _
	Public Property drgchrtha() As String
		Get
			Return Me._drgchrtha
		End Get
		Set
			If (String.Equals(Me._drgchrtha, value) = false) Then
				Me.OndrgchrthaChanging(value)
				Me.SendPropertyChanging
				Me._drgchrtha = value
				Me.SendPropertyChanged("drgchrtha")
				Me.OndrgchrthaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgchreng", DbType:="VarChar(250)")>  _
	Public Property drgchreng() As String
		Get
			Return Me._drgchreng
		End Get
		Set
			If (String.Equals(Me._drgchreng, value) = false) Then
				Me.OndrgchrengChanging(value)
				Me.SendPropertyChanging
				Me._drgchreng = value
				Me.SendPropertyChanged("drgchreng")
				Me.OndrgchrengChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drfrgn")>  _
Partial Public Class drfrgn
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As System.Nullable(Of Integer)
	
	Private _frgncd As System.Nullable(Of Integer)
	
	Private _frgnlctcd As System.Nullable(Of Integer)
	
	Private _mfrgnst As System.Nullable(Of Short)
	
	Private _mfrgnstep As String
	
	Private _funccd As System.Nullable(Of Short)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnfrgncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfrgncdChanged()
    End Sub
    Partial Private Sub OnfrgnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfrgnlctcdChanged()
    End Sub
    Partial Private Sub OnmfrgnstChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnmfrgnstChanged()
    End Sub
    Partial Private Sub OnmfrgnstepChanging(value As String)
    End Sub
    Partial Private Sub OnmfrgnstepChanged()
    End Sub
    Partial Private Sub OnfunccdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnfunccdChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="VarChar(3)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="Int")>  _
	Public Property rgtno() As System.Nullable(Of Integer)
		Get
			Return Me._rgtno
		End Get
		Set
			If (Me._rgtno.Equals(value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd", DbType:="Int")>  _
	Public Property frgncd() As System.Nullable(Of Integer)
		Get
			Return Me._frgncd
		End Get
		Set
			If (Me._frgncd.Equals(value) = false) Then
				Me.OnfrgncdChanging(value)
				Me.SendPropertyChanging
				Me._frgncd = value
				Me.SendPropertyChanged("frgncd")
				Me.OnfrgncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgnlctcd", DbType:="Int")>  _
	Public Property frgnlctcd() As System.Nullable(Of Integer)
		Get
			Return Me._frgnlctcd
		End Get
		Set
			If (Me._frgnlctcd.Equals(value) = false) Then
				Me.OnfrgnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._frgnlctcd = value
				Me.SendPropertyChanged("frgnlctcd")
				Me.OnfrgnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mfrgnst", DbType:="SmallInt")>  _
	Public Property mfrgnst() As System.Nullable(Of Short)
		Get
			Return Me._mfrgnst
		End Get
		Set
			If (Me._mfrgnst.Equals(value) = false) Then
				Me.OnmfrgnstChanging(value)
				Me.SendPropertyChanging
				Me._mfrgnst = value
				Me.SendPropertyChanged("mfrgnst")
				Me.OnmfrgnstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mfrgnstep", DbType:="NVarChar(MAX)")>  _
	Public Property mfrgnstep() As String
		Get
			Return Me._mfrgnstep
		End Get
		Set
			If (String.Equals(Me._mfrgnstep, value) = false) Then
				Me.OnmfrgnstepChanging(value)
				Me.SendPropertyChanging
				Me._mfrgnstep = value
				Me.SendPropertyChanged("mfrgnstep")
				Me.OnmfrgnstepChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_funccd", DbType:="SmallInt")>  _
	Public Property funccd() As System.Nullable(Of Short)
		Get
			Return Me._funccd
		End Get
		Set
			If (Me._funccd.Equals(value) = false) Then
				Me.OnfunccdChanging(value)
				Me.SendPropertyChanging
				Me._funccd = value
				Me.SendPropertyChanged("funccd")
				Me.OnfunccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_IN_PROJECT")>  _
Partial Public Class DRUG_IN_PROJECT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _COMMON_NAME As String
	
	Private _BRAND_NAME As String
	
	Private _OTHER_NAME As String
	
	Private _DOSE As String
	
	Private _DRUG_TYPE As System.Nullable(Of Integer)
	
	Private _IS_PLACEBO As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnCOMMON_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCOMMON_NAMEChanged()
    End Sub
    Partial Private Sub OnBRAND_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBRAND_NAMEChanged()
    End Sub
    Partial Private Sub OnOTHER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnOTHER_NAMEChanged()
    End Sub
    Partial Private Sub OnDOSEChanging(value As String)
    End Sub
    Partial Private Sub OnDOSEChanged()
    End Sub
    Partial Private Sub OnDRUG_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_TYPEChanged()
    End Sub
    Partial Private Sub OnIS_PLACEBOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIS_PLACEBOChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMMON_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property COMMON_NAME() As String
		Get
			Return Me._COMMON_NAME
		End Get
		Set
			If (String.Equals(Me._COMMON_NAME, value) = false) Then
				Me.OnCOMMON_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._COMMON_NAME = value
				Me.SendPropertyChanged("COMMON_NAME")
				Me.OnCOMMON_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BRAND_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BRAND_NAME() As String
		Get
			Return Me._BRAND_NAME
		End Get
		Set
			If (String.Equals(Me._BRAND_NAME, value) = false) Then
				Me.OnBRAND_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BRAND_NAME = value
				Me.SendPropertyChanged("BRAND_NAME")
				Me.OnBRAND_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER_NAME() As String
		Get
			Return Me._OTHER_NAME
		End Get
		Set
			If (String.Equals(Me._OTHER_NAME, value) = false) Then
				Me.OnOTHER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._OTHER_NAME = value
				Me.SendPropertyChanged("OTHER_NAME")
				Me.OnOTHER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOSE", DbType:="NVarChar(MAX)")>  _
	Public Property DOSE() As String
		Get
			Return Me._DOSE
		End Get
		Set
			If (String.Equals(Me._DOSE, value) = false) Then
				Me.OnDOSEChanging(value)
				Me.SendPropertyChanging
				Me._DOSE = value
				Me.SendPropertyChanged("DOSE")
				Me.OnDOSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_TYPE", DbType:="Int")>  _
	Public Property DRUG_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_TYPE
		End Get
		Set
			If (Me._DRUG_TYPE.Equals(value) = false) Then
				Me.OnDRUG_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_TYPE = value
				Me.SendPropertyChanged("DRUG_TYPE")
				Me.OnDRUG_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_PLACEBO", DbType:="Int")>  _
	Public Property IS_PLACEBO() As System.Nullable(Of Integer)
		Get
			Return Me._IS_PLACEBO
		End Get
		Set
			If (Me._IS_PLACEBO.Equals(value) = false) Then
				Me.OnIS_PLACEBOChanging(value)
				Me.SendPropertyChanging
				Me._IS_PLACEBO = value
				Me.SendPropertyChanged("IS_PLACEBO")
				Me.OnIS_PLACEBOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_RESEARCHER")>  _
Partial Public Class MAS_RESEARCHER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _NAME As String
	
	Private _ADDRESS As String
	
	Private _TEL As String
	
	Private _EMAIL As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESSChanged()
    End Sub
    Partial Private Sub OnTELChanging(value As String)
    End Sub
    Partial Private Sub OnTELChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS() As String
		Get
			Return Me._ADDRESS
		End Get
		Set
			If (String.Equals(Me._ADDRESS, value) = false) Then
				Me.OnADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS = value
				Me.SendPropertyChanged("ADDRESS")
				Me.OnADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL", DbType:="NVarChar(50)")>  _
	Public Property TEL() As String
		Get
			Return Me._TEL
		End Get
		Set
			If (String.Equals(Me._TEL, value) = false) Then
				Me.OnTELChanging(value)
				Me.SendPropertyChanging
				Me._TEL = value
				Me.SendPropertyChanged("TEL")
				Me.OnTELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TH_RESEARCH_LOCATION")>  _
Partial Public Class TH_RESEARCH_LOCATION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _RCVNO As String
	
	Private _RCVDATE As System.Nullable(Of Date)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _LOCATION_NAME As String
	
	Private _PERSON_COUNT As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnRCVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCVDATEChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnLOCATION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_NAMEChanged()
    End Sub
    Partial Private Sub OnPERSON_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPERSON_COUNTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO() As String
		Get
			Return Me._RCVNO
		End Get
		Set
			If (String.Equals(Me._RCVNO, value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE", DbType:="DateTime")>  _
	Public Property RCVDATE() As System.Nullable(Of Date)
		Get
			Return Me._RCVDATE
		End Get
		Set
			If (Me._RCVDATE.Equals(value) = false) Then
				Me.OnRCVDATEChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE = value
				Me.SendPropertyChanged("RCVDATE")
				Me.OnRCVDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_NAME() As String
		Get
			Return Me._LOCATION_NAME
		End Get
		Set
			If (String.Equals(Me._LOCATION_NAME, value) = false) Then
				Me.OnLOCATION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_NAME = value
				Me.SendPropertyChanged("LOCATION_NAME")
				Me.OnLOCATION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSON_COUNT", DbType:="Int")>  _
	Public Property PERSON_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._PERSON_COUNT
		End Get
		Set
			If (Me._PERSON_COUNT.Equals(value) = false) Then
				Me.OnPERSON_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._PERSON_COUNT = value
				Me.SendPropertyChanged("PERSON_COUNT")
				Me.OnPERSON_COUNTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dalcnaddr")>  _
Partial Public Class dalcnaddr
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _nameplace As String
	
	Private _number_addr As String
	
	Private _room As String
	
	Private _moo As String
	
	Private _floor As String
	
	Private _soi As String
	
	Private _building As String
	
	Private _road As String
	
	Private _thmblcd As System.Nullable(Of Integer)
	
	Private _amphrcd As System.Nullable(Of Integer)
	
	Private _chngwtcd As Integer
	
	Private _tel_home As String
	
	Private _tel_telephone As String
	
	Private _house_no As String
	
	Private _lcnno As String
	
	Private _zipcode As String
	
	Private _lcntpcd As String
	
	Private _pvncd As String
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnnameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnnameplaceChanged()
    End Sub
    Partial Private Sub Onnumber_addrChanging(value As String)
    End Sub
    Partial Private Sub Onnumber_addrChanged()
    End Sub
    Partial Private Sub OnroomChanging(value As String)
    End Sub
    Partial Private Sub OnroomChanged()
    End Sub
    Partial Private Sub OnmooChanging(value As String)
    End Sub
    Partial Private Sub OnmooChanged()
    End Sub
    Partial Private Sub OnfloorChanging(value As String)
    End Sub
    Partial Private Sub OnfloorChanged()
    End Sub
    Partial Private Sub OnsoiChanging(value As String)
    End Sub
    Partial Private Sub OnsoiChanged()
    End Sub
    Partial Private Sub OnbuildingChanging(value As String)
    End Sub
    Partial Private Sub OnbuildingChanged()
    End Sub
    Partial Private Sub OnroadChanging(value As String)
    End Sub
    Partial Private Sub OnroadChanged()
    End Sub
    Partial Private Sub OnthmblcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnthmblcdChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As Integer)
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub Ontel_homeChanging(value As String)
    End Sub
    Partial Private Sub Ontel_homeChanged()
    End Sub
    Partial Private Sub Ontel_telephoneChanging(value As String)
    End Sub
    Partial Private Sub Ontel_telephoneChanged()
    End Sub
    Partial Private Sub Onhouse_noChanging(value As String)
    End Sub
    Partial Private Sub Onhouse_noChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnzipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnzipcodeChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nameplace", DbType:="VarChar(MAX)")>  _
	Public Property nameplace() As String
		Get
			Return Me._nameplace
		End Get
		Set
			If (String.Equals(Me._nameplace, value) = false) Then
				Me.OnnameplaceChanging(value)
				Me.SendPropertyChanging
				Me._nameplace = value
				Me.SendPropertyChanged("nameplace")
				Me.OnnameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_number_addr", DbType:="VarChar(MAX)")>  _
	Public Property number_addr() As String
		Get
			Return Me._number_addr
		End Get
		Set
			If (String.Equals(Me._number_addr, value) = false) Then
				Me.Onnumber_addrChanging(value)
				Me.SendPropertyChanging
				Me._number_addr = value
				Me.SendPropertyChanged("number_addr")
				Me.Onnumber_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_room", DbType:="VarChar(MAX)")>  _
	Public Property room() As String
		Get
			Return Me._room
		End Get
		Set
			If (String.Equals(Me._room, value) = false) Then
				Me.OnroomChanging(value)
				Me.SendPropertyChanging
				Me._room = value
				Me.SendPropertyChanged("room")
				Me.OnroomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_moo", DbType:="VarChar(MAX)")>  _
	Public Property moo() As String
		Get
			Return Me._moo
		End Get
		Set
			If (String.Equals(Me._moo, value) = false) Then
				Me.OnmooChanging(value)
				Me.SendPropertyChanging
				Me._moo = value
				Me.SendPropertyChanged("moo")
				Me.OnmooChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_floor", DbType:="VarChar(MAX)")>  _
	Public Property floor() As String
		Get
			Return Me._floor
		End Get
		Set
			If (String.Equals(Me._floor, value) = false) Then
				Me.OnfloorChanging(value)
				Me.SendPropertyChanging
				Me._floor = value
				Me.SendPropertyChanged("floor")
				Me.OnfloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_soi", DbType:="VarChar(MAX)")>  _
	Public Property soi() As String
		Get
			Return Me._soi
		End Get
		Set
			If (String.Equals(Me._soi, value) = false) Then
				Me.OnsoiChanging(value)
				Me.SendPropertyChanging
				Me._soi = value
				Me.SendPropertyChanged("soi")
				Me.OnsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_building", DbType:="VarChar(MAX)")>  _
	Public Property building() As String
		Get
			Return Me._building
		End Get
		Set
			If (String.Equals(Me._building, value) = false) Then
				Me.OnbuildingChanging(value)
				Me.SendPropertyChanging
				Me._building = value
				Me.SendPropertyChanged("building")
				Me.OnbuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_road", DbType:="VarChar(MAX)")>  _
	Public Property road() As String
		Get
			Return Me._road
		End Get
		Set
			If (String.Equals(Me._road, value) = false) Then
				Me.OnroadChanging(value)
				Me.SendPropertyChanging
				Me._road = value
				Me.SendPropertyChanged("road")
				Me.OnroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd", DbType:="Int")>  _
	Public Property thmblcd() As System.Nullable(Of Integer)
		Get
			Return Me._thmblcd
		End Get
		Set
			If (Me._thmblcd.Equals(value) = false) Then
				Me.OnthmblcdChanging(value)
				Me.SendPropertyChanging
				Me._thmblcd = value
				Me.SendPropertyChanged("thmblcd")
				Me.OnthmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="Int")>  _
	Public Property amphrcd() As System.Nullable(Of Integer)
		Get
			Return Me._amphrcd
		End Get
		Set
			If (Me._amphrcd.Equals(value) = false) Then
				Me.OnamphrcdChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd = value
				Me.SendPropertyChanged("amphrcd")
				Me.OnamphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="Int NOT NULL")>  _
	Public Property chngwtcd() As Integer
		Get
			Return Me._chngwtcd
		End Get
		Set
			If ((Me._chngwtcd = value)  _
						= false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel_home", DbType:="VarChar(MAX)")>  _
	Public Property tel_home() As String
		Get
			Return Me._tel_home
		End Get
		Set
			If (String.Equals(Me._tel_home, value) = false) Then
				Me.Ontel_homeChanging(value)
				Me.SendPropertyChanging
				Me._tel_home = value
				Me.SendPropertyChanged("tel_home")
				Me.Ontel_homeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel_telephone", DbType:="VarChar(MAX)")>  _
	Public Property tel_telephone() As String
		Get
			Return Me._tel_telephone
		End Get
		Set
			If (String.Equals(Me._tel_telephone, value) = false) Then
				Me.Ontel_telephoneChanging(value)
				Me.SendPropertyChanging
				Me._tel_telephone = value
				Me.SendPropertyChanged("tel_telephone")
				Me.Ontel_telephoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_house_no", DbType:="VarChar(MAX)")>  _
	Public Property house_no() As String
		Get
			Return Me._house_no
		End Get
		Set
			If (String.Equals(Me._house_no, value) = false) Then
				Me.Onhouse_noChanging(value)
				Me.SendPropertyChanging
				Me._house_no = value
				Me.SendPropertyChanged("house_no")
				Me.Onhouse_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="VarChar(MAX)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_zipcode", DbType:="NVarChar(50)")>  _
	Public Property zipcode() As String
		Get
			Return Me._zipcode
		End Get
		Set
			If (String.Equals(Me._zipcode, value) = false) Then
				Me.OnzipcodeChanging(value)
				Me.SendPropertyChanging
				Me._zipcode = value
				Me.SendPropertyChanged("zipcode")
				Me.OnzipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(50)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TEMPLATE_PROCESS")>  _
Partial Public Class MAS_TEMPLATE_PROCESS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _LCNTYPECD As String
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _GROUPS As System.Nullable(Of Integer)
	
	Private _PREVIEW As System.Nullable(Of Integer)
	
	Private _PDF_TEMPLATE As String
	
	Private _XML_PATH As String
	
	Private _PDF_OUTPUT As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnLCNTYPECDChanging(value As String)
    End Sub
    Partial Private Sub OnLCNTYPECDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnGROUPSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUPSChanged()
    End Sub
    Partial Private Sub OnPREVIEWChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPREVIEWChanged()
    End Sub
    Partial Private Sub OnPDF_TEMPLATEChanging(value As String)
    End Sub
    Partial Private Sub OnPDF_TEMPLATEChanged()
    End Sub
    Partial Private Sub OnXML_PATHChanging(value As String)
    End Sub
    Partial Private Sub OnXML_PATHChanged()
    End Sub
    Partial Private Sub OnPDF_OUTPUTChanging(value As String)
    End Sub
    Partial Private Sub OnPDF_OUTPUTChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNTYPECD", DbType:="NVarChar(10)")>  _
	Public Property LCNTYPECD() As String
		Get
			Return Me._LCNTYPECD
		End Get
		Set
			If (String.Equals(Me._LCNTYPECD, value) = false) Then
				Me.OnLCNTYPECDChanging(value)
				Me.SendPropertyChanging
				Me._LCNTYPECD = value
				Me.SendPropertyChanged("LCNTYPECD")
				Me.OnLCNTYPECDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPS", DbType:="Int")>  _
	Public Property GROUPS() As System.Nullable(Of Integer)
		Get
			Return Me._GROUPS
		End Get
		Set
			If (Me._GROUPS.Equals(value) = false) Then
				Me.OnGROUPSChanging(value)
				Me.SendPropertyChanging
				Me._GROUPS = value
				Me.SendPropertyChanged("GROUPS")
				Me.OnGROUPSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREVIEW", DbType:="Int")>  _
	Public Property PREVIEW() As System.Nullable(Of Integer)
		Get
			Return Me._PREVIEW
		End Get
		Set
			If (Me._PREVIEW.Equals(value) = false) Then
				Me.OnPREVIEWChanging(value)
				Me.SendPropertyChanging
				Me._PREVIEW = value
				Me.SendPropertyChanged("PREVIEW")
				Me.OnPREVIEWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDF_TEMPLATE", DbType:="NVarChar(MAX)")>  _
	Public Property PDF_TEMPLATE() As String
		Get
			Return Me._PDF_TEMPLATE
		End Get
		Set
			If (String.Equals(Me._PDF_TEMPLATE, value) = false) Then
				Me.OnPDF_TEMPLATEChanging(value)
				Me.SendPropertyChanging
				Me._PDF_TEMPLATE = value
				Me.SendPropertyChanged("PDF_TEMPLATE")
				Me.OnPDF_TEMPLATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_PATH", DbType:="NVarChar(MAX)")>  _
	Public Property XML_PATH() As String
		Get
			Return Me._XML_PATH
		End Get
		Set
			If (String.Equals(Me._XML_PATH, value) = false) Then
				Me.OnXML_PATHChanging(value)
				Me.SendPropertyChanging
				Me._XML_PATH = value
				Me.SendPropertyChanged("XML_PATH")
				Me.OnXML_PATHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PDF_OUTPUT", DbType:="NVarChar(MAX)")>  _
	Public Property PDF_OUTPUT() As String
		Get
			Return Me._PDF_OUTPUT
		End Get
		Set
			If (String.Equals(Me._PDF_OUTPUT, value) = false) Then
				Me.OnPDF_OUTPUTChanging(value)
				Me.SendPropertyChanging
				Me._PDF_OUTPUT = value
				Me.SendPropertyChanged("PDF_OUTPUT")
				Me.OnPDF_OUTPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACK_STAFF_STATUS")>  _
Partial Public Class E_TRACK_STAFF_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _RCVNO As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="Int")>  _
	Public Property RCVNO() As System.Nullable(Of Integer)
		Get
			Return Me._RCVNO
		End Get
		Set
			If (Me._RCVNO.Equals(value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MAIN_GROUP_STATUS")>  _
Partial Public Class MAS_MAIN_GROUP_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _MAIN_GROUP As String
	
	Private _STATUS_ID As String
	
	Private _REF_MAIN_GROUP As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnMAIN_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnMAIN_GROUPChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnREF_MAIN_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnREF_MAIN_GROUPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAIN_GROUP", DbType:="NChar(10)")>  _
	Public Property MAIN_GROUP() As String
		Get
			Return Me._MAIN_GROUP
		End Get
		Set
			If (String.Equals(Me._MAIN_GROUP, value) = false) Then
				Me.OnMAIN_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._MAIN_GROUP = value
				Me.SendPropertyChanged("MAIN_GROUP")
				Me.OnMAIN_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="NChar(10)")>  _
	Public Property STATUS_ID() As String
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (String.Equals(Me._STATUS_ID, value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_MAIN_GROUP", DbType:="NChar(10)")>  _
	Public Property REF_MAIN_GROUP() As String
		Get
			Return Me._REF_MAIN_GROUP
		End Get
		Set
			If (String.Equals(Me._REF_MAIN_GROUP, value) = false) Then
				Me.OnREF_MAIN_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._REF_MAIN_GROUP = value
				Me.SendPropertyChanged("REF_MAIN_GROUP")
				Me.OnREF_MAIN_GROUPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DETAIL_MAIN_GROUP_STATUS")>  _
Partial Public Class DETAIL_MAIN_GROUP_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _MAIN_GROUP As String
	
	Private _REF_MAIN_GROUP As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _TR_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnMAIN_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnMAIN_GROUPChanged()
    End Sub
    Partial Private Sub OnREF_MAIN_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnREF_MAIN_GROUPChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnTR_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAIN_GROUP", DbType:="NVarChar(50)")>  _
	Public Property MAIN_GROUP() As String
		Get
			Return Me._MAIN_GROUP
		End Get
		Set
			If (String.Equals(Me._MAIN_GROUP, value) = false) Then
				Me.OnMAIN_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._MAIN_GROUP = value
				Me.SendPropertyChanged("MAIN_GROUP")
				Me.OnMAIN_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_MAIN_GROUP", DbType:="NVarChar(50)")>  _
	Public Property REF_MAIN_GROUP() As String
		Get
			Return Me._REF_MAIN_GROUP
		End Get
		Set
			If (String.Equals(Me._REF_MAIN_GROUP, value) = false) Then
				Me.OnREF_MAIN_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._REF_MAIN_GROUP = value
				Me.SendPropertyChanged("REF_MAIN_GROUP")
				Me.OnREF_MAIN_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_IDA", DbType:="Int")>  _
	Public Property TR_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._TR_IDA
		End Get
		Set
			If (Me._TR_IDA.Equals(value) = false) Then
				Me.OnTR_IDAChanging(value)
				Me.SendPropertyChanging
				Me._TR_IDA = value
				Me.SendPropertyChanged("TR_IDA")
				Me.OnTR_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DATE_MODIFY_STATUS")>  _
Partial Public Class DATE_MODIFY_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _MODIFY_DATE As System.Nullable(Of Date)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnMODIFY_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnMODIFY_DATEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MODIFY_DATE", DbType:="DateTime")>  _
	Public Property MODIFY_DATE() As System.Nullable(Of Date)
		Get
			Return Me._MODIFY_DATE
		End Get
		Set
			If (Me._MODIFY_DATE.Equals(value) = false) Then
				Me.OnMODIFY_DATEChanging(value)
				Me.SendPropertyChanging
				Me._MODIFY_DATE = value
				Me.SendPropertyChanged("MODIFY_DATE")
				Me.OnMODIFY_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.lgt_impcer")>  _
Partial Public Class lgt_impcer
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _pdcid As System.Nullable(Of Integer)
	
	Private _orgid As System.Nullable(Of Integer)
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _pdttpcd As System.Nullable(Of Short)
	
	Private _certpcd As System.Nullable(Of Short)
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _lcnscd As System.Nullable(Of Integer)
	
	Private _lctcd As System.Nullable(Of Integer)
	
	Private _lctnmcd As System.Nullable(Of Integer)
	
	Private _lctnm As String
	
	Private _pdccd As System.Nullable(Of Integer)
	
	Private _cerno As String
	
	Private _appvdate As System.Nullable(Of Date)
	
	Private _expdate As System.Nullable(Of Date)
	
	Private _stfcd As System.Nullable(Of Integer)
	
	Private _scope As String
	
	Private _cerfile As String
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _xmlnm As String
	
	Private _cnsdcd As System.Nullable(Of Integer)
	
	Private _CER_NUMBER As String
	
	Private _NAME_ADDRESS As String
	
	Private _ADDRESS_NUMBER As String
	
	Private _ADDRESS_CITY As String
	
	Private _COUNTRY As String
	
	Private _CER_TYPE As String
	
	Private _GLN As String
	
	Private _APPROVE_NUMBER As String
	
	Private _DEPARTMENT_NAME As String
	
	Private _CITIZEN_ID As String
	
	Private _CITIZEN_ID_UPLOAD As String
	
	Private _ADDRESS_CHOICE As String
	
	Private _GOVERMENT_CONFIRM As String
	
	Private _GOVERMENT_CB As String
	
	Private _GOVERMENT_AB As String
	
	Private _STANDARD_OTHER As String
	
	Private _ZIPCODE As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _FK_MANUFACTURE_LOCATION_ADDRESS_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnpdcidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpdcidChanged()
    End Sub
    Partial Private Sub OnorgidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnorgidChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnpdttpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpdttpcdChanged()
    End Sub
    Partial Private Sub OncertpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncertpcdChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnlctnmcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctnmcdChanged()
    End Sub
    Partial Private Sub OnlctnmChanging(value As String)
    End Sub
    Partial Private Sub OnlctnmChanged()
    End Sub
    Partial Private Sub OnpdccdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpdccdChanged()
    End Sub
    Partial Private Sub OncernoChanging(value As String)
    End Sub
    Partial Private Sub OncernoChanged()
    End Sub
    Partial Private Sub OnappvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappvdateChanged()
    End Sub
    Partial Private Sub OnexpdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnexpdateChanged()
    End Sub
    Partial Private Sub OnstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnstfcdChanged()
    End Sub
    Partial Private Sub OnscopeChanging(value As String)
    End Sub
    Partial Private Sub OnscopeChanged()
    End Sub
    Partial Private Sub OncerfileChanging(value As String)
    End Sub
    Partial Private Sub OncerfileChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnxmlnmChanging(value As String)
    End Sub
    Partial Private Sub OnxmlnmChanged()
    End Sub
    Partial Private Sub OncnsdcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncnsdcdChanged()
    End Sub
    Partial Private Sub OnCER_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnCER_NUMBERChanged()
    End Sub
    Partial Private Sub OnNAME_ADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ADDRESSChanged()
    End Sub
    Partial Private Sub OnADDRESS_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_NUMBERChanged()
    End Sub
    Partial Private Sub OnADDRESS_CITYChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_CITYChanged()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnCER_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnCER_TYPEChanged()
    End Sub
    Partial Private Sub OnGLNChanging(value As String)
    End Sub
    Partial Private Sub OnGLNChanged()
    End Sub
    Partial Private Sub OnAPPROVE_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnAPPROVE_NUMBERChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_NAMEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnADDRESS_CHOICEChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_CHOICEChanged()
    End Sub
    Partial Private Sub OnGOVERMENT_CONFIRMChanging(value As String)
    End Sub
    Partial Private Sub OnGOVERMENT_CONFIRMChanged()
    End Sub
    Partial Private Sub OnGOVERMENT_CBChanging(value As String)
    End Sub
    Partial Private Sub OnGOVERMENT_CBChanged()
    End Sub
    Partial Private Sub OnGOVERMENT_ABChanging(value As String)
    End Sub
    Partial Private Sub OnGOVERMENT_ABChanged()
    End Sub
    Partial Private Sub OnSTANDARD_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnSTANDARD_OTHERChanged()
    End Sub
    Partial Private Sub OnZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIPCODEChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnFK_MANUFACTURE_LOCATION_ADDRESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_MANUFACTURE_LOCATION_ADDRESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pdcid", DbType:="Int")>  _
	Public Property pdcid() As System.Nullable(Of Integer)
		Get
			Return Me._pdcid
		End Get
		Set
			If (Me._pdcid.Equals(value) = false) Then
				Me.OnpdcidChanging(value)
				Me.SendPropertyChanging
				Me._pdcid = value
				Me.SendPropertyChanged("pdcid")
				Me.OnpdcidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_orgid", DbType:="Int")>  _
	Public Property orgid() As System.Nullable(Of Integer)
		Get
			Return Me._orgid
		End Get
		Set
			If (Me._orgid.Equals(value) = false) Then
				Me.OnorgidChanging(value)
				Me.SendPropertyChanging
				Me._orgid = value
				Me.SendPropertyChanged("orgid")
				Me.OnorgidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="Date")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pdttpcd", DbType:="SmallInt")>  _
	Public Property pdttpcd() As System.Nullable(Of Short)
		Get
			Return Me._pdttpcd
		End Get
		Set
			If (Me._pdttpcd.Equals(value) = false) Then
				Me.OnpdttpcdChanging(value)
				Me.SendPropertyChanging
				Me._pdttpcd = value
				Me.SendPropertyChanged("pdttpcd")
				Me.OnpdttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_certpcd", DbType:="SmallInt")>  _
	Public Property certpcd() As System.Nullable(Of Short)
		Get
			Return Me._certpcd
		End Get
		Set
			If (Me._certpcd.Equals(value) = false) Then
				Me.OncertpcdChanging(value)
				Me.SendPropertyChanging
				Me._certpcd = value
				Me.SendPropertyChanged("certpcd")
				Me.OncertpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="Int")>  _
	Public Property lcnscd() As System.Nullable(Of Integer)
		Get
			Return Me._lcnscd
		End Get
		Set
			If (Me._lcnscd.Equals(value) = false) Then
				Me.OnlcnscdChanging(value)
				Me.SendPropertyChanging
				Me._lcnscd = value
				Me.SendPropertyChanged("lcnscd")
				Me.OnlcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int")>  _
	Public Property lctcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctcd
		End Get
		Set
			If (Me._lctcd.Equals(value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmcd", DbType:="Int")>  _
	Public Property lctnmcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctnmcd
		End Get
		Set
			If (Me._lctnmcd.Equals(value) = false) Then
				Me.OnlctnmcdChanging(value)
				Me.SendPropertyChanging
				Me._lctnmcd = value
				Me.SendPropertyChanged("lctnmcd")
				Me.OnlctnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnm", DbType:="NVarChar(MAX)")>  _
	Public Property lctnm() As String
		Get
			Return Me._lctnm
		End Get
		Set
			If (String.Equals(Me._lctnm, value) = false) Then
				Me.OnlctnmChanging(value)
				Me.SendPropertyChanging
				Me._lctnm = value
				Me.SendPropertyChanged("lctnm")
				Me.OnlctnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pdccd", DbType:="Int")>  _
	Public Property pdccd() As System.Nullable(Of Integer)
		Get
			Return Me._pdccd
		End Get
		Set
			If (Me._pdccd.Equals(value) = false) Then
				Me.OnpdccdChanging(value)
				Me.SendPropertyChanging
				Me._pdccd = value
				Me.SendPropertyChanged("pdccd")
				Me.OnpdccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cerno", DbType:="NVarChar(MAX)")>  _
	Public Property cerno() As String
		Get
			Return Me._cerno
		End Get
		Set
			If (String.Equals(Me._cerno, value) = false) Then
				Me.OncernoChanging(value)
				Me.SendPropertyChanging
				Me._cerno = value
				Me.SendPropertyChanged("cerno")
				Me.OncernoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appvdate", DbType:="Date")>  _
	Public Property appvdate() As System.Nullable(Of Date)
		Get
			Return Me._appvdate
		End Get
		Set
			If (Me._appvdate.Equals(value) = false) Then
				Me.OnappvdateChanging(value)
				Me.SendPropertyChanging
				Me._appvdate = value
				Me.SendPropertyChanged("appvdate")
				Me.OnappvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expdate", DbType:="Date")>  _
	Public Property expdate() As System.Nullable(Of Date)
		Get
			Return Me._expdate
		End Get
		Set
			If (Me._expdate.Equals(value) = false) Then
				Me.OnexpdateChanging(value)
				Me.SendPropertyChanging
				Me._expdate = value
				Me.SendPropertyChanged("expdate")
				Me.OnexpdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stfcd", DbType:="Int")>  _
	Public Property stfcd() As System.Nullable(Of Integer)
		Get
			Return Me._stfcd
		End Get
		Set
			If (Me._stfcd.Equals(value) = false) Then
				Me.OnstfcdChanging(value)
				Me.SendPropertyChanging
				Me._stfcd = value
				Me.SendPropertyChanged("stfcd")
				Me.OnstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_scope", DbType:="NVarChar(MAX)")>  _
	Public Property scope() As String
		Get
			Return Me._scope
		End Get
		Set
			If (String.Equals(Me._scope, value) = false) Then
				Me.OnscopeChanging(value)
				Me.SendPropertyChanging
				Me._scope = value
				Me.SendPropertyChanged("scope")
				Me.OnscopeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cerfile", DbType:="NVarChar(MAX)")>  _
	Public Property cerfile() As String
		Get
			Return Me._cerfile
		End Get
		Set
			If (String.Equals(Me._cerfile, value) = false) Then
				Me.OncerfileChanging(value)
				Me.SendPropertyChanging
				Me._cerfile = value
				Me.SendPropertyChanged("cerfile")
				Me.OncerfileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="Date")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_xmlnm", DbType:="NVarChar(MAX)")>  _
	Public Property xmlnm() As String
		Get
			Return Me._xmlnm
		End Get
		Set
			If (String.Equals(Me._xmlnm, value) = false) Then
				Me.OnxmlnmChanging(value)
				Me.SendPropertyChanging
				Me._xmlnm = value
				Me.SendPropertyChanged("xmlnm")
				Me.OnxmlnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnsdcd", DbType:="Int")>  _
	Public Property cnsdcd() As System.Nullable(Of Integer)
		Get
			Return Me._cnsdcd
		End Get
		Set
			If (Me._cnsdcd.Equals(value) = false) Then
				Me.OncnsdcdChanging(value)
				Me.SendPropertyChanging
				Me._cnsdcd = value
				Me.SendPropertyChanged("cnsdcd")
				Me.OncnsdcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property CER_NUMBER() As String
		Get
			Return Me._CER_NUMBER
		End Get
		Set
			If (String.Equals(Me._CER_NUMBER, value) = false) Then
				Me.OnCER_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._CER_NUMBER = value
				Me.SendPropertyChanged("CER_NUMBER")
				Me.OnCER_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ADDRESS", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ADDRESS() As String
		Get
			Return Me._NAME_ADDRESS
		End Get
		Set
			If (String.Equals(Me._NAME_ADDRESS, value) = false) Then
				Me.OnNAME_ADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ADDRESS = value
				Me.SendPropertyChanged("NAME_ADDRESS")
				Me.OnNAME_ADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_NUMBER() As String
		Get
			Return Me._ADDRESS_NUMBER
		End Get
		Set
			If (String.Equals(Me._ADDRESS_NUMBER, value) = false) Then
				Me.OnADDRESS_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_NUMBER = value
				Me.SendPropertyChanged("ADDRESS_NUMBER")
				Me.OnADDRESS_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_CITY", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_CITY() As String
		Get
			Return Me._ADDRESS_CITY
		End Get
		Set
			If (String.Equals(Me._ADDRESS_CITY, value) = false) Then
				Me.OnADDRESS_CITYChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_CITY = value
				Me.SendPropertyChanged("ADDRESS_CITY")
				Me.OnADDRESS_CITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRY() As String
		Get
			Return Me._COUNTRY
		End Get
		Set
			If (String.Equals(Me._COUNTRY, value) = false) Then
				Me.OnCOUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY = value
				Me.SendPropertyChanged("COUNTRY")
				Me.OnCOUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property CER_TYPE() As String
		Get
			Return Me._CER_TYPE
		End Get
		Set
			If (String.Equals(Me._CER_TYPE, value) = false) Then
				Me.OnCER_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CER_TYPE = value
				Me.SendPropertyChanged("CER_TYPE")
				Me.OnCER_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GLN", DbType:="NVarChar(MAX)")>  _
	Public Property GLN() As String
		Get
			Return Me._GLN
		End Get
		Set
			If (String.Equals(Me._GLN, value) = false) Then
				Me.OnGLNChanging(value)
				Me.SendPropertyChanging
				Me._GLN = value
				Me.SendPropertyChanged("GLN")
				Me.OnGLNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPROVE_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property APPROVE_NUMBER() As String
		Get
			Return Me._APPROVE_NUMBER
		End Get
		Set
			If (String.Equals(Me._APPROVE_NUMBER, value) = false) Then
				Me.OnAPPROVE_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._APPROVE_NUMBER = value
				Me.SendPropertyChanged("APPROVE_NUMBER")
				Me.OnAPPROVE_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DEPARTMENT_NAME() As String
		Get
			Return Me._DEPARTMENT_NAME
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_NAME, value) = false) Then
				Me.OnDEPARTMENT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_NAME = value
				Me.SendPropertyChanged("DEPARTMENT_NAME")
				Me.OnDEPARTMENT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_UPLOAD", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID_UPLOAD() As String
		Get
			Return Me._CITIZEN_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_UPLOAD, value) = false) Then
				Me.OnCITIZEN_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_ID_UPLOAD")
				Me.OnCITIZEN_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_CHOICE", DbType:="NVarChar(50)")>  _
	Public Property ADDRESS_CHOICE() As String
		Get
			Return Me._ADDRESS_CHOICE
		End Get
		Set
			If (String.Equals(Me._ADDRESS_CHOICE, value) = false) Then
				Me.OnADDRESS_CHOICEChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_CHOICE = value
				Me.SendPropertyChanged("ADDRESS_CHOICE")
				Me.OnADDRESS_CHOICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GOVERMENT_CONFIRM", DbType:="NVarChar(MAX)")>  _
	Public Property GOVERMENT_CONFIRM() As String
		Get
			Return Me._GOVERMENT_CONFIRM
		End Get
		Set
			If (String.Equals(Me._GOVERMENT_CONFIRM, value) = false) Then
				Me.OnGOVERMENT_CONFIRMChanging(value)
				Me.SendPropertyChanging
				Me._GOVERMENT_CONFIRM = value
				Me.SendPropertyChanged("GOVERMENT_CONFIRM")
				Me.OnGOVERMENT_CONFIRMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GOVERMENT_CB", DbType:="NVarChar(MAX)")>  _
	Public Property GOVERMENT_CB() As String
		Get
			Return Me._GOVERMENT_CB
		End Get
		Set
			If (String.Equals(Me._GOVERMENT_CB, value) = false) Then
				Me.OnGOVERMENT_CBChanging(value)
				Me.SendPropertyChanging
				Me._GOVERMENT_CB = value
				Me.SendPropertyChanged("GOVERMENT_CB")
				Me.OnGOVERMENT_CBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GOVERMENT_AB", DbType:="NVarChar(MAX)")>  _
	Public Property GOVERMENT_AB() As String
		Get
			Return Me._GOVERMENT_AB
		End Get
		Set
			If (String.Equals(Me._GOVERMENT_AB, value) = false) Then
				Me.OnGOVERMENT_ABChanging(value)
				Me.SendPropertyChanging
				Me._GOVERMENT_AB = value
				Me.SendPropertyChanged("GOVERMENT_AB")
				Me.OnGOVERMENT_ABChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STANDARD_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property STANDARD_OTHER() As String
		Get
			Return Me._STANDARD_OTHER
		End Get
		Set
			If (String.Equals(Me._STANDARD_OTHER, value) = false) Then
				Me.OnSTANDARD_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._STANDARD_OTHER = value
				Me.SendPropertyChanged("STANDARD_OTHER")
				Me.OnSTANDARD_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property ZIPCODE() As String
		Get
			Return Me._ZIPCODE
		End Get
		Set
			If (String.Equals(Me._ZIPCODE, value) = false) Then
				Me.OnZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIPCODE = value
				Me.SendPropertyChanged("ZIPCODE")
				Me.OnZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_MANUFACTURE_LOCATION_ADDRESS_ID", DbType:="Int")>  _
	Public Property FK_MANUFACTURE_LOCATION_ADDRESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FK_MANUFACTURE_LOCATION_ADDRESS_ID
		End Get
		Set
			If (Me._FK_MANUFACTURE_LOCATION_ADDRESS_ID.Equals(value) = false) Then
				Me.OnFK_MANUFACTURE_LOCATION_ADDRESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._FK_MANUFACTURE_LOCATION_ADDRESS_ID = value
				Me.SendPropertyChanged("FK_MANUFACTURE_LOCATION_ADDRESS_ID")
				Me.OnFK_MANUFACTURE_LOCATION_ADDRESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TEMPLATE_ATTACH")>  _
Partial Public Class TEMPLATE_ATTACH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _LCNTPCD As String
	
	Private _ATTACH_NAME As String
	
	Private _ATTACH_PIORITY As System.Nullable(Of Integer)
	
	Private _ATTACH_FILE_EXTENSION As String
	
	Private _conventpcd As String
	
	Private _TYPE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnLCNTPCDChanging(value As String)
    End Sub
    Partial Private Sub OnLCNTPCDChanged()
    End Sub
    Partial Private Sub OnATTACH_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnATTACH_NAMEChanged()
    End Sub
    Partial Private Sub OnATTACH_PIORITYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnATTACH_PIORITYChanged()
    End Sub
    Partial Private Sub OnATTACH_FILE_EXTENSIONChanging(value As String)
    End Sub
    Partial Private Sub OnATTACH_FILE_EXTENSIONChanged()
    End Sub
    Partial Private Sub OnconventpcdChanging(value As String)
    End Sub
    Partial Private Sub OnconventpcdChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNTPCD", DbType:="NVarChar(MAX)")>  _
	Public Property LCNTPCD() As String
		Get
			Return Me._LCNTPCD
		End Get
		Set
			If (String.Equals(Me._LCNTPCD, value) = false) Then
				Me.OnLCNTPCDChanging(value)
				Me.SendPropertyChanging
				Me._LCNTPCD = value
				Me.SendPropertyChanged("LCNTPCD")
				Me.OnLCNTPCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ATTACH_NAME() As String
		Get
			Return Me._ATTACH_NAME
		End Get
		Set
			If (String.Equals(Me._ATTACH_NAME, value) = false) Then
				Me.OnATTACH_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ATTACH_NAME = value
				Me.SendPropertyChanged("ATTACH_NAME")
				Me.OnATTACH_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_PIORITY", DbType:="Int")>  _
	Public Property ATTACH_PIORITY() As System.Nullable(Of Integer)
		Get
			Return Me._ATTACH_PIORITY
		End Get
		Set
			If (Me._ATTACH_PIORITY.Equals(value) = false) Then
				Me.OnATTACH_PIORITYChanging(value)
				Me.SendPropertyChanging
				Me._ATTACH_PIORITY = value
				Me.SendPropertyChanged("ATTACH_PIORITY")
				Me.OnATTACH_PIORITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_FILE_EXTENSION", DbType:="NVarChar(MAX)")>  _
	Public Property ATTACH_FILE_EXTENSION() As String
		Get
			Return Me._ATTACH_FILE_EXTENSION
		End Get
		Set
			If (String.Equals(Me._ATTACH_FILE_EXTENSION, value) = false) Then
				Me.OnATTACH_FILE_EXTENSIONChanging(value)
				Me.SendPropertyChanging
				Me._ATTACH_FILE_EXTENSION = value
				Me.SendPropertyChanged("ATTACH_FILE_EXTENSION")
				Me.OnATTACH_FILE_EXTENSIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_conventpcd", DbType:="NVarChar(MAX)")>  _
	Public Property conventpcd() As String
		Get
			Return Me._conventpcd
		End Get
		Set
			If (String.Equals(Me._conventpcd, value) = false) Then
				Me.OnconventpcdChanging(value)
				Me.SendPropertyChanging
				Me._conventpcd = value
				Me.SendPropertyChanged("conventpcd")
				Me.OnconventpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="Int")>  _
	Public Property TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE
		End Get
		Set
			If (Me._TYPE.Equals(value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_RCVNO")>  _
Partial Public Class GEN_RCVNO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PVNCD As System.Nullable(Of Integer)
	
	Private _YEARS As System.Nullable(Of Integer)
	
	Private _GEN_RCV As String
	
	Private _GEN_TYPE As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnYEARSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYEARSChanged()
    End Sub
    Partial Private Sub OnGEN_RCVChanging(value As String)
    End Sub
    Partial Private Sub OnGEN_RCVChanged()
    End Sub
    Partial Private Sub OnGEN_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnGEN_TYPEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="Int")>  _
	Public Property PVNCD() As System.Nullable(Of Integer)
		Get
			Return Me._PVNCD
		End Get
		Set
			If (Me._PVNCD.Equals(value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEARS", DbType:="Int")>  _
	Public Property YEARS() As System.Nullable(Of Integer)
		Get
			Return Me._YEARS
		End Get
		Set
			If (Me._YEARS.Equals(value) = false) Then
				Me.OnYEARSChanging(value)
				Me.SendPropertyChanging
				Me._YEARS = value
				Me.SendPropertyChanged("YEARS")
				Me.OnYEARSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GEN_RCV", DbType:="NVarChar(50)")>  _
	Public Property GEN_RCV() As String
		Get
			Return Me._GEN_RCV
		End Get
		Set
			If (String.Equals(Me._GEN_RCV, value) = false) Then
				Me.OnGEN_RCVChanging(value)
				Me.SendPropertyChanging
				Me._GEN_RCV = value
				Me.SendPropertyChanged("GEN_RCV")
				Me.OnGEN_RCVChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GEN_TYPE", DbType:="NVarChar(50)")>  _
	Public Property GEN_TYPE() As String
		Get
			Return Me._GEN_TYPE
		End Get
		Set
			If (String.Equals(Me._GEN_TYPE, value) = false) Then
				Me.OnGEN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._GEN_TYPE = value
				Me.SendPropertyChanged("GEN_TYPE")
				Me.OnGEN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRANFER_LOCATION")>  _
Partial Public Class TRANFER_LOCATION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _LCN_IDA_OLD As System.Nullable(Of Integer)
	
	Private _LCN_IDA_NEW As System.Nullable(Of Integer)
	
	Private _DRUG_IDA As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _LCNNO_OLD As String
	
	Private _LCNNO_NEW As String
	
	Private _LCNNO_DISPLAY_OLD As String
	
	Private _LCNNO_DISPLAY_NEW As String
	
	Private _IDENTIFY_OLD As String
	
	Private _IDENTIFY_NEW As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnLCN_IDA_OLDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDA_OLDChanged()
    End Sub
    Partial Private Sub OnLCN_IDA_NEWChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDA_NEWChanged()
    End Sub
    Partial Private Sub OnDRUG_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_IDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnLCNNO_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNO_OLDChanged()
    End Sub
    Partial Private Sub OnLCNNO_NEWChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNO_NEWChanged()
    End Sub
    Partial Private Sub OnLCNNO_DISPLAY_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNO_DISPLAY_OLDChanged()
    End Sub
    Partial Private Sub OnLCNNO_DISPLAY_NEWChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNO_DISPLAY_NEWChanged()
    End Sub
    Partial Private Sub OnIDENTIFY_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFY_OLDChanged()
    End Sub
    Partial Private Sub OnIDENTIFY_NEWChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFY_NEWChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA_OLD", DbType:="Int")>  _
	Public Property LCN_IDA_OLD() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA_OLD
		End Get
		Set
			If (Me._LCN_IDA_OLD.Equals(value) = false) Then
				Me.OnLCN_IDA_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA_OLD = value
				Me.SendPropertyChanged("LCN_IDA_OLD")
				Me.OnLCN_IDA_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA_NEW", DbType:="Int")>  _
	Public Property LCN_IDA_NEW() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA_NEW
		End Get
		Set
			If (Me._LCN_IDA_NEW.Equals(value) = false) Then
				Me.OnLCN_IDA_NEWChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA_NEW = value
				Me.SendPropertyChanged("LCN_IDA_NEW")
				Me.OnLCN_IDA_NEWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_IDA", DbType:="Int")>  _
	Public Property DRUG_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_IDA
		End Get
		Set
			If (Me._DRUG_IDA.Equals(value) = false) Then
				Me.OnDRUG_IDAChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_IDA = value
				Me.SendPropertyChanged("DRUG_IDA")
				Me.OnDRUG_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO_OLD", DbType:="NVarChar(50)")>  _
	Public Property LCNNO_OLD() As String
		Get
			Return Me._LCNNO_OLD
		End Get
		Set
			If (String.Equals(Me._LCNNO_OLD, value) = false) Then
				Me.OnLCNNO_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO_OLD = value
				Me.SendPropertyChanged("LCNNO_OLD")
				Me.OnLCNNO_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO_NEW", DbType:="NVarChar(50)")>  _
	Public Property LCNNO_NEW() As String
		Get
			Return Me._LCNNO_NEW
		End Get
		Set
			If (String.Equals(Me._LCNNO_NEW, value) = false) Then
				Me.OnLCNNO_NEWChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO_NEW = value
				Me.SendPropertyChanged("LCNNO_NEW")
				Me.OnLCNNO_NEWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO_DISPLAY_OLD", DbType:="NVarChar(50)")>  _
	Public Property LCNNO_DISPLAY_OLD() As String
		Get
			Return Me._LCNNO_DISPLAY_OLD
		End Get
		Set
			If (String.Equals(Me._LCNNO_DISPLAY_OLD, value) = false) Then
				Me.OnLCNNO_DISPLAY_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO_DISPLAY_OLD = value
				Me.SendPropertyChanged("LCNNO_DISPLAY_OLD")
				Me.OnLCNNO_DISPLAY_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO_DISPLAY_NEW", DbType:="NVarChar(50)")>  _
	Public Property LCNNO_DISPLAY_NEW() As String
		Get
			Return Me._LCNNO_DISPLAY_NEW
		End Get
		Set
			If (String.Equals(Me._LCNNO_DISPLAY_NEW, value) = false) Then
				Me.OnLCNNO_DISPLAY_NEWChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO_DISPLAY_NEW = value
				Me.SendPropertyChanged("LCNNO_DISPLAY_NEW")
				Me.OnLCNNO_DISPLAY_NEWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY_OLD", DbType:="NVarChar(50)")>  _
	Public Property IDENTIFY_OLD() As String
		Get
			Return Me._IDENTIFY_OLD
		End Get
		Set
			If (String.Equals(Me._IDENTIFY_OLD, value) = false) Then
				Me.OnIDENTIFY_OLDChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY_OLD = value
				Me.SendPropertyChanged("IDENTIFY_OLD")
				Me.OnIDENTIFY_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY_NEW", DbType:="NVarChar(50)")>  _
	Public Property IDENTIFY_NEW() As String
		Get
			Return Me._IDENTIFY_NEW
		End Get
		Set
			If (String.Equals(Me._IDENTIFY_NEW, value) = false) Then
				Me.OnIDENTIFY_NEWChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY_NEW = value
				Me.SendPropertyChanged("IDENTIFY_NEW")
				Me.OnIDENTIFY_NEWChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.STATUS_DATE")>  _
Partial Public Class STATUS_DATE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_DATE As System.Nullable(Of Date)
	
	Private _DATE_CONNECT As System.Nullable(Of Date)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _STATUS_GROUP As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _DATE_NOW As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTATUS_DATEChanged()
    End Sub
    Partial Private Sub OnDATE_CONNECTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_CONNECTChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_GROUPChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnDATE_NOWChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_NOWChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_DATE", DbType:="DateTime")>  _
	Public Property STATUS_DATE() As System.Nullable(Of Date)
		Get
			Return Me._STATUS_DATE
		End Get
		Set
			If (Me._STATUS_DATE.Equals(value) = false) Then
				Me.OnSTATUS_DATEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_DATE = value
				Me.SendPropertyChanged("STATUS_DATE")
				Me.OnSTATUS_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_CONNECT", DbType:="DateTime")>  _
	Public Property DATE_CONNECT() As System.Nullable(Of Date)
		Get
			Return Me._DATE_CONNECT
		End Get
		Set
			If (Me._DATE_CONNECT.Equals(value) = false) Then
				Me.OnDATE_CONNECTChanging(value)
				Me.SendPropertyChanging
				Me._DATE_CONNECT = value
				Me.SendPropertyChanged("DATE_CONNECT")
				Me.OnDATE_CONNECTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_GROUP", DbType:="Int")>  _
	Public Property STATUS_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_GROUP
		End Get
		Set
			If (Me._STATUS_GROUP.Equals(value) = false) Then
				Me.OnSTATUS_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_GROUP = value
				Me.SendPropertyChanged("STATUS_GROUP")
				Me.OnSTATUS_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_NOW", DbType:="DateTime")>  _
	Public Property DATE_NOW() As System.Nullable(Of Date)
		Get
			Return Me._DATE_NOW
		End Get
		Set
			If (Me._DATE_NOW.Equals(value) = false) Then
				Me.OnDATE_NOWChanging(value)
				Me.SendPropertyChanging
				Me._DATE_NOW = value
				Me.SendPropertyChanged("DATE_NOW")
				Me.OnDATE_NOWChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DH15_DETAIL_MANUFACTURE")>  _
Partial Public Class DH15_DETAIL_MANUFACTURE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _COMPANY_NAME As String
	
	Private _NAME_ADDRESS As String
	
	Private _ADDRESS_NUMBER As String
	
	Private _ADDRESS_CITY As String
	
	Private _COUNTRY As String
	
	Private _COUNTRY_ID As System.Nullable(Of Integer)
	
	Private _GLN As String
	
	Private _ZIPCODE As String
	
	Private _LOCATION_STANDARD As String
	
	Private _SALE_DATE As System.Nullable(Of Date)
	
	Private _STANDARD_ID As System.Nullable(Of Integer)
	
	Private _COUNTRY_GMP As System.Nullable(Of Integer)
	
	Private _CER_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanged()
    End Sub
    Partial Private Sub OnNAME_ADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ADDRESSChanged()
    End Sub
    Partial Private Sub OnADDRESS_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_NUMBERChanged()
    End Sub
    Partial Private Sub OnADDRESS_CITYChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_CITYChanged()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_IDChanged()
    End Sub
    Partial Private Sub OnGLNChanging(value As String)
    End Sub
    Partial Private Sub OnGLNChanged()
    End Sub
    Partial Private Sub OnZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIPCODEChanged()
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanged()
    End Sub
    Partial Private Sub OnSALE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSALE_DATEChanged()
    End Sub
    Partial Private Sub OnSTANDARD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTANDARD_IDChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_GMPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_GMPChanged()
    End Sub
    Partial Private Sub OnCER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCER_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property COMPANY_NAME() As String
		Get
			Return Me._COMPANY_NAME
		End Get
		Set
			If (String.Equals(Me._COMPANY_NAME, value) = false) Then
				Me.OnCOMPANY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_NAME = value
				Me.SendPropertyChanged("COMPANY_NAME")
				Me.OnCOMPANY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ADDRESS", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ADDRESS() As String
		Get
			Return Me._NAME_ADDRESS
		End Get
		Set
			If (String.Equals(Me._NAME_ADDRESS, value) = false) Then
				Me.OnNAME_ADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ADDRESS = value
				Me.SendPropertyChanged("NAME_ADDRESS")
				Me.OnNAME_ADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_NUMBER() As String
		Get
			Return Me._ADDRESS_NUMBER
		End Get
		Set
			If (String.Equals(Me._ADDRESS_NUMBER, value) = false) Then
				Me.OnADDRESS_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_NUMBER = value
				Me.SendPropertyChanged("ADDRESS_NUMBER")
				Me.OnADDRESS_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_CITY", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_CITY() As String
		Get
			Return Me._ADDRESS_CITY
		End Get
		Set
			If (String.Equals(Me._ADDRESS_CITY, value) = false) Then
				Me.OnADDRESS_CITYChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_CITY = value
				Me.SendPropertyChanged("ADDRESS_CITY")
				Me.OnADDRESS_CITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRY() As String
		Get
			Return Me._COUNTRY
		End Get
		Set
			If (String.Equals(Me._COUNTRY, value) = false) Then
				Me.OnCOUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY = value
				Me.SendPropertyChanged("COUNTRY")
				Me.OnCOUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_ID", DbType:="Int")>  _
	Public Property COUNTRY_ID() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_ID
		End Get
		Set
			If (Me._COUNTRY_ID.Equals(value) = false) Then
				Me.OnCOUNTRY_IDChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_ID = value
				Me.SendPropertyChanged("COUNTRY_ID")
				Me.OnCOUNTRY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GLN", DbType:="NVarChar(MAX)")>  _
	Public Property GLN() As String
		Get
			Return Me._GLN
		End Get
		Set
			If (String.Equals(Me._GLN, value) = false) Then
				Me.OnGLNChanging(value)
				Me.SendPropertyChanging
				Me._GLN = value
				Me.SendPropertyChanged("GLN")
				Me.OnGLNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property ZIPCODE() As String
		Get
			Return Me._ZIPCODE
		End Get
		Set
			If (String.Equals(Me._ZIPCODE, value) = false) Then
				Me.OnZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIPCODE = value
				Me.SendPropertyChanged("ZIPCODE")
				Me.OnZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_STANDARD() As String
		Get
			Return Me._LOCATION_STANDARD
		End Get
		Set
			If (String.Equals(Me._LOCATION_STANDARD, value) = false) Then
				Me.OnLOCATION_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_STANDARD = value
				Me.SendPropertyChanged("LOCATION_STANDARD")
				Me.OnLOCATION_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_DATE", DbType:="DateTime")>  _
	Public Property SALE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._SALE_DATE
		End Get
		Set
			If (Me._SALE_DATE.Equals(value) = false) Then
				Me.OnSALE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._SALE_DATE = value
				Me.SendPropertyChanged("SALE_DATE")
				Me.OnSALE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STANDARD_ID", DbType:="Int")>  _
	Public Property STANDARD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STANDARD_ID
		End Get
		Set
			If (Me._STANDARD_ID.Equals(value) = false) Then
				Me.OnSTANDARD_IDChanging(value)
				Me.SendPropertyChanging
				Me._STANDARD_ID = value
				Me.SendPropertyChanged("STANDARD_ID")
				Me.OnSTANDARD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_GMP", DbType:="Int")>  _
	Public Property COUNTRY_GMP() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_GMP
		End Get
		Set
			If (Me._COUNTRY_GMP.Equals(value) = false) Then
				Me.OnCOUNTRY_GMPChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_GMP = value
				Me.SendPropertyChanged("COUNTRY_GMP")
				Me.OnCOUNTRY_GMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_DATE", DbType:="DateTime")>  _
	Public Property CER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CER_DATE
		End Get
		Set
			If (Me._CER_DATE.Equals(value) = false) Then
				Me.OnCER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CER_DATE = value
				Me.SendPropertyChanged("CER_DATE")
				Me.OnCER_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_DH15TDGT_NO")>  _
Partial Public Class GEN_DH15TDGT_NO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _aroi As String
	
	Private _RUNNING_NUMBER As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _FK_DETAIL_IDA As System.Nullable(Of Integer)
	
	Private _YEARS As System.Nullable(Of Integer)
	
	Private _FULL_NUMBER_15DIGIT As String
	
	Private _TYPE_CAS As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnaroiChanging(value As String)
    End Sub
    Partial Private Sub OnaroiChanged()
    End Sub
    Partial Private Sub OnRUNNING_NUMBERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRUNNING_NUMBERChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnFK_DETAIL_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_DETAIL_IDAChanged()
    End Sub
    Partial Private Sub OnYEARSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYEARSChanged()
    End Sub
    Partial Private Sub OnFULL_NUMBER_15DIGITChanging(value As String)
    End Sub
    Partial Private Sub OnFULL_NUMBER_15DIGITChanged()
    End Sub
    Partial Private Sub OnTYPE_CASChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_CASChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aroi", DbType:="NVarChar(MAX)")>  _
	Public Property aroi() As String
		Get
			Return Me._aroi
		End Get
		Set
			If (String.Equals(Me._aroi, value) = false) Then
				Me.OnaroiChanging(value)
				Me.SendPropertyChanging
				Me._aroi = value
				Me.SendPropertyChanged("aroi")
				Me.OnaroiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RUNNING_NUMBER", DbType:="Int")>  _
	Public Property RUNNING_NUMBER() As System.Nullable(Of Integer)
		Get
			Return Me._RUNNING_NUMBER
		End Get
		Set
			If (Me._RUNNING_NUMBER.Equals(value) = false) Then
				Me.OnRUNNING_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._RUNNING_NUMBER = value
				Me.SendPropertyChanged("RUNNING_NUMBER")
				Me.OnRUNNING_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_DETAIL_IDA", DbType:="Int")>  _
	Public Property FK_DETAIL_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_DETAIL_IDA
		End Get
		Set
			If (Me._FK_DETAIL_IDA.Equals(value) = false) Then
				Me.OnFK_DETAIL_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_DETAIL_IDA = value
				Me.SendPropertyChanged("FK_DETAIL_IDA")
				Me.OnFK_DETAIL_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEARS", DbType:="Int")>  _
	Public Property YEARS() As System.Nullable(Of Integer)
		Get
			Return Me._YEARS
		End Get
		Set
			If (Me._YEARS.Equals(value) = false) Then
				Me.OnYEARSChanging(value)
				Me.SendPropertyChanging
				Me._YEARS = value
				Me.SendPropertyChanged("YEARS")
				Me.OnYEARSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FULL_NUMBER_15DIGIT", DbType:="NVarChar(MAX)")>  _
	Public Property FULL_NUMBER_15DIGIT() As String
		Get
			Return Me._FULL_NUMBER_15DIGIT
		End Get
		Set
			If (String.Equals(Me._FULL_NUMBER_15DIGIT, value) = false) Then
				Me.OnFULL_NUMBER_15DIGITChanging(value)
				Me.SendPropertyChanging
				Me._FULL_NUMBER_15DIGIT = value
				Me.SendPropertyChanged("FULL_NUMBER_15DIGIT")
				Me.OnFULL_NUMBER_15DIGITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_CAS", DbType:="NVarChar(50)")>  _
	Public Property TYPE_CAS() As String
		Get
			Return Me._TYPE_CAS
		End Get
		Set
			If (String.Equals(Me._TYPE_CAS, value) = false) Then
				Me.OnTYPE_CASChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_CAS = value
				Me.SendPropertyChanged("TYPE_CAS")
				Me.OnTYPE_CASChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DH15_DETAIL_MANUFACTURE")>  _
Partial Public Class DH15_DETAIL_MANUFACTURE1
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _COMPANY_NAME As String
	
	Private _NAME_ADDRESS As String
	
	Private _ADDRESS_NUMBER As String
	
	Private _ADDRESS_CITY As String
	
	Private _COUNTRY As String
	
	Private _COUNTRY_ID As System.Nullable(Of Integer)
	
	Private _GLN As String
	
	Private _ZIPCODE As String
	
	Private _LOCATION_STANDARD As String
	
	Private _SALE_DATE As System.Nullable(Of Date)
	
	Private _STANDARD_ID As System.Nullable(Of Integer)
	
	Private _COUNTRY_GMP As System.Nullable(Of Integer)
	
	Private _CER_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanged()
    End Sub
    Partial Private Sub OnNAME_ADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ADDRESSChanged()
    End Sub
    Partial Private Sub OnADDRESS_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_NUMBERChanged()
    End Sub
    Partial Private Sub OnADDRESS_CITYChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_CITYChanged()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_IDChanged()
    End Sub
    Partial Private Sub OnGLNChanging(value As String)
    End Sub
    Partial Private Sub OnGLNChanged()
    End Sub
    Partial Private Sub OnZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIPCODEChanged()
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanged()
    End Sub
    Partial Private Sub OnSALE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSALE_DATEChanged()
    End Sub
    Partial Private Sub OnSTANDARD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTANDARD_IDChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_GMPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_GMPChanged()
    End Sub
    Partial Private Sub OnCER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCER_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property COMPANY_NAME() As String
		Get
			Return Me._COMPANY_NAME
		End Get
		Set
			If (String.Equals(Me._COMPANY_NAME, value) = false) Then
				Me.OnCOMPANY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_NAME = value
				Me.SendPropertyChanged("COMPANY_NAME")
				Me.OnCOMPANY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ADDRESS", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ADDRESS() As String
		Get
			Return Me._NAME_ADDRESS
		End Get
		Set
			If (String.Equals(Me._NAME_ADDRESS, value) = false) Then
				Me.OnNAME_ADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ADDRESS = value
				Me.SendPropertyChanged("NAME_ADDRESS")
				Me.OnNAME_ADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_NUMBER() As String
		Get
			Return Me._ADDRESS_NUMBER
		End Get
		Set
			If (String.Equals(Me._ADDRESS_NUMBER, value) = false) Then
				Me.OnADDRESS_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_NUMBER = value
				Me.SendPropertyChanged("ADDRESS_NUMBER")
				Me.OnADDRESS_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_CITY", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_CITY() As String
		Get
			Return Me._ADDRESS_CITY
		End Get
		Set
			If (String.Equals(Me._ADDRESS_CITY, value) = false) Then
				Me.OnADDRESS_CITYChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_CITY = value
				Me.SendPropertyChanged("ADDRESS_CITY")
				Me.OnADDRESS_CITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRY() As String
		Get
			Return Me._COUNTRY
		End Get
		Set
			If (String.Equals(Me._COUNTRY, value) = false) Then
				Me.OnCOUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY = value
				Me.SendPropertyChanged("COUNTRY")
				Me.OnCOUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_ID", DbType:="Int")>  _
	Public Property COUNTRY_ID() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_ID
		End Get
		Set
			If (Me._COUNTRY_ID.Equals(value) = false) Then
				Me.OnCOUNTRY_IDChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_ID = value
				Me.SendPropertyChanged("COUNTRY_ID")
				Me.OnCOUNTRY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GLN", DbType:="NVarChar(MAX)")>  _
	Public Property GLN() As String
		Get
			Return Me._GLN
		End Get
		Set
			If (String.Equals(Me._GLN, value) = false) Then
				Me.OnGLNChanging(value)
				Me.SendPropertyChanging
				Me._GLN = value
				Me.SendPropertyChanged("GLN")
				Me.OnGLNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property ZIPCODE() As String
		Get
			Return Me._ZIPCODE
		End Get
		Set
			If (String.Equals(Me._ZIPCODE, value) = false) Then
				Me.OnZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIPCODE = value
				Me.SendPropertyChanged("ZIPCODE")
				Me.OnZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_STANDARD() As String
		Get
			Return Me._LOCATION_STANDARD
		End Get
		Set
			If (String.Equals(Me._LOCATION_STANDARD, value) = false) Then
				Me.OnLOCATION_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_STANDARD = value
				Me.SendPropertyChanged("LOCATION_STANDARD")
				Me.OnLOCATION_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_DATE", DbType:="DateTime")>  _
	Public Property SALE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._SALE_DATE
		End Get
		Set
			If (Me._SALE_DATE.Equals(value) = false) Then
				Me.OnSALE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._SALE_DATE = value
				Me.SendPropertyChanged("SALE_DATE")
				Me.OnSALE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STANDARD_ID", DbType:="Int")>  _
	Public Property STANDARD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STANDARD_ID
		End Get
		Set
			If (Me._STANDARD_ID.Equals(value) = false) Then
				Me.OnSTANDARD_IDChanging(value)
				Me.SendPropertyChanging
				Me._STANDARD_ID = value
				Me.SendPropertyChanged("STANDARD_ID")
				Me.OnSTANDARD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_GMP", DbType:="Int")>  _
	Public Property COUNTRY_GMP() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_GMP
		End Get
		Set
			If (Me._COUNTRY_GMP.Equals(value) = false) Then
				Me.OnCOUNTRY_GMPChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_GMP = value
				Me.SendPropertyChanged("COUNTRY_GMP")
				Me.OnCOUNTRY_GMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_DATE", DbType:="DateTime")>  _
	Public Property CER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CER_DATE
		End Get
		Set
			If (Me._CER_DATE.Equals(value) = false) Then
				Me.OnCER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CER_DATE = value
				Me.SendPropertyChanged("CER_DATE")
				Me.OnCER_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_NO_04")>  _
Partial Public Class GEN_NO_04
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CATEGORY_DRUG")>  _
Partial Public Class MAS_CATEGORY_DRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CATEGORY_CODE As String
	
	Private _CATEGORY_DRUG As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCATEGORY_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORY_CODEChanged()
    End Sub
    Partial Private Sub OnCATEGORY_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORY_DRUGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property CATEGORY_CODE() As String
		Get
			Return Me._CATEGORY_CODE
		End Get
		Set
			If (String.Equals(Me._CATEGORY_CODE, value) = false) Then
				Me.OnCATEGORY_CODEChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY_CODE = value
				Me.SendPropertyChanged("CATEGORY_CODE")
				Me.OnCATEGORY_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property CATEGORY_DRUG() As String
		Get
			Return Me._CATEGORY_DRUG
		End Get
		Set
			If (String.Equals(Me._CATEGORY_DRUG, value) = false) Then
				Me.OnCATEGORY_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY_DRUG = value
				Me.SendPropertyChanged("CATEGORY_DRUG")
				Me.OnCATEGORY_DRUGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_DETAIL_ROLE")>  _
Partial Public Class DRRGT_DETAIL_ROLE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As String
	
	Private _TR_ID As String
	
	Private _IDENTIFY As String
	
	Private _ADDRESS As String
	
	Private _ROLE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESSChanged()
    End Sub
    Partial Private Sub OnROLEChanging(value As String)
    End Sub
    Partial Private Sub OnROLEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="NVarChar(MAX)")>  _
	Public Property TR_ID() As String
		Get
			Return Me._TR_ID
		End Get
		Set
			If (String.Equals(Me._TR_ID, value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS() As String
		Get
			Return Me._ADDRESS
		End Get
		Set
			If (String.Equals(Me._ADDRESS, value) = false) Then
				Me.OnADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS = value
				Me.SendPropertyChanged("ADDRESS")
				Me.OnADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROLE", DbType:="NVarChar(MAX)")>  _
	Public Property ROLE() As String
		Get
			Return Me._ROLE
		End Get
		Set
			If (String.Equals(Me._ROLE, value) = false) Then
				Me.OnROLEChanging(value)
				Me.SendPropertyChanging
				Me._ROLE = value
				Me.SendPropertyChanged("ROLE")
				Me.OnROLEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACKING_STAFF")>  _
Partial Public Class E_TRACKING_STAFF
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _IDENTIFY As String
	
	Private _IS_USE As System.Nullable(Of Boolean)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnIS_USEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_USEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_USE", DbType:="Bit")>  _
	Public Property IS_USE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_USE
		End Get
		Set
			If (Me._IS_USE.Equals(value) = false) Then
				Me.OnIS_USEChanging(value)
				Me.SendPropertyChanging
				Me._IS_USE = value
				Me.SendPropertyChanged("IS_USE")
				Me.OnIS_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACKING_STAFF_CITIZEN_ID")>  _
Partial Public Class E_TRACKING_STAFF_CITIZEN_ID
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _RCVNO As System.Nullable(Of Integer)
	
	Private _CITIZEN_ID As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _PVNCD As System.Nullable(Of Integer)
	
	Private _DRGTPCD As String
	
	Private _RGTTPCD As String
	
	Private _RGTNO As System.Nullable(Of Integer)
	
	Private _REQUEST_TYPE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnDRGTPCDChanging(value As String)
    End Sub
    Partial Private Sub OnDRGTPCDChanged()
    End Sub
    Partial Private Sub OnRGTTPCDChanging(value As String)
    End Sub
    Partial Private Sub OnRGTTPCDChanged()
    End Sub
    Partial Private Sub OnRGTNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRGTNOChanged()
    End Sub
    Partial Private Sub OnREQUEST_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREQUEST_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="Int")>  _
	Public Property RCVNO() As System.Nullable(Of Integer)
		Get
			Return Me._RCVNO
		End Get
		Set
			If (Me._RCVNO.Equals(value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="Int")>  _
	Public Property PVNCD() As System.Nullable(Of Integer)
		Get
			Return Me._PVNCD
		End Get
		Set
			If (Me._PVNCD.Equals(value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRGTPCD", DbType:="NVarChar(50)")>  _
	Public Property DRGTPCD() As String
		Get
			Return Me._DRGTPCD
		End Get
		Set
			If (String.Equals(Me._DRGTPCD, value) = false) Then
				Me.OnDRGTPCDChanging(value)
				Me.SendPropertyChanging
				Me._DRGTPCD = value
				Me.SendPropertyChanged("DRGTPCD")
				Me.OnDRGTPCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTTPCD", DbType:="NVarChar(50)")>  _
	Public Property RGTTPCD() As String
		Get
			Return Me._RGTTPCD
		End Get
		Set
			If (String.Equals(Me._RGTTPCD, value) = false) Then
				Me.OnRGTTPCDChanging(value)
				Me.SendPropertyChanging
				Me._RGTTPCD = value
				Me.SendPropertyChanged("RGTTPCD")
				Me.OnRGTTPCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTNO", DbType:="Int")>  _
	Public Property RGTNO() As System.Nullable(Of Integer)
		Get
			Return Me._RGTNO
		End Get
		Set
			If (Me._RGTNO.Equals(value) = false) Then
				Me.OnRGTNOChanging(value)
				Me.SendPropertyChanging
				Me._RGTNO = value
				Me.SendPropertyChanged("RGTNO")
				Me.OnRGTNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_TYPE", DbType:="Int")>  _
	Public Property REQUEST_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._REQUEST_TYPE
		End Get
		Set
			If (Me._REQUEST_TYPE.Equals(value) = false) Then
				Me.OnREQUEST_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_TYPE = value
				Me.SendPropertyChanged("REQUEST_TYPE")
				Me.OnREQUEST_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_PROJECT")>  _
Partial Public Class DRUG_PROJECT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _TH_NAME As String
	
	Private _ENG_NAME As String
	
	Private _PROJ_CODE As String
	
	Private _PROJ_TYPE As System.Nullable(Of Integer)
	
	Private _NATIONAL_FOR_RESEARCH As System.Nullable(Of Integer)
	
	Private _CO_FOREIGN_RESEARCH_COUNT As System.Nullable(Of Integer)
	
	Private _CO_TH_RESEARCH_COUNT As System.Nullable(Of Integer)
	
	Private _TH_SPONSOR As String
	
	Private _FOREIGN_SPONSOR As String
	
	Private _PROJ_MONITOR As String
	
	Private _START_DATE As System.Nullable(Of Date)
	
	Private _END_DATE As System.Nullable(Of Date)
	
	Private _LCNNO As String
	
	Private _RCVNO As String
	
	Private _RCVDATE As System.Nullable(Of Date)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _PHARMACEUTICALS As String
	
	Private _PLACEBO As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnTH_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTH_NAMEChanged()
    End Sub
    Partial Private Sub OnENG_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnENG_NAMEChanged()
    End Sub
    Partial Private Sub OnPROJ_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnPROJ_CODEChanged()
    End Sub
    Partial Private Sub OnPROJ_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROJ_TYPEChanged()
    End Sub
    Partial Private Sub OnNATIONAL_FOR_RESEARCHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNATIONAL_FOR_RESEARCHChanged()
    End Sub
    Partial Private Sub OnCO_FOREIGN_RESEARCH_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCO_FOREIGN_RESEARCH_COUNTChanged()
    End Sub
    Partial Private Sub OnCO_TH_RESEARCH_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCO_TH_RESEARCH_COUNTChanged()
    End Sub
    Partial Private Sub OnTH_SPONSORChanging(value As String)
    End Sub
    Partial Private Sub OnTH_SPONSORChanged()
    End Sub
    Partial Private Sub OnFOREIGN_SPONSORChanging(value As String)
    End Sub
    Partial Private Sub OnFOREIGN_SPONSORChanged()
    End Sub
    Partial Private Sub OnPROJ_MONITORChanging(value As String)
    End Sub
    Partial Private Sub OnPROJ_MONITORChanged()
    End Sub
    Partial Private Sub OnSTART_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTART_DATEChanged()
    End Sub
    Partial Private Sub OnEND_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEND_DATEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnRCVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCVDATEChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnPHARMACEUTICALSChanging(value As String)
    End Sub
    Partial Private Sub OnPHARMACEUTICALSChanged()
    End Sub
    Partial Private Sub OnPLACEBOChanging(value As String)
    End Sub
    Partial Private Sub OnPLACEBOChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TH_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TH_NAME() As String
		Get
			Return Me._TH_NAME
		End Get
		Set
			If (String.Equals(Me._TH_NAME, value) = false) Then
				Me.OnTH_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TH_NAME = value
				Me.SendPropertyChanged("TH_NAME")
				Me.OnTH_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENG_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ENG_NAME() As String
		Get
			Return Me._ENG_NAME
		End Get
		Set
			If (String.Equals(Me._ENG_NAME, value) = false) Then
				Me.OnENG_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ENG_NAME = value
				Me.SendPropertyChanged("ENG_NAME")
				Me.OnENG_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROJ_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property PROJ_CODE() As String
		Get
			Return Me._PROJ_CODE
		End Get
		Set
			If (String.Equals(Me._PROJ_CODE, value) = false) Then
				Me.OnPROJ_CODEChanging(value)
				Me.SendPropertyChanging
				Me._PROJ_CODE = value
				Me.SendPropertyChanged("PROJ_CODE")
				Me.OnPROJ_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROJ_TYPE", DbType:="Int")>  _
	Public Property PROJ_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PROJ_TYPE
		End Get
		Set
			If (Me._PROJ_TYPE.Equals(value) = false) Then
				Me.OnPROJ_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PROJ_TYPE = value
				Me.SendPropertyChanged("PROJ_TYPE")
				Me.OnPROJ_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATIONAL_FOR_RESEARCH", DbType:="Int")>  _
	Public Property NATIONAL_FOR_RESEARCH() As System.Nullable(Of Integer)
		Get
			Return Me._NATIONAL_FOR_RESEARCH
		End Get
		Set
			If (Me._NATIONAL_FOR_RESEARCH.Equals(value) = false) Then
				Me.OnNATIONAL_FOR_RESEARCHChanging(value)
				Me.SendPropertyChanging
				Me._NATIONAL_FOR_RESEARCH = value
				Me.SendPropertyChanged("NATIONAL_FOR_RESEARCH")
				Me.OnNATIONAL_FOR_RESEARCHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CO_FOREIGN_RESEARCH_COUNT", DbType:="Int")>  _
	Public Property CO_FOREIGN_RESEARCH_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._CO_FOREIGN_RESEARCH_COUNT
		End Get
		Set
			If (Me._CO_FOREIGN_RESEARCH_COUNT.Equals(value) = false) Then
				Me.OnCO_FOREIGN_RESEARCH_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._CO_FOREIGN_RESEARCH_COUNT = value
				Me.SendPropertyChanged("CO_FOREIGN_RESEARCH_COUNT")
				Me.OnCO_FOREIGN_RESEARCH_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CO_TH_RESEARCH_COUNT", DbType:="Int")>  _
	Public Property CO_TH_RESEARCH_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._CO_TH_RESEARCH_COUNT
		End Get
		Set
			If (Me._CO_TH_RESEARCH_COUNT.Equals(value) = false) Then
				Me.OnCO_TH_RESEARCH_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._CO_TH_RESEARCH_COUNT = value
				Me.SendPropertyChanged("CO_TH_RESEARCH_COUNT")
				Me.OnCO_TH_RESEARCH_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TH_SPONSOR", DbType:="NVarChar(MAX)")>  _
	Public Property TH_SPONSOR() As String
		Get
			Return Me._TH_SPONSOR
		End Get
		Set
			If (String.Equals(Me._TH_SPONSOR, value) = false) Then
				Me.OnTH_SPONSORChanging(value)
				Me.SendPropertyChanging
				Me._TH_SPONSOR = value
				Me.SendPropertyChanged("TH_SPONSOR")
				Me.OnTH_SPONSORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOREIGN_SPONSOR", DbType:="NVarChar(MAX)")>  _
	Public Property FOREIGN_SPONSOR() As String
		Get
			Return Me._FOREIGN_SPONSOR
		End Get
		Set
			If (String.Equals(Me._FOREIGN_SPONSOR, value) = false) Then
				Me.OnFOREIGN_SPONSORChanging(value)
				Me.SendPropertyChanging
				Me._FOREIGN_SPONSOR = value
				Me.SendPropertyChanged("FOREIGN_SPONSOR")
				Me.OnFOREIGN_SPONSORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROJ_MONITOR", DbType:="NVarChar(MAX)")>  _
	Public Property PROJ_MONITOR() As String
		Get
			Return Me._PROJ_MONITOR
		End Get
		Set
			If (String.Equals(Me._PROJ_MONITOR, value) = false) Then
				Me.OnPROJ_MONITORChanging(value)
				Me.SendPropertyChanging
				Me._PROJ_MONITOR = value
				Me.SendPropertyChanged("PROJ_MONITOR")
				Me.OnPROJ_MONITORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_START_DATE", DbType:="DateTime")>  _
	Public Property START_DATE() As System.Nullable(Of Date)
		Get
			Return Me._START_DATE
		End Get
		Set
			If (Me._START_DATE.Equals(value) = false) Then
				Me.OnSTART_DATEChanging(value)
				Me.SendPropertyChanging
				Me._START_DATE = value
				Me.SendPropertyChanged("START_DATE")
				Me.OnSTART_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_END_DATE", DbType:="DateTime")>  _
	Public Property END_DATE() As System.Nullable(Of Date)
		Get
			Return Me._END_DATE
		End Get
		Set
			If (Me._END_DATE.Equals(value) = false) Then
				Me.OnEND_DATEChanging(value)
				Me.SendPropertyChanging
				Me._END_DATE = value
				Me.SendPropertyChanged("END_DATE")
				Me.OnEND_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(MAX)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO() As String
		Get
			Return Me._RCVNO
		End Get
		Set
			If (String.Equals(Me._RCVNO, value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE", DbType:="DateTime")>  _
	Public Property RCVDATE() As System.Nullable(Of Date)
		Get
			Return Me._RCVDATE
		End Get
		Set
			If (Me._RCVDATE.Equals(value) = false) Then
				Me.OnRCVDATEChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE = value
				Me.SendPropertyChanged("RCVDATE")
				Me.OnRCVDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHARMACEUTICALS", DbType:="NVarChar(MAX)")>  _
	Public Property PHARMACEUTICALS() As String
		Get
			Return Me._PHARMACEUTICALS
		End Get
		Set
			If (String.Equals(Me._PHARMACEUTICALS, value) = false) Then
				Me.OnPHARMACEUTICALSChanging(value)
				Me.SendPropertyChanging
				Me._PHARMACEUTICALS = value
				Me.SendPropertyChanged("PHARMACEUTICALS")
				Me.OnPHARMACEUTICALSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLACEBO", DbType:="NVarChar(MAX)")>  _
	Public Property PLACEBO() As String
		Get
			Return Me._PLACEBO
		End Get
		Set
			If (String.Equals(Me._PLACEBO, value) = false) Then
				Me.OnPLACEBOChanging(value)
				Me.SendPropertyChanging
				Me._PLACEBO = value
				Me.SendPropertyChanged("PLACEBO")
				Me.OnPLACEBOChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drimpfor")>  _
Partial Public Class drimpfor
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _objcd As System.Nullable(Of Short)
	
	Private _lpvncd As System.Nullable(Of Short)
	
	Private _lcntpcd As String
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _lcnscd As System.Nullable(Of Integer)
	
	Private _lctnmcd As System.Nullable(Of Integer)
	
	Private _lctcd As System.Nullable(Of Integer)
	
	Private _psnid As System.Nullable(Of Integer)
	
	Private _psncd As System.Nullable(Of Integer)
	
	Private _doneecd As System.Nullable(Of Integer)
	
	Private _noteno4 As String
	
	Private _ntrcvdate4 As System.Nullable(Of Date)
	
	Private _objanl As System.Nullable(Of Integer)
	
	Private _cnsdcd As System.Nullable(Of Short)
	
	Private _appdate As System.Nullable(Of Date)
	
	Private _cnccd As System.Nullable(Of Short)
	
	Private _cncdate As System.Nullable(Of Date)
	
	Private _cscd As System.Nullable(Of Short)
	
	Private _rsbstfcd As System.Nullable(Of Integer)
	
	Private _jpctpcd As System.Nullable(Of Short)
	
	Private _rqttpcd As System.Nullable(Of Short)
	
	Private _cndno As System.Nullable(Of Integer)
	
	Private _appvno As String
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _PROJECT_NAME_THAI As String
	
	Private _PROJECT_NAME_ENG As String
	
	Private _PROJECT_CODE As String
	
	Private _PROJECT_PLACE As String
	
	Private _NAME_MR_MRS_MISS As String
	
	Private _POSITION As String
	
	Private _NO As String
	
	Private _LANE_ROAD As String
	
	Private _ROAD As String
	
	Private _VILLAGE_NO As String
	
	Private _DISTRICT_PROVINCE As String
	
	Private _CITY As String
	
	Private _PROVINCE As String
	
	Private _PHONE As String
	
	Private _FAX As String
	
	Private _CHEK_APPLICANT_NAME As String
	
	Private _CHEK_TXT_MINISTRY As String
	
	Private _CHEK_TXT_DEPARMENT As String
	
	Private _CHEK_DEPARMENTS_TXT As String
	
	Private _CHEL_TXT_REPRESENT As String
	
	Private _CHEK_TXT_ASSOCIATION As String
	
	Private _CHEK_TXT_FOUNDATION As String
	
	Private _WRITE_AT As String
	
	Private _MR_MRS_MISS As String
	
	Private _PERMISSION_DRUG As String
	
	Private _NUMBER As System.Nullable(Of Integer)
	
	Private _AMOUNT_MATERIAL As String
	
	Private _PACKING As String
	
	Private _FORS As String
	
	Private _PROCESS_ID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnobjcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnobjcdChanged()
    End Sub
    Partial Private Sub OnlpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnlpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnlctnmcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctnmcdChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnpsnidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpsnidChanged()
    End Sub
    Partial Private Sub OnpsncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpsncdChanged()
    End Sub
    Partial Private Sub OndoneecdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OndoneecdChanged()
    End Sub
    Partial Private Sub Onnoteno4Changing(value As String)
    End Sub
    Partial Private Sub Onnoteno4Changed()
    End Sub
    Partial Private Sub Onntrcvdate4Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onntrcvdate4Changed()
    End Sub
    Partial Private Sub OnobjanlChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnobjanlChanged()
    End Sub
    Partial Private Sub OncnsdcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncnsdcdChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OncnccdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncnccdChanged()
    End Sub
    Partial Private Sub OncncdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncncdateChanged()
    End Sub
    Partial Private Sub OncscdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncscdChanged()
    End Sub
    Partial Private Sub OnrsbstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrsbstfcdChanged()
    End Sub
    Partial Private Sub OnjpctpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnjpctpcdChanged()
    End Sub
    Partial Private Sub OnrqttpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnrqttpcdChanged()
    End Sub
    Partial Private Sub OncndnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncndnoChanged()
    End Sub
    Partial Private Sub OnappvnoChanging(value As String)
    End Sub
    Partial Private Sub OnappvnoChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnPROJECT_NAME_THAIChanging(value As String)
    End Sub
    Partial Private Sub OnPROJECT_NAME_THAIChanged()
    End Sub
    Partial Private Sub OnPROJECT_NAME_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnPROJECT_NAME_ENGChanged()
    End Sub
    Partial Private Sub OnPROJECT_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnPROJECT_CODEChanged()
    End Sub
    Partial Private Sub OnPROJECT_PLACEChanging(value As String)
    End Sub
    Partial Private Sub OnPROJECT_PLACEChanged()
    End Sub
    Partial Private Sub OnNAME_MR_MRS_MISSChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_MR_MRS_MISSChanged()
    End Sub
    Partial Private Sub OnPOSITIONChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITIONChanged()
    End Sub
    Partial Private Sub OnNOChanging(value As String)
    End Sub
    Partial Private Sub OnNOChanged()
    End Sub
    Partial Private Sub OnLANE_ROADChanging(value As String)
    End Sub
    Partial Private Sub OnLANE_ROADChanged()
    End Sub
    Partial Private Sub OnROADChanging(value As String)
    End Sub
    Partial Private Sub OnROADChanged()
    End Sub
    Partial Private Sub OnVILLAGE_NOChanging(value As String)
    End Sub
    Partial Private Sub OnVILLAGE_NOChanged()
    End Sub
    Partial Private Sub OnDISTRICT_PROVINCEChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRICT_PROVINCEChanged()
    End Sub
    Partial Private Sub OnCITYChanging(value As String)
    End Sub
    Partial Private Sub OnCITYChanged()
    End Sub
    Partial Private Sub OnPROVINCEChanging(value As String)
    End Sub
    Partial Private Sub OnPROVINCEChanged()
    End Sub
    Partial Private Sub OnPHONEChanging(value As String)
    End Sub
    Partial Private Sub OnPHONEChanged()
    End Sub
    Partial Private Sub OnFAXChanging(value As String)
    End Sub
    Partial Private Sub OnFAXChanged()
    End Sub
    Partial Private Sub OnCHEK_APPLICANT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCHEK_APPLICANT_NAMEChanged()
    End Sub
    Partial Private Sub OnCHEK_TXT_MINISTRYChanging(value As String)
    End Sub
    Partial Private Sub OnCHEK_TXT_MINISTRYChanged()
    End Sub
    Partial Private Sub OnCHEK_TXT_DEPARMENTChanging(value As String)
    End Sub
    Partial Private Sub OnCHEK_TXT_DEPARMENTChanged()
    End Sub
    Partial Private Sub OnCHEK_DEPARMENTS_TXTChanging(value As String)
    End Sub
    Partial Private Sub OnCHEK_DEPARMENTS_TXTChanged()
    End Sub
    Partial Private Sub OnCHEL_TXT_REPRESENTChanging(value As String)
    End Sub
    Partial Private Sub OnCHEL_TXT_REPRESENTChanged()
    End Sub
    Partial Private Sub OnCHEK_TXT_ASSOCIATIONChanging(value As String)
    End Sub
    Partial Private Sub OnCHEK_TXT_ASSOCIATIONChanged()
    End Sub
    Partial Private Sub OnCHEK_TXT_FOUNDATIONChanging(value As String)
    End Sub
    Partial Private Sub OnCHEK_TXT_FOUNDATIONChanged()
    End Sub
    Partial Private Sub OnWRITE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_ATChanged()
    End Sub
    Partial Private Sub OnMR_MRS_MISSChanging(value As String)
    End Sub
    Partial Private Sub OnMR_MRS_MISSChanged()
    End Sub
    Partial Private Sub OnPERMISSION_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnPERMISSION_DRUGChanged()
    End Sub
    Partial Private Sub OnNUMBERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNUMBERChanged()
    End Sub
    Partial Private Sub OnAMOUNT_MATERIALChanging(value As String)
    End Sub
    Partial Private Sub OnAMOUNT_MATERIALChanged()
    End Sub
    Partial Private Sub OnPACKINGChanging(value As String)
    End Sub
    Partial Private Sub OnPACKINGChanged()
    End Sub
    Partial Private Sub OnFORSChanging(value As String)
    End Sub
    Partial Private Sub OnFORSChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="Date")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_objcd", DbType:="SmallInt")>  _
	Public Property objcd() As System.Nullable(Of Short)
		Get
			Return Me._objcd
		End Get
		Set
			If (Me._objcd.Equals(value) = false) Then
				Me.OnobjcdChanging(value)
				Me.SendPropertyChanging
				Me._objcd = value
				Me.SendPropertyChanged("objcd")
				Me.OnobjcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lpvncd", DbType:="SmallInt")>  _
	Public Property lpvncd() As System.Nullable(Of Short)
		Get
			Return Me._lpvncd
		End Get
		Set
			If (Me._lpvncd.Equals(value) = false) Then
				Me.OnlpvncdChanging(value)
				Me.SendPropertyChanging
				Me._lpvncd = value
				Me.SendPropertyChanged("lpvncd")
				Me.OnlpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="Int")>  _
	Public Property lcnscd() As System.Nullable(Of Integer)
		Get
			Return Me._lcnscd
		End Get
		Set
			If (Me._lcnscd.Equals(value) = false) Then
				Me.OnlcnscdChanging(value)
				Me.SendPropertyChanging
				Me._lcnscd = value
				Me.SendPropertyChanged("lcnscd")
				Me.OnlcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmcd", DbType:="Int")>  _
	Public Property lctnmcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctnmcd
		End Get
		Set
			If (Me._lctnmcd.Equals(value) = false) Then
				Me.OnlctnmcdChanging(value)
				Me.SendPropertyChanging
				Me._lctnmcd = value
				Me.SendPropertyChanged("lctnmcd")
				Me.OnlctnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int")>  _
	Public Property lctcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctcd
		End Get
		Set
			If (Me._lctcd.Equals(value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_psnid", DbType:="Int")>  _
	Public Property psnid() As System.Nullable(Of Integer)
		Get
			Return Me._psnid
		End Get
		Set
			If (Me._psnid.Equals(value) = false) Then
				Me.OnpsnidChanging(value)
				Me.SendPropertyChanging
				Me._psnid = value
				Me.SendPropertyChanged("psnid")
				Me.OnpsnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_psncd", DbType:="Int")>  _
	Public Property psncd() As System.Nullable(Of Integer)
		Get
			Return Me._psncd
		End Get
		Set
			If (Me._psncd.Equals(value) = false) Then
				Me.OnpsncdChanging(value)
				Me.SendPropertyChanging
				Me._psncd = value
				Me.SendPropertyChanged("psncd")
				Me.OnpsncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_doneecd", DbType:="Int")>  _
	Public Property doneecd() As System.Nullable(Of Integer)
		Get
			Return Me._doneecd
		End Get
		Set
			If (Me._doneecd.Equals(value) = false) Then
				Me.OndoneecdChanging(value)
				Me.SendPropertyChanging
				Me._doneecd = value
				Me.SendPropertyChanged("doneecd")
				Me.OndoneecdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_noteno4", DbType:="VarChar(30)")>  _
	Public Property noteno4() As String
		Get
			Return Me._noteno4
		End Get
		Set
			If (String.Equals(Me._noteno4, value) = false) Then
				Me.Onnoteno4Changing(value)
				Me.SendPropertyChanging
				Me._noteno4 = value
				Me.SendPropertyChanged("noteno4")
				Me.Onnoteno4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ntrcvdate4", DbType:="Date")>  _
	Public Property ntrcvdate4() As System.Nullable(Of Date)
		Get
			Return Me._ntrcvdate4
		End Get
		Set
			If (Me._ntrcvdate4.Equals(value) = false) Then
				Me.Onntrcvdate4Changing(value)
				Me.SendPropertyChanging
				Me._ntrcvdate4 = value
				Me.SendPropertyChanged("ntrcvdate4")
				Me.Onntrcvdate4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_objanl", DbType:="Int")>  _
	Public Property objanl() As System.Nullable(Of Integer)
		Get
			Return Me._objanl
		End Get
		Set
			If (Me._objanl.Equals(value) = false) Then
				Me.OnobjanlChanging(value)
				Me.SendPropertyChanging
				Me._objanl = value
				Me.SendPropertyChanged("objanl")
				Me.OnobjanlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnsdcd", DbType:="SmallInt")>  _
	Public Property cnsdcd() As System.Nullable(Of Short)
		Get
			Return Me._cnsdcd
		End Get
		Set
			If (Me._cnsdcd.Equals(value) = false) Then
				Me.OncnsdcdChanging(value)
				Me.SendPropertyChanging
				Me._cnsdcd = value
				Me.SendPropertyChanged("cnsdcd")
				Me.OncnsdcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="Date")>  _
	Public Property appdate() As System.Nullable(Of Date)
		Get
			Return Me._appdate
		End Get
		Set
			If (Me._appdate.Equals(value) = false) Then
				Me.OnappdateChanging(value)
				Me.SendPropertyChanging
				Me._appdate = value
				Me.SendPropertyChanged("appdate")
				Me.OnappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccd", DbType:="SmallInt")>  _
	Public Property cnccd() As System.Nullable(Of Short)
		Get
			Return Me._cnccd
		End Get
		Set
			If (Me._cnccd.Equals(value) = false) Then
				Me.OncnccdChanging(value)
				Me.SendPropertyChanging
				Me._cnccd = value
				Me.SendPropertyChanged("cnccd")
				Me.OncnccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncdate", DbType:="Date")>  _
	Public Property cncdate() As System.Nullable(Of Date)
		Get
			Return Me._cncdate
		End Get
		Set
			If (Me._cncdate.Equals(value) = false) Then
				Me.OncncdateChanging(value)
				Me.SendPropertyChanging
				Me._cncdate = value
				Me.SendPropertyChanged("cncdate")
				Me.OncncdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cscd", DbType:="SmallInt")>  _
	Public Property cscd() As System.Nullable(Of Short)
		Get
			Return Me._cscd
		End Get
		Set
			If (Me._cscd.Equals(value) = false) Then
				Me.OncscdChanging(value)
				Me.SendPropertyChanging
				Me._cscd = value
				Me.SendPropertyChanged("cscd")
				Me.OncscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsbstfcd", DbType:="Int")>  _
	Public Property rsbstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._rsbstfcd
		End Get
		Set
			If (Me._rsbstfcd.Equals(value) = false) Then
				Me.OnrsbstfcdChanging(value)
				Me.SendPropertyChanging
				Me._rsbstfcd = value
				Me.SendPropertyChanged("rsbstfcd")
				Me.OnrsbstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jpctpcd", DbType:="SmallInt")>  _
	Public Property jpctpcd() As System.Nullable(Of Short)
		Get
			Return Me._jpctpcd
		End Get
		Set
			If (Me._jpctpcd.Equals(value) = false) Then
				Me.OnjpctpcdChanging(value)
				Me.SendPropertyChanging
				Me._jpctpcd = value
				Me.SendPropertyChanged("jpctpcd")
				Me.OnjpctpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rqttpcd", DbType:="SmallInt")>  _
	Public Property rqttpcd() As System.Nullable(Of Short)
		Get
			Return Me._rqttpcd
		End Get
		Set
			If (Me._rqttpcd.Equals(value) = false) Then
				Me.OnrqttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rqttpcd = value
				Me.SendPropertyChanged("rqttpcd")
				Me.OnrqttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cndno", DbType:="Int")>  _
	Public Property cndno() As System.Nullable(Of Integer)
		Get
			Return Me._cndno
		End Get
		Set
			If (Me._cndno.Equals(value) = false) Then
				Me.OncndnoChanging(value)
				Me.SendPropertyChanging
				Me._cndno = value
				Me.SendPropertyChanged("cndno")
				Me.OncndnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appvno", DbType:="VarChar(20)")>  _
	Public Property appvno() As String
		Get
			Return Me._appvno
		End Get
		Set
			If (String.Equals(Me._appvno, value) = false) Then
				Me.OnappvnoChanging(value)
				Me.SendPropertyChanging
				Me._appvno = value
				Me.SendPropertyChanged("appvno")
				Me.OnappvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROJECT_NAME_THAI", DbType:="NVarChar(MAX)")>  _
	Public Property PROJECT_NAME_THAI() As String
		Get
			Return Me._PROJECT_NAME_THAI
		End Get
		Set
			If (String.Equals(Me._PROJECT_NAME_THAI, value) = false) Then
				Me.OnPROJECT_NAME_THAIChanging(value)
				Me.SendPropertyChanging
				Me._PROJECT_NAME_THAI = value
				Me.SendPropertyChanged("PROJECT_NAME_THAI")
				Me.OnPROJECT_NAME_THAIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROJECT_NAME_ENG", DbType:="NVarChar(MAX)")>  _
	Public Property PROJECT_NAME_ENG() As String
		Get
			Return Me._PROJECT_NAME_ENG
		End Get
		Set
			If (String.Equals(Me._PROJECT_NAME_ENG, value) = false) Then
				Me.OnPROJECT_NAME_ENGChanging(value)
				Me.SendPropertyChanging
				Me._PROJECT_NAME_ENG = value
				Me.SendPropertyChanged("PROJECT_NAME_ENG")
				Me.OnPROJECT_NAME_ENGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROJECT_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property PROJECT_CODE() As String
		Get
			Return Me._PROJECT_CODE
		End Get
		Set
			If (String.Equals(Me._PROJECT_CODE, value) = false) Then
				Me.OnPROJECT_CODEChanging(value)
				Me.SendPropertyChanging
				Me._PROJECT_CODE = value
				Me.SendPropertyChanged("PROJECT_CODE")
				Me.OnPROJECT_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROJECT_PLACE", DbType:="NVarChar(MAX)")>  _
	Public Property PROJECT_PLACE() As String
		Get
			Return Me._PROJECT_PLACE
		End Get
		Set
			If (String.Equals(Me._PROJECT_PLACE, value) = false) Then
				Me.OnPROJECT_PLACEChanging(value)
				Me.SendPropertyChanging
				Me._PROJECT_PLACE = value
				Me.SendPropertyChanged("PROJECT_PLACE")
				Me.OnPROJECT_PLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_MR_MRS_MISS", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_MR_MRS_MISS() As String
		Get
			Return Me._NAME_MR_MRS_MISS
		End Get
		Set
			If (String.Equals(Me._NAME_MR_MRS_MISS, value) = false) Then
				Me.OnNAME_MR_MRS_MISSChanging(value)
				Me.SendPropertyChanging
				Me._NAME_MR_MRS_MISS = value
				Me.SendPropertyChanged("NAME_MR_MRS_MISS")
				Me.OnNAME_MR_MRS_MISSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION() As String
		Get
			Return Me._POSITION
		End Get
		Set
			If (String.Equals(Me._POSITION, value) = false) Then
				Me.OnPOSITIONChanging(value)
				Me.SendPropertyChanging
				Me._POSITION = value
				Me.SendPropertyChanged("POSITION")
				Me.OnPOSITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO", DbType:="NVarChar(MAX)")>  _
	Public Property NO() As String
		Get
			Return Me._NO
		End Get
		Set
			If (String.Equals(Me._NO, value) = false) Then
				Me.OnNOChanging(value)
				Me.SendPropertyChanging
				Me._NO = value
				Me.SendPropertyChanged("NO")
				Me.OnNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LANE_ROAD", DbType:="NVarChar(MAX)")>  _
	Public Property LANE_ROAD() As String
		Get
			Return Me._LANE_ROAD
		End Get
		Set
			If (String.Equals(Me._LANE_ROAD, value) = false) Then
				Me.OnLANE_ROADChanging(value)
				Me.SendPropertyChanging
				Me._LANE_ROAD = value
				Me.SendPropertyChanged("LANE_ROAD")
				Me.OnLANE_ROADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROAD", DbType:="NVarChar(MAX)")>  _
	Public Property ROAD() As String
		Get
			Return Me._ROAD
		End Get
		Set
			If (String.Equals(Me._ROAD, value) = false) Then
				Me.OnROADChanging(value)
				Me.SendPropertyChanging
				Me._ROAD = value
				Me.SendPropertyChanged("ROAD")
				Me.OnROADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VILLAGE_NO", DbType:="NVarChar(MAX)")>  _
	Public Property VILLAGE_NO() As String
		Get
			Return Me._VILLAGE_NO
		End Get
		Set
			If (String.Equals(Me._VILLAGE_NO, value) = false) Then
				Me.OnVILLAGE_NOChanging(value)
				Me.SendPropertyChanging
				Me._VILLAGE_NO = value
				Me.SendPropertyChanged("VILLAGE_NO")
				Me.OnVILLAGE_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT_PROVINCE", DbType:="NVarChar(MAX)")>  _
	Public Property DISTRICT_PROVINCE() As String
		Get
			Return Me._DISTRICT_PROVINCE
		End Get
		Set
			If (String.Equals(Me._DISTRICT_PROVINCE, value) = false) Then
				Me.OnDISTRICT_PROVINCEChanging(value)
				Me.SendPropertyChanging
				Me._DISTRICT_PROVINCE = value
				Me.SendPropertyChanged("DISTRICT_PROVINCE")
				Me.OnDISTRICT_PROVINCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITY", DbType:="NVarChar(MAX)")>  _
	Public Property CITY() As String
		Get
			Return Me._CITY
		End Get
		Set
			If (String.Equals(Me._CITY, value) = false) Then
				Me.OnCITYChanging(value)
				Me.SendPropertyChanging
				Me._CITY = value
				Me.SendPropertyChanged("CITY")
				Me.OnCITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROVINCE", DbType:="NVarChar(MAX)")>  _
	Public Property PROVINCE() As String
		Get
			Return Me._PROVINCE
		End Get
		Set
			If (String.Equals(Me._PROVINCE, value) = false) Then
				Me.OnPROVINCEChanging(value)
				Me.SendPropertyChanging
				Me._PROVINCE = value
				Me.SendPropertyChanged("PROVINCE")
				Me.OnPROVINCEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHONE", DbType:="VarChar(20)")>  _
	Public Property PHONE() As String
		Get
			Return Me._PHONE
		End Get
		Set
			If (String.Equals(Me._PHONE, value) = false) Then
				Me.OnPHONEChanging(value)
				Me.SendPropertyChanging
				Me._PHONE = value
				Me.SendPropertyChanged("PHONE")
				Me.OnPHONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAX", DbType:="NVarChar(20)")>  _
	Public Property FAX() As String
		Get
			Return Me._FAX
		End Get
		Set
			If (String.Equals(Me._FAX, value) = false) Then
				Me.OnFAXChanging(value)
				Me.SendPropertyChanging
				Me._FAX = value
				Me.SendPropertyChanged("FAX")
				Me.OnFAXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEK_APPLICANT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CHEK_APPLICANT_NAME() As String
		Get
			Return Me._CHEK_APPLICANT_NAME
		End Get
		Set
			If (String.Equals(Me._CHEK_APPLICANT_NAME, value) = false) Then
				Me.OnCHEK_APPLICANT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CHEK_APPLICANT_NAME = value
				Me.SendPropertyChanged("CHEK_APPLICANT_NAME")
				Me.OnCHEK_APPLICANT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEK_TXT_MINISTRY", DbType:="NVarChar(MAX)")>  _
	Public Property CHEK_TXT_MINISTRY() As String
		Get
			Return Me._CHEK_TXT_MINISTRY
		End Get
		Set
			If (String.Equals(Me._CHEK_TXT_MINISTRY, value) = false) Then
				Me.OnCHEK_TXT_MINISTRYChanging(value)
				Me.SendPropertyChanging
				Me._CHEK_TXT_MINISTRY = value
				Me.SendPropertyChanged("CHEK_TXT_MINISTRY")
				Me.OnCHEK_TXT_MINISTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEK_TXT_DEPARMENT", DbType:="NVarChar(MAX)")>  _
	Public Property CHEK_TXT_DEPARMENT() As String
		Get
			Return Me._CHEK_TXT_DEPARMENT
		End Get
		Set
			If (String.Equals(Me._CHEK_TXT_DEPARMENT, value) = false) Then
				Me.OnCHEK_TXT_DEPARMENTChanging(value)
				Me.SendPropertyChanging
				Me._CHEK_TXT_DEPARMENT = value
				Me.SendPropertyChanged("CHEK_TXT_DEPARMENT")
				Me.OnCHEK_TXT_DEPARMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEK_DEPARMENTS_TXT", DbType:="NVarChar(MAX)")>  _
	Public Property CHEK_DEPARMENTS_TXT() As String
		Get
			Return Me._CHEK_DEPARMENTS_TXT
		End Get
		Set
			If (String.Equals(Me._CHEK_DEPARMENTS_TXT, value) = false) Then
				Me.OnCHEK_DEPARMENTS_TXTChanging(value)
				Me.SendPropertyChanging
				Me._CHEK_DEPARMENTS_TXT = value
				Me.SendPropertyChanged("CHEK_DEPARMENTS_TXT")
				Me.OnCHEK_DEPARMENTS_TXTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEL_TXT_REPRESENT", DbType:="NVarChar(MAX)")>  _
	Public Property CHEL_TXT_REPRESENT() As String
		Get
			Return Me._CHEL_TXT_REPRESENT
		End Get
		Set
			If (String.Equals(Me._CHEL_TXT_REPRESENT, value) = false) Then
				Me.OnCHEL_TXT_REPRESENTChanging(value)
				Me.SendPropertyChanging
				Me._CHEL_TXT_REPRESENT = value
				Me.SendPropertyChanged("CHEL_TXT_REPRESENT")
				Me.OnCHEL_TXT_REPRESENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEK_TXT_ASSOCIATION", DbType:="NVarChar(MAX)")>  _
	Public Property CHEK_TXT_ASSOCIATION() As String
		Get
			Return Me._CHEK_TXT_ASSOCIATION
		End Get
		Set
			If (String.Equals(Me._CHEK_TXT_ASSOCIATION, value) = false) Then
				Me.OnCHEK_TXT_ASSOCIATIONChanging(value)
				Me.SendPropertyChanging
				Me._CHEK_TXT_ASSOCIATION = value
				Me.SendPropertyChanged("CHEK_TXT_ASSOCIATION")
				Me.OnCHEK_TXT_ASSOCIATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEK_TXT_FOUNDATION", DbType:="NVarChar(MAX)")>  _
	Public Property CHEK_TXT_FOUNDATION() As String
		Get
			Return Me._CHEK_TXT_FOUNDATION
		End Get
		Set
			If (String.Equals(Me._CHEK_TXT_FOUNDATION, value) = false) Then
				Me.OnCHEK_TXT_FOUNDATIONChanging(value)
				Me.SendPropertyChanging
				Me._CHEK_TXT_FOUNDATION = value
				Me.SendPropertyChanged("CHEK_TXT_FOUNDATION")
				Me.OnCHEK_TXT_FOUNDATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_AT() As String
		Get
			Return Me._WRITE_AT
		End Get
		Set
			If (String.Equals(Me._WRITE_AT, value) = false) Then
				Me.OnWRITE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_AT = value
				Me.SendPropertyChanged("WRITE_AT")
				Me.OnWRITE_ATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MR_MRS_MISS", DbType:="VarChar(20)")>  _
	Public Property MR_MRS_MISS() As String
		Get
			Return Me._MR_MRS_MISS
		End Get
		Set
			If (String.Equals(Me._MR_MRS_MISS, value) = false) Then
				Me.OnMR_MRS_MISSChanging(value)
				Me.SendPropertyChanging
				Me._MR_MRS_MISS = value
				Me.SendPropertyChanged("MR_MRS_MISS")
				Me.OnMR_MRS_MISSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERMISSION_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property PERMISSION_DRUG() As String
		Get
			Return Me._PERMISSION_DRUG
		End Get
		Set
			If (String.Equals(Me._PERMISSION_DRUG, value) = false) Then
				Me.OnPERMISSION_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._PERMISSION_DRUG = value
				Me.SendPropertyChanged("PERMISSION_DRUG")
				Me.OnPERMISSION_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NUMBER", DbType:="Int")>  _
	Public Property NUMBER() As System.Nullable(Of Integer)
		Get
			Return Me._NUMBER
		End Get
		Set
			If (Me._NUMBER.Equals(value) = false) Then
				Me.OnNUMBERChanging(value)
				Me.SendPropertyChanging
				Me._NUMBER = value
				Me.SendPropertyChanged("NUMBER")
				Me.OnNUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT_MATERIAL", DbType:="NVarChar(MAX)")>  _
	Public Property AMOUNT_MATERIAL() As String
		Get
			Return Me._AMOUNT_MATERIAL
		End Get
		Set
			If (String.Equals(Me._AMOUNT_MATERIAL, value) = false) Then
				Me.OnAMOUNT_MATERIALChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT_MATERIAL = value
				Me.SendPropertyChanged("AMOUNT_MATERIAL")
				Me.OnAMOUNT_MATERIALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACKING", DbType:="NVarChar(MAX)")>  _
	Public Property PACKING() As String
		Get
			Return Me._PACKING
		End Get
		Set
			If (String.Equals(Me._PACKING, value) = false) Then
				Me.OnPACKINGChanging(value)
				Me.SendPropertyChanging
				Me._PACKING = value
				Me.SendPropertyChanged("PACKING")
				Me.OnPACKINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORS", DbType:="NVarChar(MAX)")>  _
	Public Property FORS() As String
		Get
			Return Me._FORS
		End Get
		Set
			If (String.Equals(Me._FORS, value) = false) Then
				Me.OnFORSChanging(value)
				Me.SendPropertyChanging
				Me._FORS = value
				Me.SendPropertyChanged("FORS")
				Me.OnFORSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(20)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_MODIFY_REQUESTS")>  _
Partial Public Class DRUG_MODIFY_REQUEST
	
	Private _IDA As Integer
	
	Private _DRUG_SOLVE_ASK As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_ID As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me._IDA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_SOLVE_ASK", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_SOLVE_ASK() As String
		Get
			Return Me._DRUG_SOLVE_ASK
		End Get
		Set
			If (String.Equals(Me._DRUG_SOLVE_ASK, value) = false) Then
				Me._DRUG_SOLVE_ASK = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me._TR_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_ID", DbType:="Int")>  _
	Public Property FK_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FK_ID
		End Get
		Set
			If (Me._FK_ID.Equals(value) = false) Then
				Me._FK_ID = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MENU")>  _
Partial Public Class MAS_MENU
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _HEAD_ID As System.Nullable(Of Integer)
	
	Private _NAME As String
	
	Private _URL As String
	
	Private _GROUP_PAGE As System.Nullable(Of Integer)
	
	Private _NODE_SWITCH As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _IS_EXPAND As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnHEAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEAD_IDChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnURLChanging(value As String)
    End Sub
    Partial Private Sub OnURLChanged()
    End Sub
    Partial Private Sub OnGROUP_PAGEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_PAGEChanged()
    End Sub
    Partial Private Sub OnNODE_SWITCHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNODE_SWITCHChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnIS_EXPANDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_EXPANDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_ID", DbType:="Int")>  _
	Public Property HEAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_ID
		End Get
		Set
			If (Me._HEAD_ID.Equals(value) = false) Then
				Me.OnHEAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_ID = value
				Me.SendPropertyChanged("HEAD_ID")
				Me.OnHEAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_URL", DbType:="NVarChar(MAX)")>  _
	Public Property URL() As String
		Get
			Return Me._URL
		End Get
		Set
			If (String.Equals(Me._URL, value) = false) Then
				Me.OnURLChanging(value)
				Me.SendPropertyChanging
				Me._URL = value
				Me.SendPropertyChanged("URL")
				Me.OnURLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_PAGE", DbType:="Int")>  _
	Public Property GROUP_PAGE() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_PAGE
		End Get
		Set
			If (Me._GROUP_PAGE.Equals(value) = false) Then
				Me.OnGROUP_PAGEChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_PAGE = value
				Me.SendPropertyChanged("GROUP_PAGE")
				Me.OnGROUP_PAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NODE_SWITCH", DbType:="Int")>  _
	Public Property NODE_SWITCH() As System.Nullable(Of Integer)
		Get
			Return Me._NODE_SWITCH
		End Get
		Set
			If (Me._NODE_SWITCH.Equals(value) = false) Then
				Me.OnNODE_SWITCHChanging(value)
				Me.SendPropertyChanging
				Me._NODE_SWITCH = value
				Me.SendPropertyChanged("NODE_SWITCH")
				Me.OnNODE_SWITCHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_EXPAND", DbType:="Bit")>  _
	Public Property IS_EXPAND() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_EXPAND
		End Get
		Set
			If (Me._IS_EXPAND.Equals(value) = false) Then
				Me.OnIS_EXPANDChanging(value)
				Me.SendPropertyChanging
				Me._IS_EXPAND = value
				Me.SendPropertyChanged("IS_EXPAND")
				Me.OnIS_EXPANDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_E_TRACKING_GAP")>  _
Partial Public Class MAS_E_TRACKING_GAP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _GAP_SET As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnGAP_SETChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGAP_SETChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GAP_SET", DbType:="Float")>  _
	Public Property GAP_SET() As System.Nullable(Of Double)
		Get
			Return Me._GAP_SET
		End Get
		Set
			If (Me._GAP_SET.Equals(value) = false) Then
				Me.OnGAP_SETChanging(value)
				Me.SendPropertyChanging
				Me._GAP_SET = value
				Me.SendPropertyChanged("GAP_SET")
				Me.OnGAP_SETChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_PRODUCT_DR_GROUP")>  _
Partial Public Class DRUG_PRODUCT_DR_GROUP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ctgcd As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnctgcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnctgcdChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctgcd", DbType:="Int")>  _
	Public Property ctgcd() As System.Nullable(Of Integer)
		Get
			Return Me._ctgcd
		End Get
		Set
			If (Me._ctgcd.Equals(value) = false) Then
				Me.OnctgcdChanging(value)
				Me.SendPropertyChanging
				Me._ctgcd = value
				Me.SendPropertyChanged("ctgcd")
				Me.OnctgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_NO_17")>  _
Partial Public Class GEN_NO_17
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_NO_18")>  _
Partial Public Class GEN_NO_18
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_WORK_GROUP")>  _
Partial Public Class MAS_WORK_GROUP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _WORK_GROUP_ID As String
	
	Private _WORK_GROUP_NAME As String
	
	Private _WORK_GROUP_DISPLAY As String
	
	Private _WORK_GROUP_TYPE As String
	
	Private _DESCRIPTION As String
	
	Private _ACTIVE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnWORK_GROUP_IDChanging(value As String)
    End Sub
    Partial Private Sub OnWORK_GROUP_IDChanged()
    End Sub
    Partial Private Sub OnWORK_GROUP_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnWORK_GROUP_NAMEChanged()
    End Sub
    Partial Private Sub OnWORK_GROUP_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnWORK_GROUP_DISPLAYChanged()
    End Sub
    Partial Private Sub OnWORK_GROUP_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnWORK_GROUP_TYPEChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As String)
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORK_GROUP_ID", DbType:="NVarChar(50)")>  _
	Public Property WORK_GROUP_ID() As String
		Get
			Return Me._WORK_GROUP_ID
		End Get
		Set
			If (String.Equals(Me._WORK_GROUP_ID, value) = false) Then
				Me.OnWORK_GROUP_IDChanging(value)
				Me.SendPropertyChanging
				Me._WORK_GROUP_ID = value
				Me.SendPropertyChanged("WORK_GROUP_ID")
				Me.OnWORK_GROUP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORK_GROUP_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property WORK_GROUP_NAME() As String
		Get
			Return Me._WORK_GROUP_NAME
		End Get
		Set
			If (String.Equals(Me._WORK_GROUP_NAME, value) = false) Then
				Me.OnWORK_GROUP_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._WORK_GROUP_NAME = value
				Me.SendPropertyChanged("WORK_GROUP_NAME")
				Me.OnWORK_GROUP_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORK_GROUP_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property WORK_GROUP_DISPLAY() As String
		Get
			Return Me._WORK_GROUP_DISPLAY
		End Get
		Set
			If (String.Equals(Me._WORK_GROUP_DISPLAY, value) = false) Then
				Me.OnWORK_GROUP_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._WORK_GROUP_DISPLAY = value
				Me.SendPropertyChanged("WORK_GROUP_DISPLAY")
				Me.OnWORK_GROUP_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORK_GROUP_TYPE", DbType:="NVarChar(50)")>  _
	Public Property WORK_GROUP_TYPE() As String
		Get
			Return Me._WORK_GROUP_TYPE
		End Get
		Set
			If (String.Equals(Me._WORK_GROUP_TYPE, value) = false) Then
				Me.OnWORK_GROUP_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._WORK_GROUP_TYPE = value
				Me.SendPropertyChanged("WORK_GROUP_TYPE")
				Me.OnWORK_GROUP_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="NVarChar(50)")>  _
	Public Property ACTIVE() As String
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (String.Equals(Me._ACTIVE, value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_TERM_TO_USE")>  _
Partial Public Class DRUG_TERM_TO_USE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _RGTNO As String
	
	Private _TERM_TO_USE As String
	
	Private _INSERT_DATE As System.Nullable(Of Date)
	
	Private _IDEN_INSERT As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnRGTNOChanging(value As String)
    End Sub
    Partial Private Sub OnRGTNOChanged()
    End Sub
    Partial Private Sub OnTERM_TO_USEChanging(value As String)
    End Sub
    Partial Private Sub OnTERM_TO_USEChanged()
    End Sub
    Partial Private Sub OnINSERT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSERT_DATEChanged()
    End Sub
    Partial Private Sub OnIDEN_INSERTChanging(value As String)
    End Sub
    Partial Private Sub OnIDEN_INSERTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RGTNO", DbType:="NVarChar(MAX)")>  _
	Public Property RGTNO() As String
		Get
			Return Me._RGTNO
		End Get
		Set
			If (String.Equals(Me._RGTNO, value) = false) Then
				Me.OnRGTNOChanging(value)
				Me.SendPropertyChanging
				Me._RGTNO = value
				Me.SendPropertyChanged("RGTNO")
				Me.OnRGTNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TERM_TO_USE", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TERM_TO_USE() As String
		Get
			Return Me._TERM_TO_USE
		End Get
		Set
			If (String.Equals(Me._TERM_TO_USE, value) = false) Then
				Me.OnTERM_TO_USEChanging(value)
				Me.SendPropertyChanging
				Me._TERM_TO_USE = value
				Me.SendPropertyChanged("TERM_TO_USE")
				Me.OnTERM_TO_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSERT_DATE", DbType:="DateTime")>  _
	Public Property INSERT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._INSERT_DATE
		End Get
		Set
			If (Me._INSERT_DATE.Equals(value) = false) Then
				Me.OnINSERT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._INSERT_DATE = value
				Me.SendPropertyChanged("INSERT_DATE")
				Me.OnINSERT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDEN_INSERT", DbType:="NVarChar(MAX)")>  _
	Public Property IDEN_INSERT() As String
		Get
			Return Me._IDEN_INSERT
		End Get
		Set
			If (String.Equals(Me._IDEN_INSERT, value) = false) Then
				Me.OnIDEN_INSERTChanging(value)
				Me.SendPropertyChanging
				Me._IDEN_INSERT = value
				Me.SendPropertyChanged("IDEN_INSERT")
				Me.OnIDEN_INSERTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_NO_16")>  _
Partial Public Class GEN_NO_16
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _YEAR As String
	
	Private _PVCODE As String
	
	Private _TYPE As String
	
	Private _LCNNO As String
	
	Private _GENNO As System.Nullable(Of Integer)
	
	Private _FORMAT As String
	
	Private _GROUP_NO As String
	
	Private _REF_IDA As String
	
	Private _DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnPVCODEChanging(value As String)
    End Sub
    Partial Private Sub OnPVCODEChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub OnFORMATChanging(value As String)
    End Sub
    Partial Private Sub OnFORMATChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnREF_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnREF_IDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(50)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVCODE", DbType:="NVarChar(50)")>  _
	Public Property PVCODE() As String
		Get
			Return Me._PVCODE
		End Get
		Set
			If (String.Equals(Me._PVCODE, value) = false) Then
				Me.OnPVCODEChanging(value)
				Me.SendPropertyChanging
				Me._PVCODE = value
				Me.SendPropertyChanged("PVCODE")
				Me.OnPVCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="Int")>  _
	Public Property GENNO() As System.Nullable(Of Integer)
		Get
			Return Me._GENNO
		End Get
		Set
			If (Me._GENNO.Equals(value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FORMAT", DbType:="NVarChar(50)")>  _
	Public Property FORMAT() As String
		Get
			Return Me._FORMAT
		End Get
		Set
			If (String.Equals(Me._FORMAT, value) = false) Then
				Me.OnFORMATChanging(value)
				Me.SendPropertyChanging
				Me._FORMAT = value
				Me.SendPropertyChanged("FORMAT")
				Me.OnFORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_IDA", DbType:="NVarChar(50)")>  _
	Public Property REF_IDA() As String
		Get
			Return Me._REF_IDA
		End Get
		Set
			If (String.Equals(Me._REF_IDA, value) = false) Then
				Me.OnREF_IDAChanging(value)
				Me.SendPropertyChanging
				Me._REF_IDA = value
				Me.SendPropertyChanged("REF_IDA")
				Me.OnREF_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_PRODUCT_IOWA")>  _
Partial Public Class DRUG_PRODUCT_IOWA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _IOWACD As String
	
	Private _UNIT_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _DOSAGE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnIOWACDChanging(value As String)
    End Sub
    Partial Private Sub OnIOWACDChanged()
    End Sub
    Partial Private Sub OnUNIT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUNIT_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnDOSAGEChanging(value As String)
    End Sub
    Partial Private Sub OnDOSAGEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWACD", DbType:="NVarChar(MAX)")>  _
	Public Property IOWACD() As String
		Get
			Return Me._IOWACD
		End Get
		Set
			If (String.Equals(Me._IOWACD, value) = false) Then
				Me.OnIOWACDChanging(value)
				Me.SendPropertyChanging
				Me._IOWACD = value
				Me.SendPropertyChanged("IOWACD")
				Me.OnIOWACDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_ID", DbType:="Int")>  _
	Public Property UNIT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._UNIT_ID
		End Get
		Set
			If (Me._UNIT_ID.Equals(value) = false) Then
				Me.OnUNIT_IDChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_ID = value
				Me.SendPropertyChanged("UNIT_ID")
				Me.OnUNIT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOSAGE", DbType:="NVarChar(MAX)")>  _
	Public Property DOSAGE() As String
		Get
			Return Me._DOSAGE
		End Get
		Set
			If (String.Equals(Me._DOSAGE, value) = false) Then
				Me.OnDOSAGEChanging(value)
				Me.SendPropertyChanging
				Me._DOSAGE = value
				Me.SendPropertyChanged("DOSAGE")
				Me.OnDOSAGEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_PRODUCT_ADDR")>  _
Partial Public Class DRUG_PRODUCT_ADDR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _thanameplace1 As String
	
	Private _engnameplace1 As String
	
	Private _thmblcd1 As System.Nullable(Of Short)
	
	Private _amphrcd1 As System.Nullable(Of Short)
	
	Private _chngwtcd1 As System.Nullable(Of Short)
	
	Private _thathmblnm1 As String
	
	Private _thaamphrnm1 As String
	
	Private _thachngwtnm1 As String
	
	Private _thaaddr1 As String
	
	Private _tharoom1 As String
	
	Private _thamu1 As String
	
	Private _thafloor1 As String
	
	Private _thasoi1 As String
	
	Private _thabuilding1 As String
	
	Private _engsoi1 As String
	
	Private _tharoad1 As String
	
	Private _engroad1 As String
	
	Private _zipcode1 As String
	
	Private _tel1 As String
	
	Private _fax1 As String
	
	Private _phone1 As String
	
	Private _email1 As String
	
	Private _thanameplace2 As String
	
	Private _engnameplace2 As String
	
	Private _thmblcd2 As System.Nullable(Of Short)
	
	Private _amphrcd2 As System.Nullable(Of Short)
	
	Private _chngwtcd2 As System.Nullable(Of Short)
	
	Private _thathmblnm2 As String
	
	Private _thaamphrnm2 As String
	
	Private _thachngwtnm2 As String
	
	Private _thaaddr2 As String
	
	Private _tharoom2 As String
	
	Private _thamu2 As String
	
	Private _thafloor2 As String
	
	Private _thasoi2 As String
	
	Private _thabuilding2 As String
	
	Private _engsoi2 As String
	
	Private _tharoad2 As String
	
	Private _engroad2 As String
	
	Private _zipcode2 As String
	
	Private _tel2 As String
	
	Private _fax2 As String
	
	Private _phone2 As String
	
	Private _email2 As String
	
	Private _thanameplace3 As String
	
	Private _engnameplace3 As String
	
	Private _thmblcd3 As System.Nullable(Of Short)
	
	Private _amphrcd3 As System.Nullable(Of Short)
	
	Private _chngwtcd3 As System.Nullable(Of Short)
	
	Private _thathmblnm3 As String
	
	Private _thaamphrnm3 As String
	
	Private _thachngwtnm3 As String
	
	Private _thaaddr3 As String
	
	Private _tharoom3 As String
	
	Private _thamu3 As String
	
	Private _thafloor3 As String
	
	Private _thasoi3 As String
	
	Private _thabuilding3 As String
	
	Private _engsoi3 As String
	
	Private _tharoad3 As String
	
	Private _engroad3 As String
	
	Private _zipcode3 As String
	
	Private _tel3 As String
	
	Private _fax3 As String
	
	Private _phone3 As String
	
	Private _email3 As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _FRGN_NAME As String
	
	Private _FRGN_FULLADDR As String
	
	Private _FRGN_CITY_NAME As String
	
	Private _FRGN_ZIPCODE As String
	
	Private _NATIONAL_CD As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub Onthanameplace1Changing(value As String)
    End Sub
    Partial Private Sub Onthanameplace1Changed()
    End Sub
    Partial Private Sub Onengnameplace1Changing(value As String)
    End Sub
    Partial Private Sub Onengnameplace1Changed()
    End Sub
    Partial Private Sub Onthmblcd1Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Onthmblcd1Changed()
    End Sub
    Partial Private Sub Onamphrcd1Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Onamphrcd1Changed()
    End Sub
    Partial Private Sub Onchngwtcd1Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Onchngwtcd1Changed()
    End Sub
    Partial Private Sub Onthathmblnm1Changing(value As String)
    End Sub
    Partial Private Sub Onthathmblnm1Changed()
    End Sub
    Partial Private Sub Onthaamphrnm1Changing(value As String)
    End Sub
    Partial Private Sub Onthaamphrnm1Changed()
    End Sub
    Partial Private Sub Onthachngwtnm1Changing(value As String)
    End Sub
    Partial Private Sub Onthachngwtnm1Changed()
    End Sub
    Partial Private Sub Onthaaddr1Changing(value As String)
    End Sub
    Partial Private Sub Onthaaddr1Changed()
    End Sub
    Partial Private Sub Ontharoom1Changing(value As String)
    End Sub
    Partial Private Sub Ontharoom1Changed()
    End Sub
    Partial Private Sub Onthamu1Changing(value As String)
    End Sub
    Partial Private Sub Onthamu1Changed()
    End Sub
    Partial Private Sub Onthafloor1Changing(value As String)
    End Sub
    Partial Private Sub Onthafloor1Changed()
    End Sub
    Partial Private Sub Onthasoi1Changing(value As String)
    End Sub
    Partial Private Sub Onthasoi1Changed()
    End Sub
    Partial Private Sub Onthabuilding1Changing(value As String)
    End Sub
    Partial Private Sub Onthabuilding1Changed()
    End Sub
    Partial Private Sub Onengsoi1Changing(value As String)
    End Sub
    Partial Private Sub Onengsoi1Changed()
    End Sub
    Partial Private Sub Ontharoad1Changing(value As String)
    End Sub
    Partial Private Sub Ontharoad1Changed()
    End Sub
    Partial Private Sub Onengroad1Changing(value As String)
    End Sub
    Partial Private Sub Onengroad1Changed()
    End Sub
    Partial Private Sub Onzipcode1Changing(value As String)
    End Sub
    Partial Private Sub Onzipcode1Changed()
    End Sub
    Partial Private Sub Ontel1Changing(value As String)
    End Sub
    Partial Private Sub Ontel1Changed()
    End Sub
    Partial Private Sub Onfax1Changing(value As String)
    End Sub
    Partial Private Sub Onfax1Changed()
    End Sub
    Partial Private Sub Onphone1Changing(value As String)
    End Sub
    Partial Private Sub Onphone1Changed()
    End Sub
    Partial Private Sub Onemail1Changing(value As String)
    End Sub
    Partial Private Sub Onemail1Changed()
    End Sub
    Partial Private Sub Onthanameplace2Changing(value As String)
    End Sub
    Partial Private Sub Onthanameplace2Changed()
    End Sub
    Partial Private Sub Onengnameplace2Changing(value As String)
    End Sub
    Partial Private Sub Onengnameplace2Changed()
    End Sub
    Partial Private Sub Onthmblcd2Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Onthmblcd2Changed()
    End Sub
    Partial Private Sub Onamphrcd2Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Onamphrcd2Changed()
    End Sub
    Partial Private Sub Onchngwtcd2Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Onchngwtcd2Changed()
    End Sub
    Partial Private Sub Onthathmblnm2Changing(value As String)
    End Sub
    Partial Private Sub Onthathmblnm2Changed()
    End Sub
    Partial Private Sub Onthaamphrnm2Changing(value As String)
    End Sub
    Partial Private Sub Onthaamphrnm2Changed()
    End Sub
    Partial Private Sub Onthachngwtnm2Changing(value As String)
    End Sub
    Partial Private Sub Onthachngwtnm2Changed()
    End Sub
    Partial Private Sub Onthaaddr2Changing(value As String)
    End Sub
    Partial Private Sub Onthaaddr2Changed()
    End Sub
    Partial Private Sub Ontharoom2Changing(value As String)
    End Sub
    Partial Private Sub Ontharoom2Changed()
    End Sub
    Partial Private Sub Onthamu2Changing(value As String)
    End Sub
    Partial Private Sub Onthamu2Changed()
    End Sub
    Partial Private Sub Onthafloor2Changing(value As String)
    End Sub
    Partial Private Sub Onthafloor2Changed()
    End Sub
    Partial Private Sub Onthasoi2Changing(value As String)
    End Sub
    Partial Private Sub Onthasoi2Changed()
    End Sub
    Partial Private Sub Onthabuilding2Changing(value As String)
    End Sub
    Partial Private Sub Onthabuilding2Changed()
    End Sub
    Partial Private Sub Onengsoi2Changing(value As String)
    End Sub
    Partial Private Sub Onengsoi2Changed()
    End Sub
    Partial Private Sub Ontharoad2Changing(value As String)
    End Sub
    Partial Private Sub Ontharoad2Changed()
    End Sub
    Partial Private Sub Onengroad2Changing(value As String)
    End Sub
    Partial Private Sub Onengroad2Changed()
    End Sub
    Partial Private Sub Onzipcode2Changing(value As String)
    End Sub
    Partial Private Sub Onzipcode2Changed()
    End Sub
    Partial Private Sub Ontel2Changing(value As String)
    End Sub
    Partial Private Sub Ontel2Changed()
    End Sub
    Partial Private Sub Onfax2Changing(value As String)
    End Sub
    Partial Private Sub Onfax2Changed()
    End Sub
    Partial Private Sub Onphone2Changing(value As String)
    End Sub
    Partial Private Sub Onphone2Changed()
    End Sub
    Partial Private Sub Onemail2Changing(value As String)
    End Sub
    Partial Private Sub Onemail2Changed()
    End Sub
    Partial Private Sub Onthanameplace3Changing(value As String)
    End Sub
    Partial Private Sub Onthanameplace3Changed()
    End Sub
    Partial Private Sub Onengnameplace3Changing(value As String)
    End Sub
    Partial Private Sub Onengnameplace3Changed()
    End Sub
    Partial Private Sub Onthmblcd3Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Onthmblcd3Changed()
    End Sub
    Partial Private Sub Onamphrcd3Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Onamphrcd3Changed()
    End Sub
    Partial Private Sub Onchngwtcd3Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Onchngwtcd3Changed()
    End Sub
    Partial Private Sub Onthathmblnm3Changing(value As String)
    End Sub
    Partial Private Sub Onthathmblnm3Changed()
    End Sub
    Partial Private Sub Onthaamphrnm3Changing(value As String)
    End Sub
    Partial Private Sub Onthaamphrnm3Changed()
    End Sub
    Partial Private Sub Onthachngwtnm3Changing(value As String)
    End Sub
    Partial Private Sub Onthachngwtnm3Changed()
    End Sub
    Partial Private Sub Onthaaddr3Changing(value As String)
    End Sub
    Partial Private Sub Onthaaddr3Changed()
    End Sub
    Partial Private Sub Ontharoom3Changing(value As String)
    End Sub
    Partial Private Sub Ontharoom3Changed()
    End Sub
    Partial Private Sub Onthamu3Changing(value As String)
    End Sub
    Partial Private Sub Onthamu3Changed()
    End Sub
    Partial Private Sub Onthafloor3Changing(value As String)
    End Sub
    Partial Private Sub Onthafloor3Changed()
    End Sub
    Partial Private Sub Onthasoi3Changing(value As String)
    End Sub
    Partial Private Sub Onthasoi3Changed()
    End Sub
    Partial Private Sub Onthabuilding3Changing(value As String)
    End Sub
    Partial Private Sub Onthabuilding3Changed()
    End Sub
    Partial Private Sub Onengsoi3Changing(value As String)
    End Sub
    Partial Private Sub Onengsoi3Changed()
    End Sub
    Partial Private Sub Ontharoad3Changing(value As String)
    End Sub
    Partial Private Sub Ontharoad3Changed()
    End Sub
    Partial Private Sub Onengroad3Changing(value As String)
    End Sub
    Partial Private Sub Onengroad3Changed()
    End Sub
    Partial Private Sub Onzipcode3Changing(value As String)
    End Sub
    Partial Private Sub Onzipcode3Changed()
    End Sub
    Partial Private Sub Ontel3Changing(value As String)
    End Sub
    Partial Private Sub Ontel3Changed()
    End Sub
    Partial Private Sub Onfax3Changing(value As String)
    End Sub
    Partial Private Sub Onfax3Changed()
    End Sub
    Partial Private Sub Onphone3Changing(value As String)
    End Sub
    Partial Private Sub Onphone3Changed()
    End Sub
    Partial Private Sub Onemail3Changing(value As String)
    End Sub
    Partial Private Sub Onemail3Changed()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnFRGN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFRGN_NAMEChanged()
    End Sub
    Partial Private Sub OnFRGN_FULLADDRChanging(value As String)
    End Sub
    Partial Private Sub OnFRGN_FULLADDRChanged()
    End Sub
    Partial Private Sub OnFRGN_CITY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFRGN_CITY_NAMEChanged()
    End Sub
    Partial Private Sub OnFRGN_ZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnFRGN_ZIPCODEChanged()
    End Sub
    Partial Private Sub OnNATIONAL_CDChanging(value As String)
    End Sub
    Partial Private Sub OnNATIONAL_CDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanameplace1", DbType:="NVarChar(MAX)")>  _
	Public Property thanameplace1() As String
		Get
			Return Me._thanameplace1
		End Get
		Set
			If (String.Equals(Me._thanameplace1, value) = false) Then
				Me.Onthanameplace1Changing(value)
				Me.SendPropertyChanging
				Me._thanameplace1 = value
				Me.SendPropertyChanged("thanameplace1")
				Me.Onthanameplace1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engnameplace1", DbType:="NVarChar(MAX)")>  _
	Public Property engnameplace1() As String
		Get
			Return Me._engnameplace1
		End Get
		Set
			If (String.Equals(Me._engnameplace1, value) = false) Then
				Me.Onengnameplace1Changing(value)
				Me.SendPropertyChanging
				Me._engnameplace1 = value
				Me.SendPropertyChanged("engnameplace1")
				Me.Onengnameplace1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd1", DbType:="SmallInt")>  _
	Public Property thmblcd1() As System.Nullable(Of Short)
		Get
			Return Me._thmblcd1
		End Get
		Set
			If (Me._thmblcd1.Equals(value) = false) Then
				Me.Onthmblcd1Changing(value)
				Me.SendPropertyChanging
				Me._thmblcd1 = value
				Me.SendPropertyChanged("thmblcd1")
				Me.Onthmblcd1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd1", DbType:="SmallInt")>  _
	Public Property amphrcd1() As System.Nullable(Of Short)
		Get
			Return Me._amphrcd1
		End Get
		Set
			If (Me._amphrcd1.Equals(value) = false) Then
				Me.Onamphrcd1Changing(value)
				Me.SendPropertyChanging
				Me._amphrcd1 = value
				Me.SendPropertyChanged("amphrcd1")
				Me.Onamphrcd1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd1", DbType:="SmallInt")>  _
	Public Property chngwtcd1() As System.Nullable(Of Short)
		Get
			Return Me._chngwtcd1
		End Get
		Set
			If (Me._chngwtcd1.Equals(value) = false) Then
				Me.Onchngwtcd1Changing(value)
				Me.SendPropertyChanging
				Me._chngwtcd1 = value
				Me.SendPropertyChanged("chngwtcd1")
				Me.Onchngwtcd1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thathmblnm1", DbType:="NVarChar(MAX)")>  _
	Public Property thathmblnm1() As String
		Get
			Return Me._thathmblnm1
		End Get
		Set
			If (String.Equals(Me._thathmblnm1, value) = false) Then
				Me.Onthathmblnm1Changing(value)
				Me.SendPropertyChanging
				Me._thathmblnm1 = value
				Me.SendPropertyChanged("thathmblnm1")
				Me.Onthathmblnm1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaamphrnm1", DbType:="NVarChar(MAX)")>  _
	Public Property thaamphrnm1() As String
		Get
			Return Me._thaamphrnm1
		End Get
		Set
			If (String.Equals(Me._thaamphrnm1, value) = false) Then
				Me.Onthaamphrnm1Changing(value)
				Me.SendPropertyChanging
				Me._thaamphrnm1 = value
				Me.SendPropertyChanged("thaamphrnm1")
				Me.Onthaamphrnm1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thachngwtnm1", DbType:="NVarChar(MAX)")>  _
	Public Property thachngwtnm1() As String
		Get
			Return Me._thachngwtnm1
		End Get
		Set
			If (String.Equals(Me._thachngwtnm1, value) = false) Then
				Me.Onthachngwtnm1Changing(value)
				Me.SendPropertyChanging
				Me._thachngwtnm1 = value
				Me.SendPropertyChanged("thachngwtnm1")
				Me.Onthachngwtnm1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaaddr1", DbType:="VarChar(MAX)")>  _
	Public Property thaaddr1() As String
		Get
			Return Me._thaaddr1
		End Get
		Set
			If (String.Equals(Me._thaaddr1, value) = false) Then
				Me.Onthaaddr1Changing(value)
				Me.SendPropertyChanging
				Me._thaaddr1 = value
				Me.SendPropertyChanged("thaaddr1")
				Me.Onthaaddr1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoom1", DbType:="VarChar(60)")>  _
	Public Property tharoom1() As String
		Get
			Return Me._tharoom1
		End Get
		Set
			If (String.Equals(Me._tharoom1, value) = false) Then
				Me.Ontharoom1Changing(value)
				Me.SendPropertyChanging
				Me._tharoom1 = value
				Me.SendPropertyChanged("tharoom1")
				Me.Ontharoom1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thamu1", DbType:="VarChar(60)")>  _
	Public Property thamu1() As String
		Get
			Return Me._thamu1
		End Get
		Set
			If (String.Equals(Me._thamu1, value) = false) Then
				Me.Onthamu1Changing(value)
				Me.SendPropertyChanging
				Me._thamu1 = value
				Me.SendPropertyChanged("thamu1")
				Me.Onthamu1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thafloor1", DbType:="VarChar(60)")>  _
	Public Property thafloor1() As String
		Get
			Return Me._thafloor1
		End Get
		Set
			If (String.Equals(Me._thafloor1, value) = false) Then
				Me.Onthafloor1Changing(value)
				Me.SendPropertyChanging
				Me._thafloor1 = value
				Me.SendPropertyChanged("thafloor1")
				Me.Onthafloor1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thasoi1", DbType:="VarChar(80)")>  _
	Public Property thasoi1() As String
		Get
			Return Me._thasoi1
		End Get
		Set
			If (String.Equals(Me._thasoi1, value) = false) Then
				Me.Onthasoi1Changing(value)
				Me.SendPropertyChanging
				Me._thasoi1 = value
				Me.SendPropertyChanged("thasoi1")
				Me.Onthasoi1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thabuilding1", DbType:="VarChar(250)")>  _
	Public Property thabuilding1() As String
		Get
			Return Me._thabuilding1
		End Get
		Set
			If (String.Equals(Me._thabuilding1, value) = false) Then
				Me.Onthabuilding1Changing(value)
				Me.SendPropertyChanging
				Me._thabuilding1 = value
				Me.SendPropertyChanged("thabuilding1")
				Me.Onthabuilding1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engsoi1", DbType:="VarChar(80)")>  _
	Public Property engsoi1() As String
		Get
			Return Me._engsoi1
		End Get
		Set
			If (String.Equals(Me._engsoi1, value) = false) Then
				Me.Onengsoi1Changing(value)
				Me.SendPropertyChanging
				Me._engsoi1 = value
				Me.SendPropertyChanged("engsoi1")
				Me.Onengsoi1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoad1", DbType:="VarChar(80)")>  _
	Public Property tharoad1() As String
		Get
			Return Me._tharoad1
		End Get
		Set
			If (String.Equals(Me._tharoad1, value) = false) Then
				Me.Ontharoad1Changing(value)
				Me.SendPropertyChanging
				Me._tharoad1 = value
				Me.SendPropertyChanged("tharoad1")
				Me.Ontharoad1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engroad1", DbType:="VarChar(80)")>  _
	Public Property engroad1() As String
		Get
			Return Me._engroad1
		End Get
		Set
			If (String.Equals(Me._engroad1, value) = false) Then
				Me.Onengroad1Changing(value)
				Me.SendPropertyChanging
				Me._engroad1 = value
				Me.SendPropertyChanged("engroad1")
				Me.Onengroad1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_zipcode1", DbType:="VarChar(50)")>  _
	Public Property zipcode1() As String
		Get
			Return Me._zipcode1
		End Get
		Set
			If (String.Equals(Me._zipcode1, value) = false) Then
				Me.Onzipcode1Changing(value)
				Me.SendPropertyChanging
				Me._zipcode1 = value
				Me.SendPropertyChanged("zipcode1")
				Me.Onzipcode1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel1", DbType:="VarChar(60)")>  _
	Public Property tel1() As String
		Get
			Return Me._tel1
		End Get
		Set
			If (String.Equals(Me._tel1, value) = false) Then
				Me.Ontel1Changing(value)
				Me.SendPropertyChanging
				Me._tel1 = value
				Me.SendPropertyChanged("tel1")
				Me.Ontel1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax1", DbType:="VarChar(60)")>  _
	Public Property fax1() As String
		Get
			Return Me._fax1
		End Get
		Set
			If (String.Equals(Me._fax1, value) = false) Then
				Me.Onfax1Changing(value)
				Me.SendPropertyChanging
				Me._fax1 = value
				Me.SendPropertyChanged("fax1")
				Me.Onfax1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phone1", DbType:="NVarChar(50)")>  _
	Public Property phone1() As String
		Get
			Return Me._phone1
		End Get
		Set
			If (String.Equals(Me._phone1, value) = false) Then
				Me.Onphone1Changing(value)
				Me.SendPropertyChanging
				Me._phone1 = value
				Me.SendPropertyChanged("phone1")
				Me.Onphone1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_email1", DbType:="NVarChar(MAX)")>  _
	Public Property email1() As String
		Get
			Return Me._email1
		End Get
		Set
			If (String.Equals(Me._email1, value) = false) Then
				Me.Onemail1Changing(value)
				Me.SendPropertyChanging
				Me._email1 = value
				Me.SendPropertyChanged("email1")
				Me.Onemail1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanameplace2", DbType:="NVarChar(MAX)")>  _
	Public Property thanameplace2() As String
		Get
			Return Me._thanameplace2
		End Get
		Set
			If (String.Equals(Me._thanameplace2, value) = false) Then
				Me.Onthanameplace2Changing(value)
				Me.SendPropertyChanging
				Me._thanameplace2 = value
				Me.SendPropertyChanged("thanameplace2")
				Me.Onthanameplace2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engnameplace2", DbType:="NVarChar(MAX)")>  _
	Public Property engnameplace2() As String
		Get
			Return Me._engnameplace2
		End Get
		Set
			If (String.Equals(Me._engnameplace2, value) = false) Then
				Me.Onengnameplace2Changing(value)
				Me.SendPropertyChanging
				Me._engnameplace2 = value
				Me.SendPropertyChanged("engnameplace2")
				Me.Onengnameplace2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd2", DbType:="SmallInt")>  _
	Public Property thmblcd2() As System.Nullable(Of Short)
		Get
			Return Me._thmblcd2
		End Get
		Set
			If (Me._thmblcd2.Equals(value) = false) Then
				Me.Onthmblcd2Changing(value)
				Me.SendPropertyChanging
				Me._thmblcd2 = value
				Me.SendPropertyChanged("thmblcd2")
				Me.Onthmblcd2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd2", DbType:="SmallInt")>  _
	Public Property amphrcd2() As System.Nullable(Of Short)
		Get
			Return Me._amphrcd2
		End Get
		Set
			If (Me._amphrcd2.Equals(value) = false) Then
				Me.Onamphrcd2Changing(value)
				Me.SendPropertyChanging
				Me._amphrcd2 = value
				Me.SendPropertyChanged("amphrcd2")
				Me.Onamphrcd2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd2", DbType:="SmallInt")>  _
	Public Property chngwtcd2() As System.Nullable(Of Short)
		Get
			Return Me._chngwtcd2
		End Get
		Set
			If (Me._chngwtcd2.Equals(value) = false) Then
				Me.Onchngwtcd2Changing(value)
				Me.SendPropertyChanging
				Me._chngwtcd2 = value
				Me.SendPropertyChanged("chngwtcd2")
				Me.Onchngwtcd2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thathmblnm2", DbType:="NVarChar(MAX)")>  _
	Public Property thathmblnm2() As String
		Get
			Return Me._thathmblnm2
		End Get
		Set
			If (String.Equals(Me._thathmblnm2, value) = false) Then
				Me.Onthathmblnm2Changing(value)
				Me.SendPropertyChanging
				Me._thathmblnm2 = value
				Me.SendPropertyChanged("thathmblnm2")
				Me.Onthathmblnm2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaamphrnm2", DbType:="NVarChar(MAX)")>  _
	Public Property thaamphrnm2() As String
		Get
			Return Me._thaamphrnm2
		End Get
		Set
			If (String.Equals(Me._thaamphrnm2, value) = false) Then
				Me.Onthaamphrnm2Changing(value)
				Me.SendPropertyChanging
				Me._thaamphrnm2 = value
				Me.SendPropertyChanged("thaamphrnm2")
				Me.Onthaamphrnm2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thachngwtnm2", DbType:="NVarChar(MAX)")>  _
	Public Property thachngwtnm2() As String
		Get
			Return Me._thachngwtnm2
		End Get
		Set
			If (String.Equals(Me._thachngwtnm2, value) = false) Then
				Me.Onthachngwtnm2Changing(value)
				Me.SendPropertyChanging
				Me._thachngwtnm2 = value
				Me.SendPropertyChanged("thachngwtnm2")
				Me.Onthachngwtnm2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaaddr2", DbType:="VarChar(MAX)")>  _
	Public Property thaaddr2() As String
		Get
			Return Me._thaaddr2
		End Get
		Set
			If (String.Equals(Me._thaaddr2, value) = false) Then
				Me.Onthaaddr2Changing(value)
				Me.SendPropertyChanging
				Me._thaaddr2 = value
				Me.SendPropertyChanged("thaaddr2")
				Me.Onthaaddr2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoom2", DbType:="VarChar(60)")>  _
	Public Property tharoom2() As String
		Get
			Return Me._tharoom2
		End Get
		Set
			If (String.Equals(Me._tharoom2, value) = false) Then
				Me.Ontharoom2Changing(value)
				Me.SendPropertyChanging
				Me._tharoom2 = value
				Me.SendPropertyChanged("tharoom2")
				Me.Ontharoom2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thamu2", DbType:="VarChar(60)")>  _
	Public Property thamu2() As String
		Get
			Return Me._thamu2
		End Get
		Set
			If (String.Equals(Me._thamu2, value) = false) Then
				Me.Onthamu2Changing(value)
				Me.SendPropertyChanging
				Me._thamu2 = value
				Me.SendPropertyChanged("thamu2")
				Me.Onthamu2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thafloor2", DbType:="VarChar(60)")>  _
	Public Property thafloor2() As String
		Get
			Return Me._thafloor2
		End Get
		Set
			If (String.Equals(Me._thafloor2, value) = false) Then
				Me.Onthafloor2Changing(value)
				Me.SendPropertyChanging
				Me._thafloor2 = value
				Me.SendPropertyChanged("thafloor2")
				Me.Onthafloor2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thasoi2", DbType:="VarChar(80)")>  _
	Public Property thasoi2() As String
		Get
			Return Me._thasoi2
		End Get
		Set
			If (String.Equals(Me._thasoi2, value) = false) Then
				Me.Onthasoi2Changing(value)
				Me.SendPropertyChanging
				Me._thasoi2 = value
				Me.SendPropertyChanged("thasoi2")
				Me.Onthasoi2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thabuilding2", DbType:="VarChar(250)")>  _
	Public Property thabuilding2() As String
		Get
			Return Me._thabuilding2
		End Get
		Set
			If (String.Equals(Me._thabuilding2, value) = false) Then
				Me.Onthabuilding2Changing(value)
				Me.SendPropertyChanging
				Me._thabuilding2 = value
				Me.SendPropertyChanged("thabuilding2")
				Me.Onthabuilding2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engsoi2", DbType:="VarChar(80)")>  _
	Public Property engsoi2() As String
		Get
			Return Me._engsoi2
		End Get
		Set
			If (String.Equals(Me._engsoi2, value) = false) Then
				Me.Onengsoi2Changing(value)
				Me.SendPropertyChanging
				Me._engsoi2 = value
				Me.SendPropertyChanged("engsoi2")
				Me.Onengsoi2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoad2", DbType:="VarChar(80)")>  _
	Public Property tharoad2() As String
		Get
			Return Me._tharoad2
		End Get
		Set
			If (String.Equals(Me._tharoad2, value) = false) Then
				Me.Ontharoad2Changing(value)
				Me.SendPropertyChanging
				Me._tharoad2 = value
				Me.SendPropertyChanged("tharoad2")
				Me.Ontharoad2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engroad2", DbType:="VarChar(80)")>  _
	Public Property engroad2() As String
		Get
			Return Me._engroad2
		End Get
		Set
			If (String.Equals(Me._engroad2, value) = false) Then
				Me.Onengroad2Changing(value)
				Me.SendPropertyChanging
				Me._engroad2 = value
				Me.SendPropertyChanged("engroad2")
				Me.Onengroad2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_zipcode2", DbType:="VarChar(50)")>  _
	Public Property zipcode2() As String
		Get
			Return Me._zipcode2
		End Get
		Set
			If (String.Equals(Me._zipcode2, value) = false) Then
				Me.Onzipcode2Changing(value)
				Me.SendPropertyChanging
				Me._zipcode2 = value
				Me.SendPropertyChanged("zipcode2")
				Me.Onzipcode2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel2", DbType:="VarChar(60)")>  _
	Public Property tel2() As String
		Get
			Return Me._tel2
		End Get
		Set
			If (String.Equals(Me._tel2, value) = false) Then
				Me.Ontel2Changing(value)
				Me.SendPropertyChanging
				Me._tel2 = value
				Me.SendPropertyChanged("tel2")
				Me.Ontel2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax2", DbType:="VarChar(60)")>  _
	Public Property fax2() As String
		Get
			Return Me._fax2
		End Get
		Set
			If (String.Equals(Me._fax2, value) = false) Then
				Me.Onfax2Changing(value)
				Me.SendPropertyChanging
				Me._fax2 = value
				Me.SendPropertyChanged("fax2")
				Me.Onfax2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phone2", DbType:="NVarChar(50)")>  _
	Public Property phone2() As String
		Get
			Return Me._phone2
		End Get
		Set
			If (String.Equals(Me._phone2, value) = false) Then
				Me.Onphone2Changing(value)
				Me.SendPropertyChanging
				Me._phone2 = value
				Me.SendPropertyChanged("phone2")
				Me.Onphone2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_email2", DbType:="NVarChar(MAX)")>  _
	Public Property email2() As String
		Get
			Return Me._email2
		End Get
		Set
			If (String.Equals(Me._email2, value) = false) Then
				Me.Onemail2Changing(value)
				Me.SendPropertyChanging
				Me._email2 = value
				Me.SendPropertyChanged("email2")
				Me.Onemail2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanameplace3", DbType:="NVarChar(MAX)")>  _
	Public Property thanameplace3() As String
		Get
			Return Me._thanameplace3
		End Get
		Set
			If (String.Equals(Me._thanameplace3, value) = false) Then
				Me.Onthanameplace3Changing(value)
				Me.SendPropertyChanging
				Me._thanameplace3 = value
				Me.SendPropertyChanged("thanameplace3")
				Me.Onthanameplace3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engnameplace3", DbType:="NVarChar(MAX)")>  _
	Public Property engnameplace3() As String
		Get
			Return Me._engnameplace3
		End Get
		Set
			If (String.Equals(Me._engnameplace3, value) = false) Then
				Me.Onengnameplace3Changing(value)
				Me.SendPropertyChanging
				Me._engnameplace3 = value
				Me.SendPropertyChanged("engnameplace3")
				Me.Onengnameplace3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd3", DbType:="SmallInt")>  _
	Public Property thmblcd3() As System.Nullable(Of Short)
		Get
			Return Me._thmblcd3
		End Get
		Set
			If (Me._thmblcd3.Equals(value) = false) Then
				Me.Onthmblcd3Changing(value)
				Me.SendPropertyChanging
				Me._thmblcd3 = value
				Me.SendPropertyChanged("thmblcd3")
				Me.Onthmblcd3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd3", DbType:="SmallInt")>  _
	Public Property amphrcd3() As System.Nullable(Of Short)
		Get
			Return Me._amphrcd3
		End Get
		Set
			If (Me._amphrcd3.Equals(value) = false) Then
				Me.Onamphrcd3Changing(value)
				Me.SendPropertyChanging
				Me._amphrcd3 = value
				Me.SendPropertyChanged("amphrcd3")
				Me.Onamphrcd3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd3", DbType:="SmallInt")>  _
	Public Property chngwtcd3() As System.Nullable(Of Short)
		Get
			Return Me._chngwtcd3
		End Get
		Set
			If (Me._chngwtcd3.Equals(value) = false) Then
				Me.Onchngwtcd3Changing(value)
				Me.SendPropertyChanging
				Me._chngwtcd3 = value
				Me.SendPropertyChanged("chngwtcd3")
				Me.Onchngwtcd3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thathmblnm3", DbType:="NVarChar(MAX)")>  _
	Public Property thathmblnm3() As String
		Get
			Return Me._thathmblnm3
		End Get
		Set
			If (String.Equals(Me._thathmblnm3, value) = false) Then
				Me.Onthathmblnm3Changing(value)
				Me.SendPropertyChanging
				Me._thathmblnm3 = value
				Me.SendPropertyChanged("thathmblnm3")
				Me.Onthathmblnm3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaamphrnm3", DbType:="NVarChar(MAX)")>  _
	Public Property thaamphrnm3() As String
		Get
			Return Me._thaamphrnm3
		End Get
		Set
			If (String.Equals(Me._thaamphrnm3, value) = false) Then
				Me.Onthaamphrnm3Changing(value)
				Me.SendPropertyChanging
				Me._thaamphrnm3 = value
				Me.SendPropertyChanged("thaamphrnm3")
				Me.Onthaamphrnm3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thachngwtnm3", DbType:="NVarChar(MAX)")>  _
	Public Property thachngwtnm3() As String
		Get
			Return Me._thachngwtnm3
		End Get
		Set
			If (String.Equals(Me._thachngwtnm3, value) = false) Then
				Me.Onthachngwtnm3Changing(value)
				Me.SendPropertyChanging
				Me._thachngwtnm3 = value
				Me.SendPropertyChanged("thachngwtnm3")
				Me.Onthachngwtnm3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaaddr3", DbType:="VarChar(MAX)")>  _
	Public Property thaaddr3() As String
		Get
			Return Me._thaaddr3
		End Get
		Set
			If (String.Equals(Me._thaaddr3, value) = false) Then
				Me.Onthaaddr3Changing(value)
				Me.SendPropertyChanging
				Me._thaaddr3 = value
				Me.SendPropertyChanged("thaaddr3")
				Me.Onthaaddr3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoom3", DbType:="VarChar(60)")>  _
	Public Property tharoom3() As String
		Get
			Return Me._tharoom3
		End Get
		Set
			If (String.Equals(Me._tharoom3, value) = false) Then
				Me.Ontharoom3Changing(value)
				Me.SendPropertyChanging
				Me._tharoom3 = value
				Me.SendPropertyChanged("tharoom3")
				Me.Ontharoom3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thamu3", DbType:="VarChar(60)")>  _
	Public Property thamu3() As String
		Get
			Return Me._thamu3
		End Get
		Set
			If (String.Equals(Me._thamu3, value) = false) Then
				Me.Onthamu3Changing(value)
				Me.SendPropertyChanging
				Me._thamu3 = value
				Me.SendPropertyChanged("thamu3")
				Me.Onthamu3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thafloor3", DbType:="VarChar(60)")>  _
	Public Property thafloor3() As String
		Get
			Return Me._thafloor3
		End Get
		Set
			If (String.Equals(Me._thafloor3, value) = false) Then
				Me.Onthafloor3Changing(value)
				Me.SendPropertyChanging
				Me._thafloor3 = value
				Me.SendPropertyChanged("thafloor3")
				Me.Onthafloor3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thasoi3", DbType:="VarChar(80)")>  _
	Public Property thasoi3() As String
		Get
			Return Me._thasoi3
		End Get
		Set
			If (String.Equals(Me._thasoi3, value) = false) Then
				Me.Onthasoi3Changing(value)
				Me.SendPropertyChanging
				Me._thasoi3 = value
				Me.SendPropertyChanged("thasoi3")
				Me.Onthasoi3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thabuilding3", DbType:="VarChar(250)")>  _
	Public Property thabuilding3() As String
		Get
			Return Me._thabuilding3
		End Get
		Set
			If (String.Equals(Me._thabuilding3, value) = false) Then
				Me.Onthabuilding3Changing(value)
				Me.SendPropertyChanging
				Me._thabuilding3 = value
				Me.SendPropertyChanged("thabuilding3")
				Me.Onthabuilding3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engsoi3", DbType:="VarChar(80)")>  _
	Public Property engsoi3() As String
		Get
			Return Me._engsoi3
		End Get
		Set
			If (String.Equals(Me._engsoi3, value) = false) Then
				Me.Onengsoi3Changing(value)
				Me.SendPropertyChanging
				Me._engsoi3 = value
				Me.SendPropertyChanged("engsoi3")
				Me.Onengsoi3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoad3", DbType:="VarChar(80)")>  _
	Public Property tharoad3() As String
		Get
			Return Me._tharoad3
		End Get
		Set
			If (String.Equals(Me._tharoad3, value) = false) Then
				Me.Ontharoad3Changing(value)
				Me.SendPropertyChanging
				Me._tharoad3 = value
				Me.SendPropertyChanged("tharoad3")
				Me.Ontharoad3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engroad3", DbType:="VarChar(80)")>  _
	Public Property engroad3() As String
		Get
			Return Me._engroad3
		End Get
		Set
			If (String.Equals(Me._engroad3, value) = false) Then
				Me.Onengroad3Changing(value)
				Me.SendPropertyChanging
				Me._engroad3 = value
				Me.SendPropertyChanged("engroad3")
				Me.Onengroad3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_zipcode3", DbType:="VarChar(50)")>  _
	Public Property zipcode3() As String
		Get
			Return Me._zipcode3
		End Get
		Set
			If (String.Equals(Me._zipcode3, value) = false) Then
				Me.Onzipcode3Changing(value)
				Me.SendPropertyChanging
				Me._zipcode3 = value
				Me.SendPropertyChanged("zipcode3")
				Me.Onzipcode3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel3", DbType:="VarChar(60)")>  _
	Public Property tel3() As String
		Get
			Return Me._tel3
		End Get
		Set
			If (String.Equals(Me._tel3, value) = false) Then
				Me.Ontel3Changing(value)
				Me.SendPropertyChanging
				Me._tel3 = value
				Me.SendPropertyChanged("tel3")
				Me.Ontel3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax3", DbType:="VarChar(60)")>  _
	Public Property fax3() As String
		Get
			Return Me._fax3
		End Get
		Set
			If (String.Equals(Me._fax3, value) = false) Then
				Me.Onfax3Changing(value)
				Me.SendPropertyChanging
				Me._fax3 = value
				Me.SendPropertyChanged("fax3")
				Me.Onfax3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phone3", DbType:="NVarChar(50)")>  _
	Public Property phone3() As String
		Get
			Return Me._phone3
		End Get
		Set
			If (String.Equals(Me._phone3, value) = false) Then
				Me.Onphone3Changing(value)
				Me.SendPropertyChanging
				Me._phone3 = value
				Me.SendPropertyChanged("phone3")
				Me.Onphone3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_email3", DbType:="NVarChar(MAX)")>  _
	Public Property email3() As String
		Get
			Return Me._email3
		End Get
		Set
			If (String.Equals(Me._email3, value) = false) Then
				Me.Onemail3Changing(value)
				Me.SendPropertyChanging
				Me._email3 = value
				Me.SendPropertyChanged("email3")
				Me.Onemail3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FRGN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FRGN_NAME() As String
		Get
			Return Me._FRGN_NAME
		End Get
		Set
			If (String.Equals(Me._FRGN_NAME, value) = false) Then
				Me.OnFRGN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FRGN_NAME = value
				Me.SendPropertyChanged("FRGN_NAME")
				Me.OnFRGN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FRGN_FULLADDR", DbType:="NVarChar(MAX)")>  _
	Public Property FRGN_FULLADDR() As String
		Get
			Return Me._FRGN_FULLADDR
		End Get
		Set
			If (String.Equals(Me._FRGN_FULLADDR, value) = false) Then
				Me.OnFRGN_FULLADDRChanging(value)
				Me.SendPropertyChanging
				Me._FRGN_FULLADDR = value
				Me.SendPropertyChanged("FRGN_FULLADDR")
				Me.OnFRGN_FULLADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FRGN_CITY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FRGN_CITY_NAME() As String
		Get
			Return Me._FRGN_CITY_NAME
		End Get
		Set
			If (String.Equals(Me._FRGN_CITY_NAME, value) = false) Then
				Me.OnFRGN_CITY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FRGN_CITY_NAME = value
				Me.SendPropertyChanged("FRGN_CITY_NAME")
				Me.OnFRGN_CITY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FRGN_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property FRGN_ZIPCODE() As String
		Get
			Return Me._FRGN_ZIPCODE
		End Get
		Set
			If (String.Equals(Me._FRGN_ZIPCODE, value) = false) Then
				Me.OnFRGN_ZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._FRGN_ZIPCODE = value
				Me.SendPropertyChanged("FRGN_ZIPCODE")
				Me.OnFRGN_ZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATIONAL_CD", DbType:="NVarChar(50)")>  _
	Public Property NATIONAL_CD() As String
		Get
			Return Me._NATIONAL_CD
		End Get
		Set
			If (String.Equals(Me._NATIONAL_CD, value) = false) Then
				Me.OnNATIONAL_CDChanging(value)
				Me.SendPropertyChanging
				Me._NATIONAL_CD = value
				Me.SendPropertyChanged("NATIONAL_CD")
				Me.OnNATIONAL_CDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.syswrkunt")>  _
Partial Public Class syswrkunt
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _dvcd As System.Nullable(Of Integer)
	
	Private _wrkgrpcd As System.Nullable(Of Integer)
	
	Private _wrkuntcd As System.Nullable(Of Integer)
	
	Private _wrkuntnm As String
	
	Private _group_show As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OndvcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OndvcdChanged()
    End Sub
    Partial Private Sub OnwrkgrpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnwrkgrpcdChanged()
    End Sub
    Partial Private Sub OnwrkuntcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnwrkuntcdChanged()
    End Sub
    Partial Private Sub OnwrkuntnmChanging(value As String)
    End Sub
    Partial Private Sub OnwrkuntnmChanged()
    End Sub
    Partial Private Sub Ongroup_showChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ongroup_showChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvcd", DbType:="Int")>  _
	Public Property dvcd() As System.Nullable(Of Integer)
		Get
			Return Me._dvcd
		End Get
		Set
			If (Me._dvcd.Equals(value) = false) Then
				Me.OndvcdChanging(value)
				Me.SendPropertyChanging
				Me._dvcd = value
				Me.SendPropertyChanged("dvcd")
				Me.OndvcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_wrkgrpcd", DbType:="Int")>  _
	Public Property wrkgrpcd() As System.Nullable(Of Integer)
		Get
			Return Me._wrkgrpcd
		End Get
		Set
			If (Me._wrkgrpcd.Equals(value) = false) Then
				Me.OnwrkgrpcdChanging(value)
				Me.SendPropertyChanging
				Me._wrkgrpcd = value
				Me.SendPropertyChanged("wrkgrpcd")
				Me.OnwrkgrpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_wrkuntcd", DbType:="Int")>  _
	Public Property wrkuntcd() As System.Nullable(Of Integer)
		Get
			Return Me._wrkuntcd
		End Get
		Set
			If (Me._wrkuntcd.Equals(value) = false) Then
				Me.OnwrkuntcdChanging(value)
				Me.SendPropertyChanging
				Me._wrkuntcd = value
				Me.SendPropertyChanged("wrkuntcd")
				Me.OnwrkuntcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_wrkuntnm", DbType:="NVarChar(MAX)")>  _
	Public Property wrkuntnm() As String
		Get
			Return Me._wrkuntnm
		End Get
		Set
			If (String.Equals(Me._wrkuntnm, value) = false) Then
				Me.OnwrkuntnmChanging(value)
				Me.SendPropertyChanging
				Me._wrkuntnm = value
				Me.SendPropertyChanged("wrkuntnm")
				Me.OnwrkuntnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_group_show", DbType:="Int")>  _
	Public Property group_show() As System.Nullable(Of Integer)
		Get
			Return Me._group_show
		End Get
		Set
			If (Me._group_show.Equals(value) = false) Then
				Me.Ongroup_showChanging(value)
				Me.SendPropertyChanging
				Me._group_show = value
				Me.SendPropertyChanged("group_show")
				Me.Ongroup_showChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_E_TRACKING_GROUP")>  _
Partial Public Class MAS_E_TRACKING_GROUP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ID_GROUP As System.Nullable(Of Integer)
	
	Private _TYPE_PERSON As System.Nullable(Of Integer)
	
	Private _GROUP_WORK As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnID_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnID_GROUPChanged()
    End Sub
    Partial Private Sub OnTYPE_PERSONChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_PERSONChanged()
    End Sub
    Partial Private Sub OnGROUP_WORKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_WORKChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_GROUP", DbType:="Int")>  _
	Public Property ID_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._ID_GROUP
		End Get
		Set
			If (Me._ID_GROUP.Equals(value) = false) Then
				Me.OnID_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._ID_GROUP = value
				Me.SendPropertyChanged("ID_GROUP")
				Me.OnID_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_PERSON", DbType:="Int")>  _
	Public Property TYPE_PERSON() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_PERSON
		End Get
		Set
			If (Me._TYPE_PERSON.Equals(value) = false) Then
				Me.OnTYPE_PERSONChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_PERSON = value
				Me.SendPropertyChanged("TYPE_PERSON")
				Me.OnTYPE_PERSONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_WORK", DbType:="Int")>  _
	Public Property GROUP_WORK() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_WORK
		End Get
		Set
			If (Me._GROUP_WORK.Equals(value) = false) Then
				Me.OnGROUP_WORKChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_WORK = value
				Me.SendPropertyChanged("GROUP_WORK")
				Me.OnGROUP_WORKChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CONSIDER_REQ_PRINT_HISTORY")>  _
Partial Public Class CONSIDER_REQ_PRINT_HISTORY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _SENT_DOCUMENT_IDEN As String
	
	Private _SENT_DOCUMENT_NAME As String
	
	Private _YEAR_PRINT As System.Nullable(Of Integer)
	
	Private _PRINT_COUNT As System.Nullable(Of Integer)
	
	Private _STARTDATE As System.Nullable(Of Date)
	
	Private _ENDDATE As System.Nullable(Of Date)
	
	Private _PRINT_DATE As System.Nullable(Of Date)
	
	Private _GROUP_NO As String
	
	Private _SUB_GROUP_NO As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSENT_DOCUMENT_IDENChanging(value As String)
    End Sub
    Partial Private Sub OnSENT_DOCUMENT_IDENChanged()
    End Sub
    Partial Private Sub OnSENT_DOCUMENT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSENT_DOCUMENT_NAMEChanged()
    End Sub
    Partial Private Sub OnYEAR_PRINTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYEAR_PRINTChanged()
    End Sub
    Partial Private Sub OnPRINT_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRINT_COUNTChanged()
    End Sub
    Partial Private Sub OnSTARTDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTARTDATEChanged()
    End Sub
    Partial Private Sub OnENDDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnENDDATEChanged()
    End Sub
    Partial Private Sub OnPRINT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPRINT_DATEChanged()
    End Sub
    Partial Private Sub OnGROUP_NOChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NOChanged()
    End Sub
    Partial Private Sub OnSUB_GROUP_NOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUB_GROUP_NOChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SENT_DOCUMENT_IDEN", DbType:="NVarChar(MAX)")>  _
	Public Property SENT_DOCUMENT_IDEN() As String
		Get
			Return Me._SENT_DOCUMENT_IDEN
		End Get
		Set
			If (String.Equals(Me._SENT_DOCUMENT_IDEN, value) = false) Then
				Me.OnSENT_DOCUMENT_IDENChanging(value)
				Me.SendPropertyChanging
				Me._SENT_DOCUMENT_IDEN = value
				Me.SendPropertyChanged("SENT_DOCUMENT_IDEN")
				Me.OnSENT_DOCUMENT_IDENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SENT_DOCUMENT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SENT_DOCUMENT_NAME() As String
		Get
			Return Me._SENT_DOCUMENT_NAME
		End Get
		Set
			If (String.Equals(Me._SENT_DOCUMENT_NAME, value) = false) Then
				Me.OnSENT_DOCUMENT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SENT_DOCUMENT_NAME = value
				Me.SendPropertyChanged("SENT_DOCUMENT_NAME")
				Me.OnSENT_DOCUMENT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR_PRINT", DbType:="Int")>  _
	Public Property YEAR_PRINT() As System.Nullable(Of Integer)
		Get
			Return Me._YEAR_PRINT
		End Get
		Set
			If (Me._YEAR_PRINT.Equals(value) = false) Then
				Me.OnYEAR_PRINTChanging(value)
				Me.SendPropertyChanging
				Me._YEAR_PRINT = value
				Me.SendPropertyChanged("YEAR_PRINT")
				Me.OnYEAR_PRINTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRINT_COUNT", DbType:="Int")>  _
	Public Property PRINT_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._PRINT_COUNT
		End Get
		Set
			If (Me._PRINT_COUNT.Equals(value) = false) Then
				Me.OnPRINT_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._PRINT_COUNT = value
				Me.SendPropertyChanged("PRINT_COUNT")
				Me.OnPRINT_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STARTDATE", DbType:="DateTime")>  _
	Public Property STARTDATE() As System.Nullable(Of Date)
		Get
			Return Me._STARTDATE
		End Get
		Set
			If (Me._STARTDATE.Equals(value) = false) Then
				Me.OnSTARTDATEChanging(value)
				Me.SendPropertyChanging
				Me._STARTDATE = value
				Me.SendPropertyChanged("STARTDATE")
				Me.OnSTARTDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENDDATE", DbType:="DateTime")>  _
	Public Property ENDDATE() As System.Nullable(Of Date)
		Get
			Return Me._ENDDATE
		End Get
		Set
			If (Me._ENDDATE.Equals(value) = false) Then
				Me.OnENDDATEChanging(value)
				Me.SendPropertyChanging
				Me._ENDDATE = value
				Me.SendPropertyChanged("ENDDATE")
				Me.OnENDDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRINT_DATE", DbType:="DateTime")>  _
	Public Property PRINT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._PRINT_DATE
		End Get
		Set
			If (Me._PRINT_DATE.Equals(value) = false) Then
				Me.OnPRINT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._PRINT_DATE = value
				Me.SendPropertyChanged("PRINT_DATE")
				Me.OnPRINT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NO", DbType:="NVarChar(50)")>  _
	Public Property GROUP_NO() As String
		Get
			Return Me._GROUP_NO
		End Get
		Set
			If (String.Equals(Me._GROUP_NO, value) = false) Then
				Me.OnGROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NO = value
				Me.SendPropertyChanged("GROUP_NO")
				Me.OnGROUP_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_GROUP_NO", DbType:="Int")>  _
	Public Property SUB_GROUP_NO() As System.Nullable(Of Integer)
		Get
			Return Me._SUB_GROUP_NO
		End Get
		Set
			If (Me._SUB_GROUP_NO.Equals(value) = false) Then
				Me.OnSUB_GROUP_NOChanging(value)
				Me.SendPropertyChanging
				Me._SUB_GROUP_NO = value
				Me.SendPropertyChanged("SUB_GROUP_NO")
				Me.OnSUB_GROUP_NOChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MENU_AUTO")>  _
Partial Public Class MAS_MENU_AUTO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _HEAD_ID As System.Nullable(Of Integer)
	
	Private _NAME As String
	
	Private _URL As String
	
	Private _GROUP_PAGE As System.Nullable(Of Integer)
	
	Private _NODE_SWITCH As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _IS_EXPAND As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnHEAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEAD_IDChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnURLChanging(value As String)
    End Sub
    Partial Private Sub OnURLChanged()
    End Sub
    Partial Private Sub OnGROUP_PAGEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_PAGEChanged()
    End Sub
    Partial Private Sub OnNODE_SWITCHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNODE_SWITCHChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnIS_EXPANDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_EXPANDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_ID", DbType:="Int")>  _
	Public Property HEAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_ID
		End Get
		Set
			If (Me._HEAD_ID.Equals(value) = false) Then
				Me.OnHEAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_ID = value
				Me.SendPropertyChanged("HEAD_ID")
				Me.OnHEAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_URL", DbType:="NVarChar(MAX)")>  _
	Public Property URL() As String
		Get
			Return Me._URL
		End Get
		Set
			If (String.Equals(Me._URL, value) = false) Then
				Me.OnURLChanging(value)
				Me.SendPropertyChanging
				Me._URL = value
				Me.SendPropertyChanged("URL")
				Me.OnURLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_PAGE", DbType:="Int")>  _
	Public Property GROUP_PAGE() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_PAGE
		End Get
		Set
			If (Me._GROUP_PAGE.Equals(value) = false) Then
				Me.OnGROUP_PAGEChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_PAGE = value
				Me.SendPropertyChanged("GROUP_PAGE")
				Me.OnGROUP_PAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NODE_SWITCH", DbType:="Int")>  _
	Public Property NODE_SWITCH() As System.Nullable(Of Integer)
		Get
			Return Me._NODE_SWITCH
		End Get
		Set
			If (Me._NODE_SWITCH.Equals(value) = false) Then
				Me.OnNODE_SWITCHChanging(value)
				Me.SendPropertyChanging
				Me._NODE_SWITCH = value
				Me.SendPropertyChanged("NODE_SWITCH")
				Me.OnNODE_SWITCHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_EXPAND", DbType:="Bit")>  _
	Public Property IS_EXPAND() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_EXPAND
		End Get
		Set
			If (Me._IS_EXPAND.Equals(value) = false) Then
				Me.OnIS_EXPANDChanging(value)
				Me.SendPropertyChanging
				Me._IS_EXPAND = value
				Me.SendPropertyChanged("IS_EXPAND")
				Me.OnIS_EXPANDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_PRODUCTION_DRUG_GROUP_DES_DETAIL")>  _
Partial Public Class DALCN_PRODUCTION_DRUG_GROUP_DES_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _DRUG_GROUP_DES As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnDRUG_GROUP_DESChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_GROUP_DESChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_GROUP_DES", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_GROUP_DES() As String
		Get
			Return Me._DRUG_GROUP_DES
		End Get
		Set
			If (String.Equals(Me._DRUG_GROUP_DES, value) = false) Then
				Me.OnDRUG_GROUP_DESChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_GROUP_DES = value
				Me.SendPropertyChanged("DRUG_GROUP_DES")
				Me.OnDRUG_GROUP_DESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_PRODUCTION_DRUG_GROUP_DETAIL")>  _
Partial Public Class DALCN_PRODUCTION_DRUG_GROUP_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _DRUG_GROUP As System.Nullable(Of Integer)
	
	Private _TYPE_GROUP As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnDRUG_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_GROUPChanged()
    End Sub
    Partial Private Sub OnTYPE_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_GROUPChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_GROUP", DbType:="Int")>  _
	Public Property DRUG_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_GROUP
		End Get
		Set
			If (Me._DRUG_GROUP.Equals(value) = false) Then
				Me.OnDRUG_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_GROUP = value
				Me.SendPropertyChanged("DRUG_GROUP")
				Me.OnDRUG_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_GROUP", DbType:="Int")>  _
	Public Property TYPE_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_GROUP
		End Get
		Set
			If (Me._TYPE_GROUP.Equals(value) = false) Then
				Me.OnTYPE_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_GROUP = value
				Me.SendPropertyChanged("TYPE_GROUP")
				Me.OnTYPE_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUG_GROUP")>  _
Partial Public Class MAS_DRUG_GROUP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _COL1 As String
	
	Private _COL2 As String
	
	Private _TYPE_SHOW As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCOL1Changing(value As String)
    End Sub
    Partial Private Sub OnCOL1Changed()
    End Sub
    Partial Private Sub OnCOL2Changing(value As String)
    End Sub
    Partial Private Sub OnCOL2Changed()
    End Sub
    Partial Private Sub OnTYPE_SHOWChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_SHOWChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL1", DbType:="NVarChar(50)")>  _
	Public Property COL1() As String
		Get
			Return Me._COL1
		End Get
		Set
			If (String.Equals(Me._COL1, value) = false) Then
				Me.OnCOL1Changing(value)
				Me.SendPropertyChanging
				Me._COL1 = value
				Me.SendPropertyChanged("COL1")
				Me.OnCOL1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL2", DbType:="NVarChar(MAX)")>  _
	Public Property COL2() As String
		Get
			Return Me._COL2
		End Get
		Set
			If (String.Equals(Me._COL2, value) = false) Then
				Me.OnCOL2Changing(value)
				Me.SendPropertyChanging
				Me._COL2 = value
				Me.SendPropertyChanged("COL2")
				Me.OnCOL2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_SHOW", DbType:="Int")>  _
	Public Property TYPE_SHOW() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_SHOW
		End Get
		Set
			If (Me._TYPE_SHOW.Equals(value) = false) Then
				Me.OnTYPE_SHOWChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_SHOW = value
				Me.SendPropertyChanged("TYPE_SHOW")
				Me.OnTYPE_SHOWChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACKING_BASE")>  _
Partial Public Class E_TRACKING_BASE
	
	Private _IDA As System.Nullable(Of Long)
	
	Private _dvcd As System.Nullable(Of Integer)
	
	Private _wrkgrpcd As System.Nullable(Of Integer)
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _wrkuntcd As System.Nullable(Of Integer)
	
	Private _wrkuntnm As String
	
	Private _stfthanm As String
	
	Private _ctzid As String
	
	Private _ndrgtp As String
	
	Private _drgtpabbr As String
	
	Private _appdate As System.Nullable(Of Date)
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _WORK_DAYS As System.Nullable(Of Integer)
	
	Private _group_show As System.Nullable(Of Integer)
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _thanm As String
	
	Private _rcvno_display As String
	
	Private _thadrgnm As String
	
	Private _engdrgnm As String
	
	Private _drgnm As String
	
	Private _lcnscd As System.Nullable(Of Integer)
	
	Private _date_real_cp As System.Nullable(Of Date)
	
	Private _url_ref As String
	
	Private _system_id As System.Nullable(Of Integer)
	
	Private _update_date As System.Nullable(Of Date)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", DbType:="BigInt")>  _
	Public Property IDA() As System.Nullable(Of Long)
		Get
			Return Me._IDA
		End Get
		Set
			If (Me._IDA.Equals(value) = false) Then
				Me._IDA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvcd", DbType:="Int")>  _
	Public Property dvcd() As System.Nullable(Of Integer)
		Get
			Return Me._dvcd
		End Get
		Set
			If (Me._dvcd.Equals(value) = false) Then
				Me._dvcd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_wrkgrpcd", DbType:="Int")>  _
	Public Property wrkgrpcd() As System.Nullable(Of Integer)
		Get
			Return Me._wrkgrpcd
		End Get
		Set
			If (Me._wrkgrpcd.Equals(value) = false) Then
				Me._wrkgrpcd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me._pvncd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me._drgtpcd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="VarChar(3)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me._rgttpcd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me._rcvno = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_wrkuntcd", DbType:="Int")>  _
	Public Property wrkuntcd() As System.Nullable(Of Integer)
		Get
			Return Me._wrkuntcd
		End Get
		Set
			If (Me._wrkuntcd.Equals(value) = false) Then
				Me._wrkuntcd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_wrkuntnm", DbType:="NVarChar(MAX)")>  _
	Public Property wrkuntnm() As String
		Get
			Return Me._wrkuntnm
		End Get
		Set
			If (String.Equals(Me._wrkuntnm, value) = false) Then
				Me._wrkuntnm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stfthanm", DbType:="VarChar(50)")>  _
	Public Property stfthanm() As String
		Get
			Return Me._stfthanm
		End Get
		Set
			If (String.Equals(Me._stfthanm, value) = false) Then
				Me._stfthanm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctzid", DbType:="Char(13)")>  _
	Public Property ctzid() As String
		Get
			Return Me._ctzid
		End Get
		Set
			If (String.Equals(Me._ctzid, value) = false) Then
				Me._ctzid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ndrgtp", DbType:="VarChar(2)")>  _
	Public Property ndrgtp() As String
		Get
			Return Me._ndrgtp
		End Get
		Set
			If (String.Equals(Me._ndrgtp, value) = false) Then
				Me._ndrgtp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpabbr", DbType:="VarChar(5)")>  _
	Public Property drgtpabbr() As String
		Get
			Return Me._drgtpabbr
		End Get
		Set
			If (String.Equals(Me._drgtpabbr, value) = false) Then
				Me._drgtpabbr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="Date")>  _
	Public Property appdate() As System.Nullable(Of Date)
		Get
			Return Me._appdate
		End Get
		Set
			If (Me._appdate.Equals(value) = false) Then
				Me._appdate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="Date")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me._rcvdate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORK_DAYS", DbType:="Int")>  _
	Public Property WORK_DAYS() As System.Nullable(Of Integer)
		Get
			Return Me._WORK_DAYS
		End Get
		Set
			If (Me._WORK_DAYS.Equals(value) = false) Then
				Me._WORK_DAYS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_group_show", DbType:="Int")>  _
	Public Property group_show() As System.Nullable(Of Integer)
		Get
			Return Me._group_show
		End Get
		Set
			If (Me._group_show.Equals(value) = false) Then
				Me._group_show = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me._lcnsid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm", DbType:="VarChar(255)")>  _
	Public Property thanm() As String
		Get
			Return Me._thanm
		End Get
		Set
			If (String.Equals(Me._thanm, value) = false) Then
				Me._thanm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno_display", DbType:="NVarChar(MAX)")>  _
	Public Property rcvno_display() As String
		Get
			Return Me._rcvno_display
		End Get
		Set
			If (String.Equals(Me._rcvno_display, value) = false) Then
				Me._rcvno_display = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadrgnm", DbType:="VarChar(150)")>  _
	Public Property thadrgnm() As String
		Get
			Return Me._thadrgnm
		End Get
		Set
			If (String.Equals(Me._thadrgnm, value) = false) Then
				Me._thadrgnm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgnm", DbType:="VarChar(150)")>  _
	Public Property engdrgnm() As String
		Get
			Return Me._engdrgnm
		End Get
		Set
			If (String.Equals(Me._engdrgnm, value) = false) Then
				Me._engdrgnm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgnm", DbType:="VarChar(150)")>  _
	Public Property drgnm() As String
		Get
			Return Me._drgnm
		End Get
		Set
			If (String.Equals(Me._drgnm, value) = false) Then
				Me._drgnm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="Int")>  _
	Public Property lcnscd() As System.Nullable(Of Integer)
		Get
			Return Me._lcnscd
		End Get
		Set
			If (Me._lcnscd.Equals(value) = false) Then
				Me._lcnscd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_date_real_cp", DbType:="Date")>  _
	Public Property date_real_cp() As System.Nullable(Of Date)
		Get
			Return Me._date_real_cp
		End Get
		Set
			If (Me._date_real_cp.Equals(value) = false) Then
				Me._date_real_cp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_url_ref", DbType:="NVarChar(MAX)")>  _
	Public Property url_ref() As String
		Get
			Return Me._url_ref
		End Get
		Set
			If (String.Equals(Me._url_ref, value) = false) Then
				Me._url_ref = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_system_id", DbType:="Int")>  _
	Public Property system_id() As System.Nullable(Of Integer)
		Get
			Return Me._system_id
		End Get
		Set
			If (Me._system_id.Equals(value) = false) Then
				Me._system_id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_update_date", DbType:="DateTime")>  _
	Public Property update_date() As System.Nullable(Of Date)
		Get
			Return Me._update_date
		End Get
		Set
			If (Me._update_date.Equals(value) = false) Then
				Me._update_date = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_PRODUCTION_DRUG_TYPE_DETAIL")>  _
Partial Public Class DALCN_PRODUCTION_DRUG_TYPE_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _DRUG_TYPE As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _FK_EDIT_COUNT As System.Nullable(Of Integer)
	
	Private _EDIT_TYPE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnDRUG_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_TYPEChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnFK_EDIT_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_EDIT_COUNTChanged()
    End Sub
    Partial Private Sub OnEDIT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEDIT_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_TYPE", DbType:="Int")>  _
	Public Property DRUG_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_TYPE
		End Get
		Set
			If (Me._DRUG_TYPE.Equals(value) = false) Then
				Me.OnDRUG_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_TYPE = value
				Me.SendPropertyChanged("DRUG_TYPE")
				Me.OnDRUG_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_EDIT_COUNT", DbType:="Int")>  _
	Public Property FK_EDIT_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._FK_EDIT_COUNT
		End Get
		Set
			If (Me._FK_EDIT_COUNT.Equals(value) = false) Then
				Me.OnFK_EDIT_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._FK_EDIT_COUNT = value
				Me.SendPropertyChanged("FK_EDIT_COUNT")
				Me.OnFK_EDIT_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_TYPE", DbType:="Int")>  _
	Public Property EDIT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._EDIT_TYPE
		End Get
		Set
			If (Me._EDIT_TYPE.Equals(value) = false) Then
				Me.OnEDIT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_TYPE = value
				Me.SendPropertyChanged("EDIT_TYPE")
				Me.OnEDIT_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_PRODUCTION_DRUG_TYPE_DETAIL2")>  _
Partial Public Class DALCN_PRODUCTION_DRUG_TYPE_DETAIL2
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _LCN_IDA As System.Nullable(Of Integer)
	
	Private _COL1 As String
	
	Private _COL2 As String
	
	Private _COL3 As String
	
	Private _COL4 As String
	
	Private _COL5 As String
	
	Private _COL6 As String
	
	Private _FK_EDIT_COUNT As System.Nullable(Of Integer)
	
	Private _EDIT_TYPE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnCOL1Changing(value As String)
    End Sub
    Partial Private Sub OnCOL1Changed()
    End Sub
    Partial Private Sub OnCOL2Changing(value As String)
    End Sub
    Partial Private Sub OnCOL2Changed()
    End Sub
    Partial Private Sub OnCOL3Changing(value As String)
    End Sub
    Partial Private Sub OnCOL3Changed()
    End Sub
    Partial Private Sub OnCOL4Changing(value As String)
    End Sub
    Partial Private Sub OnCOL4Changed()
    End Sub
    Partial Private Sub OnCOL5Changing(value As String)
    End Sub
    Partial Private Sub OnCOL5Changed()
    End Sub
    Partial Private Sub OnCOL6Changing(value As String)
    End Sub
    Partial Private Sub OnCOL6Changed()
    End Sub
    Partial Private Sub OnFK_EDIT_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_EDIT_COUNTChanged()
    End Sub
    Partial Private Sub OnEDIT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEDIT_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="Int")>  _
	Public Property LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (Me._LCN_IDA.Equals(value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL1", DbType:="NVarChar(MAX)")>  _
	Public Property COL1() As String
		Get
			Return Me._COL1
		End Get
		Set
			If (String.Equals(Me._COL1, value) = false) Then
				Me.OnCOL1Changing(value)
				Me.SendPropertyChanging
				Me._COL1 = value
				Me.SendPropertyChanged("COL1")
				Me.OnCOL1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL2", DbType:="NVarChar(MAX)")>  _
	Public Property COL2() As String
		Get
			Return Me._COL2
		End Get
		Set
			If (String.Equals(Me._COL2, value) = false) Then
				Me.OnCOL2Changing(value)
				Me.SendPropertyChanging
				Me._COL2 = value
				Me.SendPropertyChanged("COL2")
				Me.OnCOL2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL3", DbType:="NVarChar(MAX)")>  _
	Public Property COL3() As String
		Get
			Return Me._COL3
		End Get
		Set
			If (String.Equals(Me._COL3, value) = false) Then
				Me.OnCOL3Changing(value)
				Me.SendPropertyChanging
				Me._COL3 = value
				Me.SendPropertyChanged("COL3")
				Me.OnCOL3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL4", DbType:="NVarChar(MAX)")>  _
	Public Property COL4() As String
		Get
			Return Me._COL4
		End Get
		Set
			If (String.Equals(Me._COL4, value) = false) Then
				Me.OnCOL4Changing(value)
				Me.SendPropertyChanging
				Me._COL4 = value
				Me.SendPropertyChanged("COL4")
				Me.OnCOL4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL5", DbType:="NVarChar(MAX)")>  _
	Public Property COL5() As String
		Get
			Return Me._COL5
		End Get
		Set
			If (String.Equals(Me._COL5, value) = false) Then
				Me.OnCOL5Changing(value)
				Me.SendPropertyChanging
				Me._COL5 = value
				Me.SendPropertyChanged("COL5")
				Me.OnCOL5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL6", DbType:="NVarChar(MAX)")>  _
	Public Property COL6() As String
		Get
			Return Me._COL6
		End Get
		Set
			If (String.Equals(Me._COL6, value) = false) Then
				Me.OnCOL6Changing(value)
				Me.SendPropertyChanging
				Me._COL6 = value
				Me.SendPropertyChanged("COL6")
				Me.OnCOL6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_EDIT_COUNT", DbType:="Int")>  _
	Public Property FK_EDIT_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._FK_EDIT_COUNT
		End Get
		Set
			If (Me._FK_EDIT_COUNT.Equals(value) = false) Then
				Me.OnFK_EDIT_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._FK_EDIT_COUNT = value
				Me.SendPropertyChanged("FK_EDIT_COUNT")
				Me.OnFK_EDIT_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_TYPE", DbType:="Int")>  _
	Public Property EDIT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._EDIT_TYPE
		End Get
		Set
			If (Me._EDIT_TYPE.Equals(value) = false) Then
				Me.OnEDIT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_TYPE = value
				Me.SendPropertyChanged("EDIT_TYPE")
				Me.OnEDIT_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LCN_EXTEND")>  _
Partial Public Class LCN_EXTEND
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _addr_thanm As String
	
	Private _BSN_THAIFULLNAME As String
	
	Private _IDENTIFY As String
	
	Private _RCVNO_DISPLAY As String
	
	Private _RCVDATE_DISPLAY As String
	
	Private _WRITE_AT As String
	
	Private _WRITE_DATE As String
	
	Private _SALE_MEDICIAN1 As String
	
	Private _SALE_MEDICIAN2 As String
	
	Private _SALE_MEDICIAN3 As String
	
	Private _SALE_MEDICIAN4 As String
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _thaaddr As String
	
	Private _engaddr As String
	
	Private _tharoom As String
	
	Private _thamu As String
	
	Private _thafloor As String
	
	Private _thasoi As String
	
	Private _thabuilding As String
	
	Private _engsoi As String
	
	Private _tharoad As String
	
	Private _engroad As String
	
	Private _zipcode As String
	
	Private _tel As String
	
	Private _fax As String
	
	Private _LOCATION_ADDRESS_IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _DOWN_ID As System.Nullable(Of Integer)
	
	Private _CITIZEN_ID As String
	
	Private _CITIZEN_ID_UPLOAD As String
	
	Private _XMLNAME As String
	
	Private _engmu As String
	
	Private _engfloor As String
	
	Private _engbuilding As String
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _lctcd As System.Nullable(Of Integer)
	
	Private _thanameplace As String
	
	Private _engnameplace As String
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _HOUSENO As String
	
	Private _Branch As String
	
	Private _LOCATION_TYPE_NORMAL As System.Nullable(Of Integer)
	
	Private _LOCATION_TYPE_KEEP As System.Nullable(Of Integer)
	
	Private _LOCATION_TYPE_OTHER As System.Nullable(Of Integer)
	
	Private _LOCATION_TYPE_ID As System.Nullable(Of Integer)
	
	Private _SYSTEM_NAME As String
	
	Private _thmblcd As System.Nullable(Of Short)
	
	Private _amphrcd As System.Nullable(Of Short)
	
	Private _chngwtcd As System.Nullable(Of Short)
	
	Private _thathmblnm As String
	
	Private _thaamphrnm As String
	
	Private _thachngwtnm As String
	
	Private _engthmblnm As String
	
	Private _engamphrnm As String
	
	Private _engchngwtnm As String
	
	Private _LOCATION_ADDRESS_IDENTIFY As String
	
	Private _REMARK As String
	
	Private _RQT_TYPE As System.Nullable(Of Integer)
	
	Private _CANCEL_REMARK As String
	
	Private _CANCEL_DATE As System.Nullable(Of Date)
	
	Private _RCV_MEETING As String
	
	Private _YEAR_EXTEXD As System.Nullable(Of Integer)
	
	Private _CONSIDER_DATE As System.Nullable(Of Date)
	
	Private _app_date As System.Nullable(Of Date)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _RCVNO_MANUAL As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub Onaddr_thanmChanging(value As String)
    End Sub
    Partial Private Sub Onaddr_thanmChanged()
    End Sub
    Partial Private Sub OnBSN_THAIFULLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THAIFULLNAMEChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanged()
    End Sub
    Partial Private Sub OnWRITE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_ATChanged()
    End Sub
    Partial Private Sub OnWRITE_DATEChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_DATEChanged()
    End Sub
    Partial Private Sub OnSALE_MEDICIAN1Changing(value As String)
    End Sub
    Partial Private Sub OnSALE_MEDICIAN1Changed()
    End Sub
    Partial Private Sub OnSALE_MEDICIAN2Changing(value As String)
    End Sub
    Partial Private Sub OnSALE_MEDICIAN2Changed()
    End Sub
    Partial Private Sub OnSALE_MEDICIAN3Changing(value As String)
    End Sub
    Partial Private Sub OnSALE_MEDICIAN3Changed()
    End Sub
    Partial Private Sub OnSALE_MEDICIAN4Changing(value As String)
    End Sub
    Partial Private Sub OnSALE_MEDICIAN4Changed()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnthaaddrChanging(value As String)
    End Sub
    Partial Private Sub OnthaaddrChanged()
    End Sub
    Partial Private Sub OnengaddrChanging(value As String)
    End Sub
    Partial Private Sub OnengaddrChanged()
    End Sub
    Partial Private Sub OntharoomChanging(value As String)
    End Sub
    Partial Private Sub OntharoomChanged()
    End Sub
    Partial Private Sub OnthamuChanging(value As String)
    End Sub
    Partial Private Sub OnthamuChanged()
    End Sub
    Partial Private Sub OnthafloorChanging(value As String)
    End Sub
    Partial Private Sub OnthafloorChanged()
    End Sub
    Partial Private Sub OnthasoiChanging(value As String)
    End Sub
    Partial Private Sub OnthasoiChanged()
    End Sub
    Partial Private Sub OnthabuildingChanging(value As String)
    End Sub
    Partial Private Sub OnthabuildingChanged()
    End Sub
    Partial Private Sub OnengsoiChanging(value As String)
    End Sub
    Partial Private Sub OnengsoiChanged()
    End Sub
    Partial Private Sub OntharoadChanging(value As String)
    End Sub
    Partial Private Sub OntharoadChanged()
    End Sub
    Partial Private Sub OnengroadChanging(value As String)
    End Sub
    Partial Private Sub OnengroadChanged()
    End Sub
    Partial Private Sub OnzipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnzipcodeChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_IDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_IDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnDOWN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOWN_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnXMLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnXMLNAMEChanged()
    End Sub
    Partial Private Sub OnengmuChanging(value As String)
    End Sub
    Partial Private Sub OnengmuChanged()
    End Sub
    Partial Private Sub OnengfloorChanging(value As String)
    End Sub
    Partial Private Sub OnengfloorChanged()
    End Sub
    Partial Private Sub OnengbuildingChanging(value As String)
    End Sub
    Partial Private Sub OnengbuildingChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnthanameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnthanameplaceChanged()
    End Sub
    Partial Private Sub OnengnameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnengnameplaceChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnHOUSENOChanging(value As String)
    End Sub
    Partial Private Sub OnHOUSENOChanged()
    End Sub
    Partial Private Sub OnBranchChanging(value As String)
    End Sub
    Partial Private Sub OnBranchChanged()
    End Sub
    Partial Private Sub OnLOCATION_TYPE_NORMALChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_TYPE_NORMALChanged()
    End Sub
    Partial Private Sub OnLOCATION_TYPE_KEEPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_TYPE_KEEPChanged()
    End Sub
    Partial Private Sub OnLOCATION_TYPE_OTHERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_TYPE_OTHERChanged()
    End Sub
    Partial Private Sub OnLOCATION_TYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnSYSTEM_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSYSTEM_NAMEChanged()
    End Sub
    Partial Private Sub OnthmblcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnthmblcdChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnthathmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnthathmblnmChanged()
    End Sub
    Partial Private Sub OnthaamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnthaamphrnmChanged()
    End Sub
    Partial Private Sub OnthachngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnthachngwtnmChanged()
    End Sub
    Partial Private Sub OnengthmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnengthmblnmChanged()
    End Sub
    Partial Private Sub OnengamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnengamphrnmChanged()
    End Sub
    Partial Private Sub OnengchngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnengchngwtnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnRQT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRQT_TYPEChanged()
    End Sub
    Partial Private Sub OnCANCEL_REMARKChanging(value As String)
    End Sub
    Partial Private Sub OnCANCEL_REMARKChanged()
    End Sub
    Partial Private Sub OnCANCEL_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCANCEL_DATEChanged()
    End Sub
    Partial Private Sub OnRCV_MEETINGChanging(value As String)
    End Sub
    Partial Private Sub OnRCV_MEETINGChanged()
    End Sub
    Partial Private Sub OnYEAR_EXTEXDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYEAR_EXTEXDChanged()
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanged()
    End Sub
    Partial Private Sub Onapp_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onapp_dateChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnRCVNO_MANUALChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_MANUALChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_addr_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property addr_thanm() As String
		Get
			Return Me._addr_thanm
		End Get
		Set
			If (String.Equals(Me._addr_thanm, value) = false) Then
				Me.Onaddr_thanmChanging(value)
				Me.SendPropertyChanging
				Me._addr_thanm = value
				Me.SendPropertyChanged("addr_thanm")
				Me.Onaddr_thanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THAIFULLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THAIFULLNAME() As String
		Get
			Return Me._BSN_THAIFULLNAME
		End Get
		Set
			If (String.Equals(Me._BSN_THAIFULLNAME, value) = false) Then
				Me.OnBSN_THAIFULLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THAIFULLNAME = value
				Me.SendPropertyChanged("BSN_THAIFULLNAME")
				Me.OnBSN_THAIFULLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_DISPLAY() As String
		Get
			Return Me._RCVNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVNO_DISPLAY, value) = false) Then
				Me.OnRCVNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_DISPLAY = value
				Me.SendPropertyChanged("RCVNO_DISPLAY")
				Me.OnRCVNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVDATE_DISPLAY() As String
		Get
			Return Me._RCVDATE_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVDATE_DISPLAY, value) = false) Then
				Me.OnRCVDATE_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE_DISPLAY = value
				Me.SendPropertyChanged("RCVDATE_DISPLAY")
				Me.OnRCVDATE_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_AT() As String
		Get
			Return Me._WRITE_AT
		End Get
		Set
			If (String.Equals(Me._WRITE_AT, value) = false) Then
				Me.OnWRITE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_AT = value
				Me.SendPropertyChanged("WRITE_AT")
				Me.OnWRITE_ATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_DATE", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_DATE() As String
		Get
			Return Me._WRITE_DATE
		End Get
		Set
			If (String.Equals(Me._WRITE_DATE, value) = false) Then
				Me.OnWRITE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_DATE = value
				Me.SendPropertyChanged("WRITE_DATE")
				Me.OnWRITE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_MEDICIAN1", DbType:="NVarChar(MAX)")>  _
	Public Property SALE_MEDICIAN1() As String
		Get
			Return Me._SALE_MEDICIAN1
		End Get
		Set
			If (String.Equals(Me._SALE_MEDICIAN1, value) = false) Then
				Me.OnSALE_MEDICIAN1Changing(value)
				Me.SendPropertyChanging
				Me._SALE_MEDICIAN1 = value
				Me.SendPropertyChanged("SALE_MEDICIAN1")
				Me.OnSALE_MEDICIAN1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_MEDICIAN2", DbType:="NVarChar(MAX)")>  _
	Public Property SALE_MEDICIAN2() As String
		Get
			Return Me._SALE_MEDICIAN2
		End Get
		Set
			If (String.Equals(Me._SALE_MEDICIAN2, value) = false) Then
				Me.OnSALE_MEDICIAN2Changing(value)
				Me.SendPropertyChanging
				Me._SALE_MEDICIAN2 = value
				Me.SendPropertyChanged("SALE_MEDICIAN2")
				Me.OnSALE_MEDICIAN2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_MEDICIAN3", DbType:="NVarChar(MAX)")>  _
	Public Property SALE_MEDICIAN3() As String
		Get
			Return Me._SALE_MEDICIAN3
		End Get
		Set
			If (String.Equals(Me._SALE_MEDICIAN3, value) = false) Then
				Me.OnSALE_MEDICIAN3Changing(value)
				Me.SendPropertyChanging
				Me._SALE_MEDICIAN3 = value
				Me.SendPropertyChanged("SALE_MEDICIAN3")
				Me.OnSALE_MEDICIAN3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_MEDICIAN4", DbType:="NVarChar(MAX)")>  _
	Public Property SALE_MEDICIAN4() As String
		Get
			Return Me._SALE_MEDICIAN4
		End Get
		Set
			If (String.Equals(Me._SALE_MEDICIAN4, value) = false) Then
				Me.OnSALE_MEDICIAN4Changing(value)
				Me.SendPropertyChanging
				Me._SALE_MEDICIAN4 = value
				Me.SendPropertyChanged("SALE_MEDICIAN4")
				Me.OnSALE_MEDICIAN4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaaddr", DbType:="NVarChar(MAX)")>  _
	Public Property thaaddr() As String
		Get
			Return Me._thaaddr
		End Get
		Set
			If (String.Equals(Me._thaaddr, value) = false) Then
				Me.OnthaaddrChanging(value)
				Me.SendPropertyChanging
				Me._thaaddr = value
				Me.SendPropertyChanged("thaaddr")
				Me.OnthaaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engaddr", DbType:="NVarChar(MAX)")>  _
	Public Property engaddr() As String
		Get
			Return Me._engaddr
		End Get
		Set
			If (String.Equals(Me._engaddr, value) = false) Then
				Me.OnengaddrChanging(value)
				Me.SendPropertyChanging
				Me._engaddr = value
				Me.SendPropertyChanged("engaddr")
				Me.OnengaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoom", DbType:="NVarChar(MAX)")>  _
	Public Property tharoom() As String
		Get
			Return Me._tharoom
		End Get
		Set
			If (String.Equals(Me._tharoom, value) = false) Then
				Me.OntharoomChanging(value)
				Me.SendPropertyChanging
				Me._tharoom = value
				Me.SendPropertyChanged("tharoom")
				Me.OntharoomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thamu", DbType:="NVarChar(MAX)")>  _
	Public Property thamu() As String
		Get
			Return Me._thamu
		End Get
		Set
			If (String.Equals(Me._thamu, value) = false) Then
				Me.OnthamuChanging(value)
				Me.SendPropertyChanging
				Me._thamu = value
				Me.SendPropertyChanged("thamu")
				Me.OnthamuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thafloor", DbType:="NVarChar(MAX)")>  _
	Public Property thafloor() As String
		Get
			Return Me._thafloor
		End Get
		Set
			If (String.Equals(Me._thafloor, value) = false) Then
				Me.OnthafloorChanging(value)
				Me.SendPropertyChanging
				Me._thafloor = value
				Me.SendPropertyChanged("thafloor")
				Me.OnthafloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thasoi", DbType:="NVarChar(MAX)")>  _
	Public Property thasoi() As String
		Get
			Return Me._thasoi
		End Get
		Set
			If (String.Equals(Me._thasoi, value) = false) Then
				Me.OnthasoiChanging(value)
				Me.SendPropertyChanging
				Me._thasoi = value
				Me.SendPropertyChanged("thasoi")
				Me.OnthasoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thabuilding", DbType:="NVarChar(MAX)")>  _
	Public Property thabuilding() As String
		Get
			Return Me._thabuilding
		End Get
		Set
			If (String.Equals(Me._thabuilding, value) = false) Then
				Me.OnthabuildingChanging(value)
				Me.SendPropertyChanging
				Me._thabuilding = value
				Me.SendPropertyChanged("thabuilding")
				Me.OnthabuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engsoi", DbType:="NVarChar(MAX)")>  _
	Public Property engsoi() As String
		Get
			Return Me._engsoi
		End Get
		Set
			If (String.Equals(Me._engsoi, value) = false) Then
				Me.OnengsoiChanging(value)
				Me.SendPropertyChanging
				Me._engsoi = value
				Me.SendPropertyChanged("engsoi")
				Me.OnengsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoad", DbType:="NVarChar(MAX)")>  _
	Public Property tharoad() As String
		Get
			Return Me._tharoad
		End Get
		Set
			If (String.Equals(Me._tharoad, value) = false) Then
				Me.OntharoadChanging(value)
				Me.SendPropertyChanging
				Me._tharoad = value
				Me.SendPropertyChanged("tharoad")
				Me.OntharoadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engroad", DbType:="NVarChar(MAX)")>  _
	Public Property engroad() As String
		Get
			Return Me._engroad
		End Get
		Set
			If (String.Equals(Me._engroad, value) = false) Then
				Me.OnengroadChanging(value)
				Me.SendPropertyChanging
				Me._engroad = value
				Me.SendPropertyChanged("engroad")
				Me.OnengroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_zipcode", DbType:="NVarChar(MAX)")>  _
	Public Property zipcode() As String
		Get
			Return Me._zipcode
		End Get
		Set
			If (String.Equals(Me._zipcode, value) = false) Then
				Me.OnzipcodeChanging(value)
				Me.SendPropertyChanging
				Me._zipcode = value
				Me.SendPropertyChanged("zipcode")
				Me.OnzipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="NVarChar(MAX)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="NVarChar(MAX)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_IDA", DbType:="Int NOT NULL")>  _
	Public Property LOCATION_ADDRESS_IDA() As Integer
		Get
			Return Me._LOCATION_ADDRESS_IDA
		End Get
		Set
			If ((Me._LOCATION_ADDRESS_IDA = value)  _
						= false) Then
				Me.OnLOCATION_ADDRESS_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_IDA = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_IDA")
				Me.OnLOCATION_ADDRESS_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOWN_ID", DbType:="Int")>  _
	Public Property DOWN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DOWN_ID
		End Get
		Set
			If (Me._DOWN_ID.Equals(value) = false) Then
				Me.OnDOWN_IDChanging(value)
				Me.SendPropertyChanging
				Me._DOWN_ID = value
				Me.SendPropertyChanged("DOWN_ID")
				Me.OnDOWN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_UPLOAD() As String
		Get
			Return Me._CITIZEN_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_UPLOAD, value) = false) Then
				Me.OnCITIZEN_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_ID_UPLOAD")
				Me.OnCITIZEN_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XMLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property XMLNAME() As String
		Get
			Return Me._XMLNAME
		End Get
		Set
			If (String.Equals(Me._XMLNAME, value) = false) Then
				Me.OnXMLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._XMLNAME = value
				Me.SendPropertyChanged("XMLNAME")
				Me.OnXMLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engmu", DbType:="NVarChar(MAX)")>  _
	Public Property engmu() As String
		Get
			Return Me._engmu
		End Get
		Set
			If (String.Equals(Me._engmu, value) = false) Then
				Me.OnengmuChanging(value)
				Me.SendPropertyChanging
				Me._engmu = value
				Me.SendPropertyChanged("engmu")
				Me.OnengmuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engfloor", DbType:="NVarChar(MAX)")>  _
	Public Property engfloor() As String
		Get
			Return Me._engfloor
		End Get
		Set
			If (String.Equals(Me._engfloor, value) = false) Then
				Me.OnengfloorChanging(value)
				Me.SendPropertyChanging
				Me._engfloor = value
				Me.SendPropertyChanged("engfloor")
				Me.OnengfloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engbuilding", DbType:="NVarChar(MAX)")>  _
	Public Property engbuilding() As String
		Get
			Return Me._engbuilding
		End Get
		Set
			If (String.Equals(Me._engbuilding, value) = false) Then
				Me.OnengbuildingChanging(value)
				Me.SendPropertyChanging
				Me._engbuilding = value
				Me.SendPropertyChanged("engbuilding")
				Me.OnengbuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="DateTime")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int")>  _
	Public Property lctcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctcd
		End Get
		Set
			If (Me._lctcd.Equals(value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanameplace", DbType:="NVarChar(MAX)")>  _
	Public Property thanameplace() As String
		Get
			Return Me._thanameplace
		End Get
		Set
			If (String.Equals(Me._thanameplace, value) = false) Then
				Me.OnthanameplaceChanging(value)
				Me.SendPropertyChanging
				Me._thanameplace = value
				Me.SendPropertyChanged("thanameplace")
				Me.OnthanameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engnameplace", DbType:="NVarChar(MAX)")>  _
	Public Property engnameplace() As String
		Get
			Return Me._engnameplace
		End Get
		Set
			If (String.Equals(Me._engnameplace, value) = false) Then
				Me.OnengnameplaceChanging(value)
				Me.SendPropertyChanging
				Me._engnameplace = value
				Me.SendPropertyChanged("engnameplace")
				Me.OnengnameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOUSENO", DbType:="NVarChar(MAX)")>  _
	Public Property HOUSENO() As String
		Get
			Return Me._HOUSENO
		End Get
		Set
			If (String.Equals(Me._HOUSENO, value) = false) Then
				Me.OnHOUSENOChanging(value)
				Me.SendPropertyChanging
				Me._HOUSENO = value
				Me.SendPropertyChanged("HOUSENO")
				Me.OnHOUSENOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Branch", DbType:="NVarChar(MAX)")>  _
	Public Property Branch() As String
		Get
			Return Me._Branch
		End Get
		Set
			If (String.Equals(Me._Branch, value) = false) Then
				Me.OnBranchChanging(value)
				Me.SendPropertyChanging
				Me._Branch = value
				Me.SendPropertyChanged("Branch")
				Me.OnBranchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_TYPE_NORMAL", DbType:="Int")>  _
	Public Property LOCATION_TYPE_NORMAL() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_TYPE_NORMAL
		End Get
		Set
			If (Me._LOCATION_TYPE_NORMAL.Equals(value) = false) Then
				Me.OnLOCATION_TYPE_NORMALChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_TYPE_NORMAL = value
				Me.SendPropertyChanged("LOCATION_TYPE_NORMAL")
				Me.OnLOCATION_TYPE_NORMALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_TYPE_KEEP", DbType:="Int")>  _
	Public Property LOCATION_TYPE_KEEP() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_TYPE_KEEP
		End Get
		Set
			If (Me._LOCATION_TYPE_KEEP.Equals(value) = false) Then
				Me.OnLOCATION_TYPE_KEEPChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_TYPE_KEEP = value
				Me.SendPropertyChanged("LOCATION_TYPE_KEEP")
				Me.OnLOCATION_TYPE_KEEPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_TYPE_OTHER", DbType:="Int")>  _
	Public Property LOCATION_TYPE_OTHER() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_TYPE_OTHER
		End Get
		Set
			If (Me._LOCATION_TYPE_OTHER.Equals(value) = false) Then
				Me.OnLOCATION_TYPE_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_TYPE_OTHER = value
				Me.SendPropertyChanged("LOCATION_TYPE_OTHER")
				Me.OnLOCATION_TYPE_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_TYPE_ID", DbType:="Int")>  _
	Public Property LOCATION_TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_TYPE_ID
		End Get
		Set
			If (Me._LOCATION_TYPE_ID.Equals(value) = false) Then
				Me.OnLOCATION_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_TYPE_ID = value
				Me.SendPropertyChanged("LOCATION_TYPE_ID")
				Me.OnLOCATION_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYSTEM_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SYSTEM_NAME() As String
		Get
			Return Me._SYSTEM_NAME
		End Get
		Set
			If (String.Equals(Me._SYSTEM_NAME, value) = false) Then
				Me.OnSYSTEM_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SYSTEM_NAME = value
				Me.SendPropertyChanged("SYSTEM_NAME")
				Me.OnSYSTEM_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd", DbType:="SmallInt")>  _
	Public Property thmblcd() As System.Nullable(Of Short)
		Get
			Return Me._thmblcd
		End Get
		Set
			If (Me._thmblcd.Equals(value) = false) Then
				Me.OnthmblcdChanging(value)
				Me.SendPropertyChanging
				Me._thmblcd = value
				Me.SendPropertyChanged("thmblcd")
				Me.OnthmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="SmallInt")>  _
	Public Property amphrcd() As System.Nullable(Of Short)
		Get
			Return Me._amphrcd
		End Get
		Set
			If (Me._amphrcd.Equals(value) = false) Then
				Me.OnamphrcdChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd = value
				Me.SendPropertyChanged("amphrcd")
				Me.OnamphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="SmallInt")>  _
	Public Property chngwtcd() As System.Nullable(Of Short)
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (Me._chngwtcd.Equals(value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thathmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property thathmblnm() As String
		Get
			Return Me._thathmblnm
		End Get
		Set
			If (String.Equals(Me._thathmblnm, value) = false) Then
				Me.OnthathmblnmChanging(value)
				Me.SendPropertyChanging
				Me._thathmblnm = value
				Me.SendPropertyChanged("thathmblnm")
				Me.OnthathmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property thaamphrnm() As String
		Get
			Return Me._thaamphrnm
		End Get
		Set
			If (String.Equals(Me._thaamphrnm, value) = false) Then
				Me.OnthaamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._thaamphrnm = value
				Me.SendPropertyChanged("thaamphrnm")
				Me.OnthaamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thachngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property thachngwtnm() As String
		Get
			Return Me._thachngwtnm
		End Get
		Set
			If (String.Equals(Me._thachngwtnm, value) = false) Then
				Me.OnthachngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._thachngwtnm = value
				Me.SendPropertyChanged("thachngwtnm")
				Me.OnthachngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engthmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property engthmblnm() As String
		Get
			Return Me._engthmblnm
		End Get
		Set
			If (String.Equals(Me._engthmblnm, value) = false) Then
				Me.OnengthmblnmChanging(value)
				Me.SendPropertyChanging
				Me._engthmblnm = value
				Me.SendPropertyChanged("engthmblnm")
				Me.OnengthmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property engamphrnm() As String
		Get
			Return Me._engamphrnm
		End Get
		Set
			If (String.Equals(Me._engamphrnm, value) = false) Then
				Me.OnengamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._engamphrnm = value
				Me.SendPropertyChanged("engamphrnm")
				Me.OnengamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engchngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property engchngwtnm() As String
		Get
			Return Me._engchngwtnm
		End Get
		Set
			If (String.Equals(Me._engchngwtnm, value) = false) Then
				Me.OnengchngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._engchngwtnm = value
				Me.SendPropertyChanged("engchngwtnm")
				Me.OnengchngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_IDENTIFY() As String
		Get
			Return Me._LOCATION_ADDRESS_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_IDENTIFY, value) = false) Then
				Me.OnLOCATION_ADDRESS_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_IDENTIFY = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_IDENTIFY")
				Me.OnLOCATION_ADDRESS_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RQT_TYPE", DbType:="Int")>  _
	Public Property RQT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._RQT_TYPE
		End Get
		Set
			If (Me._RQT_TYPE.Equals(value) = false) Then
				Me.OnRQT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._RQT_TYPE = value
				Me.SendPropertyChanged("RQT_TYPE")
				Me.OnRQT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CANCEL_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property CANCEL_REMARK() As String
		Get
			Return Me._CANCEL_REMARK
		End Get
		Set
			If (String.Equals(Me._CANCEL_REMARK, value) = false) Then
				Me.OnCANCEL_REMARKChanging(value)
				Me.SendPropertyChanging
				Me._CANCEL_REMARK = value
				Me.SendPropertyChanged("CANCEL_REMARK")
				Me.OnCANCEL_REMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CANCEL_DATE", DbType:="DateTime")>  _
	Public Property CANCEL_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CANCEL_DATE
		End Get
		Set
			If (Me._CANCEL_DATE.Equals(value) = false) Then
				Me.OnCANCEL_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CANCEL_DATE = value
				Me.SendPropertyChanged("CANCEL_DATE")
				Me.OnCANCEL_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCV_MEETING", DbType:="NVarChar(MAX)")>  _
	Public Property RCV_MEETING() As String
		Get
			Return Me._RCV_MEETING
		End Get
		Set
			If (String.Equals(Me._RCV_MEETING, value) = false) Then
				Me.OnRCV_MEETINGChanging(value)
				Me.SendPropertyChanging
				Me._RCV_MEETING = value
				Me.SendPropertyChanged("RCV_MEETING")
				Me.OnRCV_MEETINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR_EXTEXD", DbType:="Int")>  _
	Public Property YEAR_EXTEXD() As System.Nullable(Of Integer)
		Get
			Return Me._YEAR_EXTEXD
		End Get
		Set
			If (Me._YEAR_EXTEXD.Equals(value) = false) Then
				Me.OnYEAR_EXTEXDChanging(value)
				Me.SendPropertyChanging
				Me._YEAR_EXTEXD = value
				Me.SendPropertyChanged("YEAR_EXTEXD")
				Me.OnYEAR_EXTEXDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSIDER_DATE", DbType:="DateTime")>  _
	Public Property CONSIDER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONSIDER_DATE
		End Get
		Set
			If (Me._CONSIDER_DATE.Equals(value) = false) Then
				Me.OnCONSIDER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONSIDER_DATE = value
				Me.SendPropertyChanged("CONSIDER_DATE")
				Me.OnCONSIDER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_app_date", DbType:="DateTime")>  _
	Public Property app_date() As System.Nullable(Of Date)
		Get
			Return Me._app_date
		End Get
		Set
			If (Me._app_date.Equals(value) = false) Then
				Me.Onapp_dateChanging(value)
				Me.SendPropertyChanging
				Me._app_date = value
				Me.SendPropertyChanged("app_date")
				Me.Onapp_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_MANUAL", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_MANUAL() As String
		Get
			Return Me._RCVNO_MANUAL
		End Get
		Set
			If (String.Equals(Me._RCVNO_MANUAL, value) = false) Then
				Me.OnRCVNO_MANUALChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_MANUAL = value
				Me.SendPropertyChanged("RCVNO_MANUAL")
				Me.OnRCVNO_MANUALChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_E_TRACKING_STATUS")>  _
Partial Public Class MAS_E_TRACKING_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STAFF_STATUS As String
	
	Private _CLIENT_STATUS As String
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _LCN_TYPE As System.Nullable(Of Integer)
	
	Private _GROUP_STATUS As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTAFF_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_STATUSChanged()
    End Sub
    Partial Private Sub OnCLIENT_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnCLIENT_STATUSChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnLCN_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_TYPEChanged()
    End Sub
    Partial Private Sub OnGROUP_STATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_STATUSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_STATUS", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_STATUS() As String
		Get
			Return Me._STAFF_STATUS
		End Get
		Set
			If (String.Equals(Me._STAFF_STATUS, value) = false) Then
				Me.OnSTAFF_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_STATUS = value
				Me.SendPropertyChanged("STAFF_STATUS")
				Me.OnSTAFF_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLIENT_STATUS", DbType:="NVarChar(MAX)")>  _
	Public Property CLIENT_STATUS() As String
		Get
			Return Me._CLIENT_STATUS
		End Get
		Set
			If (String.Equals(Me._CLIENT_STATUS, value) = false) Then
				Me.OnCLIENT_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._CLIENT_STATUS = value
				Me.SendPropertyChanged("CLIENT_STATUS")
				Me.OnCLIENT_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_TYPE", DbType:="Int")>  _
	Public Property LCN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_TYPE
		End Get
		Set
			If (Me._LCN_TYPE.Equals(value) = false) Then
				Me.OnLCN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._LCN_TYPE = value
				Me.SendPropertyChanged("LCN_TYPE")
				Me.OnLCN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_STATUS", DbType:="Int")>  _
	Public Property GROUP_STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_STATUS
		End Get
		Set
			If (Me._GROUP_STATUS.Equals(value) = false) Then
				Me.OnGROUP_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_STATUS = value
				Me.SendPropertyChanged("GROUP_STATUS")
				Me.OnGROUP_STATUSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_EXPERT_SKILL")>  _
Partial Public Class MAS_EXPERT_SKILL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _EXPERT_SKILL As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnEXPERT_SKILLChanging(value As String)
    End Sub
    Partial Private Sub OnEXPERT_SKILLChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPERT_SKILL", DbType:="NVarChar(MAX)")>  _
	Public Property EXPERT_SKILL() As String
		Get
			Return Me._EXPERT_SKILL
		End Get
		Set
			If (String.Equals(Me._EXPERT_SKILL, value) = false) Then
				Me.OnEXPERT_SKILLChanging(value)
				Me.SendPropertyChanging
				Me._EXPERT_SKILL = value
				Me.SendPropertyChanged("EXPERT_SKILL")
				Me.OnEXPERT_SKILLChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DH15_DETAIL_CER")>  _
Partial Public Class DH15_DETAIL_CER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CER_IDA As System.Nullable(Of Integer)
	
	Private _CER_DETAIL_CHEMICAL_IDA As System.Nullable(Of Integer)
	
	Private _CUS_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _IDENTIFY As String
	
	Private _FOREIGN_LOCATION_NAME As String
	
	Private _ADDRESS_DETAIL As String
	
	Private _CITY_NAME As String
	
	Private _COUNTRY_IDA As System.Nullable(Of Integer)
	
	Private _COUNTRY_NAME As String
	
	Private _DOCUMENT_DATE As System.Nullable(Of Date)
	
	Private _EXP_DOCUMENT_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCER_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCER_IDAChanged()
    End Sub
    Partial Private Sub OnCER_DETAIL_CHEMICAL_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCER_DETAIL_CHEMICAL_IDAChanged()
    End Sub
    Partial Private Sub OnCUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCUS_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnFOREIGN_LOCATION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFOREIGN_LOCATION_NAMEChanged()
    End Sub
    Partial Private Sub OnADDRESS_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_DETAILChanged()
    End Sub
    Partial Private Sub OnCITY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCITY_NAMEChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_IDAChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRY_NAMEChanged()
    End Sub
    Partial Private Sub OnDOCUMENT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDOCUMENT_DATEChanged()
    End Sub
    Partial Private Sub OnEXP_DOCUMENT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEXP_DOCUMENT_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_IDA", DbType:="Int")>  _
	Public Property CER_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._CER_IDA
		End Get
		Set
			If (Me._CER_IDA.Equals(value) = false) Then
				Me.OnCER_IDAChanging(value)
				Me.SendPropertyChanging
				Me._CER_IDA = value
				Me.SendPropertyChanged("CER_IDA")
				Me.OnCER_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_DETAIL_CHEMICAL_IDA", DbType:="Int")>  _
	Public Property CER_DETAIL_CHEMICAL_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._CER_DETAIL_CHEMICAL_IDA
		End Get
		Set
			If (Me._CER_DETAIL_CHEMICAL_IDA.Equals(value) = false) Then
				Me.OnCER_DETAIL_CHEMICAL_IDAChanging(value)
				Me.SendPropertyChanging
				Me._CER_DETAIL_CHEMICAL_IDA = value
				Me.SendPropertyChanged("CER_DETAIL_CHEMICAL_IDA")
				Me.OnCER_DETAIL_CHEMICAL_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUS_ID", DbType:="Int")>  _
	Public Property CUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CUS_ID
		End Get
		Set
			If (Me._CUS_ID.Equals(value) = false) Then
				Me.OnCUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._CUS_ID = value
				Me.SendPropertyChanged("CUS_ID")
				Me.OnCUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOREIGN_LOCATION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FOREIGN_LOCATION_NAME() As String
		Get
			Return Me._FOREIGN_LOCATION_NAME
		End Get
		Set
			If (String.Equals(Me._FOREIGN_LOCATION_NAME, value) = false) Then
				Me.OnFOREIGN_LOCATION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FOREIGN_LOCATION_NAME = value
				Me.SendPropertyChanged("FOREIGN_LOCATION_NAME")
				Me.OnFOREIGN_LOCATION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_DETAIL() As String
		Get
			Return Me._ADDRESS_DETAIL
		End Get
		Set
			If (String.Equals(Me._ADDRESS_DETAIL, value) = false) Then
				Me.OnADDRESS_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_DETAIL = value
				Me.SendPropertyChanged("ADDRESS_DETAIL")
				Me.OnADDRESS_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CITY_NAME() As String
		Get
			Return Me._CITY_NAME
		End Get
		Set
			If (String.Equals(Me._CITY_NAME, value) = false) Then
				Me.OnCITY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CITY_NAME = value
				Me.SendPropertyChanged("CITY_NAME")
				Me.OnCITY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_IDA", DbType:="Int")>  _
	Public Property COUNTRY_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_IDA
		End Get
		Set
			If (Me._COUNTRY_IDA.Equals(value) = false) Then
				Me.OnCOUNTRY_IDAChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_IDA = value
				Me.SendPropertyChanged("COUNTRY_IDA")
				Me.OnCOUNTRY_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRY_NAME() As String
		Get
			Return Me._COUNTRY_NAME
		End Get
		Set
			If (String.Equals(Me._COUNTRY_NAME, value) = false) Then
				Me.OnCOUNTRY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_NAME = value
				Me.SendPropertyChanged("COUNTRY_NAME")
				Me.OnCOUNTRY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOCUMENT_DATE", DbType:="DateTime")>  _
	Public Property DOCUMENT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DOCUMENT_DATE
		End Get
		Set
			If (Me._DOCUMENT_DATE.Equals(value) = false) Then
				Me.OnDOCUMENT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DOCUMENT_DATE = value
				Me.SendPropertyChanged("DOCUMENT_DATE")
				Me.OnDOCUMENT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXP_DOCUMENT_DATE", DbType:="DateTime")>  _
	Public Property EXP_DOCUMENT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._EXP_DOCUMENT_DATE
		End Get
		Set
			If (Me._EXP_DOCUMENT_DATE.Equals(value) = false) Then
				Me.OnEXP_DOCUMENT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._EXP_DOCUMENT_DATE = value
				Me.SendPropertyChanged("EXP_DOCUMENT_DATE")
				Me.OnEXP_DOCUMENT_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.sysstaff")>  _
Partial Public Class sysstaff
	
	Private _stfcd As Integer
	
	Private _ctzid As String
	
	Private _prefixcd As System.Nullable(Of Short)
	
	Private _stfthanm As String
	
	Private _stfengnm As String
	
	Private _poscode As System.Nullable(Of Integer)
	
	Private _poswrkcode As System.Nullable(Of Integer)
	
	Private _usrid As String
	
	Private _pwd As String
	
	Private _lvlcd As System.Nullable(Of Short)
	
	Private _stfstcd As System.Nullable(Of Short)
	
	Private _divcode As System.Nullable(Of Short)
	
	Private _workdiv As System.Nullable(Of Short)
	
	Private _flgtb As String
	
	Private _chngwtcd As System.Nullable(Of Short)
	
	Private _runmber As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stfcd", DbType:="Int NOT NULL")>  _
	Public Property stfcd() As Integer
		Get
			Return Me._stfcd
		End Get
		Set
			If ((Me._stfcd = value)  _
						= false) Then
				Me._stfcd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctzid", DbType:="Char(13)")>  _
	Public Property ctzid() As String
		Get
			Return Me._ctzid
		End Get
		Set
			If (String.Equals(Me._ctzid, value) = false) Then
				Me._ctzid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prefixcd", DbType:="SmallInt")>  _
	Public Property prefixcd() As System.Nullable(Of Short)
		Get
			Return Me._prefixcd
		End Get
		Set
			If (Me._prefixcd.Equals(value) = false) Then
				Me._prefixcd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stfthanm", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property stfthanm() As String
		Get
			Return Me._stfthanm
		End Get
		Set
			If (String.Equals(Me._stfthanm, value) = false) Then
				Me._stfthanm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stfengnm", DbType:="VarChar(50)")>  _
	Public Property stfengnm() As String
		Get
			Return Me._stfengnm
		End Get
		Set
			If (String.Equals(Me._stfengnm, value) = false) Then
				Me._stfengnm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_poscode", DbType:="Int")>  _
	Public Property poscode() As System.Nullable(Of Integer)
		Get
			Return Me._poscode
		End Get
		Set
			If (Me._poscode.Equals(value) = false) Then
				Me._poscode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_poswrkcode", DbType:="Int")>  _
	Public Property poswrkcode() As System.Nullable(Of Integer)
		Get
			Return Me._poswrkcode
		End Get
		Set
			If (Me._poswrkcode.Equals(value) = false) Then
				Me._poswrkcode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usrid", DbType:="VarChar(8)")>  _
	Public Property usrid() As String
		Get
			Return Me._usrid
		End Get
		Set
			If (String.Equals(Me._usrid, value) = false) Then
				Me._usrid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pwd", DbType:="VarChar(16)")>  _
	Public Property pwd() As String
		Get
			Return Me._pwd
		End Get
		Set
			If (String.Equals(Me._pwd, value) = false) Then
				Me._pwd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lvlcd", DbType:="SmallInt")>  _
	Public Property lvlcd() As System.Nullable(Of Short)
		Get
			Return Me._lvlcd
		End Get
		Set
			If (Me._lvlcd.Equals(value) = false) Then
				Me._lvlcd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stfstcd", DbType:="SmallInt")>  _
	Public Property stfstcd() As System.Nullable(Of Short)
		Get
			Return Me._stfstcd
		End Get
		Set
			If (Me._stfstcd.Equals(value) = false) Then
				Me._stfstcd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_divcode", DbType:="SmallInt")>  _
	Public Property divcode() As System.Nullable(Of Short)
		Get
			Return Me._divcode
		End Get
		Set
			If (Me._divcode.Equals(value) = false) Then
				Me._divcode = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_workdiv", DbType:="SmallInt")>  _
	Public Property workdiv() As System.Nullable(Of Short)
		Get
			Return Me._workdiv
		End Get
		Set
			If (Me._workdiv.Equals(value) = false) Then
				Me._workdiv = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_flgtb", DbType:="VarChar(20)")>  _
	Public Property flgtb() As String
		Get
			Return Me._flgtb
		End Get
		Set
			If (String.Equals(Me._flgtb, value) = false) Then
				Me._flgtb = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="SmallInt")>  _
	Public Property chngwtcd() As System.Nullable(Of Short)
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (Me._chngwtcd.Equals(value) = false) Then
				Me._chngwtcd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_runmber", DbType:="Int")>  _
	Public Property runmber() As System.Nullable(Of Integer)
		Get
			Return Me._runmber
		End Get
		Set
			If (Me._runmber.Equals(value) = false) Then
				Me._runmber = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_E_TRACKING_REPORT_PROCESS")>  _
Partial Public Class MAS_E_TRACKING_REPORT_PROCESS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PROCESS_NAME As String
	
	Private _DURATION_DAY As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanged()
    End Sub
    Partial Private Sub OnDURATION_DAYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDURATION_DAYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_NAME() As String
		Get
			Return Me._PROCESS_NAME
		End Get
		Set
			If (String.Equals(Me._PROCESS_NAME, value) = false) Then
				Me.OnPROCESS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_NAME = value
				Me.SendPropertyChanged("PROCESS_NAME")
				Me.OnPROCESS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DURATION_DAY", DbType:="Int")>  _
	Public Property DURATION_DAY() As System.Nullable(Of Integer)
		Get
			Return Me._DURATION_DAY
		End Get
		Set
			If (Me._DURATION_DAY.Equals(value) = false) Then
				Me.OnDURATION_DAYChanging(value)
				Me.SendPropertyChanging
				Me._DURATION_DAY = value
				Me.SendPropertyChanged("DURATION_DAY")
				Me.OnDURATION_DAYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACKING_WORK_DAY_REPORT_DETAIL")>  _
Partial Public Class E_TRACKING_WORK_DAY_REPORT_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _START_DATE As System.Nullable(Of Date)
	
	Private _END_DATE As System.Nullable(Of Date)
	
	Private _PERIOD_COUNT As System.Nullable(Of Integer)
	
	Private _TYPE_PERIOD As System.Nullable(Of Integer)
	
	Private _EXPERT_TYPE_ID As System.Nullable(Of Integer)
	
	Private _EXPERT_COUNT As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTART_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTART_DATEChanged()
    End Sub
    Partial Private Sub OnEND_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEND_DATEChanged()
    End Sub
    Partial Private Sub OnPERIOD_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPERIOD_COUNTChanged()
    End Sub
    Partial Private Sub OnTYPE_PERIODChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_PERIODChanged()
    End Sub
    Partial Private Sub OnEXPERT_TYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEXPERT_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnEXPERT_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEXPERT_COUNTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_START_DATE", DbType:="DateTime")>  _
	Public Property START_DATE() As System.Nullable(Of Date)
		Get
			Return Me._START_DATE
		End Get
		Set
			If (Me._START_DATE.Equals(value) = false) Then
				Me.OnSTART_DATEChanging(value)
				Me.SendPropertyChanging
				Me._START_DATE = value
				Me.SendPropertyChanged("START_DATE")
				Me.OnSTART_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_END_DATE", DbType:="DateTime")>  _
	Public Property END_DATE() As System.Nullable(Of Date)
		Get
			Return Me._END_DATE
		End Get
		Set
			If (Me._END_DATE.Equals(value) = false) Then
				Me.OnEND_DATEChanging(value)
				Me.SendPropertyChanging
				Me._END_DATE = value
				Me.SendPropertyChanged("END_DATE")
				Me.OnEND_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERIOD_COUNT", DbType:="Int")>  _
	Public Property PERIOD_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._PERIOD_COUNT
		End Get
		Set
			If (Me._PERIOD_COUNT.Equals(value) = false) Then
				Me.OnPERIOD_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._PERIOD_COUNT = value
				Me.SendPropertyChanged("PERIOD_COUNT")
				Me.OnPERIOD_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_PERIOD", DbType:="Int")>  _
	Public Property TYPE_PERIOD() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_PERIOD
		End Get
		Set
			If (Me._TYPE_PERIOD.Equals(value) = false) Then
				Me.OnTYPE_PERIODChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_PERIOD = value
				Me.SendPropertyChanged("TYPE_PERIOD")
				Me.OnTYPE_PERIODChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPERT_TYPE_ID", DbType:="Int")>  _
	Public Property EXPERT_TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._EXPERT_TYPE_ID
		End Get
		Set
			If (Me._EXPERT_TYPE_ID.Equals(value) = false) Then
				Me.OnEXPERT_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._EXPERT_TYPE_ID = value
				Me.SendPropertyChanged("EXPERT_TYPE_ID")
				Me.OnEXPERT_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPERT_COUNT", DbType:="Int")>  _
	Public Property EXPERT_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._EXPERT_COUNT
		End Get
		Set
			If (Me._EXPERT_COUNT.Equals(value) = false) Then
				Me.OnEXPERT_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._EXPERT_COUNT = value
				Me.SendPropertyChanged("EXPERT_COUNT")
				Me.OnEXPERT_COUNTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_E_TRACKING_PERIOD_NAME")>  _
Partial Public Class MAS_E_TRACKING_PERIOD_NAME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PERIOD_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPERIOD_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPERIOD_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERIOD_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PERIOD_NAME() As String
		Get
			Return Me._PERIOD_NAME
		End Get
		Set
			If (String.Equals(Me._PERIOD_NAME, value) = false) Then
				Me.OnPERIOD_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PERIOD_NAME = value
				Me.SendPropertyChanged("PERIOD_NAME")
				Me.OnPERIOD_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_PRODUCT_ID_UNIT_DETAIL")>  _
Partial Public Class DRUG_PRODUCT_ID_UNIT_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _AMOUNT As String
	
	Private _SMALL_UNIT As System.Nullable(Of Integer)
	
	Private _FIRST_UNIT As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnAMOUNTChanging(value As String)
    End Sub
    Partial Private Sub OnAMOUNTChanged()
    End Sub
    Partial Private Sub OnSMALL_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSMALL_UNITChanged()
    End Sub
    Partial Private Sub OnFIRST_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFIRST_UNITChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT", DbType:="NVarChar(MAX)")>  _
	Public Property AMOUNT() As String
		Get
			Return Me._AMOUNT
		End Get
		Set
			If (String.Equals(Me._AMOUNT, value) = false) Then
				Me.OnAMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT = value
				Me.SendPropertyChanged("AMOUNT")
				Me.OnAMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_UNIT", DbType:="Int")>  _
	Public Property SMALL_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._SMALL_UNIT
		End Get
		Set
			If (Me._SMALL_UNIT.Equals(value) = false) Then
				Me.OnSMALL_UNITChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_UNIT = value
				Me.SendPropertyChanged("SMALL_UNIT")
				Me.OnSMALL_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIRST_UNIT", DbType:="Int")>  _
	Public Property FIRST_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._FIRST_UNIT
		End Get
		Set
			If (Me._FIRST_UNIT.Equals(value) = false) Then
				Me.OnFIRST_UNITChanging(value)
				Me.SendPropertyChanging
				Me._FIRST_UNIT = value
				Me.SendPropertyChanged("FIRST_UNIT")
				Me.OnFIRST_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.dcunit")>  _
Partial Public Class dcunit
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _unitcd As String
	
	Private _unitnm As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnunitcdChanging(value As String)
    End Sub
    Partial Private Sub OnunitcdChanged()
    End Sub
    Partial Private Sub OnunitnmChanging(value As String)
    End Sub
    Partial Private Sub OnunitnmChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitcd", DbType:="VarChar(3) NOT NULL", CanBeNull:=false)>  _
	Public Property unitcd() As String
		Get
			Return Me._unitcd
		End Get
		Set
			If (String.Equals(Me._unitcd, value) = false) Then
				Me.OnunitcdChanging(value)
				Me.SendPropertyChanging
				Me._unitcd = value
				Me.SendPropertyChanged("unitcd")
				Me.OnunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitnm", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitnm() As String
		Get
			Return Me._unitnm
		End Get
		Set
			If (String.Equals(Me._unitnm, value) = false) Then
				Me.OnunitnmChanging(value)
				Me.SendPropertyChanging
				Me._unitnm = value
				Me.SendPropertyChanged("unitnm")
				Me.OnunitnmChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACKING_WORK_DAY_REQUEST_DETAIL")>  _
Partial Public Class E_TRACKING_WORK_DAY_REQUEST_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _FK_REQUEST_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnFK_REQUEST_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_REQUEST_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_REQUEST_IDA", DbType:="Int")>  _
	Public Property FK_REQUEST_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_REQUEST_IDA
		End Get
		Set
			If (Me._FK_REQUEST_IDA.Equals(value) = false) Then
				Me.OnFK_REQUEST_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_REQUEST_IDA = value
				Me.SendPropertyChanged("FK_REQUEST_IDA")
				Me.OnFK_REQUEST_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_BIO_PACK")>  _
Partial Public Class MAS_BIO_PACK
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _BIO_PACK As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnBIO_PACKChanging(value As String)
    End Sub
    Partial Private Sub OnBIO_PACKChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIO_PACK", DbType:="NVarChar(MAX)")>  _
	Public Property BIO_PACK() As String
		Get
			Return Me._BIO_PACK
		End Get
		Set
			If (String.Equals(Me._BIO_PACK, value) = false) Then
				Me.OnBIO_PACKChanging(value)
				Me.SendPropertyChanging
				Me._BIO_PACK = value
				Me.SendPropertyChanged("BIO_PACK")
				Me.OnBIO_PACKChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_HERB_TYPE")>  _
Partial Public Class MAS_HERB_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _HERB_TYPE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnHERB_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnHERB_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HERB_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property HERB_TYPE() As String
		Get
			Return Me._HERB_TYPE
		End Get
		Set
			If (String.Equals(Me._HERB_TYPE, value) = false) Then
				Me.OnHERB_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._HERB_TYPE = value
				Me.SendPropertyChanged("HERB_TYPE")
				Me.OnHERB_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_HERB_OR_ANIMAL_PART")>  _
Partial Public Class MAS_HERB_OR_ANIMAL_PART
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _HERB_OR_ANIMAL_PART As String
	
	Private _TYPE_PART As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnHERB_OR_ANIMAL_PARTChanging(value As String)
    End Sub
    Partial Private Sub OnHERB_OR_ANIMAL_PARTChanged()
    End Sub
    Partial Private Sub OnTYPE_PARTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_PARTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HERB_OR_ANIMAL_PART", DbType:="NVarChar(MAX)")>  _
	Public Property HERB_OR_ANIMAL_PART() As String
		Get
			Return Me._HERB_OR_ANIMAL_PART
		End Get
		Set
			If (String.Equals(Me._HERB_OR_ANIMAL_PART, value) = false) Then
				Me.OnHERB_OR_ANIMAL_PARTChanging(value)
				Me.SendPropertyChanging
				Me._HERB_OR_ANIMAL_PART = value
				Me.SendPropertyChanged("HERB_OR_ANIMAL_PART")
				Me.OnHERB_OR_ANIMAL_PARTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_PART", DbType:="Int")>  _
	Public Property TYPE_PART() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_PART
		End Get
		Set
			If (Me._TYPE_PART.Equals(value) = false) Then
				Me.OnTYPE_PARTChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_PART = value
				Me.SendPropertyChanged("TYPE_PART")
				Me.OnTYPE_PARTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_BIO_TYPE")>  _
Partial Public Class MAS_BIO_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _BIO_TYPE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnBIO_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnBIO_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIO_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property BIO_TYPE() As String
		Get
			Return Me._BIO_TYPE
		End Get
		Set
			If (String.Equals(Me._BIO_TYPE, value) = false) Then
				Me.OnBIO_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._BIO_TYPE = value
				Me.SendPropertyChanged("BIO_TYPE")
				Me.OnBIO_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CHEMICAL_HERB_DETAIL")>  _
Partial Public Class CHEMICAL_HERB_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _HERB_OR_ANIMAL_PART_ID As System.Nullable(Of Integer)
	
	Private _OTHER_DESCRIPTION As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnHERB_OR_ANIMAL_PART_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHERB_OR_ANIMAL_PART_IDChanged()
    End Sub
    Partial Private Sub OnOTHER_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnOTHER_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HERB_OR_ANIMAL_PART_ID", DbType:="Int")>  _
	Public Property HERB_OR_ANIMAL_PART_ID() As System.Nullable(Of Integer)
		Get
			Return Me._HERB_OR_ANIMAL_PART_ID
		End Get
		Set
			If (Me._HERB_OR_ANIMAL_PART_ID.Equals(value) = false) Then
				Me.OnHERB_OR_ANIMAL_PART_IDChanging(value)
				Me.SendPropertyChanging
				Me._HERB_OR_ANIMAL_PART_ID = value
				Me.SendPropertyChanged("HERB_OR_ANIMAL_PART_ID")
				Me.OnHERB_OR_ANIMAL_PART_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER_DESCRIPTION() As String
		Get
			Return Me._OTHER_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._OTHER_DESCRIPTION, value) = false) Then
				Me.OnOTHER_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._OTHER_DESCRIPTION = value
				Me.SendPropertyChanged("OTHER_DESCRIPTION")
				Me.OnOTHER_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_HERB_OR_ANIMAL_PART")>  _
Partial Public Class MAS_HERB_OR_ANIMAL_PART1
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _HERB_OR_ANIMAL_PART As String
	
	Private _TYPE_PART As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnHERB_OR_ANIMAL_PARTChanging(value As String)
    End Sub
    Partial Private Sub OnHERB_OR_ANIMAL_PARTChanged()
    End Sub
    Partial Private Sub OnTYPE_PARTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_PARTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HERB_OR_ANIMAL_PART", DbType:="NVarChar(MAX)")>  _
	Public Property HERB_OR_ANIMAL_PART() As String
		Get
			Return Me._HERB_OR_ANIMAL_PART
		End Get
		Set
			If (String.Equals(Me._HERB_OR_ANIMAL_PART, value) = false) Then
				Me.OnHERB_OR_ANIMAL_PARTChanging(value)
				Me.SendPropertyChanging
				Me._HERB_OR_ANIMAL_PART = value
				Me.SendPropertyChanged("HERB_OR_ANIMAL_PART")
				Me.OnHERB_OR_ANIMAL_PARTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_PART", DbType:="Int")>  _
	Public Property TYPE_PART() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_PART
		End Get
		Set
			If (Me._TYPE_PART.Equals(value) = false) Then
				Me.OnTYPE_PARTChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_PART = value
				Me.SendPropertyChanged("TYPE_PART")
				Me.OnTYPE_PARTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DOCUMENT_RECEIVER")>  _
Partial Public Class MAS_DOCUMENT_RECEIVER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PREFIX_ID As System.Nullable(Of Integer)
	
	Private _THANM As String
	
	Private _THALNM As String
	
	Private _POSITION_NM As String
	
	Private _IS_USE As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPREFIX_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPREFIX_IDChanged()
    End Sub
    Partial Private Sub OnTHANMChanging(value As String)
    End Sub
    Partial Private Sub OnTHANMChanged()
    End Sub
    Partial Private Sub OnTHALNMChanging(value As String)
    End Sub
    Partial Private Sub OnTHALNMChanged()
    End Sub
    Partial Private Sub OnPOSITION_NMChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_NMChanged()
    End Sub
    Partial Private Sub OnIS_USEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_USEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFIX_ID", DbType:="Int")>  _
	Public Property PREFIX_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PREFIX_ID
		End Get
		Set
			If (Me._PREFIX_ID.Equals(value) = false) Then
				Me.OnPREFIX_IDChanging(value)
				Me.SendPropertyChanging
				Me._PREFIX_ID = value
				Me.SendPropertyChanged("PREFIX_ID")
				Me.OnPREFIX_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_THANM", DbType:="NVarChar(MAX)")>  _
	Public Property THANM() As String
		Get
			Return Me._THANM
		End Get
		Set
			If (String.Equals(Me._THANM, value) = false) Then
				Me.OnTHANMChanging(value)
				Me.SendPropertyChanging
				Me._THANM = value
				Me.SendPropertyChanged("THANM")
				Me.OnTHANMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_THALNM", DbType:="NVarChar(MAX)")>  _
	Public Property THALNM() As String
		Get
			Return Me._THALNM
		End Get
		Set
			If (String.Equals(Me._THALNM, value) = false) Then
				Me.OnTHALNMChanging(value)
				Me.SendPropertyChanging
				Me._THALNM = value
				Me.SendPropertyChanged("THALNM")
				Me.OnTHALNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_NM", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_NM() As String
		Get
			Return Me._POSITION_NM
		End Get
		Set
			If (String.Equals(Me._POSITION_NM, value) = false) Then
				Me.OnPOSITION_NMChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_NM = value
				Me.SendPropertyChanged("POSITION_NM")
				Me.OnPOSITION_NMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_USE", DbType:="Bit")>  _
	Public Property IS_USE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_USE
		End Get
		Set
			If (Me._IS_USE.Equals(value) = false) Then
				Me.OnIS_USEChanging(value)
				Me.SendPropertyChanging
				Me._IS_USE = value
				Me.SendPropertyChanged("IS_USE")
				Me.OnIS_USEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CHEMICAL_REQUEST_STANDARD_IOWA")>  _
Partial Public Class CHEMICAL_REQUEST_STANDARD_IOWA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STANDARD_IOWA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTANDARD_IOWAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTANDARD_IOWAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STANDARD_IOWA", DbType:="Int")>  _
	Public Property STANDARD_IOWA() As System.Nullable(Of Integer)
		Get
			Return Me._STANDARD_IOWA
		End Get
		Set
			If (Me._STANDARD_IOWA.Equals(value) = false) Then
				Me.OnSTANDARD_IOWAChanging(value)
				Me.SendPropertyChanging
				Me._STANDARD_IOWA = value
				Me.SendPropertyChanged("STANDARD_IOWA")
				Me.OnSTANDARD_IOWAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CHEMICAL_LIST16")>  _
Partial Public Class MAS_CHEMICAL_LIST16
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CHEM_NAME As String
	
	Private _IS_USE As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCHEM_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCHEM_NAMEChanged()
    End Sub
    Partial Private Sub OnIS_USEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_USEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEM_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CHEM_NAME() As String
		Get
			Return Me._CHEM_NAME
		End Get
		Set
			If (String.Equals(Me._CHEM_NAME, value) = false) Then
				Me.OnCHEM_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CHEM_NAME = value
				Me.SendPropertyChanged("CHEM_NAME")
				Me.OnCHEM_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_USE", DbType:="Bit")>  _
	Public Property IS_USE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_USE
		End Get
		Set
			If (Me._IS_USE.Equals(value) = false) Then
				Me.OnIS_USEChanging(value)
				Me.SendPropertyChanging
				Me._IS_USE = value
				Me.SendPropertyChanged("IS_USE")
				Me.OnIS_USEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_SELL_TYPE")>  _
Partial Public Class DALCN_SELL_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _SELL_TYPE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSELL_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSELL_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SELL_TYPE", DbType:="Int")>  _
	Public Property SELL_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._SELL_TYPE
		End Get
		Set
			If (Me._SELL_TYPE.Equals(value) = false) Then
				Me.OnSELL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._SELL_TYPE = value
				Me.SendPropertyChanged("SELL_TYPE")
				Me.OnSELL_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_DETAIL_MANUFACTURE")>  _
Partial Public Class CER_DETAIL_MANUFACTURE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _COMPANY_NAME As String
	
	Private _NAME_ADDRESS As String
	
	Private _ADDRESS_NUMBER As String
	
	Private _ADDRESS_CITY As String
	
	Private _COUNTRY As String
	
	Private _COUNTRY_ID As System.Nullable(Of Integer)
	
	Private _GLN As String
	
	Private _ZIPCODE As String
	
	Private _LOCATION_STANDARD As String
	
	Private _SALE_DATE As System.Nullable(Of Date)
	
	Private _STANDARD_ID As System.Nullable(Of Integer)
	
	Private _COUNTRY_GMP As System.Nullable(Of Integer)
	
	Private _CER_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanged()
    End Sub
    Partial Private Sub OnNAME_ADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ADDRESSChanged()
    End Sub
    Partial Private Sub OnADDRESS_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_NUMBERChanged()
    End Sub
    Partial Private Sub OnADDRESS_CITYChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_CITYChanged()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_IDChanged()
    End Sub
    Partial Private Sub OnGLNChanging(value As String)
    End Sub
    Partial Private Sub OnGLNChanged()
    End Sub
    Partial Private Sub OnZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIPCODEChanged()
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanged()
    End Sub
    Partial Private Sub OnSALE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSALE_DATEChanged()
    End Sub
    Partial Private Sub OnSTANDARD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTANDARD_IDChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_GMPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_GMPChanged()
    End Sub
    Partial Private Sub OnCER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCER_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property COMPANY_NAME() As String
		Get
			Return Me._COMPANY_NAME
		End Get
		Set
			If (String.Equals(Me._COMPANY_NAME, value) = false) Then
				Me.OnCOMPANY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_NAME = value
				Me.SendPropertyChanged("COMPANY_NAME")
				Me.OnCOMPANY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ADDRESS", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ADDRESS() As String
		Get
			Return Me._NAME_ADDRESS
		End Get
		Set
			If (String.Equals(Me._NAME_ADDRESS, value) = false) Then
				Me.OnNAME_ADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ADDRESS = value
				Me.SendPropertyChanged("NAME_ADDRESS")
				Me.OnNAME_ADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_NUMBER() As String
		Get
			Return Me._ADDRESS_NUMBER
		End Get
		Set
			If (String.Equals(Me._ADDRESS_NUMBER, value) = false) Then
				Me.OnADDRESS_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_NUMBER = value
				Me.SendPropertyChanged("ADDRESS_NUMBER")
				Me.OnADDRESS_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_CITY", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_CITY() As String
		Get
			Return Me._ADDRESS_CITY
		End Get
		Set
			If (String.Equals(Me._ADDRESS_CITY, value) = false) Then
				Me.OnADDRESS_CITYChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_CITY = value
				Me.SendPropertyChanged("ADDRESS_CITY")
				Me.OnADDRESS_CITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRY() As String
		Get
			Return Me._COUNTRY
		End Get
		Set
			If (String.Equals(Me._COUNTRY, value) = false) Then
				Me.OnCOUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY = value
				Me.SendPropertyChanged("COUNTRY")
				Me.OnCOUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_ID", DbType:="Int")>  _
	Public Property COUNTRY_ID() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_ID
		End Get
		Set
			If (Me._COUNTRY_ID.Equals(value) = false) Then
				Me.OnCOUNTRY_IDChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_ID = value
				Me.SendPropertyChanged("COUNTRY_ID")
				Me.OnCOUNTRY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GLN", DbType:="NVarChar(MAX)")>  _
	Public Property GLN() As String
		Get
			Return Me._GLN
		End Get
		Set
			If (String.Equals(Me._GLN, value) = false) Then
				Me.OnGLNChanging(value)
				Me.SendPropertyChanging
				Me._GLN = value
				Me.SendPropertyChanged("GLN")
				Me.OnGLNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property ZIPCODE() As String
		Get
			Return Me._ZIPCODE
		End Get
		Set
			If (String.Equals(Me._ZIPCODE, value) = false) Then
				Me.OnZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIPCODE = value
				Me.SendPropertyChanged("ZIPCODE")
				Me.OnZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_STANDARD() As String
		Get
			Return Me._LOCATION_STANDARD
		End Get
		Set
			If (String.Equals(Me._LOCATION_STANDARD, value) = false) Then
				Me.OnLOCATION_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_STANDARD = value
				Me.SendPropertyChanged("LOCATION_STANDARD")
				Me.OnLOCATION_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_DATE", DbType:="DateTime")>  _
	Public Property SALE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._SALE_DATE
		End Get
		Set
			If (Me._SALE_DATE.Equals(value) = false) Then
				Me.OnSALE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._SALE_DATE = value
				Me.SendPropertyChanged("SALE_DATE")
				Me.OnSALE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STANDARD_ID", DbType:="Int")>  _
	Public Property STANDARD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STANDARD_ID
		End Get
		Set
			If (Me._STANDARD_ID.Equals(value) = false) Then
				Me.OnSTANDARD_IDChanging(value)
				Me.SendPropertyChanging
				Me._STANDARD_ID = value
				Me.SendPropertyChanged("STANDARD_ID")
				Me.OnSTANDARD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_GMP", DbType:="Int")>  _
	Public Property COUNTRY_GMP() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_GMP
		End Get
		Set
			If (Me._COUNTRY_GMP.Equals(value) = false) Then
				Me.OnCOUNTRY_GMPChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_GMP = value
				Me.SendPropertyChanged("COUNTRY_GMP")
				Me.OnCOUNTRY_GMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_DATE", DbType:="DateTime")>  _
	Public Property CER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CER_DATE
		End Get
		Set
			If (Me._CER_DATE.Equals(value) = false) Then
				Me.OnCER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CER_DATE = value
				Me.SendPropertyChanged("CER_DATE")
				Me.OnCER_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CHEMICAL_REQUEST_DETAIL")>  _
Partial Public Class CHEMICAL_REQUEST_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _CHEMICAL_FK_IDA As System.Nullable(Of Integer)
	
	Private _iowa_fk As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnCHEMICAL_FK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHEMICAL_FK_IDAChanged()
    End Sub
    Partial Private Sub Oniowa_fkChanging(value As String)
    End Sub
    Partial Private Sub Oniowa_fkChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEMICAL_FK_IDA", DbType:="Int")>  _
	Public Property CHEMICAL_FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._CHEMICAL_FK_IDA
		End Get
		Set
			If (Me._CHEMICAL_FK_IDA.Equals(value) = false) Then
				Me.OnCHEMICAL_FK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._CHEMICAL_FK_IDA = value
				Me.SendPropertyChanged("CHEMICAL_FK_IDA")
				Me.OnCHEMICAL_FK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowa_fk", DbType:="NVarChar(MAX)")>  _
	Public Property iowa_fk() As String
		Get
			Return Me._iowa_fk
		End Get
		Set
			If (String.Equals(Me._iowa_fk, value) = false) Then
				Me.Oniowa_fkChanging(value)
				Me.SendPropertyChanging
				Me._iowa_fk = value
				Me.SendPropertyChanged("iowa_fk")
				Me.Oniowa_fkChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_DETAIL_CASCHEMICAL")>  _
Partial Public Class CER_DETAIL_CASCHEMICAL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ROW_ID As String
	
	Private _CAS_ID As String
	
	Private _CAS_NO As String
	
	Private _CAS_NAME As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _INN_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnROW_IDChanging(value As String)
    End Sub
    Partial Private Sub OnROW_IDChanged()
    End Sub
    Partial Private Sub OnCAS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCAS_IDChanged()
    End Sub
    Partial Private Sub OnCAS_NOChanging(value As String)
    End Sub
    Partial Private Sub OnCAS_NOChanged()
    End Sub
    Partial Private Sub OnCAS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCAS_NAMEChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnINN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnINN_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROW_ID", DbType:="NVarChar(MAX)")>  _
	Public Property ROW_ID() As String
		Get
			Return Me._ROW_ID
		End Get
		Set
			If (String.Equals(Me._ROW_ID, value) = false) Then
				Me.OnROW_IDChanging(value)
				Me.SendPropertyChanging
				Me._ROW_ID = value
				Me.SendPropertyChanged("ROW_ID")
				Me.OnROW_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CAS_ID() As String
		Get
			Return Me._CAS_ID
		End Get
		Set
			If (String.Equals(Me._CAS_ID, value) = false) Then
				Me.OnCAS_IDChanging(value)
				Me.SendPropertyChanging
				Me._CAS_ID = value
				Me.SendPropertyChanged("CAS_ID")
				Me.OnCAS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAS_NO", DbType:="NVarChar(MAX)")>  _
	Public Property CAS_NO() As String
		Get
			Return Me._CAS_NO
		End Get
		Set
			If (String.Equals(Me._CAS_NO, value) = false) Then
				Me.OnCAS_NOChanging(value)
				Me.SendPropertyChanging
				Me._CAS_NO = value
				Me.SendPropertyChanged("CAS_NO")
				Me.OnCAS_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CAS_NAME() As String
		Get
			Return Me._CAS_NAME
		End Get
		Set
			If (String.Equals(Me._CAS_NAME, value) = false) Then
				Me.OnCAS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CAS_NAME = value
				Me.SendPropertyChanged("CAS_NAME")
				Me.OnCAS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property INN_NAME() As String
		Get
			Return Me._INN_NAME
		End Get
		Set
			If (String.Equals(Me._INN_NAME, value) = false) Then
				Me.OnINN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._INN_NAME = value
				Me.SendPropertyChanged("INN_NAME")
				Me.OnINN_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_PRODUCT_ATC")>  _
Partial Public Class DRUG_PRODUCT_ATC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _ATC_IDA As System.Nullable(Of Integer)
	
	Private _ATC_CODE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnATC_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnATC_IDAChanged()
    End Sub
    Partial Private Sub OnATC_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnATC_CODEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATC_IDA", DbType:="Int")>  _
	Public Property ATC_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._ATC_IDA
		End Get
		Set
			If (Me._ATC_IDA.Equals(value) = false) Then
				Me.OnATC_IDAChanging(value)
				Me.SendPropertyChanging
				Me._ATC_IDA = value
				Me.SendPropertyChanged("ATC_IDA")
				Me.OnATC_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATC_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property ATC_CODE() As String
		Get
			Return Me._ATC_CODE
		End Get
		Set
			If (String.Equals(Me._ATC_CODE, value) = false) Then
				Me.OnATC_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ATC_CODE = value
				Me.SendPropertyChanged("ATC_CODE")
				Me.OnATC_CODEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_NEWS")>  _
Partial Public Class MAS_NEW
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _text_comment As String
	
	Private __type As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub Ontext_commentChanging(value As String)
    End Sub
    Partial Private Sub Ontext_commentChanged()
    End Sub
    Partial Private Sub On_typeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub On_typeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_text_comment", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property text_comment() As String
		Get
			Return Me._text_comment
		End Get
		Set
			If (String.Equals(Me._text_comment, value) = false) Then
				Me.Ontext_commentChanging(value)
				Me.SendPropertyChanging
				Me._text_comment = value
				Me.SendPropertyChanged("text_comment")
				Me.Ontext_commentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[_type]", Storage:="__type", DbType:="Int")>  _
	Public Property _type() As System.Nullable(Of Integer)
		Get
			Return Me.__type
		End Get
		Set
			If (Me.__type.Equals(value) = false) Then
				Me.On_typeChanging(value)
				Me.SendPropertyChanging
				Me.__type = value
				Me.SendPropertyChanged("_type")
				Me.On_typeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DH15_DETAIL_CASCHEMICAL")>  _
Partial Public Class DH15_DETAIL_CASCHEMICAL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ROW_ID As String
	
	Private _CAS_ID As String
	
	Private _CAS_NO As String
	
	Private _CAS_NAME As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _iowacd As String
	
	Private _frgnappno As String
	
	Private _phm15dgt As String
	
	Private _GRADE As String
	
	Private _phm15dgt_pure As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnROW_IDChanging(value As String)
    End Sub
    Partial Private Sub OnROW_IDChanged()
    End Sub
    Partial Private Sub OnCAS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCAS_IDChanged()
    End Sub
    Partial Private Sub OnCAS_NOChanging(value As String)
    End Sub
    Partial Private Sub OnCAS_NOChanged()
    End Sub
    Partial Private Sub OnCAS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCAS_NAMEChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OniowacdChanging(value As String)
    End Sub
    Partial Private Sub OniowacdChanged()
    End Sub
    Partial Private Sub OnfrgnappnoChanging(value As String)
    End Sub
    Partial Private Sub OnfrgnappnoChanged()
    End Sub
    Partial Private Sub Onphm15dgtChanging(value As String)
    End Sub
    Partial Private Sub Onphm15dgtChanged()
    End Sub
    Partial Private Sub OnGRADEChanging(value As String)
    End Sub
    Partial Private Sub OnGRADEChanged()
    End Sub
    Partial Private Sub Onphm15dgt_pureChanging(value As String)
    End Sub
    Partial Private Sub Onphm15dgt_pureChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROW_ID", DbType:="NVarChar(MAX)")>  _
	Public Property ROW_ID() As String
		Get
			Return Me._ROW_ID
		End Get
		Set
			If (String.Equals(Me._ROW_ID, value) = false) Then
				Me.OnROW_IDChanging(value)
				Me.SendPropertyChanging
				Me._ROW_ID = value
				Me.SendPropertyChanged("ROW_ID")
				Me.OnROW_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CAS_ID() As String
		Get
			Return Me._CAS_ID
		End Get
		Set
			If (String.Equals(Me._CAS_ID, value) = false) Then
				Me.OnCAS_IDChanging(value)
				Me.SendPropertyChanging
				Me._CAS_ID = value
				Me.SendPropertyChanged("CAS_ID")
				Me.OnCAS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAS_NO", DbType:="NVarChar(MAX)")>  _
	Public Property CAS_NO() As String
		Get
			Return Me._CAS_NO
		End Get
		Set
			If (String.Equals(Me._CAS_NO, value) = false) Then
				Me.OnCAS_NOChanging(value)
				Me.SendPropertyChanging
				Me._CAS_NO = value
				Me.SendPropertyChanged("CAS_NO")
				Me.OnCAS_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CAS_NAME() As String
		Get
			Return Me._CAS_NAME
		End Get
		Set
			If (String.Equals(Me._CAS_NAME, value) = false) Then
				Me.OnCAS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CAS_NAME = value
				Me.SendPropertyChanged("CAS_NAME")
				Me.OnCAS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowacd", DbType:="NVarChar(MAX)")>  _
	Public Property iowacd() As String
		Get
			Return Me._iowacd
		End Get
		Set
			If (String.Equals(Me._iowacd, value) = false) Then
				Me.OniowacdChanging(value)
				Me.SendPropertyChanging
				Me._iowacd = value
				Me.SendPropertyChanged("iowacd")
				Me.OniowacdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgnappno", DbType:="VarChar(30)")>  _
	Public Property frgnappno() As String
		Get
			Return Me._frgnappno
		End Get
		Set
			If (String.Equals(Me._frgnappno, value) = false) Then
				Me.OnfrgnappnoChanging(value)
				Me.SendPropertyChanging
				Me._frgnappno = value
				Me.SendPropertyChanged("frgnappno")
				Me.OnfrgnappnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phm15dgt", DbType:="NVarChar(MAX)")>  _
	Public Property phm15dgt() As String
		Get
			Return Me._phm15dgt
		End Get
		Set
			If (String.Equals(Me._phm15dgt, value) = false) Then
				Me.Onphm15dgtChanging(value)
				Me.SendPropertyChanging
				Me._phm15dgt = value
				Me.SendPropertyChanged("phm15dgt")
				Me.Onphm15dgtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GRADE", DbType:="NVarChar(MAX)")>  _
	Public Property GRADE() As String
		Get
			Return Me._GRADE
		End Get
		Set
			If (String.Equals(Me._GRADE, value) = false) Then
				Me.OnGRADEChanging(value)
				Me.SendPropertyChanging
				Me._GRADE = value
				Me.SendPropertyChanged("GRADE")
				Me.OnGRADEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phm15dgt_pure", DbType:="NVarChar(MAX)")>  _
	Public Property phm15dgt_pure() As String
		Get
			Return Me._phm15dgt_pure
		End Get
		Set
			If (String.Equals(Me._phm15dgt_pure, value) = false) Then
				Me.Onphm15dgt_pureChanging(value)
				Me.SendPropertyChanging
				Me._phm15dgt_pure = value
				Me.SendPropertyChanged("phm15dgt_pure")
				Me.Onphm15dgt_pureChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FILE_ATTACH")>  _
Partial Public Class FILE_ATTACH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _NAME_FAKE As String
	
	Private _NAME_REAL As String
	
	Private _TYPE As String
	
	Private _TRANSACTION_ID As System.Nullable(Of Integer)
	
	Private _DESCRIPTION As String
	
	Private _PROCESS_ID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNAME_FAKEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_FAKEChanged()
    End Sub
    Partial Private Sub OnNAME_REALChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_REALChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnTRANSACTION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRANSACTION_IDChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_FAKE", DbType:="VarChar(MAX)")>  _
	Public Property NAME_FAKE() As String
		Get
			Return Me._NAME_FAKE
		End Get
		Set
			If (String.Equals(Me._NAME_FAKE, value) = false) Then
				Me.OnNAME_FAKEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_FAKE = value
				Me.SendPropertyChanged("NAME_FAKE")
				Me.OnNAME_FAKEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_REAL", DbType:="VarChar(MAX)")>  _
	Public Property NAME_REAL() As String
		Get
			Return Me._NAME_REAL
		End Get
		Set
			If (String.Equals(Me._NAME_REAL, value) = false) Then
				Me.OnNAME_REALChanging(value)
				Me.SendPropertyChanging
				Me._NAME_REAL = value
				Me.SendPropertyChanged("NAME_REAL")
				Me.OnNAME_REALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="VarChar(MAX)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSACTION_ID", DbType:="Int")>  _
	Public Property TRANSACTION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TRANSACTION_ID
		End Get
		Set
			If (Me._TRANSACTION_ID.Equals(value) = false) Then
				Me.OnTRANSACTION_IDChanging(value)
				Me.SendPropertyChanging
				Me._TRANSACTION_ID = value
				Me.SendPropertyChanged("TRANSACTION_ID")
				Me.OnTRANSACTION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MENU_CHEMI_LABEL")>  _
Partial Public Class MAS_MENU_CHEMI_LABEL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _LABEL_ID As System.Nullable(Of Integer)
	
	Private _LABEL_TEXT As String
	
	Private _PROCESS_ID As String
	
	Private _AORI As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnLABEL_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLABEL_IDChanged()
    End Sub
    Partial Private Sub OnLABEL_TEXTChanging(value As String)
    End Sub
    Partial Private Sub OnLABEL_TEXTChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnAORIChanging(value As String)
    End Sub
    Partial Private Sub OnAORIChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABEL_ID", DbType:="Int")>  _
	Public Property LABEL_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LABEL_ID
		End Get
		Set
			If (Me._LABEL_ID.Equals(value) = false) Then
				Me.OnLABEL_IDChanging(value)
				Me.SendPropertyChanging
				Me._LABEL_ID = value
				Me.SendPropertyChanged("LABEL_ID")
				Me.OnLABEL_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABEL_TEXT", DbType:="NVarChar(MAX)")>  _
	Public Property LABEL_TEXT() As String
		Get
			Return Me._LABEL_TEXT
		End Get
		Set
			If (String.Equals(Me._LABEL_TEXT, value) = false) Then
				Me.OnLABEL_TEXTChanging(value)
				Me.SendPropertyChanging
				Me._LABEL_TEXT = value
				Me.SendPropertyChanged("LABEL_TEXT")
				Me.OnLABEL_TEXTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AORI", DbType:="NVarChar(50)")>  _
	Public Property AORI() As String
		Get
			Return Me._AORI
		End Get
		Set
			If (String.Equals(Me._AORI, value) = false) Then
				Me.OnAORIChanging(value)
				Me.SendPropertyChanging
				Me._AORI = value
				Me.SendPropertyChanged("AORI")
				Me.OnAORIChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRSAMP_DETAIL_CAS")>  _
Partial Public Class DRSAMP_DETAIL_CA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As String
	
	Private _ROWS As String
	
	Private _IOWA As String
	
	Private _QTY As String
	
	Private _SUNITCD As String
	
	Private _EQTO_IOWA As String
	
	Private _EQTO_QTY As String
	
	Private _EQTO_SUNITCD As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnROWSChanging(value As String)
    End Sub
    Partial Private Sub OnROWSChanged()
    End Sub
    Partial Private Sub OnIOWAChanging(value As String)
    End Sub
    Partial Private Sub OnIOWAChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As String)
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnSUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnSUNITCDChanged()
    End Sub
    Partial Private Sub OnEQTO_IOWAChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_IOWAChanged()
    End Sub
    Partial Private Sub OnEQTO_QTYChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_QTYChanged()
    End Sub
    Partial Private Sub OnEQTO_SUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_SUNITCDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROWS", DbType:="NVarChar(MAX)")>  _
	Public Property ROWS() As String
		Get
			Return Me._ROWS
		End Get
		Set
			If (String.Equals(Me._ROWS, value) = false) Then
				Me.OnROWSChanging(value)
				Me.SendPropertyChanging
				Me._ROWS = value
				Me.SendPropertyChanged("ROWS")
				Me.OnROWSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property IOWA() As String
		Get
			Return Me._IOWA
		End Get
		Set
			If (String.Equals(Me._IOWA, value) = false) Then
				Me.OnIOWAChanging(value)
				Me.SendPropertyChanging
				Me._IOWA = value
				Me.SendPropertyChanged("IOWA")
				Me.OnIOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property QTY() As String
		Get
			Return Me._QTY
		End Get
		Set
			If (String.Equals(Me._QTY, value) = false) Then
				Me.OnQTYChanging(value)
				Me.SendPropertyChanging
				Me._QTY = value
				Me.SendPropertyChanged("QTY")
				Me.OnQTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property SUNITCD() As String
		Get
			Return Me._SUNITCD
		End Get
		Set
			If (String.Equals(Me._SUNITCD, value) = false) Then
				Me.OnSUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._SUNITCD = value
				Me.SendPropertyChanged("SUNITCD")
				Me.OnSUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_IOWA() As String
		Get
			Return Me._EQTO_IOWA
		End Get
		Set
			If (String.Equals(Me._EQTO_IOWA, value) = false) Then
				Me.OnEQTO_IOWAChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_IOWA = value
				Me.SendPropertyChanged("EQTO_IOWA")
				Me.OnEQTO_IOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_QTY() As String
		Get
			Return Me._EQTO_QTY
		End Get
		Set
			If (String.Equals(Me._EQTO_QTY, value) = false) Then
				Me.OnEQTO_QTYChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_QTY = value
				Me.SendPropertyChanged("EQTO_QTY")
				Me.OnEQTO_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_SUNITCD() As String
		Get
			Return Me._EQTO_SUNITCD
		End Get
		Set
			If (String.Equals(Me._EQTO_SUNITCD, value) = false) Then
				Me.OnEQTO_SUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_SUNITCD = value
				Me.SendPropertyChanged("EQTO_SUNITCD")
				Me.OnEQTO_SUNITCDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ADMIN_HEADER_LINK")>  _
Partial Public Class MAS_ADMIN_HEADER_LINK
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _LINK_NAME As String
	
	Private _URL As String
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _LINK_GROUP As System.Nullable(Of Integer)
	
	Private _IDgroup As System.Nullable(Of Integer)
	
	Private _type_g As System.Nullable(Of Integer)
	
	Private _ADMIN_GROUP As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnLINK_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLINK_NAMEChanged()
    End Sub
    Partial Private Sub OnURLChanging(value As String)
    End Sub
    Partial Private Sub OnURLChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnLINK_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLINK_GROUPChanged()
    End Sub
    Partial Private Sub OnIDgroupChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDgroupChanged()
    End Sub
    Partial Private Sub Ontype_gChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ontype_gChanged()
    End Sub
    Partial Private Sub OnADMIN_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnADMIN_GROUPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LINK_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LINK_NAME() As String
		Get
			Return Me._LINK_NAME
		End Get
		Set
			If (String.Equals(Me._LINK_NAME, value) = false) Then
				Me.OnLINK_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LINK_NAME = value
				Me.SendPropertyChanged("LINK_NAME")
				Me.OnLINK_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_URL", DbType:="NVarChar(MAX)")>  _
	Public Property URL() As String
		Get
			Return Me._URL
		End Get
		Set
			If (String.Equals(Me._URL, value) = false) Then
				Me.OnURLChanging(value)
				Me.SendPropertyChanging
				Me._URL = value
				Me.SendPropertyChanged("URL")
				Me.OnURLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LINK_GROUP", DbType:="Int")>  _
	Public Property LINK_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._LINK_GROUP
		End Get
		Set
			If (Me._LINK_GROUP.Equals(value) = false) Then
				Me.OnLINK_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._LINK_GROUP = value
				Me.SendPropertyChanged("LINK_GROUP")
				Me.OnLINK_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDgroup", DbType:="Int")>  _
	Public Property IDgroup() As System.Nullable(Of Integer)
		Get
			Return Me._IDgroup
		End Get
		Set
			If (Me._IDgroup.Equals(value) = false) Then
				Me.OnIDgroupChanging(value)
				Me.SendPropertyChanging
				Me._IDgroup = value
				Me.SendPropertyChanged("IDgroup")
				Me.OnIDgroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type_g", DbType:="Int")>  _
	Public Property type_g() As System.Nullable(Of Integer)
		Get
			Return Me._type_g
		End Get
		Set
			If (Me._type_g.Equals(value) = false) Then
				Me.Ontype_gChanging(value)
				Me.SendPropertyChanging
				Me._type_g = value
				Me.SendPropertyChanged("type_g")
				Me.Ontype_gChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMIN_GROUP", DbType:="Int")>  _
	Public Property ADMIN_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._ADMIN_GROUP
		End Get
		Set
			If (Me._ADMIN_GROUP.Equals(value) = false) Then
				Me.OnADMIN_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._ADMIN_GROUP = value
				Me.SendPropertyChanged("ADMIN_GROUP")
				Me.OnADMIN_GROUPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_NAV_ACTIVE_DETAIL")>  _
Partial Public Class MAS_NAV_ACTIVE_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _URL As String
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _IDgroup As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnURLChanging(value As String)
    End Sub
    Partial Private Sub OnURLChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnIDgroupChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDgroupChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_URL", DbType:="NVarChar(MAX)")>  _
	Public Property URL() As String
		Get
			Return Me._URL
		End Get
		Set
			If (String.Equals(Me._URL, value) = false) Then
				Me.OnURLChanging(value)
				Me.SendPropertyChanging
				Me._URL = value
				Me.SendPropertyChanged("URL")
				Me.OnURLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDgroup", DbType:="Int")>  _
	Public Property IDgroup() As System.Nullable(Of Integer)
		Get
			Return Me._IDgroup
		End Get
		Set
			If (Me._IDgroup.Equals(value) = false) Then
				Me.OnIDgroupChanging(value)
				Me.SendPropertyChanging
				Me._IDgroup = value
				Me.SendPropertyChanged("IDgroup")
				Me.OnIDgroupChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GEN_RCVNO_REQUEST")>  _
Partial Public Class GEN_RCVNO_REQUEST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PVNCD As System.Nullable(Of Integer)
	
	Private _YEARS As System.Nullable(Of Integer)
	
	Private _GEN_RCV As String
	
	Private _GEN_TYPE As String
	
	Private _PROCESS_ID As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnYEARSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYEARSChanged()
    End Sub
    Partial Private Sub OnGEN_RCVChanging(value As String)
    End Sub
    Partial Private Sub OnGEN_RCVChanged()
    End Sub
    Partial Private Sub OnGEN_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnGEN_TYPEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="Int")>  _
	Public Property PVNCD() As System.Nullable(Of Integer)
		Get
			Return Me._PVNCD
		End Get
		Set
			If (Me._PVNCD.Equals(value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEARS", DbType:="Int")>  _
	Public Property YEARS() As System.Nullable(Of Integer)
		Get
			Return Me._YEARS
		End Get
		Set
			If (Me._YEARS.Equals(value) = false) Then
				Me.OnYEARSChanging(value)
				Me.SendPropertyChanging
				Me._YEARS = value
				Me.SendPropertyChanged("YEARS")
				Me.OnYEARSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GEN_RCV", DbType:="NVarChar(50)")>  _
	Public Property GEN_RCV() As String
		Get
			Return Me._GEN_RCV
		End Get
		Set
			If (String.Equals(Me._GEN_RCV, value) = false) Then
				Me.OnGEN_RCVChanging(value)
				Me.SendPropertyChanging
				Me._GEN_RCV = value
				Me.SendPropertyChanged("GEN_RCV")
				Me.OnGEN_RCVChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GEN_TYPE", DbType:="NVarChar(50)")>  _
	Public Property GEN_TYPE() As String
		Get
			Return Me._GEN_TYPE
		End Get
		Set
			If (String.Equals(Me._GEN_TYPE, value) = false) Then
				Me.OnGEN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._GEN_TYPE = value
				Me.SendPropertyChanged("GEN_TYPE")
				Me.OnGEN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACKING_WORK_DAY_REPORT")>  _
Partial Public Class E_TRACKING_WORK_DAY_REPORT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_TYPE_REQUESTS_IDA As System.Nullable(Of Integer)
	
	Private _DRUG_NAME As String
	
	Private _RCVNO_DISPLAY As String
	
	Private _RCVNO_TEXT As String
	
	Private _RCVNO_FOLLOW As String
	
	Private _START_DATE_COUNT As System.Nullable(Of Date)
	
	Private _END_DATE_COUNT As System.Nullable(Of Date)
	
	Private _IS_ENABLE As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _DAY_FIXED As System.Nullable(Of Integer)
	
	Private _REAL_DAY_USE As System.Nullable(Of Integer)
	
	Private _DAY_FIXED_CAL As System.Nullable(Of Integer)
	
	Private _DAY_EXPAND_CAL As System.Nullable(Of Integer)
	
	Private _DAY_ALL_CAL As System.Nullable(Of Integer)
	
	Private _DAY_STOP_CAL As System.Nullable(Of Integer)
	
	Private _ROUND_COUNT As System.Nullable(Of Integer)
	
	Private _DAY_EXPAND_PER_ROUND As System.Nullable(Of Integer)
	
	Private _RCVNO As String
	
	Private _CTZID As String
	
	Private _rgttpcd As String
	
	Private _PRODUCT_TYPE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_TYPE_REQUESTS_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_TYPE_REQUESTS_IDAChanged()
    End Sub
    Partial Private Sub OnDRUG_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NAMEChanged()
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnRCVNO_TEXTChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_TEXTChanged()
    End Sub
    Partial Private Sub OnRCVNO_FOLLOWChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_FOLLOWChanged()
    End Sub
    Partial Private Sub OnSTART_DATE_COUNTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTART_DATE_COUNTChanged()
    End Sub
    Partial Private Sub OnEND_DATE_COUNTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEND_DATE_COUNTChanged()
    End Sub
    Partial Private Sub OnIS_ENABLEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_ENABLEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnDAY_FIXEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDAY_FIXEDChanged()
    End Sub
    Partial Private Sub OnREAL_DAY_USEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREAL_DAY_USEChanged()
    End Sub
    Partial Private Sub OnDAY_FIXED_CALChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDAY_FIXED_CALChanged()
    End Sub
    Partial Private Sub OnDAY_EXPAND_CALChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDAY_EXPAND_CALChanged()
    End Sub
    Partial Private Sub OnDAY_ALL_CALChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDAY_ALL_CALChanged()
    End Sub
    Partial Private Sub OnDAY_STOP_CALChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDAY_STOP_CALChanged()
    End Sub
    Partial Private Sub OnROUND_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnROUND_COUNTChanged()
    End Sub
    Partial Private Sub OnDAY_EXPAND_PER_ROUNDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDAY_EXPAND_PER_ROUNDChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnCTZIDChanging(value As String)
    End Sub
    Partial Private Sub OnCTZIDChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_TYPE_REQUESTS_IDA", DbType:="Int")>  _
	Public Property FK_TYPE_REQUESTS_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_TYPE_REQUESTS_IDA
		End Get
		Set
			If (Me._FK_TYPE_REQUESTS_IDA.Equals(value) = false) Then
				Me.OnFK_TYPE_REQUESTS_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_TYPE_REQUESTS_IDA = value
				Me.SendPropertyChanged("FK_TYPE_REQUESTS_IDA")
				Me.OnFK_TYPE_REQUESTS_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NAME() As String
		Get
			Return Me._DRUG_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_NAME, value) = false) Then
				Me.OnDRUG_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NAME = value
				Me.SendPropertyChanged("DRUG_NAME")
				Me.OnDRUG_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_DISPLAY() As String
		Get
			Return Me._RCVNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVNO_DISPLAY, value) = false) Then
				Me.OnRCVNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_DISPLAY = value
				Me.SendPropertyChanged("RCVNO_DISPLAY")
				Me.OnRCVNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_TEXT", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_TEXT() As String
		Get
			Return Me._RCVNO_TEXT
		End Get
		Set
			If (String.Equals(Me._RCVNO_TEXT, value) = false) Then
				Me.OnRCVNO_TEXTChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_TEXT = value
				Me.SendPropertyChanged("RCVNO_TEXT")
				Me.OnRCVNO_TEXTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_FOLLOW", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_FOLLOW() As String
		Get
			Return Me._RCVNO_FOLLOW
		End Get
		Set
			If (String.Equals(Me._RCVNO_FOLLOW, value) = false) Then
				Me.OnRCVNO_FOLLOWChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_FOLLOW = value
				Me.SendPropertyChanged("RCVNO_FOLLOW")
				Me.OnRCVNO_FOLLOWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_START_DATE_COUNT", DbType:="DateTime")>  _
	Public Property START_DATE_COUNT() As System.Nullable(Of Date)
		Get
			Return Me._START_DATE_COUNT
		End Get
		Set
			If (Me._START_DATE_COUNT.Equals(value) = false) Then
				Me.OnSTART_DATE_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._START_DATE_COUNT = value
				Me.SendPropertyChanged("START_DATE_COUNT")
				Me.OnSTART_DATE_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_END_DATE_COUNT", DbType:="DateTime")>  _
	Public Property END_DATE_COUNT() As System.Nullable(Of Date)
		Get
			Return Me._END_DATE_COUNT
		End Get
		Set
			If (Me._END_DATE_COUNT.Equals(value) = false) Then
				Me.OnEND_DATE_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._END_DATE_COUNT = value
				Me.SendPropertyChanged("END_DATE_COUNT")
				Me.OnEND_DATE_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_ENABLE", DbType:="Bit")>  _
	Public Property IS_ENABLE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_ENABLE
		End Get
		Set
			If (Me._IS_ENABLE.Equals(value) = false) Then
				Me.OnIS_ENABLEChanging(value)
				Me.SendPropertyChanging
				Me._IS_ENABLE = value
				Me.SendPropertyChanged("IS_ENABLE")
				Me.OnIS_ENABLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAY_FIXED", DbType:="Int")>  _
	Public Property DAY_FIXED() As System.Nullable(Of Integer)
		Get
			Return Me._DAY_FIXED
		End Get
		Set
			If (Me._DAY_FIXED.Equals(value) = false) Then
				Me.OnDAY_FIXEDChanging(value)
				Me.SendPropertyChanging
				Me._DAY_FIXED = value
				Me.SendPropertyChanged("DAY_FIXED")
				Me.OnDAY_FIXEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REAL_DAY_USE", DbType:="Int")>  _
	Public Property REAL_DAY_USE() As System.Nullable(Of Integer)
		Get
			Return Me._REAL_DAY_USE
		End Get
		Set
			If (Me._REAL_DAY_USE.Equals(value) = false) Then
				Me.OnREAL_DAY_USEChanging(value)
				Me.SendPropertyChanging
				Me._REAL_DAY_USE = value
				Me.SendPropertyChanged("REAL_DAY_USE")
				Me.OnREAL_DAY_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAY_FIXED_CAL", DbType:="Int")>  _
	Public Property DAY_FIXED_CAL() As System.Nullable(Of Integer)
		Get
			Return Me._DAY_FIXED_CAL
		End Get
		Set
			If (Me._DAY_FIXED_CAL.Equals(value) = false) Then
				Me.OnDAY_FIXED_CALChanging(value)
				Me.SendPropertyChanging
				Me._DAY_FIXED_CAL = value
				Me.SendPropertyChanged("DAY_FIXED_CAL")
				Me.OnDAY_FIXED_CALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAY_EXPAND_CAL", DbType:="Int")>  _
	Public Property DAY_EXPAND_CAL() As System.Nullable(Of Integer)
		Get
			Return Me._DAY_EXPAND_CAL
		End Get
		Set
			If (Me._DAY_EXPAND_CAL.Equals(value) = false) Then
				Me.OnDAY_EXPAND_CALChanging(value)
				Me.SendPropertyChanging
				Me._DAY_EXPAND_CAL = value
				Me.SendPropertyChanged("DAY_EXPAND_CAL")
				Me.OnDAY_EXPAND_CALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAY_ALL_CAL", DbType:="Int")>  _
	Public Property DAY_ALL_CAL() As System.Nullable(Of Integer)
		Get
			Return Me._DAY_ALL_CAL
		End Get
		Set
			If (Me._DAY_ALL_CAL.Equals(value) = false) Then
				Me.OnDAY_ALL_CALChanging(value)
				Me.SendPropertyChanging
				Me._DAY_ALL_CAL = value
				Me.SendPropertyChanged("DAY_ALL_CAL")
				Me.OnDAY_ALL_CALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAY_STOP_CAL", DbType:="Int")>  _
	Public Property DAY_STOP_CAL() As System.Nullable(Of Integer)
		Get
			Return Me._DAY_STOP_CAL
		End Get
		Set
			If (Me._DAY_STOP_CAL.Equals(value) = false) Then
				Me.OnDAY_STOP_CALChanging(value)
				Me.SendPropertyChanging
				Me._DAY_STOP_CAL = value
				Me.SendPropertyChanged("DAY_STOP_CAL")
				Me.OnDAY_STOP_CALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROUND_COUNT", DbType:="Int")>  _
	Public Property ROUND_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._ROUND_COUNT
		End Get
		Set
			If (Me._ROUND_COUNT.Equals(value) = false) Then
				Me.OnROUND_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._ROUND_COUNT = value
				Me.SendPropertyChanged("ROUND_COUNT")
				Me.OnROUND_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAY_EXPAND_PER_ROUND", DbType:="Int")>  _
	Public Property DAY_EXPAND_PER_ROUND() As System.Nullable(Of Integer)
		Get
			Return Me._DAY_EXPAND_PER_ROUND
		End Get
		Set
			If (Me._DAY_EXPAND_PER_ROUND.Equals(value) = false) Then
				Me.OnDAY_EXPAND_PER_ROUNDChanging(value)
				Me.SendPropertyChanging
				Me._DAY_EXPAND_PER_ROUND = value
				Me.SendPropertyChanged("DAY_EXPAND_PER_ROUND")
				Me.OnDAY_EXPAND_PER_ROUNDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO() As String
		Get
			Return Me._RCVNO
		End Get
		Set
			If (String.Equals(Me._RCVNO, value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CTZID", DbType:="NVarChar(50)")>  _
	Public Property CTZID() As String
		Get
			Return Me._CTZID
		End Get
		Set
			If (String.Equals(Me._CTZID, value) = false) Then
				Me.OnCTZIDChanging(value)
				Me.SendPropertyChanging
				Me._CTZID = value
				Me.SendPropertyChanged("CTZID")
				Me.OnCTZIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_TYPE", DbType:="Int")>  _
	Public Property PRODUCT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PRODUCT_TYPE
		End Get
		Set
			If (Me._PRODUCT_TYPE.Equals(value) = false) Then
				Me.OnPRODUCT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_TYPE = value
				Me.SendPropertyChanged("PRODUCT_TYPE")
				Me.OnPRODUCT_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUG_PRODUCT_NAME")>  _
Partial Public Class MAS_DRUG_PRODUCT_NAME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PRODUCT_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPRODUCT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_NAME() As String
		Get
			Return Me._PRODUCT_NAME
		End Get
		Set
			If (String.Equals(Me._PRODUCT_NAME, value) = false) Then
				Me.OnPRODUCT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_NAME = value
				Me.SendPropertyChanged("PRODUCT_NAME")
				Me.OnPRODUCT_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_PRODUCTION_GROUP")>  _
Partial Public Class DALCN_PRODUCTION_GROUP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _PRODUCT1 As String
	
	Private _PRODUCT2 As String
	
	Private _PRODUCT3 As String
	
	Private _PRODUCT4 As String
	
	Private _PRODUCT5 As String
	
	Private _PRODUCT6 As String
	
	Private _PRODUCT7 As String
	
	Private _PRODUCT8 As String
	
	Private _PRODUCT9 As String
	
	Private _PRODUCT10 As String
	
	Private _CONTAIN1 As String
	
	Private _CONTAIN2 As String
	
	Private _CONTAIN3 As String
	
	Private _CONTAIN4 As String
	
	Private _CONTAIN5 As String
	
	Private _CONTAIN6 As String
	
	Private _CONTAIN7 As String
	
	Private _CONTAIN8 As String
	
	Private _CONTAIN9 As String
	
	Private _CONTAIN10 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnPRODUCT1Changing(value As String)
    End Sub
    Partial Private Sub OnPRODUCT1Changed()
    End Sub
    Partial Private Sub OnPRODUCT2Changing(value As String)
    End Sub
    Partial Private Sub OnPRODUCT2Changed()
    End Sub
    Partial Private Sub OnPRODUCT3Changing(value As String)
    End Sub
    Partial Private Sub OnPRODUCT3Changed()
    End Sub
    Partial Private Sub OnPRODUCT4Changing(value As String)
    End Sub
    Partial Private Sub OnPRODUCT4Changed()
    End Sub
    Partial Private Sub OnPRODUCT5Changing(value As String)
    End Sub
    Partial Private Sub OnPRODUCT5Changed()
    End Sub
    Partial Private Sub OnPRODUCT6Changing(value As String)
    End Sub
    Partial Private Sub OnPRODUCT6Changed()
    End Sub
    Partial Private Sub OnPRODUCT7Changing(value As String)
    End Sub
    Partial Private Sub OnPRODUCT7Changed()
    End Sub
    Partial Private Sub OnPRODUCT8Changing(value As String)
    End Sub
    Partial Private Sub OnPRODUCT8Changed()
    End Sub
    Partial Private Sub OnPRODUCT9Changing(value As String)
    End Sub
    Partial Private Sub OnPRODUCT9Changed()
    End Sub
    Partial Private Sub OnPRODUCT10Changing(value As String)
    End Sub
    Partial Private Sub OnPRODUCT10Changed()
    End Sub
    Partial Private Sub OnCONTAIN1Changing(value As String)
    End Sub
    Partial Private Sub OnCONTAIN1Changed()
    End Sub
    Partial Private Sub OnCONTAIN2Changing(value As String)
    End Sub
    Partial Private Sub OnCONTAIN2Changed()
    End Sub
    Partial Private Sub OnCONTAIN3Changing(value As String)
    End Sub
    Partial Private Sub OnCONTAIN3Changed()
    End Sub
    Partial Private Sub OnCONTAIN4Changing(value As String)
    End Sub
    Partial Private Sub OnCONTAIN4Changed()
    End Sub
    Partial Private Sub OnCONTAIN5Changing(value As String)
    End Sub
    Partial Private Sub OnCONTAIN5Changed()
    End Sub
    Partial Private Sub OnCONTAIN6Changing(value As String)
    End Sub
    Partial Private Sub OnCONTAIN6Changed()
    End Sub
    Partial Private Sub OnCONTAIN7Changing(value As String)
    End Sub
    Partial Private Sub OnCONTAIN7Changed()
    End Sub
    Partial Private Sub OnCONTAIN8Changing(value As String)
    End Sub
    Partial Private Sub OnCONTAIN8Changed()
    End Sub
    Partial Private Sub OnCONTAIN9Changing(value As String)
    End Sub
    Partial Private Sub OnCONTAIN9Changed()
    End Sub
    Partial Private Sub OnCONTAIN10Changing(value As String)
    End Sub
    Partial Private Sub OnCONTAIN10Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT1", DbType:="NVarChar(50)")>  _
	Public Property PRODUCT1() As String
		Get
			Return Me._PRODUCT1
		End Get
		Set
			If (String.Equals(Me._PRODUCT1, value) = false) Then
				Me.OnPRODUCT1Changing(value)
				Me.SendPropertyChanging
				Me._PRODUCT1 = value
				Me.SendPropertyChanged("PRODUCT1")
				Me.OnPRODUCT1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT2", DbType:="NVarChar(50)")>  _
	Public Property PRODUCT2() As String
		Get
			Return Me._PRODUCT2
		End Get
		Set
			If (String.Equals(Me._PRODUCT2, value) = false) Then
				Me.OnPRODUCT2Changing(value)
				Me.SendPropertyChanging
				Me._PRODUCT2 = value
				Me.SendPropertyChanged("PRODUCT2")
				Me.OnPRODUCT2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT3", DbType:="NVarChar(50)")>  _
	Public Property PRODUCT3() As String
		Get
			Return Me._PRODUCT3
		End Get
		Set
			If (String.Equals(Me._PRODUCT3, value) = false) Then
				Me.OnPRODUCT3Changing(value)
				Me.SendPropertyChanging
				Me._PRODUCT3 = value
				Me.SendPropertyChanged("PRODUCT3")
				Me.OnPRODUCT3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT4", DbType:="NVarChar(50)")>  _
	Public Property PRODUCT4() As String
		Get
			Return Me._PRODUCT4
		End Get
		Set
			If (String.Equals(Me._PRODUCT4, value) = false) Then
				Me.OnPRODUCT4Changing(value)
				Me.SendPropertyChanging
				Me._PRODUCT4 = value
				Me.SendPropertyChanged("PRODUCT4")
				Me.OnPRODUCT4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT5", DbType:="NVarChar(50)")>  _
	Public Property PRODUCT5() As String
		Get
			Return Me._PRODUCT5
		End Get
		Set
			If (String.Equals(Me._PRODUCT5, value) = false) Then
				Me.OnPRODUCT5Changing(value)
				Me.SendPropertyChanging
				Me._PRODUCT5 = value
				Me.SendPropertyChanged("PRODUCT5")
				Me.OnPRODUCT5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT6", DbType:="NVarChar(50)")>  _
	Public Property PRODUCT6() As String
		Get
			Return Me._PRODUCT6
		End Get
		Set
			If (String.Equals(Me._PRODUCT6, value) = false) Then
				Me.OnPRODUCT6Changing(value)
				Me.SendPropertyChanging
				Me._PRODUCT6 = value
				Me.SendPropertyChanged("PRODUCT6")
				Me.OnPRODUCT6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT7", DbType:="NVarChar(50)")>  _
	Public Property PRODUCT7() As String
		Get
			Return Me._PRODUCT7
		End Get
		Set
			If (String.Equals(Me._PRODUCT7, value) = false) Then
				Me.OnPRODUCT7Changing(value)
				Me.SendPropertyChanging
				Me._PRODUCT7 = value
				Me.SendPropertyChanged("PRODUCT7")
				Me.OnPRODUCT7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT8", DbType:="NVarChar(50)")>  _
	Public Property PRODUCT8() As String
		Get
			Return Me._PRODUCT8
		End Get
		Set
			If (String.Equals(Me._PRODUCT8, value) = false) Then
				Me.OnPRODUCT8Changing(value)
				Me.SendPropertyChanging
				Me._PRODUCT8 = value
				Me.SendPropertyChanged("PRODUCT8")
				Me.OnPRODUCT8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT9", DbType:="NVarChar(50)")>  _
	Public Property PRODUCT9() As String
		Get
			Return Me._PRODUCT9
		End Get
		Set
			If (String.Equals(Me._PRODUCT9, value) = false) Then
				Me.OnPRODUCT9Changing(value)
				Me.SendPropertyChanging
				Me._PRODUCT9 = value
				Me.SendPropertyChanged("PRODUCT9")
				Me.OnPRODUCT9Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT10", DbType:="NVarChar(50)")>  _
	Public Property PRODUCT10() As String
		Get
			Return Me._PRODUCT10
		End Get
		Set
			If (String.Equals(Me._PRODUCT10, value) = false) Then
				Me.OnPRODUCT10Changing(value)
				Me.SendPropertyChanging
				Me._PRODUCT10 = value
				Me.SendPropertyChanged("PRODUCT10")
				Me.OnPRODUCT10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTAIN1", DbType:="NVarChar(50)")>  _
	Public Property CONTAIN1() As String
		Get
			Return Me._CONTAIN1
		End Get
		Set
			If (String.Equals(Me._CONTAIN1, value) = false) Then
				Me.OnCONTAIN1Changing(value)
				Me.SendPropertyChanging
				Me._CONTAIN1 = value
				Me.SendPropertyChanged("CONTAIN1")
				Me.OnCONTAIN1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTAIN2", DbType:="NVarChar(50)")>  _
	Public Property CONTAIN2() As String
		Get
			Return Me._CONTAIN2
		End Get
		Set
			If (String.Equals(Me._CONTAIN2, value) = false) Then
				Me.OnCONTAIN2Changing(value)
				Me.SendPropertyChanging
				Me._CONTAIN2 = value
				Me.SendPropertyChanged("CONTAIN2")
				Me.OnCONTAIN2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTAIN3", DbType:="NVarChar(50)")>  _
	Public Property CONTAIN3() As String
		Get
			Return Me._CONTAIN3
		End Get
		Set
			If (String.Equals(Me._CONTAIN3, value) = false) Then
				Me.OnCONTAIN3Changing(value)
				Me.SendPropertyChanging
				Me._CONTAIN3 = value
				Me.SendPropertyChanged("CONTAIN3")
				Me.OnCONTAIN3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTAIN4", DbType:="NVarChar(50)")>  _
	Public Property CONTAIN4() As String
		Get
			Return Me._CONTAIN4
		End Get
		Set
			If (String.Equals(Me._CONTAIN4, value) = false) Then
				Me.OnCONTAIN4Changing(value)
				Me.SendPropertyChanging
				Me._CONTAIN4 = value
				Me.SendPropertyChanged("CONTAIN4")
				Me.OnCONTAIN4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTAIN5", DbType:="NVarChar(50)")>  _
	Public Property CONTAIN5() As String
		Get
			Return Me._CONTAIN5
		End Get
		Set
			If (String.Equals(Me._CONTAIN5, value) = false) Then
				Me.OnCONTAIN5Changing(value)
				Me.SendPropertyChanging
				Me._CONTAIN5 = value
				Me.SendPropertyChanged("CONTAIN5")
				Me.OnCONTAIN5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTAIN6", DbType:="NVarChar(50)")>  _
	Public Property CONTAIN6() As String
		Get
			Return Me._CONTAIN6
		End Get
		Set
			If (String.Equals(Me._CONTAIN6, value) = false) Then
				Me.OnCONTAIN6Changing(value)
				Me.SendPropertyChanging
				Me._CONTAIN6 = value
				Me.SendPropertyChanged("CONTAIN6")
				Me.OnCONTAIN6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTAIN7", DbType:="NVarChar(50)")>  _
	Public Property CONTAIN7() As String
		Get
			Return Me._CONTAIN7
		End Get
		Set
			If (String.Equals(Me._CONTAIN7, value) = false) Then
				Me.OnCONTAIN7Changing(value)
				Me.SendPropertyChanging
				Me._CONTAIN7 = value
				Me.SendPropertyChanged("CONTAIN7")
				Me.OnCONTAIN7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTAIN8", DbType:="NVarChar(50)")>  _
	Public Property CONTAIN8() As String
		Get
			Return Me._CONTAIN8
		End Get
		Set
			If (String.Equals(Me._CONTAIN8, value) = false) Then
				Me.OnCONTAIN8Changing(value)
				Me.SendPropertyChanging
				Me._CONTAIN8 = value
				Me.SendPropertyChanged("CONTAIN8")
				Me.OnCONTAIN8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTAIN9", DbType:="NVarChar(50)")>  _
	Public Property CONTAIN9() As String
		Get
			Return Me._CONTAIN9
		End Get
		Set
			If (String.Equals(Me._CONTAIN9, value) = false) Then
				Me.OnCONTAIN9Changing(value)
				Me.SendPropertyChanging
				Me._CONTAIN9 = value
				Me.SendPropertyChanged("CONTAIN9")
				Me.OnCONTAIN9Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTAIN10", DbType:="NVarChar(50)")>  _
	Public Property CONTAIN10() As String
		Get
			Return Me._CONTAIN10
		End Get
		Set
			If (String.Equals(Me._CONTAIN10, value) = false) Then
				Me.OnCONTAIN10Changing(value)
				Me.SendPropertyChanging
				Me._CONTAIN10 = value
				Me.SendPropertyChanged("CONTAIN10")
				Me.OnCONTAIN10Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUG_GROUP_HEAD")>  _
Partial Public Class MAS_DRUG_GROUP_HEAD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _FK_TYPE As System.Nullable(Of Integer)
	
	Private _TYPE_SELECTED As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnFK_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_TYPEChanged()
    End Sub
    Partial Private Sub OnTYPE_SELECTEDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_SELECTEDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_TYPE", DbType:="Int")>  _
	Public Property FK_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._FK_TYPE
		End Get
		Set
			If (Me._FK_TYPE.Equals(value) = false) Then
				Me.OnFK_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._FK_TYPE = value
				Me.SendPropertyChanged("FK_TYPE")
				Me.OnFK_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_SELECTED", DbType:="Int")>  _
	Public Property TYPE_SELECTED() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_SELECTED
		End Get
		Set
			If (Me._TYPE_SELECTED.Equals(value) = false) Then
				Me.OnTYPE_SELECTEDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_SELECTED = value
				Me.SendPropertyChanged("TYPE_SELECTED")
				Me.OnTYPE_SELECTEDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACKING_DETAIL_STATUS")>  _
Partial Public Class E_TRACKING_DETAIL_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _NEWCODE As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _STATUS_DATE As System.Nullable(Of Date)
	
	Private _rcvno As String
	
	Private _ctzid As String
	
	Private _rgttpcd As String
	
	Private _IS_SUB_STATUS As System.Nullable(Of Integer)
	
	Private _MAIN_STATUS_ID As System.Nullable(Of Integer)
	
	Private _STATUS_INDEX As System.Nullable(Of Integer)
	
	Private _PRODUCT_TYPE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNEWCODEChanging(value As String)
    End Sub
    Partial Private Sub OnNEWCODEChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTATUS_DATEChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnctzidChanging(value As String)
    End Sub
    Partial Private Sub OnctzidChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnIS_SUB_STATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIS_SUB_STATUSChanged()
    End Sub
    Partial Private Sub OnMAIN_STATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMAIN_STATUS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_INDEXChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_INDEXChanged()
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEWCODE", DbType:="NVarChar(MAX)")>  _
	Public Property NEWCODE() As String
		Get
			Return Me._NEWCODE
		End Get
		Set
			If (String.Equals(Me._NEWCODE, value) = false) Then
				Me.OnNEWCODEChanging(value)
				Me.SendPropertyChanging
				Me._NEWCODE = value
				Me.SendPropertyChanged("NEWCODE")
				Me.OnNEWCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_DATE", DbType:="DateTime")>  _
	Public Property STATUS_DATE() As System.Nullable(Of Date)
		Get
			Return Me._STATUS_DATE
		End Get
		Set
			If (Me._STATUS_DATE.Equals(value) = false) Then
				Me.OnSTATUS_DATEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_DATE = value
				Me.SendPropertyChanged("STATUS_DATE")
				Me.OnSTATUS_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(MAX)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctzid", DbType:="NVarChar(MAX)")>  _
	Public Property ctzid() As String
		Get
			Return Me._ctzid
		End Get
		Set
			If (String.Equals(Me._ctzid, value) = false) Then
				Me.OnctzidChanging(value)
				Me.SendPropertyChanging
				Me._ctzid = value
				Me.SendPropertyChanged("ctzid")
				Me.OnctzidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_SUB_STATUS", DbType:="Int")>  _
	Public Property IS_SUB_STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._IS_SUB_STATUS
		End Get
		Set
			If (Me._IS_SUB_STATUS.Equals(value) = false) Then
				Me.OnIS_SUB_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._IS_SUB_STATUS = value
				Me.SendPropertyChanged("IS_SUB_STATUS")
				Me.OnIS_SUB_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAIN_STATUS_ID", DbType:="Int")>  _
	Public Property MAIN_STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MAIN_STATUS_ID
		End Get
		Set
			If (Me._MAIN_STATUS_ID.Equals(value) = false) Then
				Me.OnMAIN_STATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._MAIN_STATUS_ID = value
				Me.SendPropertyChanged("MAIN_STATUS_ID")
				Me.OnMAIN_STATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_INDEX", DbType:="Int")>  _
	Public Property STATUS_INDEX() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_INDEX
		End Get
		Set
			If (Me._STATUS_INDEX.Equals(value) = false) Then
				Me.OnSTATUS_INDEXChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_INDEX = value
				Me.SendPropertyChanged("STATUS_INDEX")
				Me.OnSTATUS_INDEXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_TYPE", DbType:="Int")>  _
	Public Property PRODUCT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PRODUCT_TYPE
		End Get
		Set
			If (Me._PRODUCT_TYPE.Equals(value) = false) Then
				Me.OnPRODUCT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_TYPE = value
				Me.SendPropertyChanged("PRODUCT_TYPE")
				Me.OnPRODUCT_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_E_TRACKING_STATUS_NAME")>  _
Partial Public Class MAS_E_TRACKING_STATUS_NAME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _HEAD_STATUS As System.Nullable(Of Integer)
	
	Private _MILE_STONE_ID As System.Nullable(Of Integer)
	
	Private _STAGE_NAME As String
	
	Private _STATUS_DATE_NAME As String
	
	Private _BALL_TIME As System.Nullable(Of Integer)
	
	Private _STAFF_STATUS As String
	
	Private _CLIENT_STATUS As String
	
	Private _EXTRA_STATUS As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnHEAD_STATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEAD_STATUSChanged()
    End Sub
    Partial Private Sub OnMILE_STONE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMILE_STONE_IDChanged()
    End Sub
    Partial Private Sub OnSTAGE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTAGE_NAMEChanged()
    End Sub
    Partial Private Sub OnSTATUS_DATE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_DATE_NAMEChanged()
    End Sub
    Partial Private Sub OnBALL_TIMEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBALL_TIMEChanged()
    End Sub
    Partial Private Sub OnSTAFF_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_STATUSChanged()
    End Sub
    Partial Private Sub OnCLIENT_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnCLIENT_STATUSChanged()
    End Sub
    Partial Private Sub OnEXTRA_STATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEXTRA_STATUSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_STATUS", DbType:="Int")>  _
	Public Property HEAD_STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_STATUS
		End Get
		Set
			If (Me._HEAD_STATUS.Equals(value) = false) Then
				Me.OnHEAD_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_STATUS = value
				Me.SendPropertyChanged("HEAD_STATUS")
				Me.OnHEAD_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MILE_STONE_ID", DbType:="Int")>  _
	Public Property MILE_STONE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MILE_STONE_ID
		End Get
		Set
			If (Me._MILE_STONE_ID.Equals(value) = false) Then
				Me.OnMILE_STONE_IDChanging(value)
				Me.SendPropertyChanging
				Me._MILE_STONE_ID = value
				Me.SendPropertyChanged("MILE_STONE_ID")
				Me.OnMILE_STONE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAGE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STAGE_NAME() As String
		Get
			Return Me._STAGE_NAME
		End Get
		Set
			If (String.Equals(Me._STAGE_NAME, value) = false) Then
				Me.OnSTAGE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STAGE_NAME = value
				Me.SendPropertyChanged("STAGE_NAME")
				Me.OnSTAGE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_DATE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS_DATE_NAME() As String
		Get
			Return Me._STATUS_DATE_NAME
		End Get
		Set
			If (String.Equals(Me._STATUS_DATE_NAME, value) = false) Then
				Me.OnSTATUS_DATE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_DATE_NAME = value
				Me.SendPropertyChanged("STATUS_DATE_NAME")
				Me.OnSTATUS_DATE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BALL_TIME", DbType:="Int")>  _
	Public Property BALL_TIME() As System.Nullable(Of Integer)
		Get
			Return Me._BALL_TIME
		End Get
		Set
			If (Me._BALL_TIME.Equals(value) = false) Then
				Me.OnBALL_TIMEChanging(value)
				Me.SendPropertyChanging
				Me._BALL_TIME = value
				Me.SendPropertyChanged("BALL_TIME")
				Me.OnBALL_TIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_STATUS", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_STATUS() As String
		Get
			Return Me._STAFF_STATUS
		End Get
		Set
			If (String.Equals(Me._STAFF_STATUS, value) = false) Then
				Me.OnSTAFF_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_STATUS = value
				Me.SendPropertyChanged("STAFF_STATUS")
				Me.OnSTAFF_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CLIENT_STATUS", DbType:="NVarChar(MAX)")>  _
	Public Property CLIENT_STATUS() As String
		Get
			Return Me._CLIENT_STATUS
		End Get
		Set
			If (String.Equals(Me._CLIENT_STATUS, value) = false) Then
				Me.OnCLIENT_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._CLIENT_STATUS = value
				Me.SendPropertyChanged("CLIENT_STATUS")
				Me.OnCLIENT_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXTRA_STATUS", DbType:="Int")>  _
	Public Property EXTRA_STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._EXTRA_STATUS
		End Get
		Set
			If (Me._EXTRA_STATUS.Equals(value) = false) Then
				Me.OnEXTRA_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._EXTRA_STATUS = value
				Me.SendPropertyChanged("EXTRA_STATUS")
				Me.OnEXTRA_STATUSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACKING_EXPERT_ROUND")>  _
Partial Public Class E_TRACKING_EXPERT_ROUND
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _ROUND_NUM As System.Nullable(Of Integer)
	
	Private _ROUND_DATE_START As System.Nullable(Of Date)
	
	Private _ROUNT_DATE_END As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnROUND_NUMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnROUND_NUMChanged()
    End Sub
    Partial Private Sub OnROUND_DATE_STARTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnROUND_DATE_STARTChanged()
    End Sub
    Partial Private Sub OnROUNT_DATE_ENDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnROUNT_DATE_ENDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROUND_NUM", DbType:="Int")>  _
	Public Property ROUND_NUM() As System.Nullable(Of Integer)
		Get
			Return Me._ROUND_NUM
		End Get
		Set
			If (Me._ROUND_NUM.Equals(value) = false) Then
				Me.OnROUND_NUMChanging(value)
				Me.SendPropertyChanging
				Me._ROUND_NUM = value
				Me.SendPropertyChanged("ROUND_NUM")
				Me.OnROUND_NUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROUND_DATE_START", DbType:="DateTime")>  _
	Public Property ROUND_DATE_START() As System.Nullable(Of Date)
		Get
			Return Me._ROUND_DATE_START
		End Get
		Set
			If (Me._ROUND_DATE_START.Equals(value) = false) Then
				Me.OnROUND_DATE_STARTChanging(value)
				Me.SendPropertyChanging
				Me._ROUND_DATE_START = value
				Me.SendPropertyChanged("ROUND_DATE_START")
				Me.OnROUND_DATE_STARTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROUNT_DATE_END", DbType:="DateTime")>  _
	Public Property ROUNT_DATE_END() As System.Nullable(Of Date)
		Get
			Return Me._ROUNT_DATE_END
		End Get
		Set
			If (Me._ROUNT_DATE_END.Equals(value) = false) Then
				Me.OnROUNT_DATE_ENDChanging(value)
				Me.SendPropertyChanging
				Me._ROUNT_DATE_END = value
				Me.SendPropertyChanged("ROUNT_DATE_END")
				Me.OnROUNT_DATE_ENDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACKING_CURRENT_STATUS")>  _
Partial Public Class E_TRACKING_CURRENT_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _NEWCODE As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _STATUS_DATE As System.Nullable(Of Date)
	
	Private _rcvno As String
	
	Private _ctzid As String
	
	Private _rgttpcd As String
	
	Private _IS_SUB_STATUS As System.Nullable(Of Integer)
	
	Private _MAIN_STATUS_ID As System.Nullable(Of Integer)
	
	Private _STATUS_INDEX As System.Nullable(Of Integer)
	
	Private _PRODUCT_TYPE As System.Nullable(Of Integer)
	
	Private _IS_EXTRA_STAGE As System.Nullable(Of Integer)
	
	Private _HEAD_STATUS_ID As System.Nullable(Of Integer)
	
	Private _SUB_PRODUCT_TYPE As System.Nullable(Of Integer)
	
	Private _EXPORT_TO_SUB_DATE As System.Nullable(Of Date)
	
	Private _drgtpcd As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNEWCODEChanging(value As String)
    End Sub
    Partial Private Sub OnNEWCODEChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTATUS_DATEChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnctzidChanging(value As String)
    End Sub
    Partial Private Sub OnctzidChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnIS_SUB_STATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIS_SUB_STATUSChanged()
    End Sub
    Partial Private Sub OnMAIN_STATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMAIN_STATUS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_INDEXChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_INDEXChanged()
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanged()
    End Sub
    Partial Private Sub OnIS_EXTRA_STAGEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIS_EXTRA_STAGEChanged()
    End Sub
    Partial Private Sub OnHEAD_STATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEAD_STATUS_IDChanged()
    End Sub
    Partial Private Sub OnSUB_PRODUCT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUB_PRODUCT_TYPEChanged()
    End Sub
    Partial Private Sub OnEXPORT_TO_SUB_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEXPORT_TO_SUB_DATEChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEWCODE", DbType:="NVarChar(MAX)")>  _
	Public Property NEWCODE() As String
		Get
			Return Me._NEWCODE
		End Get
		Set
			If (String.Equals(Me._NEWCODE, value) = false) Then
				Me.OnNEWCODEChanging(value)
				Me.SendPropertyChanging
				Me._NEWCODE = value
				Me.SendPropertyChanged("NEWCODE")
				Me.OnNEWCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_DATE", DbType:="DateTime")>  _
	Public Property STATUS_DATE() As System.Nullable(Of Date)
		Get
			Return Me._STATUS_DATE
		End Get
		Set
			If (Me._STATUS_DATE.Equals(value) = false) Then
				Me.OnSTATUS_DATEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_DATE = value
				Me.SendPropertyChanged("STATUS_DATE")
				Me.OnSTATUS_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(MAX)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctzid", DbType:="NVarChar(MAX)")>  _
	Public Property ctzid() As String
		Get
			Return Me._ctzid
		End Get
		Set
			If (String.Equals(Me._ctzid, value) = false) Then
				Me.OnctzidChanging(value)
				Me.SendPropertyChanging
				Me._ctzid = value
				Me.SendPropertyChanged("ctzid")
				Me.OnctzidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_SUB_STATUS", DbType:="Int")>  _
	Public Property IS_SUB_STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._IS_SUB_STATUS
		End Get
		Set
			If (Me._IS_SUB_STATUS.Equals(value) = false) Then
				Me.OnIS_SUB_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._IS_SUB_STATUS = value
				Me.SendPropertyChanged("IS_SUB_STATUS")
				Me.OnIS_SUB_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAIN_STATUS_ID", DbType:="Int")>  _
	Public Property MAIN_STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MAIN_STATUS_ID
		End Get
		Set
			If (Me._MAIN_STATUS_ID.Equals(value) = false) Then
				Me.OnMAIN_STATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._MAIN_STATUS_ID = value
				Me.SendPropertyChanged("MAIN_STATUS_ID")
				Me.OnMAIN_STATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_INDEX", DbType:="Int")>  _
	Public Property STATUS_INDEX() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_INDEX
		End Get
		Set
			If (Me._STATUS_INDEX.Equals(value) = false) Then
				Me.OnSTATUS_INDEXChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_INDEX = value
				Me.SendPropertyChanged("STATUS_INDEX")
				Me.OnSTATUS_INDEXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_TYPE", DbType:="Int")>  _
	Public Property PRODUCT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PRODUCT_TYPE
		End Get
		Set
			If (Me._PRODUCT_TYPE.Equals(value) = false) Then
				Me.OnPRODUCT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_TYPE = value
				Me.SendPropertyChanged("PRODUCT_TYPE")
				Me.OnPRODUCT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_EXTRA_STAGE", DbType:="Int")>  _
	Public Property IS_EXTRA_STAGE() As System.Nullable(Of Integer)
		Get
			Return Me._IS_EXTRA_STAGE
		End Get
		Set
			If (Me._IS_EXTRA_STAGE.Equals(value) = false) Then
				Me.OnIS_EXTRA_STAGEChanging(value)
				Me.SendPropertyChanging
				Me._IS_EXTRA_STAGE = value
				Me.SendPropertyChanged("IS_EXTRA_STAGE")
				Me.OnIS_EXTRA_STAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_STATUS_ID", DbType:="Int")>  _
	Public Property HEAD_STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_STATUS_ID
		End Get
		Set
			If (Me._HEAD_STATUS_ID.Equals(value) = false) Then
				Me.OnHEAD_STATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_STATUS_ID = value
				Me.SendPropertyChanged("HEAD_STATUS_ID")
				Me.OnHEAD_STATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_PRODUCT_TYPE", DbType:="Int")>  _
	Public Property SUB_PRODUCT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._SUB_PRODUCT_TYPE
		End Get
		Set
			If (Me._SUB_PRODUCT_TYPE.Equals(value) = false) Then
				Me.OnSUB_PRODUCT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._SUB_PRODUCT_TYPE = value
				Me.SendPropertyChanged("SUB_PRODUCT_TYPE")
				Me.OnSUB_PRODUCT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPORT_TO_SUB_DATE", DbType:="DateTime")>  _
	Public Property EXPORT_TO_SUB_DATE() As System.Nullable(Of Date)
		Get
			Return Me._EXPORT_TO_SUB_DATE
		End Get
		Set
			If (Me._EXPORT_TO_SUB_DATE.Equals(value) = false) Then
				Me.OnEXPORT_TO_SUB_DATEChanging(value)
				Me.SendPropertyChanging
				Me._EXPORT_TO_SUB_DATE = value
				Me.SendPropertyChanged("EXPORT_TO_SUB_DATE")
				Me.OnEXPORT_TO_SUB_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACKING_STATUS_ADD")>  _
Partial Public Class E_TRACKING_STATUS_ADD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _U1_CODE As String
	
	Private _START_DATE As System.Nullable(Of Date)
	
	Private _END_DATE As System.Nullable(Of Date)
	
	Private _IS_REJECT As System.Nullable(Of Boolean)
	
	Private _STAFF_IDEN As String
	
	Private _EMAIL_TEXT As String
	
	Private _rcvno As String
	
	Private _ctzid As String
	
	Private _rgttpcd As String
	
	Private _drgtpcd As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnU1_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnU1_CODEChanged()
    End Sub
    Partial Private Sub OnSTART_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTART_DATEChanged()
    End Sub
    Partial Private Sub OnEND_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEND_DATEChanged()
    End Sub
    Partial Private Sub OnIS_REJECTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_REJECTChanged()
    End Sub
    Partial Private Sub OnSTAFF_IDENChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_IDENChanged()
    End Sub
    Partial Private Sub OnEMAIL_TEXTChanging(value As String)
    End Sub
    Partial Private Sub OnEMAIL_TEXTChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnctzidChanging(value As String)
    End Sub
    Partial Private Sub OnctzidChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_U1_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property U1_CODE() As String
		Get
			Return Me._U1_CODE
		End Get
		Set
			If (String.Equals(Me._U1_CODE, value) = false) Then
				Me.OnU1_CODEChanging(value)
				Me.SendPropertyChanging
				Me._U1_CODE = value
				Me.SendPropertyChanged("U1_CODE")
				Me.OnU1_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_START_DATE", DbType:="DateTime")>  _
	Public Property START_DATE() As System.Nullable(Of Date)
		Get
			Return Me._START_DATE
		End Get
		Set
			If (Me._START_DATE.Equals(value) = false) Then
				Me.OnSTART_DATEChanging(value)
				Me.SendPropertyChanging
				Me._START_DATE = value
				Me.SendPropertyChanged("START_DATE")
				Me.OnSTART_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_END_DATE", DbType:="DateTime")>  _
	Public Property END_DATE() As System.Nullable(Of Date)
		Get
			Return Me._END_DATE
		End Get
		Set
			If (Me._END_DATE.Equals(value) = false) Then
				Me.OnEND_DATEChanging(value)
				Me.SendPropertyChanging
				Me._END_DATE = value
				Me.SendPropertyChanged("END_DATE")
				Me.OnEND_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_REJECT", DbType:="Bit")>  _
	Public Property IS_REJECT() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_REJECT
		End Get
		Set
			If (Me._IS_REJECT.Equals(value) = false) Then
				Me.OnIS_REJECTChanging(value)
				Me.SendPropertyChanging
				Me._IS_REJECT = value
				Me.SendPropertyChanged("IS_REJECT")
				Me.OnIS_REJECTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_IDEN", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_IDEN() As String
		Get
			Return Me._STAFF_IDEN
		End Get
		Set
			If (String.Equals(Me._STAFF_IDEN, value) = false) Then
				Me.OnSTAFF_IDENChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_IDEN = value
				Me.SendPropertyChanged("STAFF_IDEN")
				Me.OnSTAFF_IDENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL_TEXT", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property EMAIL_TEXT() As String
		Get
			Return Me._EMAIL_TEXT
		End Get
		Set
			If (String.Equals(Me._EMAIL_TEXT, value) = false) Then
				Me.OnEMAIL_TEXTChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL_TEXT = value
				Me.SendPropertyChanged("EMAIL_TEXT")
				Me.OnEMAIL_TEXTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(MAX)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctzid", DbType:="NVarChar(MAX)")>  _
	Public Property ctzid() As String
		Get
			Return Me._ctzid
		End Get
		Set
			If (String.Equals(Me._ctzid, value) = false) Then
				Me.OnctzidChanging(value)
				Me.SendPropertyChanging
				Me._ctzid = value
				Me.SendPropertyChanged("ctzid")
				Me.OnctzidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_REGISTRATION_ATC_DETAIL")>  _
Partial Public Class DRUG_REGISTRATION_ATC_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As Integer
	
	Private _ATC_IDA As System.Nullable(Of Integer)
	
	Private _ATC_CODE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnATC_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnATC_IDAChanged()
    End Sub
    Partial Private Sub OnATC_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnATC_CODEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int NOT NULL")>  _
	Public Property FK_IDA() As Integer
		Get
			Return Me._FK_IDA
		End Get
		Set
			If ((Me._FK_IDA = value)  _
						= false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATC_IDA", DbType:="Int")>  _
	Public Property ATC_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._ATC_IDA
		End Get
		Set
			If (Me._ATC_IDA.Equals(value) = false) Then
				Me.OnATC_IDAChanging(value)
				Me.SendPropertyChanging
				Me._ATC_IDA = value
				Me.SendPropertyChanged("ATC_IDA")
				Me.OnATC_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATC_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property ATC_CODE() As String
		Get
			Return Me._ATC_CODE
		End Get
		Set
			If (String.Equals(Me._ATC_CODE, value) = false) Then
				Me.OnATC_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ATC_CODE = value
				Me.SendPropertyChanged("ATC_CODE")
				Me.OnATC_CODEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_REGISTRATION_PROPERTIES")>  _
Partial Public Class DRUG_REGISTRATION_PROPERTy
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _CHK_DRUG_PROPERTIES As String
	
	Private _DRUG_PROPERTIES As String
	
	Private _CHK_DRUG_PROPERTIES_OTHER As String
	
	Private _DRUG_PROPERTIES_OTHER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnCHK_DRUG_PROPERTIESChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_DRUG_PROPERTIESChanged()
    End Sub
    Partial Private Sub OnDRUG_PROPERTIESChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_PROPERTIESChanged()
    End Sub
    Partial Private Sub OnCHK_DRUG_PROPERTIES_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_DRUG_PROPERTIES_OTHERChanged()
    End Sub
    Partial Private Sub OnDRUG_PROPERTIES_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_PROPERTIES_OTHERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_DRUG_PROPERTIES", DbType:="NVarChar(50)")>  _
	Public Property CHK_DRUG_PROPERTIES() As String
		Get
			Return Me._CHK_DRUG_PROPERTIES
		End Get
		Set
			If (String.Equals(Me._CHK_DRUG_PROPERTIES, value) = false) Then
				Me.OnCHK_DRUG_PROPERTIESChanging(value)
				Me.SendPropertyChanging
				Me._CHK_DRUG_PROPERTIES = value
				Me.SendPropertyChanged("CHK_DRUG_PROPERTIES")
				Me.OnCHK_DRUG_PROPERTIESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_PROPERTIES", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_PROPERTIES() As String
		Get
			Return Me._DRUG_PROPERTIES
		End Get
		Set
			If (String.Equals(Me._DRUG_PROPERTIES, value) = false) Then
				Me.OnDRUG_PROPERTIESChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_PROPERTIES = value
				Me.SendPropertyChanged("DRUG_PROPERTIES")
				Me.OnDRUG_PROPERTIESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_DRUG_PROPERTIES_OTHER", DbType:="NVarChar(50)")>  _
	Public Property CHK_DRUG_PROPERTIES_OTHER() As String
		Get
			Return Me._CHK_DRUG_PROPERTIES_OTHER
		End Get
		Set
			If (String.Equals(Me._CHK_DRUG_PROPERTIES_OTHER, value) = false) Then
				Me.OnCHK_DRUG_PROPERTIES_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._CHK_DRUG_PROPERTIES_OTHER = value
				Me.SendPropertyChanged("CHK_DRUG_PROPERTIES_OTHER")
				Me.OnCHK_DRUG_PROPERTIES_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_PROPERTIES_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_PROPERTIES_OTHER() As String
		Get
			Return Me._DRUG_PROPERTIES_OTHER
		End Get
		Set
			If (String.Equals(Me._DRUG_PROPERTIES_OTHER, value) = false) Then
				Me.OnDRUG_PROPERTIES_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_PROPERTIES_OTHER = value
				Me.SendPropertyChanged("DRUG_PROPERTIES_OTHER")
				Me.OnDRUG_PROPERTIES_OTHERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_FOREIGN_MANUFACTURE")>  _
Partial Public Class CER_FOREIGN_MANUFACTURE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _COMPANY_NAME As String
	
	Private _NAME_ADDRESS As String
	
	Private _ADDRESS_NUMBER As String
	
	Private _ADDRESS_CITY As String
	
	Private _COUNTRY As String
	
	Private _COUNTRY_ID As System.Nullable(Of Integer)
	
	Private _GLN As String
	
	Private _ZIPCODE As String
	
	Private _LOCATION_STANDARD As String
	
	Private _SALE_DATE As System.Nullable(Of Date)
	
	Private _STANDARD_ID As System.Nullable(Of Integer)
	
	Private _COUNTRY_GMP As System.Nullable(Of Integer)
	
	Private _CER_DATE As System.Nullable(Of Date)
	
	Private _addr As String
	
	Private _room As String
	
	Private _mu As String
	
	Private _floor As String
	
	Private _soi As String
	
	Private _building As String
	
	Private _road As String
	
	Private _tel As String
	
	Private _Mobile As String
	
	Private _fax As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanged()
    End Sub
    Partial Private Sub OnNAME_ADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ADDRESSChanged()
    End Sub
    Partial Private Sub OnADDRESS_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_NUMBERChanged()
    End Sub
    Partial Private Sub OnADDRESS_CITYChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_CITYChanged()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_IDChanged()
    End Sub
    Partial Private Sub OnGLNChanging(value As String)
    End Sub
    Partial Private Sub OnGLNChanged()
    End Sub
    Partial Private Sub OnZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIPCODEChanged()
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanged()
    End Sub
    Partial Private Sub OnSALE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSALE_DATEChanged()
    End Sub
    Partial Private Sub OnSTANDARD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTANDARD_IDChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_GMPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_GMPChanged()
    End Sub
    Partial Private Sub OnCER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCER_DATEChanged()
    End Sub
    Partial Private Sub OnaddrChanging(value As String)
    End Sub
    Partial Private Sub OnaddrChanged()
    End Sub
    Partial Private Sub OnroomChanging(value As String)
    End Sub
    Partial Private Sub OnroomChanged()
    End Sub
    Partial Private Sub OnmuChanging(value As String)
    End Sub
    Partial Private Sub OnmuChanged()
    End Sub
    Partial Private Sub OnfloorChanging(value As String)
    End Sub
    Partial Private Sub OnfloorChanged()
    End Sub
    Partial Private Sub OnsoiChanging(value As String)
    End Sub
    Partial Private Sub OnsoiChanged()
    End Sub
    Partial Private Sub OnbuildingChanging(value As String)
    End Sub
    Partial Private Sub OnbuildingChanged()
    End Sub
    Partial Private Sub OnroadChanging(value As String)
    End Sub
    Partial Private Sub OnroadChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnMobileChanging(value As String)
    End Sub
    Partial Private Sub OnMobileChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property COMPANY_NAME() As String
		Get
			Return Me._COMPANY_NAME
		End Get
		Set
			If (String.Equals(Me._COMPANY_NAME, value) = false) Then
				Me.OnCOMPANY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_NAME = value
				Me.SendPropertyChanged("COMPANY_NAME")
				Me.OnCOMPANY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ADDRESS", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ADDRESS() As String
		Get
			Return Me._NAME_ADDRESS
		End Get
		Set
			If (String.Equals(Me._NAME_ADDRESS, value) = false) Then
				Me.OnNAME_ADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ADDRESS = value
				Me.SendPropertyChanged("NAME_ADDRESS")
				Me.OnNAME_ADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_NUMBER() As String
		Get
			Return Me._ADDRESS_NUMBER
		End Get
		Set
			If (String.Equals(Me._ADDRESS_NUMBER, value) = false) Then
				Me.OnADDRESS_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_NUMBER = value
				Me.SendPropertyChanged("ADDRESS_NUMBER")
				Me.OnADDRESS_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_CITY", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_CITY() As String
		Get
			Return Me._ADDRESS_CITY
		End Get
		Set
			If (String.Equals(Me._ADDRESS_CITY, value) = false) Then
				Me.OnADDRESS_CITYChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_CITY = value
				Me.SendPropertyChanged("ADDRESS_CITY")
				Me.OnADDRESS_CITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRY() As String
		Get
			Return Me._COUNTRY
		End Get
		Set
			If (String.Equals(Me._COUNTRY, value) = false) Then
				Me.OnCOUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY = value
				Me.SendPropertyChanged("COUNTRY")
				Me.OnCOUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_ID", DbType:="Int")>  _
	Public Property COUNTRY_ID() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_ID
		End Get
		Set
			If (Me._COUNTRY_ID.Equals(value) = false) Then
				Me.OnCOUNTRY_IDChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_ID = value
				Me.SendPropertyChanged("COUNTRY_ID")
				Me.OnCOUNTRY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GLN", DbType:="NVarChar(MAX)")>  _
	Public Property GLN() As String
		Get
			Return Me._GLN
		End Get
		Set
			If (String.Equals(Me._GLN, value) = false) Then
				Me.OnGLNChanging(value)
				Me.SendPropertyChanging
				Me._GLN = value
				Me.SendPropertyChanged("GLN")
				Me.OnGLNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property ZIPCODE() As String
		Get
			Return Me._ZIPCODE
		End Get
		Set
			If (String.Equals(Me._ZIPCODE, value) = false) Then
				Me.OnZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIPCODE = value
				Me.SendPropertyChanged("ZIPCODE")
				Me.OnZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_STANDARD() As String
		Get
			Return Me._LOCATION_STANDARD
		End Get
		Set
			If (String.Equals(Me._LOCATION_STANDARD, value) = false) Then
				Me.OnLOCATION_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_STANDARD = value
				Me.SendPropertyChanged("LOCATION_STANDARD")
				Me.OnLOCATION_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_DATE", DbType:="DateTime")>  _
	Public Property SALE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._SALE_DATE
		End Get
		Set
			If (Me._SALE_DATE.Equals(value) = false) Then
				Me.OnSALE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._SALE_DATE = value
				Me.SendPropertyChanged("SALE_DATE")
				Me.OnSALE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STANDARD_ID", DbType:="Int")>  _
	Public Property STANDARD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STANDARD_ID
		End Get
		Set
			If (Me._STANDARD_ID.Equals(value) = false) Then
				Me.OnSTANDARD_IDChanging(value)
				Me.SendPropertyChanging
				Me._STANDARD_ID = value
				Me.SendPropertyChanged("STANDARD_ID")
				Me.OnSTANDARD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_GMP", DbType:="Int")>  _
	Public Property COUNTRY_GMP() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_GMP
		End Get
		Set
			If (Me._COUNTRY_GMP.Equals(value) = false) Then
				Me.OnCOUNTRY_GMPChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_GMP = value
				Me.SendPropertyChanged("COUNTRY_GMP")
				Me.OnCOUNTRY_GMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_DATE", DbType:="DateTime")>  _
	Public Property CER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CER_DATE
		End Get
		Set
			If (Me._CER_DATE.Equals(value) = false) Then
				Me.OnCER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CER_DATE = value
				Me.SendPropertyChanged("CER_DATE")
				Me.OnCER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_addr", DbType:="VarChar(MAX)")>  _
	Public Property addr() As String
		Get
			Return Me._addr
		End Get
		Set
			If (String.Equals(Me._addr, value) = false) Then
				Me.OnaddrChanging(value)
				Me.SendPropertyChanging
				Me._addr = value
				Me.SendPropertyChanged("addr")
				Me.OnaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_room", DbType:="VarChar(MAX)")>  _
	Public Property room() As String
		Get
			Return Me._room
		End Get
		Set
			If (String.Equals(Me._room, value) = false) Then
				Me.OnroomChanging(value)
				Me.SendPropertyChanging
				Me._room = value
				Me.SendPropertyChanged("room")
				Me.OnroomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mu", DbType:="VarChar(MAX)")>  _
	Public Property mu() As String
		Get
			Return Me._mu
		End Get
		Set
			If (String.Equals(Me._mu, value) = false) Then
				Me.OnmuChanging(value)
				Me.SendPropertyChanging
				Me._mu = value
				Me.SendPropertyChanged("mu")
				Me.OnmuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_floor", DbType:="VarChar(MAX)")>  _
	Public Property floor() As String
		Get
			Return Me._floor
		End Get
		Set
			If (String.Equals(Me._floor, value) = false) Then
				Me.OnfloorChanging(value)
				Me.SendPropertyChanging
				Me._floor = value
				Me.SendPropertyChanged("floor")
				Me.OnfloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_soi", DbType:="VarChar(MAX)")>  _
	Public Property soi() As String
		Get
			Return Me._soi
		End Get
		Set
			If (String.Equals(Me._soi, value) = false) Then
				Me.OnsoiChanging(value)
				Me.SendPropertyChanging
				Me._soi = value
				Me.SendPropertyChanged("soi")
				Me.OnsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_building", DbType:="VarChar(MAX)")>  _
	Public Property building() As String
		Get
			Return Me._building
		End Get
		Set
			If (String.Equals(Me._building, value) = false) Then
				Me.OnbuildingChanging(value)
				Me.SendPropertyChanging
				Me._building = value
				Me.SendPropertyChanged("building")
				Me.OnbuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_road", DbType:="VarChar(MAX)")>  _
	Public Property road() As String
		Get
			Return Me._road
		End Get
		Set
			If (String.Equals(Me._road, value) = false) Then
				Me.OnroadChanging(value)
				Me.SendPropertyChanging
				Me._road = value
				Me.SendPropertyChanged("road")
				Me.OnroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="VarChar(MAX)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mobile", DbType:="VarChar(MAX)")>  _
	Public Property Mobile() As String
		Get
			Return Me._Mobile
		End Get
		Set
			If (String.Equals(Me._Mobile, value) = false) Then
				Me.OnMobileChanging(value)
				Me.SendPropertyChanging
				Me._Mobile = value
				Me.SendPropertyChanged("Mobile")
				Me.OnMobileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="VarChar(MAX)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_HEAD_STATUS_E_TRACKING")>  _
Partial Public Class MAS_HEAD_STATUS_E_TRACKING
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STATUS_ROW As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _FDA_STATUS As String
	
	Private _PRIORITY_NUMBER As System.Nullable(Of Integer)
	
	Private _BALL_TIME As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_ROWChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_ROWChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnFDA_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnFDA_STATUSChanged()
    End Sub
    Partial Private Sub OnPRIORITY_NUMBERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRIORITY_NUMBERChanged()
    End Sub
    Partial Private Sub OnBALL_TIMEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBALL_TIMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ROW", DbType:="Int")>  _
	Public Property STATUS_ROW() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ROW
		End Get
		Set
			If (Me._STATUS_ROW.Equals(value) = false) Then
				Me.OnSTATUS_ROWChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ROW = value
				Me.SendPropertyChanged("STATUS_ROW")
				Me.OnSTATUS_ROWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FDA_STATUS", DbType:="NVarChar(MAX)")>  _
	Public Property FDA_STATUS() As String
		Get
			Return Me._FDA_STATUS
		End Get
		Set
			If (String.Equals(Me._FDA_STATUS, value) = false) Then
				Me.OnFDA_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._FDA_STATUS = value
				Me.SendPropertyChanged("FDA_STATUS")
				Me.OnFDA_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRIORITY_NUMBER", DbType:="Int")>  _
	Public Property PRIORITY_NUMBER() As System.Nullable(Of Integer)
		Get
			Return Me._PRIORITY_NUMBER
		End Get
		Set
			If (Me._PRIORITY_NUMBER.Equals(value) = false) Then
				Me.OnPRIORITY_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._PRIORITY_NUMBER = value
				Me.SendPropertyChanged("PRIORITY_NUMBER")
				Me.OnPRIORITY_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BALL_TIME", DbType:="Int")>  _
	Public Property BALL_TIME() As System.Nullable(Of Integer)
		Get
			Return Me._BALL_TIME
		End Get
		Set
			If (Me._BALL_TIME.Equals(value) = false) Then
				Me.OnBALL_TIMEChanging(value)
				Me.SendPropertyChanging
				Me._BALL_TIME = value
				Me.SendPropertyChanged("BALL_TIME")
				Me.OnBALL_TIMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_PHR_HISTORY")>  _
Partial Public Class DALCN_PHR_HISTORY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_PHR_IDA As System.Nullable(Of Integer)
	
	Private _ACTIVE_DATE As System.Nullable(Of Date)
	
	Private _TYPE_INSERT As System.Nullable(Of Integer)
	
	Private _OLD_PHR_NAME As String
	
	Private _NEW_PHR_NAME As String
	
	Private _PHR_CITIZEN_ID As String
	
	Private _POSITION_NAME As String
	
	Private _POSITION_IDA As System.Nullable(Of Integer)
	
	Private _PHR_LEVEL As String
	
	Private _PHR_PREFIX_ID As System.Nullable(Of Integer)
	
	Private _PHR_PREFIX_NAME As String
	
	Private _PHR_CTZNO As String
	
	Private _PHR_TEXT_NUM As String
	
	Private _PHR_TEXT_WORK_TIME As String
	
	Private _FK_EDIT_COUNT As System.Nullable(Of Integer)
	
	Private _EDIT_TYPE As System.Nullable(Of Integer)
	
	Private _NEW_PHR_CITIZEN_ID As String
	
	Private _NEW_POSITION_NAME As String
	
	Private _NEW_POSITION_IDA As System.Nullable(Of Integer)
	
	Private _NEW_PHR_LEVEL As String
	
	Private _NEW_PHR_PREFIX_ID As System.Nullable(Of Integer)
	
	Private _NEW_PHR_PREFIX_NAME As String
	
	Private _NEW_PHR_CTZNO As String
	
	Private _NEW_PHR_TEXT_NUM As String
	
	Private _NEW_PHR_TEXT_WORK_TIME As String
	
	Private _IDA_CHANGE As System.Nullable(Of Integer)
	
	Private _JOB_TYPE As System.Nullable(Of Integer)
	
	Private _NEW_JOB_TYPE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_PHR_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_PHR_IDAChanged()
    End Sub
    Partial Private Sub OnACTIVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnACTIVE_DATEChanged()
    End Sub
    Partial Private Sub OnTYPE_INSERTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_INSERTChanged()
    End Sub
    Partial Private Sub OnOLD_PHR_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnOLD_PHR_NAMEChanged()
    End Sub
    Partial Private Sub OnNEW_PHR_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNEW_PHR_NAMEChanged()
    End Sub
    Partial Private Sub OnPHR_CITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_CITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnPOSITION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_NAMEChanged()
    End Sub
    Partial Private Sub OnPOSITION_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPOSITION_IDAChanged()
    End Sub
    Partial Private Sub OnPHR_LEVELChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_LEVELChanged()
    End Sub
    Partial Private Sub OnPHR_PREFIX_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHR_PREFIX_IDChanged()
    End Sub
    Partial Private Sub OnPHR_PREFIX_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_PREFIX_NAMEChanged()
    End Sub
    Partial Private Sub OnPHR_CTZNOChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_CTZNOChanged()
    End Sub
    Partial Private Sub OnPHR_TEXT_NUMChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_TEXT_NUMChanged()
    End Sub
    Partial Private Sub OnPHR_TEXT_WORK_TIMEChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_TEXT_WORK_TIMEChanged()
    End Sub
    Partial Private Sub OnFK_EDIT_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_EDIT_COUNTChanged()
    End Sub
    Partial Private Sub OnEDIT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEDIT_TYPEChanged()
    End Sub
    Partial Private Sub OnNEW_PHR_CITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnNEW_PHR_CITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnNEW_POSITION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNEW_POSITION_NAMEChanged()
    End Sub
    Partial Private Sub OnNEW_POSITION_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNEW_POSITION_IDAChanged()
    End Sub
    Partial Private Sub OnNEW_PHR_LEVELChanging(value As String)
    End Sub
    Partial Private Sub OnNEW_PHR_LEVELChanged()
    End Sub
    Partial Private Sub OnNEW_PHR_PREFIX_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNEW_PHR_PREFIX_IDChanged()
    End Sub
    Partial Private Sub OnNEW_PHR_PREFIX_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNEW_PHR_PREFIX_NAMEChanged()
    End Sub
    Partial Private Sub OnNEW_PHR_CTZNOChanging(value As String)
    End Sub
    Partial Private Sub OnNEW_PHR_CTZNOChanged()
    End Sub
    Partial Private Sub OnNEW_PHR_TEXT_NUMChanging(value As String)
    End Sub
    Partial Private Sub OnNEW_PHR_TEXT_NUMChanged()
    End Sub
    Partial Private Sub OnNEW_PHR_TEXT_WORK_TIMEChanging(value As String)
    End Sub
    Partial Private Sub OnNEW_PHR_TEXT_WORK_TIMEChanged()
    End Sub
    Partial Private Sub OnIDA_CHANGEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDA_CHANGEChanged()
    End Sub
    Partial Private Sub OnJOB_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnJOB_TYPEChanged()
    End Sub
    Partial Private Sub OnNEW_JOB_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNEW_JOB_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PHR_IDA", DbType:="Int")>  _
	Public Property FK_PHR_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_PHR_IDA
		End Get
		Set
			If (Me._FK_PHR_IDA.Equals(value) = false) Then
				Me.OnFK_PHR_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_PHR_IDA = value
				Me.SendPropertyChanged("FK_PHR_IDA")
				Me.OnFK_PHR_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE_DATE", DbType:="DateTime")>  _
	Public Property ACTIVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._ACTIVE_DATE
		End Get
		Set
			If (Me._ACTIVE_DATE.Equals(value) = false) Then
				Me.OnACTIVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE_DATE = value
				Me.SendPropertyChanged("ACTIVE_DATE")
				Me.OnACTIVE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_INSERT", DbType:="Int")>  _
	Public Property TYPE_INSERT() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_INSERT
		End Get
		Set
			If (Me._TYPE_INSERT.Equals(value) = false) Then
				Me.OnTYPE_INSERTChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_INSERT = value
				Me.SendPropertyChanged("TYPE_INSERT")
				Me.OnTYPE_INSERTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_PHR_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property OLD_PHR_NAME() As String
		Get
			Return Me._OLD_PHR_NAME
		End Get
		Set
			If (String.Equals(Me._OLD_PHR_NAME, value) = false) Then
				Me.OnOLD_PHR_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._OLD_PHR_NAME = value
				Me.SendPropertyChanged("OLD_PHR_NAME")
				Me.OnOLD_PHR_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_PHR_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NEW_PHR_NAME() As String
		Get
			Return Me._NEW_PHR_NAME
		End Get
		Set
			If (String.Equals(Me._NEW_PHR_NAME, value) = false) Then
				Me.OnNEW_PHR_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._NEW_PHR_NAME = value
				Me.SendPropertyChanged("NEW_PHR_NAME")
				Me.OnNEW_PHR_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_CITIZEN_ID() As String
		Get
			Return Me._PHR_CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._PHR_CITIZEN_ID, value) = false) Then
				Me.OnPHR_CITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._PHR_CITIZEN_ID = value
				Me.SendPropertyChanged("PHR_CITIZEN_ID")
				Me.OnPHR_CITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_NAME", DbType:="NVarChar(50)")>  _
	Public Property POSITION_NAME() As String
		Get
			Return Me._POSITION_NAME
		End Get
		Set
			If (String.Equals(Me._POSITION_NAME, value) = false) Then
				Me.OnPOSITION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_NAME = value
				Me.SendPropertyChanged("POSITION_NAME")
				Me.OnPOSITION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_IDA", DbType:="Int")>  _
	Public Property POSITION_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._POSITION_IDA
		End Get
		Set
			If (Me._POSITION_IDA.Equals(value) = false) Then
				Me.OnPOSITION_IDAChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_IDA = value
				Me.SendPropertyChanged("POSITION_IDA")
				Me.OnPOSITION_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_LEVEL", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_LEVEL() As String
		Get
			Return Me._PHR_LEVEL
		End Get
		Set
			If (String.Equals(Me._PHR_LEVEL, value) = false) Then
				Me.OnPHR_LEVELChanging(value)
				Me.SendPropertyChanging
				Me._PHR_LEVEL = value
				Me.SendPropertyChanged("PHR_LEVEL")
				Me.OnPHR_LEVELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_PREFIX_ID", DbType:="Int")>  _
	Public Property PHR_PREFIX_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PHR_PREFIX_ID
		End Get
		Set
			If (Me._PHR_PREFIX_ID.Equals(value) = false) Then
				Me.OnPHR_PREFIX_IDChanging(value)
				Me.SendPropertyChanging
				Me._PHR_PREFIX_ID = value
				Me.SendPropertyChanged("PHR_PREFIX_ID")
				Me.OnPHR_PREFIX_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_PREFIX_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_PREFIX_NAME() As String
		Get
			Return Me._PHR_PREFIX_NAME
		End Get
		Set
			If (String.Equals(Me._PHR_PREFIX_NAME, value) = false) Then
				Me.OnPHR_PREFIX_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PHR_PREFIX_NAME = value
				Me.SendPropertyChanged("PHR_PREFIX_NAME")
				Me.OnPHR_PREFIX_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_CTZNO", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_CTZNO() As String
		Get
			Return Me._PHR_CTZNO
		End Get
		Set
			If (String.Equals(Me._PHR_CTZNO, value) = false) Then
				Me.OnPHR_CTZNOChanging(value)
				Me.SendPropertyChanging
				Me._PHR_CTZNO = value
				Me.SendPropertyChanged("PHR_CTZNO")
				Me.OnPHR_CTZNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_TEXT_NUM", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_TEXT_NUM() As String
		Get
			Return Me._PHR_TEXT_NUM
		End Get
		Set
			If (String.Equals(Me._PHR_TEXT_NUM, value) = false) Then
				Me.OnPHR_TEXT_NUMChanging(value)
				Me.SendPropertyChanging
				Me._PHR_TEXT_NUM = value
				Me.SendPropertyChanged("PHR_TEXT_NUM")
				Me.OnPHR_TEXT_NUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_TEXT_WORK_TIME", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_TEXT_WORK_TIME() As String
		Get
			Return Me._PHR_TEXT_WORK_TIME
		End Get
		Set
			If (String.Equals(Me._PHR_TEXT_WORK_TIME, value) = false) Then
				Me.OnPHR_TEXT_WORK_TIMEChanging(value)
				Me.SendPropertyChanging
				Me._PHR_TEXT_WORK_TIME = value
				Me.SendPropertyChanged("PHR_TEXT_WORK_TIME")
				Me.OnPHR_TEXT_WORK_TIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_EDIT_COUNT", DbType:="Int")>  _
	Public Property FK_EDIT_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._FK_EDIT_COUNT
		End Get
		Set
			If (Me._FK_EDIT_COUNT.Equals(value) = false) Then
				Me.OnFK_EDIT_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._FK_EDIT_COUNT = value
				Me.SendPropertyChanged("FK_EDIT_COUNT")
				Me.OnFK_EDIT_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_TYPE", DbType:="Int")>  _
	Public Property EDIT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._EDIT_TYPE
		End Get
		Set
			If (Me._EDIT_TYPE.Equals(value) = false) Then
				Me.OnEDIT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_TYPE = value
				Me.SendPropertyChanged("EDIT_TYPE")
				Me.OnEDIT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_PHR_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property NEW_PHR_CITIZEN_ID() As String
		Get
			Return Me._NEW_PHR_CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._NEW_PHR_CITIZEN_ID, value) = false) Then
				Me.OnNEW_PHR_CITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._NEW_PHR_CITIZEN_ID = value
				Me.SendPropertyChanged("NEW_PHR_CITIZEN_ID")
				Me.OnNEW_PHR_CITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_POSITION_NAME", DbType:="NVarChar(50)")>  _
	Public Property NEW_POSITION_NAME() As String
		Get
			Return Me._NEW_POSITION_NAME
		End Get
		Set
			If (String.Equals(Me._NEW_POSITION_NAME, value) = false) Then
				Me.OnNEW_POSITION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._NEW_POSITION_NAME = value
				Me.SendPropertyChanged("NEW_POSITION_NAME")
				Me.OnNEW_POSITION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_POSITION_IDA", DbType:="Int")>  _
	Public Property NEW_POSITION_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._NEW_POSITION_IDA
		End Get
		Set
			If (Me._NEW_POSITION_IDA.Equals(value) = false) Then
				Me.OnNEW_POSITION_IDAChanging(value)
				Me.SendPropertyChanging
				Me._NEW_POSITION_IDA = value
				Me.SendPropertyChanged("NEW_POSITION_IDA")
				Me.OnNEW_POSITION_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_PHR_LEVEL", DbType:="NVarChar(MAX)")>  _
	Public Property NEW_PHR_LEVEL() As String
		Get
			Return Me._NEW_PHR_LEVEL
		End Get
		Set
			If (String.Equals(Me._NEW_PHR_LEVEL, value) = false) Then
				Me.OnNEW_PHR_LEVELChanging(value)
				Me.SendPropertyChanging
				Me._NEW_PHR_LEVEL = value
				Me.SendPropertyChanged("NEW_PHR_LEVEL")
				Me.OnNEW_PHR_LEVELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_PHR_PREFIX_ID", DbType:="Int")>  _
	Public Property NEW_PHR_PREFIX_ID() As System.Nullable(Of Integer)
		Get
			Return Me._NEW_PHR_PREFIX_ID
		End Get
		Set
			If (Me._NEW_PHR_PREFIX_ID.Equals(value) = false) Then
				Me.OnNEW_PHR_PREFIX_IDChanging(value)
				Me.SendPropertyChanging
				Me._NEW_PHR_PREFIX_ID = value
				Me.SendPropertyChanged("NEW_PHR_PREFIX_ID")
				Me.OnNEW_PHR_PREFIX_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_PHR_PREFIX_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NEW_PHR_PREFIX_NAME() As String
		Get
			Return Me._NEW_PHR_PREFIX_NAME
		End Get
		Set
			If (String.Equals(Me._NEW_PHR_PREFIX_NAME, value) = false) Then
				Me.OnNEW_PHR_PREFIX_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._NEW_PHR_PREFIX_NAME = value
				Me.SendPropertyChanged("NEW_PHR_PREFIX_NAME")
				Me.OnNEW_PHR_PREFIX_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_PHR_CTZNO", DbType:="NVarChar(MAX)")>  _
	Public Property NEW_PHR_CTZNO() As String
		Get
			Return Me._NEW_PHR_CTZNO
		End Get
		Set
			If (String.Equals(Me._NEW_PHR_CTZNO, value) = false) Then
				Me.OnNEW_PHR_CTZNOChanging(value)
				Me.SendPropertyChanging
				Me._NEW_PHR_CTZNO = value
				Me.SendPropertyChanged("NEW_PHR_CTZNO")
				Me.OnNEW_PHR_CTZNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_PHR_TEXT_NUM", DbType:="NVarChar(MAX)")>  _
	Public Property NEW_PHR_TEXT_NUM() As String
		Get
			Return Me._NEW_PHR_TEXT_NUM
		End Get
		Set
			If (String.Equals(Me._NEW_PHR_TEXT_NUM, value) = false) Then
				Me.OnNEW_PHR_TEXT_NUMChanging(value)
				Me.SendPropertyChanging
				Me._NEW_PHR_TEXT_NUM = value
				Me.SendPropertyChanged("NEW_PHR_TEXT_NUM")
				Me.OnNEW_PHR_TEXT_NUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_PHR_TEXT_WORK_TIME", DbType:="NVarChar(MAX)")>  _
	Public Property NEW_PHR_TEXT_WORK_TIME() As String
		Get
			Return Me._NEW_PHR_TEXT_WORK_TIME
		End Get
		Set
			If (String.Equals(Me._NEW_PHR_TEXT_WORK_TIME, value) = false) Then
				Me.OnNEW_PHR_TEXT_WORK_TIMEChanging(value)
				Me.SendPropertyChanging
				Me._NEW_PHR_TEXT_WORK_TIME = value
				Me.SendPropertyChanged("NEW_PHR_TEXT_WORK_TIME")
				Me.OnNEW_PHR_TEXT_WORK_TIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA_CHANGE", DbType:="Int")>  _
	Public Property IDA_CHANGE() As System.Nullable(Of Integer)
		Get
			Return Me._IDA_CHANGE
		End Get
		Set
			If (Me._IDA_CHANGE.Equals(value) = false) Then
				Me.OnIDA_CHANGEChanging(value)
				Me.SendPropertyChanging
				Me._IDA_CHANGE = value
				Me.SendPropertyChanged("IDA_CHANGE")
				Me.OnIDA_CHANGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JOB_TYPE", DbType:="Int")>  _
	Public Property JOB_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._JOB_TYPE
		End Get
		Set
			If (Me._JOB_TYPE.Equals(value) = false) Then
				Me.OnJOB_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._JOB_TYPE = value
				Me.SendPropertyChanged("JOB_TYPE")
				Me.OnJOB_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_JOB_TYPE", DbType:="Int")>  _
	Public Property NEW_JOB_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._NEW_JOB_TYPE
		End Get
		Set
			If (Me._NEW_JOB_TYPE.Equals(value) = false) Then
				Me.OnNEW_JOB_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._NEW_JOB_TYPE = value
				Me.SendPropertyChanged("NEW_JOB_TYPE")
				Me.OnNEW_JOB_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.daphrfunctcd")>  _
Partial Public Class daphrfunctcd
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _functcd As System.Nullable(Of Short)
	
	Private _functnm As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnfunctcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnfunctcdChanged()
    End Sub
    Partial Private Sub OnfunctnmChanging(value As String)
    End Sub
    Partial Private Sub OnfunctnmChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_functcd", DbType:="SmallInt")>  _
	Public Property functcd() As System.Nullable(Of Short)
		Get
			Return Me._functcd
		End Get
		Set
			If (Me._functcd.Equals(value) = false) Then
				Me.OnfunctcdChanging(value)
				Me.SendPropertyChanging
				Me._functcd = value
				Me.SendPropertyChanged("functcd")
				Me.OnfunctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_functnm", DbType:="VarChar(250)")>  _
	Public Property functnm() As String
		Get
			Return Me._functnm
		End Get
		Set
			If (String.Equals(Me._functnm, value) = false) Then
				Me.OnfunctnmChanging(value)
				Me.SendPropertyChanging
				Me._functnm = value
				Me.SendPropertyChanged("functnm")
				Me.OnfunctnmChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_STATUS")>  _
Partial Public Class LOG_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As String
	
	Private _STATUS_DATE As System.Nullable(Of Date)
	
	Private _IDENTIFY As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTATUS_DATEChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_DATE", DbType:="DateTime")>  _
	Public Property STATUS_DATE() As System.Nullable(Of Date)
		Get
			Return Me._STATUS_DATE
		End Get
		Set
			If (Me._STATUS_DATE.Equals(value) = false) Then
				Me.OnSTATUS_DATEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_DATE = value
				Me.SendPropertyChanged("STATUS_DATE")
				Me.OnSTATUS_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_PHR_CANCEL_SELF")>  _
Partial Public Class DALCN_PHR_CANCEL_SELF
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PHR_CTZO As String
	
	Private _LCN_IDA As System.Nullable(Of Integer)
	
	Private _DATE_ACTION As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPHR_CTZOChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_CTZOChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnDATE_ACTIONChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_ACTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_CTZO", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_CTZO() As String
		Get
			Return Me._PHR_CTZO
		End Get
		Set
			If (String.Equals(Me._PHR_CTZO, value) = false) Then
				Me.OnPHR_CTZOChanging(value)
				Me.SendPropertyChanging
				Me._PHR_CTZO = value
				Me.SendPropertyChanged("PHR_CTZO")
				Me.OnPHR_CTZOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="Int")>  _
	Public Property LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (Me._LCN_IDA.Equals(value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ACTION", DbType:="DateTime")>  _
	Public Property DATE_ACTION() As System.Nullable(Of Date)
		Get
			Return Me._DATE_ACTION
		End Get
		Set
			If (Me._DATE_ACTION.Equals(value) = false) Then
				Me.OnDATE_ACTIONChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ACTION = value
				Me.SendPropertyChanged("DATE_ACTION")
				Me.OnDATE_ACTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LCN_CANCEL")>  _
Partial Public Class LCN_CANCEL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _WRITE_AT As String
	
	Private _WRITE_DATE As System.Nullable(Of Date)
	
	Private _REMARK As String
	
	Private _LCN_IDA As System.Nullable(Of Integer)
	
	Private _LCT_IDA As System.Nullable(Of Integer)
	
	Private _LCNNO_MANUAL As String
	
	Private _RCVNO_MANUAL As String
	
	Private _RCVNO As System.Nullable(Of Integer)
	
	Private _RCVNO_DATE As System.Nullable(Of Date)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _CANCEL_DATE As System.Nullable(Of Date)
	
	Private _IS_CANCEL As System.Nullable(Of Boolean)
	
	Private _PURPOSE_CANCEL As System.Nullable(Of Integer)
	
	Private _REMARK_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnWRITE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_ATChanged()
    End Sub
    Partial Private Sub OnWRITE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnWRITE_DATEChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnLCT_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCT_IDAChanged()
    End Sub
    Partial Private Sub OnLCNNO_MANUALChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNO_MANUALChanged()
    End Sub
    Partial Private Sub OnRCVNO_MANUALChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_MANUALChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnRCVNO_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCVNO_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnCANCEL_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCANCEL_DATEChanged()
    End Sub
    Partial Private Sub OnIS_CANCELChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_CANCELChanged()
    End Sub
    Partial Private Sub OnPURPOSE_CANCELChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPURPOSE_CANCELChanged()
    End Sub
    Partial Private Sub OnREMARK_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREMARK_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_AT() As String
		Get
			Return Me._WRITE_AT
		End Get
		Set
			If (String.Equals(Me._WRITE_AT, value) = false) Then
				Me.OnWRITE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_AT = value
				Me.SendPropertyChanged("WRITE_AT")
				Me.OnWRITE_ATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_DATE", DbType:="DateTime")>  _
	Public Property WRITE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._WRITE_DATE
		End Get
		Set
			If (Me._WRITE_DATE.Equals(value) = false) Then
				Me.OnWRITE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_DATE = value
				Me.SendPropertyChanged("WRITE_DATE")
				Me.OnWRITE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="Int")>  _
	Public Property LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (Me._LCN_IDA.Equals(value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCT_IDA", DbType:="Int")>  _
	Public Property LCT_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCT_IDA
		End Get
		Set
			If (Me._LCT_IDA.Equals(value) = false) Then
				Me.OnLCT_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCT_IDA = value
				Me.SendPropertyChanged("LCT_IDA")
				Me.OnLCT_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO_MANUAL", DbType:="NVarChar(MAX)")>  _
	Public Property LCNNO_MANUAL() As String
		Get
			Return Me._LCNNO_MANUAL
		End Get
		Set
			If (String.Equals(Me._LCNNO_MANUAL, value) = false) Then
				Me.OnLCNNO_MANUALChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO_MANUAL = value
				Me.SendPropertyChanged("LCNNO_MANUAL")
				Me.OnLCNNO_MANUALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_MANUAL", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_MANUAL() As String
		Get
			Return Me._RCVNO_MANUAL
		End Get
		Set
			If (String.Equals(Me._RCVNO_MANUAL, value) = false) Then
				Me.OnRCVNO_MANUALChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_MANUAL = value
				Me.SendPropertyChanged("RCVNO_MANUAL")
				Me.OnRCVNO_MANUALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="Int")>  _
	Public Property RCVNO() As System.Nullable(Of Integer)
		Get
			Return Me._RCVNO
		End Get
		Set
			If (Me._RCVNO.Equals(value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_DATE", DbType:="DateTime")>  _
	Public Property RCVNO_DATE() As System.Nullable(Of Date)
		Get
			Return Me._RCVNO_DATE
		End Get
		Set
			If (Me._RCVNO_DATE.Equals(value) = false) Then
				Me.OnRCVNO_DATEChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_DATE = value
				Me.SendPropertyChanged("RCVNO_DATE")
				Me.OnRCVNO_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CANCEL_DATE", DbType:="DateTime")>  _
	Public Property CANCEL_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CANCEL_DATE
		End Get
		Set
			If (Me._CANCEL_DATE.Equals(value) = false) Then
				Me.OnCANCEL_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CANCEL_DATE = value
				Me.SendPropertyChanged("CANCEL_DATE")
				Me.OnCANCEL_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_CANCEL", DbType:="Bit")>  _
	Public Property IS_CANCEL() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_CANCEL
		End Get
		Set
			If (Me._IS_CANCEL.Equals(value) = false) Then
				Me.OnIS_CANCELChanging(value)
				Me.SendPropertyChanging
				Me._IS_CANCEL = value
				Me.SendPropertyChanged("IS_CANCEL")
				Me.OnIS_CANCELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PURPOSE_CANCEL", DbType:="Int")>  _
	Public Property PURPOSE_CANCEL() As System.Nullable(Of Integer)
		Get
			Return Me._PURPOSE_CANCEL
		End Get
		Set
			If (Me._PURPOSE_CANCEL.Equals(value) = false) Then
				Me.OnPURPOSE_CANCELChanging(value)
				Me.SendPropertyChanging
				Me._PURPOSE_CANCEL = value
				Me.SendPropertyChanged("PURPOSE_CANCEL")
				Me.OnPURPOSE_CANCELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK_ID", DbType:="Int")>  _
	Public Property REMARK_ID() As System.Nullable(Of Integer)
		Get
			Return Me._REMARK_ID
		End Get
		Set
			If (Me._REMARK_ID.Equals(value) = false) Then
				Me.OnREMARK_IDChanging(value)
				Me.SendPropertyChanging
				Me._REMARK_ID = value
				Me.SendPropertyChanged("REMARK_ID")
				Me.OnREMARK_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_EXTEND_DETAIL")>  _
Partial Public Class CER_EXTEND_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_HEAD As System.Nullable(Of Integer)
	
	Private _OLD_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _MANUFACTURER_CONFORMS_TO As String
	
	Private _CERTIFICATION_NUMBER_ALL As String
	
	Private _FOREIGN_LOCATION_NAME As String
	
	Private _ADDRESS_DETAIL As String
	
	Private _CITY_NAME As String
	
	Private _ZIPCODE As String
	
	Private _COUNTRY_IDA As System.Nullable(Of Integer)
	
	Private _ORGANIZATION_CODE As String
	
	Private _MANUFACTURER_LICENCE_NUMBER As String
	
	Private _LOCATION_STANDARD As String
	
	Private _GLN As String
	
	Private _DOCUMENT_DATE As System.Nullable(Of Date)
	
	Private _EXP_DOCUMENT_DATE As System.Nullable(Of Date)
	
	Private _DEPARTMENT_REGIST_CER_TYPE As System.Nullable(Of Integer)
	
	Private _DEPARTMENT_REGIST_CER_NAME As String
	
	Private _COUNTRY_OF_DEPARTMENT_IDA As System.Nullable(Of Integer)
	
	Private _ANALYZE_IDA As System.Nullable(Of Integer)
	
	Private _GMP_STANDARD As String
	
	Private _ESTABLISHMENT_CONFORMS As String
	
	Private _CERTIFICATION_NUMBER_ALL_FOR_ANALYZE As String
	
	Private _LAB_STANDARD As String
	
	Private _LAB_ADDR As String
	
	Private _LAB_CITY As String
	
	Private _LAB_ZIPCODE As String
	
	Private _LAB_COUNTRY_IDA As System.Nullable(Of Integer)
	
	Private _LAB_ORGANIZATION_CODE As String
	
	Private _LAB_GLN As String
	
	Private _LAB_ISO_DATE As System.Nullable(Of Date)
	
	Private _LAB_ISO_EXP_DATE As System.Nullable(Of Date)
	
	Private _LAB_DEPARTMENT_REGIST_CB As String
	
	Private _LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA As System.Nullable(Of Integer)
	
	Private _CER_SCOPE As String
	
	Private _CER_TYPE As System.Nullable(Of Integer)
	
	Private _FK_MANUFACTURE_LOCATION_ADDRESS_ID As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _CER_NUMBER As String
	
	Private _LCNSID As String
	
	Private _IDENTIFY As String
	
	Private _XML_NAME As String
	
	Private _RCVNO As String
	
	Private _RCVDATE As System.Nullable(Of Date)
	
	Private _CER_DATE As System.Nullable(Of Date)
	
	Private _BUYER_NAME As String
	
	Private _BUYER_COUNTRY As System.Nullable(Of Integer)
	
	Private _BUYER_STANDARD As String
	
	Private _IMAGE_QR_INPUT As String
	
	Private _IMAGE_QR_OUTPUT As String
	
	Private _REMARK As String
	
	Private _CER_FORMAT As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _PICS_NAT_ALPHA3 As String
	
	Private _PO_OTHER As String
	
	Private _MOBILE As String
	
	Private _OLD_TR_ID As String
	
	Private _REQUEST_DATE As System.Nullable(Of Date)
	
	Private _NEW_DOCUMENT_DATE As System.Nullable(Of Date)
	
	Private _NEW_EXP_DOCUMENT_DATE1 As System.Nullable(Of Date)
	
	Private _IS_ACTIVE As System.Nullable(Of Integer)
	
	Private _YEAR_EXTEND As System.Nullable(Of Integer)
	
	Private _OLD_FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_HEADChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_HEADChanged()
    End Sub
    Partial Private Sub OnOLD_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOLD_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnMANUFACTURER_CONFORMS_TOChanging(value As String)
    End Sub
    Partial Private Sub OnMANUFACTURER_CONFORMS_TOChanged()
    End Sub
    Partial Private Sub OnCERTIFICATION_NUMBER_ALLChanging(value As String)
    End Sub
    Partial Private Sub OnCERTIFICATION_NUMBER_ALLChanged()
    End Sub
    Partial Private Sub OnFOREIGN_LOCATION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFOREIGN_LOCATION_NAMEChanged()
    End Sub
    Partial Private Sub OnADDRESS_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_DETAILChanged()
    End Sub
    Partial Private Sub OnCITY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCITY_NAMEChanged()
    End Sub
    Partial Private Sub OnZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIPCODEChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_IDAChanged()
    End Sub
    Partial Private Sub OnORGANIZATION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnORGANIZATION_CODEChanged()
    End Sub
    Partial Private Sub OnMANUFACTURER_LICENCE_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnMANUFACTURER_LICENCE_NUMBERChanged()
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanged()
    End Sub
    Partial Private Sub OnGLNChanging(value As String)
    End Sub
    Partial Private Sub OnGLNChanged()
    End Sub
    Partial Private Sub OnDOCUMENT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDOCUMENT_DATEChanged()
    End Sub
    Partial Private Sub OnEXP_DOCUMENT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEXP_DOCUMENT_DATEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_REGIST_CER_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPARTMENT_REGIST_CER_TYPEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_REGIST_CER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_REGIST_CER_NAMEChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_OF_DEPARTMENT_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_OF_DEPARTMENT_IDAChanged()
    End Sub
    Partial Private Sub OnANALYZE_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnANALYZE_IDAChanged()
    End Sub
    Partial Private Sub OnGMP_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnGMP_STANDARDChanged()
    End Sub
    Partial Private Sub OnESTABLISHMENT_CONFORMSChanging(value As String)
    End Sub
    Partial Private Sub OnESTABLISHMENT_CONFORMSChanged()
    End Sub
    Partial Private Sub OnCERTIFICATION_NUMBER_ALL_FOR_ANALYZEChanging(value As String)
    End Sub
    Partial Private Sub OnCERTIFICATION_NUMBER_ALL_FOR_ANALYZEChanged()
    End Sub
    Partial Private Sub OnLAB_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_STANDARDChanged()
    End Sub
    Partial Private Sub OnLAB_ADDRChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_ADDRChanged()
    End Sub
    Partial Private Sub OnLAB_CITYChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_CITYChanged()
    End Sub
    Partial Private Sub OnLAB_ZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_ZIPCODEChanged()
    End Sub
    Partial Private Sub OnLAB_COUNTRY_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_COUNTRY_IDAChanged()
    End Sub
    Partial Private Sub OnLAB_ORGANIZATION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_ORGANIZATION_CODEChanged()
    End Sub
    Partial Private Sub OnLAB_GLNChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_GLNChanged()
    End Sub
    Partial Private Sub OnLAB_ISO_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLAB_ISO_DATEChanged()
    End Sub
    Partial Private Sub OnLAB_ISO_EXP_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLAB_ISO_EXP_DATEChanged()
    End Sub
    Partial Private Sub OnLAB_DEPARTMENT_REGIST_CBChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_DEPARTMENT_REGIST_CBChanged()
    End Sub
    Partial Private Sub OnLAB_COUNTRY_DEPARTMENT_REGIST_CB_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_COUNTRY_DEPARTMENT_REGIST_CB_IDAChanged()
    End Sub
    Partial Private Sub OnCER_SCOPEChanging(value As String)
    End Sub
    Partial Private Sub OnCER_SCOPEChanged()
    End Sub
    Partial Private Sub OnCER_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCER_TYPEChanged()
    End Sub
    Partial Private Sub OnFK_MANUFACTURE_LOCATION_ADDRESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_MANUFACTURE_LOCATION_ADDRESS_IDChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnCER_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnCER_NUMBERChanged()
    End Sub
    Partial Private Sub OnLCNSIDChanging(value As String)
    End Sub
    Partial Private Sub OnLCNSIDChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnXML_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnXML_NAMEChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnRCVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCVDATEChanged()
    End Sub
    Partial Private Sub OnCER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCER_DATEChanged()
    End Sub
    Partial Private Sub OnBUYER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBUYER_NAMEChanged()
    End Sub
    Partial Private Sub OnBUYER_COUNTRYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUYER_COUNTRYChanged()
    End Sub
    Partial Private Sub OnBUYER_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnBUYER_STANDARDChanged()
    End Sub
    Partial Private Sub OnIMAGE_QR_INPUTChanging(value As String)
    End Sub
    Partial Private Sub OnIMAGE_QR_INPUTChanged()
    End Sub
    Partial Private Sub OnIMAGE_QR_OUTPUTChanging(value As String)
    End Sub
    Partial Private Sub OnIMAGE_QR_OUTPUTChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnCER_FORMATChanging(value As String)
    End Sub
    Partial Private Sub OnCER_FORMATChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnPICS_NAT_ALPHA3Changing(value As String)
    End Sub
    Partial Private Sub OnPICS_NAT_ALPHA3Changed()
    End Sub
    Partial Private Sub OnPO_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnPO_OTHERChanged()
    End Sub
    Partial Private Sub OnMOBILEChanging(value As String)
    End Sub
    Partial Private Sub OnMOBILEChanged()
    End Sub
    Partial Private Sub OnOLD_TR_IDChanging(value As String)
    End Sub
    Partial Private Sub OnOLD_TR_IDChanged()
    End Sub
    Partial Private Sub OnREQUEST_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUEST_DATEChanged()
    End Sub
    Partial Private Sub OnNEW_DOCUMENT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnNEW_DOCUMENT_DATEChanged()
    End Sub
    Partial Private Sub OnNEW_EXP_DOCUMENT_DATE1Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnNEW_EXP_DOCUMENT_DATE1Changed()
    End Sub
    Partial Private Sub OnIS_ACTIVEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIS_ACTIVEChanged()
    End Sub
    Partial Private Sub OnYEAR_EXTENDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYEAR_EXTENDChanged()
    End Sub
    Partial Private Sub OnOLD_FK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOLD_FK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_HEAD", DbType:="Int")>  _
	Public Property FK_HEAD() As System.Nullable(Of Integer)
		Get
			Return Me._FK_HEAD
		End Get
		Set
			If (Me._FK_HEAD.Equals(value) = false) Then
				Me.OnFK_HEADChanging(value)
				Me.SendPropertyChanging
				Me._FK_HEAD = value
				Me.SendPropertyChanged("FK_HEAD")
				Me.OnFK_HEADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_IDA", DbType:="Int")>  _
	Public Property OLD_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._OLD_IDA
		End Get
		Set
			If (Me._OLD_IDA.Equals(value) = false) Then
				Me.OnOLD_IDAChanging(value)
				Me.SendPropertyChanging
				Me._OLD_IDA = value
				Me.SendPropertyChanged("OLD_IDA")
				Me.OnOLD_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFACTURER_CONFORMS_TO", DbType:="NVarChar(MAX)")>  _
	Public Property MANUFACTURER_CONFORMS_TO() As String
		Get
			Return Me._MANUFACTURER_CONFORMS_TO
		End Get
		Set
			If (String.Equals(Me._MANUFACTURER_CONFORMS_TO, value) = false) Then
				Me.OnMANUFACTURER_CONFORMS_TOChanging(value)
				Me.SendPropertyChanging
				Me._MANUFACTURER_CONFORMS_TO = value
				Me.SendPropertyChanged("MANUFACTURER_CONFORMS_TO")
				Me.OnMANUFACTURER_CONFORMS_TOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CERTIFICATION_NUMBER_ALL", DbType:="NVarChar(MAX)")>  _
	Public Property CERTIFICATION_NUMBER_ALL() As String
		Get
			Return Me._CERTIFICATION_NUMBER_ALL
		End Get
		Set
			If (String.Equals(Me._CERTIFICATION_NUMBER_ALL, value) = false) Then
				Me.OnCERTIFICATION_NUMBER_ALLChanging(value)
				Me.SendPropertyChanging
				Me._CERTIFICATION_NUMBER_ALL = value
				Me.SendPropertyChanged("CERTIFICATION_NUMBER_ALL")
				Me.OnCERTIFICATION_NUMBER_ALLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOREIGN_LOCATION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FOREIGN_LOCATION_NAME() As String
		Get
			Return Me._FOREIGN_LOCATION_NAME
		End Get
		Set
			If (String.Equals(Me._FOREIGN_LOCATION_NAME, value) = false) Then
				Me.OnFOREIGN_LOCATION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FOREIGN_LOCATION_NAME = value
				Me.SendPropertyChanged("FOREIGN_LOCATION_NAME")
				Me.OnFOREIGN_LOCATION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_DETAIL() As String
		Get
			Return Me._ADDRESS_DETAIL
		End Get
		Set
			If (String.Equals(Me._ADDRESS_DETAIL, value) = false) Then
				Me.OnADDRESS_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_DETAIL = value
				Me.SendPropertyChanged("ADDRESS_DETAIL")
				Me.OnADDRESS_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CITY_NAME() As String
		Get
			Return Me._CITY_NAME
		End Get
		Set
			If (String.Equals(Me._CITY_NAME, value) = false) Then
				Me.OnCITY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CITY_NAME = value
				Me.SendPropertyChanged("CITY_NAME")
				Me.OnCITY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property ZIPCODE() As String
		Get
			Return Me._ZIPCODE
		End Get
		Set
			If (String.Equals(Me._ZIPCODE, value) = false) Then
				Me.OnZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIPCODE = value
				Me.SendPropertyChanged("ZIPCODE")
				Me.OnZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_IDA", DbType:="Int")>  _
	Public Property COUNTRY_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_IDA
		End Get
		Set
			If (Me._COUNTRY_IDA.Equals(value) = false) Then
				Me.OnCOUNTRY_IDAChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_IDA = value
				Me.SendPropertyChanged("COUNTRY_IDA")
				Me.OnCOUNTRY_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property ORGANIZATION_CODE() As String
		Get
			Return Me._ORGANIZATION_CODE
		End Get
		Set
			If (String.Equals(Me._ORGANIZATION_CODE, value) = false) Then
				Me.OnORGANIZATION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_CODE = value
				Me.SendPropertyChanged("ORGANIZATION_CODE")
				Me.OnORGANIZATION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFACTURER_LICENCE_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property MANUFACTURER_LICENCE_NUMBER() As String
		Get
			Return Me._MANUFACTURER_LICENCE_NUMBER
		End Get
		Set
			If (String.Equals(Me._MANUFACTURER_LICENCE_NUMBER, value) = false) Then
				Me.OnMANUFACTURER_LICENCE_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._MANUFACTURER_LICENCE_NUMBER = value
				Me.SendPropertyChanged("MANUFACTURER_LICENCE_NUMBER")
				Me.OnMANUFACTURER_LICENCE_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_STANDARD() As String
		Get
			Return Me._LOCATION_STANDARD
		End Get
		Set
			If (String.Equals(Me._LOCATION_STANDARD, value) = false) Then
				Me.OnLOCATION_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_STANDARD = value
				Me.SendPropertyChanged("LOCATION_STANDARD")
				Me.OnLOCATION_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GLN", DbType:="NVarChar(MAX)")>  _
	Public Property GLN() As String
		Get
			Return Me._GLN
		End Get
		Set
			If (String.Equals(Me._GLN, value) = false) Then
				Me.OnGLNChanging(value)
				Me.SendPropertyChanging
				Me._GLN = value
				Me.SendPropertyChanged("GLN")
				Me.OnGLNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOCUMENT_DATE", DbType:="DateTime")>  _
	Public Property DOCUMENT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DOCUMENT_DATE
		End Get
		Set
			If (Me._DOCUMENT_DATE.Equals(value) = false) Then
				Me.OnDOCUMENT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DOCUMENT_DATE = value
				Me.SendPropertyChanged("DOCUMENT_DATE")
				Me.OnDOCUMENT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXP_DOCUMENT_DATE", DbType:="DateTime")>  _
	Public Property EXP_DOCUMENT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._EXP_DOCUMENT_DATE
		End Get
		Set
			If (Me._EXP_DOCUMENT_DATE.Equals(value) = false) Then
				Me.OnEXP_DOCUMENT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._EXP_DOCUMENT_DATE = value
				Me.SendPropertyChanged("EXP_DOCUMENT_DATE")
				Me.OnEXP_DOCUMENT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_REGIST_CER_TYPE", DbType:="Int")>  _
	Public Property DEPARTMENT_REGIST_CER_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._DEPARTMENT_REGIST_CER_TYPE
		End Get
		Set
			If (Me._DEPARTMENT_REGIST_CER_TYPE.Equals(value) = false) Then
				Me.OnDEPARTMENT_REGIST_CER_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_REGIST_CER_TYPE = value
				Me.SendPropertyChanged("DEPARTMENT_REGIST_CER_TYPE")
				Me.OnDEPARTMENT_REGIST_CER_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_REGIST_CER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DEPARTMENT_REGIST_CER_NAME() As String
		Get
			Return Me._DEPARTMENT_REGIST_CER_NAME
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_REGIST_CER_NAME, value) = false) Then
				Me.OnDEPARTMENT_REGIST_CER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_REGIST_CER_NAME = value
				Me.SendPropertyChanged("DEPARTMENT_REGIST_CER_NAME")
				Me.OnDEPARTMENT_REGIST_CER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_OF_DEPARTMENT_IDA", DbType:="Int")>  _
	Public Property COUNTRY_OF_DEPARTMENT_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_OF_DEPARTMENT_IDA
		End Get
		Set
			If (Me._COUNTRY_OF_DEPARTMENT_IDA.Equals(value) = false) Then
				Me.OnCOUNTRY_OF_DEPARTMENT_IDAChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_OF_DEPARTMENT_IDA = value
				Me.SendPropertyChanged("COUNTRY_OF_DEPARTMENT_IDA")
				Me.OnCOUNTRY_OF_DEPARTMENT_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANALYZE_IDA", DbType:="Int")>  _
	Public Property ANALYZE_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._ANALYZE_IDA
		End Get
		Set
			If (Me._ANALYZE_IDA.Equals(value) = false) Then
				Me.OnANALYZE_IDAChanging(value)
				Me.SendPropertyChanging
				Me._ANALYZE_IDA = value
				Me.SendPropertyChanged("ANALYZE_IDA")
				Me.OnANALYZE_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GMP_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property GMP_STANDARD() As String
		Get
			Return Me._GMP_STANDARD
		End Get
		Set
			If (String.Equals(Me._GMP_STANDARD, value) = false) Then
				Me.OnGMP_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._GMP_STANDARD = value
				Me.SendPropertyChanged("GMP_STANDARD")
				Me.OnGMP_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ESTABLISHMENT_CONFORMS", DbType:="NVarChar(MAX)")>  _
	Public Property ESTABLISHMENT_CONFORMS() As String
		Get
			Return Me._ESTABLISHMENT_CONFORMS
		End Get
		Set
			If (String.Equals(Me._ESTABLISHMENT_CONFORMS, value) = false) Then
				Me.OnESTABLISHMENT_CONFORMSChanging(value)
				Me.SendPropertyChanging
				Me._ESTABLISHMENT_CONFORMS = value
				Me.SendPropertyChanged("ESTABLISHMENT_CONFORMS")
				Me.OnESTABLISHMENT_CONFORMSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CERTIFICATION_NUMBER_ALL_FOR_ANALYZE", DbType:="NVarChar(MAX)")>  _
	Public Property CERTIFICATION_NUMBER_ALL_FOR_ANALYZE() As String
		Get
			Return Me._CERTIFICATION_NUMBER_ALL_FOR_ANALYZE
		End Get
		Set
			If (String.Equals(Me._CERTIFICATION_NUMBER_ALL_FOR_ANALYZE, value) = false) Then
				Me.OnCERTIFICATION_NUMBER_ALL_FOR_ANALYZEChanging(value)
				Me.SendPropertyChanging
				Me._CERTIFICATION_NUMBER_ALL_FOR_ANALYZE = value
				Me.SendPropertyChanged("CERTIFICATION_NUMBER_ALL_FOR_ANALYZE")
				Me.OnCERTIFICATION_NUMBER_ALL_FOR_ANALYZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_STANDARD() As String
		Get
			Return Me._LAB_STANDARD
		End Get
		Set
			If (String.Equals(Me._LAB_STANDARD, value) = false) Then
				Me.OnLAB_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_STANDARD = value
				Me.SendPropertyChanged("LAB_STANDARD")
				Me.OnLAB_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_ADDR", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_ADDR() As String
		Get
			Return Me._LAB_ADDR
		End Get
		Set
			If (String.Equals(Me._LAB_ADDR, value) = false) Then
				Me.OnLAB_ADDRChanging(value)
				Me.SendPropertyChanging
				Me._LAB_ADDR = value
				Me.SendPropertyChanged("LAB_ADDR")
				Me.OnLAB_ADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_CITY", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_CITY() As String
		Get
			Return Me._LAB_CITY
		End Get
		Set
			If (String.Equals(Me._LAB_CITY, value) = false) Then
				Me.OnLAB_CITYChanging(value)
				Me.SendPropertyChanging
				Me._LAB_CITY = value
				Me.SendPropertyChanged("LAB_CITY")
				Me.OnLAB_CITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property LAB_ZIPCODE() As String
		Get
			Return Me._LAB_ZIPCODE
		End Get
		Set
			If (String.Equals(Me._LAB_ZIPCODE, value) = false) Then
				Me.OnLAB_ZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_ZIPCODE = value
				Me.SendPropertyChanged("LAB_ZIPCODE")
				Me.OnLAB_ZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_COUNTRY_IDA", DbType:="Int")>  _
	Public Property LAB_COUNTRY_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_COUNTRY_IDA
		End Get
		Set
			If (Me._LAB_COUNTRY_IDA.Equals(value) = false) Then
				Me.OnLAB_COUNTRY_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LAB_COUNTRY_IDA = value
				Me.SendPropertyChanged("LAB_COUNTRY_IDA")
				Me.OnLAB_COUNTRY_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_ORGANIZATION_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_ORGANIZATION_CODE() As String
		Get
			Return Me._LAB_ORGANIZATION_CODE
		End Get
		Set
			If (String.Equals(Me._LAB_ORGANIZATION_CODE, value) = false) Then
				Me.OnLAB_ORGANIZATION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_ORGANIZATION_CODE = value
				Me.SendPropertyChanged("LAB_ORGANIZATION_CODE")
				Me.OnLAB_ORGANIZATION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_GLN", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_GLN() As String
		Get
			Return Me._LAB_GLN
		End Get
		Set
			If (String.Equals(Me._LAB_GLN, value) = false) Then
				Me.OnLAB_GLNChanging(value)
				Me.SendPropertyChanging
				Me._LAB_GLN = value
				Me.SendPropertyChanged("LAB_GLN")
				Me.OnLAB_GLNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_ISO_DATE", DbType:="DateTime")>  _
	Public Property LAB_ISO_DATE() As System.Nullable(Of Date)
		Get
			Return Me._LAB_ISO_DATE
		End Get
		Set
			If (Me._LAB_ISO_DATE.Equals(value) = false) Then
				Me.OnLAB_ISO_DATEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_ISO_DATE = value
				Me.SendPropertyChanged("LAB_ISO_DATE")
				Me.OnLAB_ISO_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_ISO_EXP_DATE", DbType:="DateTime")>  _
	Public Property LAB_ISO_EXP_DATE() As System.Nullable(Of Date)
		Get
			Return Me._LAB_ISO_EXP_DATE
		End Get
		Set
			If (Me._LAB_ISO_EXP_DATE.Equals(value) = false) Then
				Me.OnLAB_ISO_EXP_DATEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_ISO_EXP_DATE = value
				Me.SendPropertyChanged("LAB_ISO_EXP_DATE")
				Me.OnLAB_ISO_EXP_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_DEPARTMENT_REGIST_CB", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_DEPARTMENT_REGIST_CB() As String
		Get
			Return Me._LAB_DEPARTMENT_REGIST_CB
		End Get
		Set
			If (String.Equals(Me._LAB_DEPARTMENT_REGIST_CB, value) = false) Then
				Me.OnLAB_DEPARTMENT_REGIST_CBChanging(value)
				Me.SendPropertyChanging
				Me._LAB_DEPARTMENT_REGIST_CB = value
				Me.SendPropertyChanged("LAB_DEPARTMENT_REGIST_CB")
				Me.OnLAB_DEPARTMENT_REGIST_CBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA", DbType:="Int")>  _
	Public Property LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA
		End Get
		Set
			If (Me._LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA.Equals(value) = false) Then
				Me.OnLAB_COUNTRY_DEPARTMENT_REGIST_CB_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA = value
				Me.SendPropertyChanged("LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA")
				Me.OnLAB_COUNTRY_DEPARTMENT_REGIST_CB_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_SCOPE", DbType:="NVarChar(MAX)")>  _
	Public Property CER_SCOPE() As String
		Get
			Return Me._CER_SCOPE
		End Get
		Set
			If (String.Equals(Me._CER_SCOPE, value) = false) Then
				Me.OnCER_SCOPEChanging(value)
				Me.SendPropertyChanging
				Me._CER_SCOPE = value
				Me.SendPropertyChanged("CER_SCOPE")
				Me.OnCER_SCOPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_TYPE", DbType:="Int")>  _
	Public Property CER_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._CER_TYPE
		End Get
		Set
			If (Me._CER_TYPE.Equals(value) = false) Then
				Me.OnCER_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CER_TYPE = value
				Me.SendPropertyChanged("CER_TYPE")
				Me.OnCER_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_MANUFACTURE_LOCATION_ADDRESS_ID", DbType:="Int")>  _
	Public Property FK_MANUFACTURE_LOCATION_ADDRESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FK_MANUFACTURE_LOCATION_ADDRESS_ID
		End Get
		Set
			If (Me._FK_MANUFACTURE_LOCATION_ADDRESS_ID.Equals(value) = false) Then
				Me.OnFK_MANUFACTURE_LOCATION_ADDRESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._FK_MANUFACTURE_LOCATION_ADDRESS_ID = value
				Me.SendPropertyChanged("FK_MANUFACTURE_LOCATION_ADDRESS_ID")
				Me.OnFK_MANUFACTURE_LOCATION_ADDRESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="Date")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property CER_NUMBER() As String
		Get
			Return Me._CER_NUMBER
		End Get
		Set
			If (String.Equals(Me._CER_NUMBER, value) = false) Then
				Me.OnCER_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._CER_NUMBER = value
				Me.SendPropertyChanged("CER_NUMBER")
				Me.OnCER_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNSID", DbType:="NVarChar(20)")>  _
	Public Property LCNSID() As String
		Get
			Return Me._LCNSID
		End Get
		Set
			If (String.Equals(Me._LCNSID, value) = false) Then
				Me.OnLCNSIDChanging(value)
				Me.SendPropertyChanging
				Me._LCNSID = value
				Me.SendPropertyChanged("LCNSID")
				Me.OnLCNSIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(20)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property XML_NAME() As String
		Get
			Return Me._XML_NAME
		End Get
		Set
			If (String.Equals(Me._XML_NAME, value) = false) Then
				Me.OnXML_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._XML_NAME = value
				Me.SendPropertyChanged("XML_NAME")
				Me.OnXML_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO() As String
		Get
			Return Me._RCVNO
		End Get
		Set
			If (String.Equals(Me._RCVNO, value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE", DbType:="DateTime")>  _
	Public Property RCVDATE() As System.Nullable(Of Date)
		Get
			Return Me._RCVDATE
		End Get
		Set
			If (Me._RCVDATE.Equals(value) = false) Then
				Me.OnRCVDATEChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE = value
				Me.SendPropertyChanged("RCVDATE")
				Me.OnRCVDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_DATE", DbType:="DateTime")>  _
	Public Property CER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CER_DATE
		End Get
		Set
			If (Me._CER_DATE.Equals(value) = false) Then
				Me.OnCER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CER_DATE = value
				Me.SendPropertyChanged("CER_DATE")
				Me.OnCER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUYER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BUYER_NAME() As String
		Get
			Return Me._BUYER_NAME
		End Get
		Set
			If (String.Equals(Me._BUYER_NAME, value) = false) Then
				Me.OnBUYER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BUYER_NAME = value
				Me.SendPropertyChanged("BUYER_NAME")
				Me.OnBUYER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUYER_COUNTRY", DbType:="Int")>  _
	Public Property BUYER_COUNTRY() As System.Nullable(Of Integer)
		Get
			Return Me._BUYER_COUNTRY
		End Get
		Set
			If (Me._BUYER_COUNTRY.Equals(value) = false) Then
				Me.OnBUYER_COUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._BUYER_COUNTRY = value
				Me.SendPropertyChanged("BUYER_COUNTRY")
				Me.OnBUYER_COUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUYER_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property BUYER_STANDARD() As String
		Get
			Return Me._BUYER_STANDARD
		End Get
		Set
			If (String.Equals(Me._BUYER_STANDARD, value) = false) Then
				Me.OnBUYER_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._BUYER_STANDARD = value
				Me.SendPropertyChanged("BUYER_STANDARD")
				Me.OnBUYER_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_QR_INPUT", DbType:="NVarChar(MAX)")>  _
	Public Property IMAGE_QR_INPUT() As String
		Get
			Return Me._IMAGE_QR_INPUT
		End Get
		Set
			If (String.Equals(Me._IMAGE_QR_INPUT, value) = false) Then
				Me.OnIMAGE_QR_INPUTChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_QR_INPUT = value
				Me.SendPropertyChanged("IMAGE_QR_INPUT")
				Me.OnIMAGE_QR_INPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_QR_OUTPUT", DbType:="NVarChar(MAX)")>  _
	Public Property IMAGE_QR_OUTPUT() As String
		Get
			Return Me._IMAGE_QR_OUTPUT
		End Get
		Set
			If (String.Equals(Me._IMAGE_QR_OUTPUT, value) = false) Then
				Me.OnIMAGE_QR_OUTPUTChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_QR_OUTPUT = value
				Me.SendPropertyChanged("IMAGE_QR_OUTPUT")
				Me.OnIMAGE_QR_OUTPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_FORMAT", DbType:="NVarChar(MAX)")>  _
	Public Property CER_FORMAT() As String
		Get
			Return Me._CER_FORMAT
		End Get
		Set
			If (String.Equals(Me._CER_FORMAT, value) = false) Then
				Me.OnCER_FORMATChanging(value)
				Me.SendPropertyChanging
				Me._CER_FORMAT = value
				Me.SendPropertyChanged("CER_FORMAT")
				Me.OnCER_FORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PICS_NAT_ALPHA3", DbType:="NVarChar(50)")>  _
	Public Property PICS_NAT_ALPHA3() As String
		Get
			Return Me._PICS_NAT_ALPHA3
		End Get
		Set
			If (String.Equals(Me._PICS_NAT_ALPHA3, value) = false) Then
				Me.OnPICS_NAT_ALPHA3Changing(value)
				Me.SendPropertyChanging
				Me._PICS_NAT_ALPHA3 = value
				Me.SendPropertyChanged("PICS_NAT_ALPHA3")
				Me.OnPICS_NAT_ALPHA3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PO_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property PO_OTHER() As String
		Get
			Return Me._PO_OTHER
		End Get
		Set
			If (String.Equals(Me._PO_OTHER, value) = false) Then
				Me.OnPO_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._PO_OTHER = value
				Me.SendPropertyChanged("PO_OTHER")
				Me.OnPO_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOBILE", DbType:="NVarChar(MAX)")>  _
	Public Property MOBILE() As String
		Get
			Return Me._MOBILE
		End Get
		Set
			If (String.Equals(Me._MOBILE, value) = false) Then
				Me.OnMOBILEChanging(value)
				Me.SendPropertyChanging
				Me._MOBILE = value
				Me.SendPropertyChanged("MOBILE")
				Me.OnMOBILEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_TR_ID", DbType:="NVarChar(MAX)")>  _
	Public Property OLD_TR_ID() As String
		Get
			Return Me._OLD_TR_ID
		End Get
		Set
			If (String.Equals(Me._OLD_TR_ID, value) = false) Then
				Me.OnOLD_TR_IDChanging(value)
				Me.SendPropertyChanging
				Me._OLD_TR_ID = value
				Me.SendPropertyChanged("OLD_TR_ID")
				Me.OnOLD_TR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_DATE
		End Get
		Set
			If (Me._REQUEST_DATE.Equals(value) = false) Then
				Me.OnREQUEST_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_DATE = value
				Me.SendPropertyChanged("REQUEST_DATE")
				Me.OnREQUEST_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_DOCUMENT_DATE", DbType:="DateTime")>  _
	Public Property NEW_DOCUMENT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._NEW_DOCUMENT_DATE
		End Get
		Set
			If (Me._NEW_DOCUMENT_DATE.Equals(value) = false) Then
				Me.OnNEW_DOCUMENT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._NEW_DOCUMENT_DATE = value
				Me.SendPropertyChanged("NEW_DOCUMENT_DATE")
				Me.OnNEW_DOCUMENT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_EXP_DOCUMENT_DATE1", DbType:="DateTime")>  _
	Public Property NEW_EXP_DOCUMENT_DATE1() As System.Nullable(Of Date)
		Get
			Return Me._NEW_EXP_DOCUMENT_DATE1
		End Get
		Set
			If (Me._NEW_EXP_DOCUMENT_DATE1.Equals(value) = false) Then
				Me.OnNEW_EXP_DOCUMENT_DATE1Changing(value)
				Me.SendPropertyChanging
				Me._NEW_EXP_DOCUMENT_DATE1 = value
				Me.SendPropertyChanged("NEW_EXP_DOCUMENT_DATE1")
				Me.OnNEW_EXP_DOCUMENT_DATE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_ACTIVE", DbType:="Int")>  _
	Public Property IS_ACTIVE() As System.Nullable(Of Integer)
		Get
			Return Me._IS_ACTIVE
		End Get
		Set
			If (Me._IS_ACTIVE.Equals(value) = false) Then
				Me.OnIS_ACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._IS_ACTIVE = value
				Me.SendPropertyChanged("IS_ACTIVE")
				Me.OnIS_ACTIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR_EXTEND", DbType:="Int")>  _
	Public Property YEAR_EXTEND() As System.Nullable(Of Integer)
		Get
			Return Me._YEAR_EXTEND
		End Get
		Set
			If (Me._YEAR_EXTEND.Equals(value) = false) Then
				Me.OnYEAR_EXTENDChanging(value)
				Me.SendPropertyChanging
				Me._YEAR_EXTEND = value
				Me.SendPropertyChanged("YEAR_EXTEND")
				Me.OnYEAR_EXTENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_FK_IDA", DbType:="Int")>  _
	Public Property OLD_FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._OLD_FK_IDA
		End Get
		Set
			If (Me._OLD_FK_IDA.Equals(value) = false) Then
				Me.OnOLD_FK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._OLD_FK_IDA = value
				Me.SendPropertyChanged("OLD_FK_IDA")
				Me.OnOLD_FK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_EXTEND")>  _
Partial Public Class CER_EXTEND
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _CERTIFICATION_NUMBER_ALL As String
	
	Private _DOCUMENT_DATE As System.Nullable(Of Date)
	
	Private _EXP_DOCUMENT_DATE As System.Nullable(Of Date)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _REQUEST_DATE As System.Nullable(Of Date)
	
	Private _RCVNO As String
	
	Private _RCVDATE As System.Nullable(Of Date)
	
	Private _IDENTIFY As String
	
	Private _CTZO_UPLOAD As String
	
	Private _COUNT_EXP As System.Nullable(Of Integer)
	
	Private _SAVE_DATE As System.Nullable(Of Date)
	
	Private _YEAR_EXTEND As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As String
	
	Private _REMARK As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnCERTIFICATION_NUMBER_ALLChanging(value As String)
    End Sub
    Partial Private Sub OnCERTIFICATION_NUMBER_ALLChanged()
    End Sub
    Partial Private Sub OnDOCUMENT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDOCUMENT_DATEChanged()
    End Sub
    Partial Private Sub OnEXP_DOCUMENT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEXP_DOCUMENT_DATEChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnREQUEST_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUEST_DATEChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnRCVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCVDATEChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnCTZO_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCTZO_UPLOADChanged()
    End Sub
    Partial Private Sub OnCOUNT_EXPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNT_EXPChanged()
    End Sub
    Partial Private Sub OnSAVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSAVE_DATEChanged()
    End Sub
    Partial Private Sub OnYEAR_EXTENDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYEAR_EXTENDChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CERTIFICATION_NUMBER_ALL", DbType:="NVarChar(MAX)")>  _
	Public Property CERTIFICATION_NUMBER_ALL() As String
		Get
			Return Me._CERTIFICATION_NUMBER_ALL
		End Get
		Set
			If (String.Equals(Me._CERTIFICATION_NUMBER_ALL, value) = false) Then
				Me.OnCERTIFICATION_NUMBER_ALLChanging(value)
				Me.SendPropertyChanging
				Me._CERTIFICATION_NUMBER_ALL = value
				Me.SendPropertyChanged("CERTIFICATION_NUMBER_ALL")
				Me.OnCERTIFICATION_NUMBER_ALLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOCUMENT_DATE", DbType:="DateTime")>  _
	Public Property DOCUMENT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DOCUMENT_DATE
		End Get
		Set
			If (Me._DOCUMENT_DATE.Equals(value) = false) Then
				Me.OnDOCUMENT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DOCUMENT_DATE = value
				Me.SendPropertyChanged("DOCUMENT_DATE")
				Me.OnDOCUMENT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXP_DOCUMENT_DATE", DbType:="DateTime")>  _
	Public Property EXP_DOCUMENT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._EXP_DOCUMENT_DATE
		End Get
		Set
			If (Me._EXP_DOCUMENT_DATE.Equals(value) = false) Then
				Me.OnEXP_DOCUMENT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._EXP_DOCUMENT_DATE = value
				Me.SendPropertyChanged("EXP_DOCUMENT_DATE")
				Me.OnEXP_DOCUMENT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_DATE
		End Get
		Set
			If (Me._REQUEST_DATE.Equals(value) = false) Then
				Me.OnREQUEST_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_DATE = value
				Me.SendPropertyChanged("REQUEST_DATE")
				Me.OnREQUEST_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO() As String
		Get
			Return Me._RCVNO
		End Get
		Set
			If (String.Equals(Me._RCVNO, value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE", DbType:="DateTime")>  _
	Public Property RCVDATE() As System.Nullable(Of Date)
		Get
			Return Me._RCVDATE
		End Get
		Set
			If (Me._RCVDATE.Equals(value) = false) Then
				Me.OnRCVDATEChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE = value
				Me.SendPropertyChanged("RCVDATE")
				Me.OnRCVDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(20)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CTZO_UPLOAD", DbType:="NVarChar(50)")>  _
	Public Property CTZO_UPLOAD() As String
		Get
			Return Me._CTZO_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CTZO_UPLOAD, value) = false) Then
				Me.OnCTZO_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CTZO_UPLOAD = value
				Me.SendPropertyChanged("CTZO_UPLOAD")
				Me.OnCTZO_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNT_EXP", DbType:="Int")>  _
	Public Property COUNT_EXP() As System.Nullable(Of Integer)
		Get
			Return Me._COUNT_EXP
		End Get
		Set
			If (Me._COUNT_EXP.Equals(value) = false) Then
				Me.OnCOUNT_EXPChanging(value)
				Me.SendPropertyChanging
				Me._COUNT_EXP = value
				Me.SendPropertyChanged("COUNT_EXP")
				Me.OnCOUNT_EXPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAVE_DATE", DbType:="DateTime")>  _
	Public Property SAVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._SAVE_DATE
		End Get
		Set
			If (Me._SAVE_DATE.Equals(value) = false) Then
				Me.OnSAVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._SAVE_DATE = value
				Me.SendPropertyChanged("SAVE_DATE")
				Me.OnSAVE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR_EXTEND", DbType:="Int")>  _
	Public Property YEAR_EXTEND() As System.Nullable(Of Integer)
		Get
			Return Me._YEAR_EXTEND
		End Get
		Set
			If (Me._YEAR_EXTEND.Equals(value) = false) Then
				Me.OnYEAR_EXTENDChanging(value)
				Me.SendPropertyChanging
				Me._YEAR_EXTEND = value
				Me.SendPropertyChanged("YEAR_EXTEND")
				Me.OnYEAR_EXTENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_NEW_WORK_GROUP")>  _
Partial Public Class MAS_NEW_WORK_GROUP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _WORK_GROUP As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnWORK_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnWORK_GROUPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORK_GROUP", DbType:="NVarChar(MAX)")>  _
	Public Property WORK_GROUP() As String
		Get
			Return Me._WORK_GROUP
		End Get
		Set
			If (String.Equals(Me._WORK_GROUP, value) = false) Then
				Me.OnWORK_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._WORK_GROUP = value
				Me.SendPropertyChanged("WORK_GROUP")
				Me.OnWORK_GROUPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EDT_HISTORY")>  _
Partial Public Class EDT_HISTORY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _BSN_THAIFULLNAME As String
	
	Private _BSN_IDENTIFY As String
	
	Private _BSN_PREFIXTHAICD As System.Nullable(Of Integer)
	
	Private _BSN_THAINAME As String
	
	Private _BSN_THAILASTNAME As String
	
	Private _BSN_ENGNAME As String
	
	Private _BSN_ENGLASTNAME As String
	
	Private _BSN_ENGFULLNAME As String
	
	Private _BSN_HOUSENO As String
	
	Private _BSN_ADDR As String
	
	Private _BSN_SOI As String
	
	Private _BSN_ROAD As String
	
	Private _BSN_MOO As String
	
	Private _BSN_THMBL_NAME As String
	
	Private _BSN_AMPHR_NAME As String
	
	Private _BSN_CHWNGNAME As String
	
	Private _BSN_TELEPHONE As String
	
	Private _BSN_FAX As String
	
	Private _BSN_EMAIL As String
	
	Private _CHANGWAT_ID As System.Nullable(Of Integer)
	
	Private _AMPHR_ID As System.Nullable(Of Integer)
	
	Private _TUMBON_ID As System.Nullable(Of Integer)
	
	Private _BSN_ENGADDR As String
	
	Private _BSN_FLOOR As String
	
	Private _BSN_ENGMU As String
	
	Private _BSN_ENGSOI As String
	
	Private _BSN_ENGROAD As String
	
	Private _BSN_CHWNG_ENGNAME As String
	
	Private _BSN_AMPHR_ENGNAME As String
	
	Private _BSN_THMBL_ENGNAME As String
	
	Private _thanameplace As String
	
	Private _LOCATION_ADDRESS_thanameplace As String
	
	Private _engnameplace As String
	
	Private _LOCATION_ADDRESS_engnameplace As String
	
	Private _LOCATION_ADDRESS_HOUSENO As String
	
	Private _LOCATION_ADDRESS_thaaddr As String
	
	Private _LOCATION_ADDRESS_thasoi As String
	
	Private _LOCATION_ADDRESS_tharoad As String
	
	Private _LOCATION_ADDRESS_thamu As String
	
	Private _LOCATION_ADDRESS_thathmblnm As String
	
	Private _LOCATION_ADDRESS_thaamphrnm As String
	
	Private _LOCATION_ADDRESS_thachngwtnm As String
	
	Private _LOCATION_ADDRESS_tel As String
	
	Private _LOCATION_ADDRESS_fax As String
	
	Private _LOCATION_ADDRESS_thmblcd As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_chngwtcd As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_amphrcd As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_engaddr As String
	
	Private _LOCATION_ADDRESS_engsoi As String
	
	Private _LOCATION_ADDRESS_engroad As String
	
	Private _LOCATION_ADDRESS_engmu As String
	
	Private _LOCATION_ADDRESS_engthmblnm As String
	
	Private _LOCATION_ADDRESS_engamphrnm As String
	
	Private _LOCATION_ADDRESS_engchngwtnm As String
	
	Private _HOUSENO As String
	
	Private _thaaddr As String
	
	Private _thasoi As String
	
	Private _tharoad As String
	
	Private _thamu As String
	
	Private _thathmblnm As String
	
	Private _thaamphrnm As String
	
	Private _thachngwtnm As String
	
	Private _tel As String
	
	Private _fax As String
	
	Private _amphrcd As System.Nullable(Of Integer)
	
	Private _chngwtcd As System.Nullable(Of Integer)
	
	Private _thmblcd As System.Nullable(Of Integer)
	
	Private _engaddr As String
	
	Private _engmu As String
	
	Private _engsoi As String
	
	Private _engroad As String
	
	Private _engchngwtnm As String
	
	Private _engamphrnm As String
	
	Private _engthmblnm As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _BSN_THAIFULLNAME_OLD As String
	
	Private _BSN_IDENTIFY_OLD As String
	
	Private _BSN_PREFIXTHAICD_OLD As System.Nullable(Of Integer)
	
	Private _BSN_THAINAME_OLD As String
	
	Private _BSN_THAILASTNAME_OLD As String
	
	Private _BSN_ENGNAME_OLD As String
	
	Private _BSN_ENGLASTNAME_OLD As String
	
	Private _BSN_ENGFULLNAME_OLD As String
	
	Private _BSN_HOUSENO_OLD As String
	
	Private _BSN_ADDR_OLD As String
	
	Private _BSN_SOI_OLD As String
	
	Private _BSN_ROAD_OLD As String
	
	Private _BSN_MOO_OLD As String
	
	Private _BSN_THMBL_NAME_OLD As String
	
	Private _BSN_AMPHR_NAME_OLD As String
	
	Private _BSN_CHWNGNAME_OLD As String
	
	Private _BSN_TELEPHONE_OLD As String
	
	Private _BSN_FAX_OLD As String
	
	Private _BSN_EMAIL_OLD As String
	
	Private _CHANGWAT_ID_OLD As System.Nullable(Of Integer)
	
	Private _AMPHR_ID_OLD As System.Nullable(Of Integer)
	
	Private _TUMBON_ID_OLD As System.Nullable(Of Integer)
	
	Private _BSN_ENGADDR_OLD As String
	
	Private _BSN_FLOOR_OLD As String
	
	Private _BSN_ENGMU_OLD As String
	
	Private _BSN_ENGSOI_OLD As String
	
	Private _BSN_ENGROAD_OLD As String
	
	Private _BSN_CHWNG_ENGNAME_OLD As String
	
	Private _BSN_AMPHR_ENGNAME_OLD As String
	
	Private _BSN_THMBL_ENGNAME_OLD As String
	
	Private _thanameplace_OLD As String
	
	Private _LOCATION_ADDRESS_thanameplace_OLD As String
	
	Private _engnameplace_OLD As String
	
	Private _LOCATION_ADDRESS_engnameplace_OLD As String
	
	Private _LOCATION_ADDRESS_HOUSENO_OLD As String
	
	Private _LOCATION_ADDRESS_thaaddr_OLD As String
	
	Private _LOCATION_ADDRESS_thasoi_OLD As String
	
	Private _LOCATION_ADDRESS_tharoad_OLD As String
	
	Private _LOCATION_ADDRESS_thamu_OLD As String
	
	Private _LOCATION_ADDRESS_thathmblnm_OLD As String
	
	Private _LOCATION_ADDRESS_thaamphrnm_OLD As String
	
	Private _LOCATION_ADDRESS_thachngwtnm_OLD As String
	
	Private _LOCATION_ADDRESS_tel_OLD As String
	
	Private _LOCATION_ADDRESS_fax_OLD As String
	
	Private _LOCATION_ADDRESS_thmblcd_OLD As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_chngwtcd_OLD As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_amphrcd_OLD As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_engaddr_OLD As String
	
	Private _LOCATION_ADDRESS_engsoi_OLD As String
	
	Private _LOCATION_ADDRESS_engroad_OLD As String
	
	Private _LOCATION_ADDRESS_engmu_OLD As String
	
	Private _LOCATION_ADDRESS_engthmblnm_OLD As String
	
	Private _LOCATION_ADDRESS_engamphrnm_OLD As String
	
	Private _LOCATION_ADDRESS_engchngwtnm_OLD As String
	
	Private _HOUSENO_OLD As String
	
	Private _thaaddr_OLD As String
	
	Private _thasoi_OLD As String
	
	Private _tharoad_OLD As String
	
	Private _thamu_OLD As String
	
	Private _thathmblnm_OLD As String
	
	Private _thaamphrnm_OLD As String
	
	Private _thachngwtnm_OLD As String
	
	Private _tel_OLD As String
	
	Private _fax_OLD As String
	
	Private _amphrcd_OLD As System.Nullable(Of Integer)
	
	Private _chngwtcd_OLD As System.Nullable(Of Integer)
	
	Private _thmblcd_OLD As System.Nullable(Of Integer)
	
	Private _engaddr_OLD As String
	
	Private _engmu_OLD As String
	
	Private _engsoi_OLD As String
	
	Private _engroad_OLD As String
	
	Private _engchngwtnm_OLD As String
	
	Private _engamphrnm_OLD As String
	
	Private _engthmblnm_OLD As String
	
	Private _EDIT_TYPE As System.Nullable(Of Integer)
	
	Private _IDEN_EDITOR As String
	
	Private _INSERT_DATE As System.Nullable(Of Date)
	
	Private _ZIPCODE As String
	
	Private _ZIPCODE_OLD As String
	
	Private _LOCATION_ADDRESS_ZIPCODE As String
	
	Private _LOCATION_ADDRESS_ZIPCODE_OLD As String
	
	Private _SELECT_EDIT_DATE As System.Nullable(Of Date)
	
	Private _OPEN_TIME_OLD As String
	
	Private _OPEN_TIME_NEW As String
	
	Private _lcnsid_new As String
	
	Private _lcnsid_old As String
	
	Private _bsnid_new As String
	
	Private _bsnid_old As String
	
	Private _LCT_IDA_OLD As System.Nullable(Of Integer)
	
	Private _LCT_IDA_NEW As System.Nullable(Of Integer)
	
	Private _XML_OLD As String
	
	Private _XML_NEW As String
	
	Private _CHK_SUSTAIN1 As System.Nullable(Of Boolean)
	
	Private _CHK_SUSTAIN2 As System.Nullable(Of Boolean)
	
	Private _CHK_SUSTAIN3 As System.Nullable(Of Boolean)
	
	Private _SUSTAIN_TYPE As System.Nullable(Of Integer)
	
	Private _PASS_AWAY_DATE As System.Nullable(Of Date)
	
	Private _ADDR_OLD As String
	
	Private _ADDR_NEW As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnBSN_THAIFULLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THAIFULLNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnBSN_PREFIXTHAICDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBSN_PREFIXTHAICDChanged()
    End Sub
    Partial Private Sub OnBSN_THAINAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THAINAMEChanged()
    End Sub
    Partial Private Sub OnBSN_THAILASTNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THAILASTNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_ENGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_ENGLASTNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGLASTNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_ENGFULLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGFULLNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_HOUSENOChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_HOUSENOChanged()
    End Sub
    Partial Private Sub OnBSN_ADDRChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ADDRChanged()
    End Sub
    Partial Private Sub OnBSN_SOIChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_SOIChanged()
    End Sub
    Partial Private Sub OnBSN_ROADChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ROADChanged()
    End Sub
    Partial Private Sub OnBSN_MOOChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_MOOChanged()
    End Sub
    Partial Private Sub OnBSN_THMBL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THMBL_NAMEChanged()
    End Sub
    Partial Private Sub OnBSN_AMPHR_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_AMPHR_NAMEChanged()
    End Sub
    Partial Private Sub OnBSN_CHWNGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_CHWNGNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_TELEPHONEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_TELEPHONEChanged()
    End Sub
    Partial Private Sub OnBSN_FAXChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_FAXChanged()
    End Sub
    Partial Private Sub OnBSN_EMAILChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_EMAILChanged()
    End Sub
    Partial Private Sub OnCHANGWAT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHANGWAT_IDChanged()
    End Sub
    Partial Private Sub OnAMPHR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAMPHR_IDChanged()
    End Sub
    Partial Private Sub OnTUMBON_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTUMBON_IDChanged()
    End Sub
    Partial Private Sub OnBSN_ENGADDRChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGADDRChanged()
    End Sub
    Partial Private Sub OnBSN_FLOORChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_FLOORChanged()
    End Sub
    Partial Private Sub OnBSN_ENGMUChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGMUChanged()
    End Sub
    Partial Private Sub OnBSN_ENGSOIChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGSOIChanged()
    End Sub
    Partial Private Sub OnBSN_ENGROADChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGROADChanged()
    End Sub
    Partial Private Sub OnBSN_CHWNG_ENGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_CHWNG_ENGNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_AMPHR_ENGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_AMPHR_ENGNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_THMBL_ENGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THMBL_ENGNAMEChanged()
    End Sub
    Partial Private Sub OnthanameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnthanameplaceChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thanameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thanameplaceChanged()
    End Sub
    Partial Private Sub OnengnameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnengnameplaceChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engnameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engnameplaceChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_HOUSENOChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_HOUSENOChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaaddrChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaaddrChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thasoiChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thasoiChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tharoadChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tharoadChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thamuChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thamuChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thathmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thathmblnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaamphrnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thachngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thachngwtnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_telChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_telChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_faxChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_faxChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thmblcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thmblcdChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_chngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_chngwtcdChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_amphrcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_amphrcdChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engaddrChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engaddrChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engsoiChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engsoiChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engroadChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engroadChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engmuChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engmuChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engthmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engthmblnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engamphrnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engchngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engchngwtnmChanged()
    End Sub
    Partial Private Sub OnHOUSENOChanging(value As String)
    End Sub
    Partial Private Sub OnHOUSENOChanged()
    End Sub
    Partial Private Sub OnthaaddrChanging(value As String)
    End Sub
    Partial Private Sub OnthaaddrChanged()
    End Sub
    Partial Private Sub OnthasoiChanging(value As String)
    End Sub
    Partial Private Sub OnthasoiChanged()
    End Sub
    Partial Private Sub OntharoadChanging(value As String)
    End Sub
    Partial Private Sub OntharoadChanged()
    End Sub
    Partial Private Sub OnthamuChanging(value As String)
    End Sub
    Partial Private Sub OnthamuChanged()
    End Sub
    Partial Private Sub OnthathmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnthathmblnmChanged()
    End Sub
    Partial Private Sub OnthaamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnthaamphrnmChanged()
    End Sub
    Partial Private Sub OnthachngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnthachngwtnmChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnthmblcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnthmblcdChanged()
    End Sub
    Partial Private Sub OnengaddrChanging(value As String)
    End Sub
    Partial Private Sub OnengaddrChanged()
    End Sub
    Partial Private Sub OnengmuChanging(value As String)
    End Sub
    Partial Private Sub OnengmuChanged()
    End Sub
    Partial Private Sub OnengsoiChanging(value As String)
    End Sub
    Partial Private Sub OnengsoiChanged()
    End Sub
    Partial Private Sub OnengroadChanging(value As String)
    End Sub
    Partial Private Sub OnengroadChanged()
    End Sub
    Partial Private Sub OnengchngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnengchngwtnmChanged()
    End Sub
    Partial Private Sub OnengamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnengamphrnmChanged()
    End Sub
    Partial Private Sub OnengthmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnengthmblnmChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnBSN_THAIFULLNAME_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THAIFULLNAME_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_IDENTIFY_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_IDENTIFY_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_PREFIXTHAICD_OLDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBSN_PREFIXTHAICD_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_THAINAME_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THAINAME_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_THAILASTNAME_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THAILASTNAME_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_ENGNAME_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGNAME_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_ENGLASTNAME_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGLASTNAME_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_ENGFULLNAME_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGFULLNAME_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_HOUSENO_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_HOUSENO_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_ADDR_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ADDR_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_SOI_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_SOI_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_ROAD_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ROAD_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_MOO_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_MOO_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_THMBL_NAME_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THMBL_NAME_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_AMPHR_NAME_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_AMPHR_NAME_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_CHWNGNAME_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_CHWNGNAME_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_TELEPHONE_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_TELEPHONE_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_FAX_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_FAX_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_EMAIL_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_EMAIL_OLDChanged()
    End Sub
    Partial Private Sub OnCHANGWAT_ID_OLDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHANGWAT_ID_OLDChanged()
    End Sub
    Partial Private Sub OnAMPHR_ID_OLDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAMPHR_ID_OLDChanged()
    End Sub
    Partial Private Sub OnTUMBON_ID_OLDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTUMBON_ID_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_ENGADDR_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGADDR_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_FLOOR_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_FLOOR_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_ENGMU_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGMU_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_ENGSOI_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGSOI_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_ENGROAD_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGROAD_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_CHWNG_ENGNAME_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_CHWNG_ENGNAME_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_AMPHR_ENGNAME_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_AMPHR_ENGNAME_OLDChanged()
    End Sub
    Partial Private Sub OnBSN_THMBL_ENGNAME_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THMBL_ENGNAME_OLDChanged()
    End Sub
    Partial Private Sub Onthanameplace_OLDChanging(value As String)
    End Sub
    Partial Private Sub Onthanameplace_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thanameplace_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thanameplace_OLDChanged()
    End Sub
    Partial Private Sub Onengnameplace_OLDChanging(value As String)
    End Sub
    Partial Private Sub Onengnameplace_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engnameplace_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engnameplace_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_HOUSENO_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_HOUSENO_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaaddr_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaaddr_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thasoi_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thasoi_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tharoad_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tharoad_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thamu_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thamu_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thathmblnm_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thathmblnm_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaamphrnm_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaamphrnm_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thachngwtnm_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thachngwtnm_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tel_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tel_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_fax_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_fax_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thmblcd_OLDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thmblcd_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_chngwtcd_OLDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_chngwtcd_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_amphrcd_OLDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_amphrcd_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engaddr_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engaddr_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engsoi_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engsoi_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engroad_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engroad_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engmu_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engmu_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engthmblnm_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engthmblnm_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engamphrnm_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engamphrnm_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engchngwtnm_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engchngwtnm_OLDChanged()
    End Sub
    Partial Private Sub OnHOUSENO_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnHOUSENO_OLDChanged()
    End Sub
    Partial Private Sub Onthaaddr_OLDChanging(value As String)
    End Sub
    Partial Private Sub Onthaaddr_OLDChanged()
    End Sub
    Partial Private Sub Onthasoi_OLDChanging(value As String)
    End Sub
    Partial Private Sub Onthasoi_OLDChanged()
    End Sub
    Partial Private Sub Ontharoad_OLDChanging(value As String)
    End Sub
    Partial Private Sub Ontharoad_OLDChanged()
    End Sub
    Partial Private Sub Onthamu_OLDChanging(value As String)
    End Sub
    Partial Private Sub Onthamu_OLDChanged()
    End Sub
    Partial Private Sub Onthathmblnm_OLDChanging(value As String)
    End Sub
    Partial Private Sub Onthathmblnm_OLDChanged()
    End Sub
    Partial Private Sub Onthaamphrnm_OLDChanging(value As String)
    End Sub
    Partial Private Sub Onthaamphrnm_OLDChanged()
    End Sub
    Partial Private Sub Onthachngwtnm_OLDChanging(value As String)
    End Sub
    Partial Private Sub Onthachngwtnm_OLDChanged()
    End Sub
    Partial Private Sub Ontel_OLDChanging(value As String)
    End Sub
    Partial Private Sub Ontel_OLDChanged()
    End Sub
    Partial Private Sub Onfax_OLDChanging(value As String)
    End Sub
    Partial Private Sub Onfax_OLDChanged()
    End Sub
    Partial Private Sub Onamphrcd_OLDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onamphrcd_OLDChanged()
    End Sub
    Partial Private Sub Onchngwtcd_OLDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onchngwtcd_OLDChanged()
    End Sub
    Partial Private Sub Onthmblcd_OLDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onthmblcd_OLDChanged()
    End Sub
    Partial Private Sub Onengaddr_OLDChanging(value As String)
    End Sub
    Partial Private Sub Onengaddr_OLDChanged()
    End Sub
    Partial Private Sub Onengmu_OLDChanging(value As String)
    End Sub
    Partial Private Sub Onengmu_OLDChanged()
    End Sub
    Partial Private Sub Onengsoi_OLDChanging(value As String)
    End Sub
    Partial Private Sub Onengsoi_OLDChanged()
    End Sub
    Partial Private Sub Onengroad_OLDChanging(value As String)
    End Sub
    Partial Private Sub Onengroad_OLDChanged()
    End Sub
    Partial Private Sub Onengchngwtnm_OLDChanging(value As String)
    End Sub
    Partial Private Sub Onengchngwtnm_OLDChanged()
    End Sub
    Partial Private Sub Onengamphrnm_OLDChanging(value As String)
    End Sub
    Partial Private Sub Onengamphrnm_OLDChanged()
    End Sub
    Partial Private Sub Onengthmblnm_OLDChanging(value As String)
    End Sub
    Partial Private Sub Onengthmblnm_OLDChanged()
    End Sub
    Partial Private Sub OnEDIT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEDIT_TYPEChanged()
    End Sub
    Partial Private Sub OnIDEN_EDITORChanging(value As String)
    End Sub
    Partial Private Sub OnIDEN_EDITORChanged()
    End Sub
    Partial Private Sub OnINSERT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSERT_DATEChanged()
    End Sub
    Partial Private Sub OnZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIPCODEChanged()
    End Sub
    Partial Private Sub OnZIPCODE_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnZIPCODE_OLDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_ZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_ZIPCODEChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_ZIPCODE_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_ZIPCODE_OLDChanged()
    End Sub
    Partial Private Sub OnSELECT_EDIT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSELECT_EDIT_DATEChanged()
    End Sub
    Partial Private Sub OnOPEN_TIME_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnOPEN_TIME_OLDChanged()
    End Sub
    Partial Private Sub OnOPEN_TIME_NEWChanging(value As String)
    End Sub
    Partial Private Sub OnOPEN_TIME_NEWChanged()
    End Sub
    Partial Private Sub Onlcnsid_newChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_newChanged()
    End Sub
    Partial Private Sub Onlcnsid_oldChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_oldChanged()
    End Sub
    Partial Private Sub Onbsnid_newChanging(value As String)
    End Sub
    Partial Private Sub Onbsnid_newChanged()
    End Sub
    Partial Private Sub Onbsnid_oldChanging(value As String)
    End Sub
    Partial Private Sub Onbsnid_oldChanged()
    End Sub
    Partial Private Sub OnLCT_IDA_OLDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCT_IDA_OLDChanged()
    End Sub
    Partial Private Sub OnLCT_IDA_NEWChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCT_IDA_NEWChanged()
    End Sub
    Partial Private Sub OnXML_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnXML_OLDChanged()
    End Sub
    Partial Private Sub OnXML_NEWChanging(value As String)
    End Sub
    Partial Private Sub OnXML_NEWChanged()
    End Sub
    Partial Private Sub OnCHK_SUSTAIN1Changing(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCHK_SUSTAIN1Changed()
    End Sub
    Partial Private Sub OnCHK_SUSTAIN2Changing(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCHK_SUSTAIN2Changed()
    End Sub
    Partial Private Sub OnCHK_SUSTAIN3Changing(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCHK_SUSTAIN3Changed()
    End Sub
    Partial Private Sub OnSUSTAIN_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUSTAIN_TYPEChanged()
    End Sub
    Partial Private Sub OnPASS_AWAY_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPASS_AWAY_DATEChanged()
    End Sub
    Partial Private Sub OnADDR_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnADDR_OLDChanged()
    End Sub
    Partial Private Sub OnADDR_NEWChanging(value As String)
    End Sub
    Partial Private Sub OnADDR_NEWChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THAIFULLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THAIFULLNAME() As String
		Get
			Return Me._BSN_THAIFULLNAME
		End Get
		Set
			If (String.Equals(Me._BSN_THAIFULLNAME, value) = false) Then
				Me.OnBSN_THAIFULLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THAIFULLNAME = value
				Me.SendPropertyChanged("BSN_THAIFULLNAME")
				Me.OnBSN_THAIFULLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_IDENTIFY() As String
		Get
			Return Me._BSN_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._BSN_IDENTIFY, value) = false) Then
				Me.OnBSN_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._BSN_IDENTIFY = value
				Me.SendPropertyChanged("BSN_IDENTIFY")
				Me.OnBSN_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_PREFIXTHAICD", DbType:="Int")>  _
	Public Property BSN_PREFIXTHAICD() As System.Nullable(Of Integer)
		Get
			Return Me._BSN_PREFIXTHAICD
		End Get
		Set
			If (Me._BSN_PREFIXTHAICD.Equals(value) = false) Then
				Me.OnBSN_PREFIXTHAICDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_PREFIXTHAICD = value
				Me.SendPropertyChanged("BSN_PREFIXTHAICD")
				Me.OnBSN_PREFIXTHAICDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THAINAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THAINAME() As String
		Get
			Return Me._BSN_THAINAME
		End Get
		Set
			If (String.Equals(Me._BSN_THAINAME, value) = false) Then
				Me.OnBSN_THAINAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THAINAME = value
				Me.SendPropertyChanged("BSN_THAINAME")
				Me.OnBSN_THAINAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THAILASTNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THAILASTNAME() As String
		Get
			Return Me._BSN_THAILASTNAME
		End Get
		Set
			If (String.Equals(Me._BSN_THAILASTNAME, value) = false) Then
				Me.OnBSN_THAILASTNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THAILASTNAME = value
				Me.SendPropertyChanged("BSN_THAILASTNAME")
				Me.OnBSN_THAILASTNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGNAME() As String
		Get
			Return Me._BSN_ENGNAME
		End Get
		Set
			If (String.Equals(Me._BSN_ENGNAME, value) = false) Then
				Me.OnBSN_ENGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGNAME = value
				Me.SendPropertyChanged("BSN_ENGNAME")
				Me.OnBSN_ENGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGLASTNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGLASTNAME() As String
		Get
			Return Me._BSN_ENGLASTNAME
		End Get
		Set
			If (String.Equals(Me._BSN_ENGLASTNAME, value) = false) Then
				Me.OnBSN_ENGLASTNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGLASTNAME = value
				Me.SendPropertyChanged("BSN_ENGLASTNAME")
				Me.OnBSN_ENGLASTNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGFULLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGFULLNAME() As String
		Get
			Return Me._BSN_ENGFULLNAME
		End Get
		Set
			If (String.Equals(Me._BSN_ENGFULLNAME, value) = false) Then
				Me.OnBSN_ENGFULLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGFULLNAME = value
				Me.SendPropertyChanged("BSN_ENGFULLNAME")
				Me.OnBSN_ENGFULLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_HOUSENO", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_HOUSENO() As String
		Get
			Return Me._BSN_HOUSENO
		End Get
		Set
			If (String.Equals(Me._BSN_HOUSENO, value) = false) Then
				Me.OnBSN_HOUSENOChanging(value)
				Me.SendPropertyChanging
				Me._BSN_HOUSENO = value
				Me.SendPropertyChanged("BSN_HOUSENO")
				Me.OnBSN_HOUSENOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ADDR", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ADDR() As String
		Get
			Return Me._BSN_ADDR
		End Get
		Set
			If (String.Equals(Me._BSN_ADDR, value) = false) Then
				Me.OnBSN_ADDRChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ADDR = value
				Me.SendPropertyChanged("BSN_ADDR")
				Me.OnBSN_ADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_SOI", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_SOI() As String
		Get
			Return Me._BSN_SOI
		End Get
		Set
			If (String.Equals(Me._BSN_SOI, value) = false) Then
				Me.OnBSN_SOIChanging(value)
				Me.SendPropertyChanging
				Me._BSN_SOI = value
				Me.SendPropertyChanged("BSN_SOI")
				Me.OnBSN_SOIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ROAD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ROAD() As String
		Get
			Return Me._BSN_ROAD
		End Get
		Set
			If (String.Equals(Me._BSN_ROAD, value) = false) Then
				Me.OnBSN_ROADChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ROAD = value
				Me.SendPropertyChanged("BSN_ROAD")
				Me.OnBSN_ROADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_MOO", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_MOO() As String
		Get
			Return Me._BSN_MOO
		End Get
		Set
			If (String.Equals(Me._BSN_MOO, value) = false) Then
				Me.OnBSN_MOOChanging(value)
				Me.SendPropertyChanging
				Me._BSN_MOO = value
				Me.SendPropertyChanged("BSN_MOO")
				Me.OnBSN_MOOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THMBL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THMBL_NAME() As String
		Get
			Return Me._BSN_THMBL_NAME
		End Get
		Set
			If (String.Equals(Me._BSN_THMBL_NAME, value) = false) Then
				Me.OnBSN_THMBL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THMBL_NAME = value
				Me.SendPropertyChanged("BSN_THMBL_NAME")
				Me.OnBSN_THMBL_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_AMPHR_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_AMPHR_NAME() As String
		Get
			Return Me._BSN_AMPHR_NAME
		End Get
		Set
			If (String.Equals(Me._BSN_AMPHR_NAME, value) = false) Then
				Me.OnBSN_AMPHR_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_AMPHR_NAME = value
				Me.SendPropertyChanged("BSN_AMPHR_NAME")
				Me.OnBSN_AMPHR_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_CHWNGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_CHWNGNAME() As String
		Get
			Return Me._BSN_CHWNGNAME
		End Get
		Set
			If (String.Equals(Me._BSN_CHWNGNAME, value) = false) Then
				Me.OnBSN_CHWNGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_CHWNGNAME = value
				Me.SendPropertyChanged("BSN_CHWNGNAME")
				Me.OnBSN_CHWNGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_TELEPHONE", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_TELEPHONE() As String
		Get
			Return Me._BSN_TELEPHONE
		End Get
		Set
			If (String.Equals(Me._BSN_TELEPHONE, value) = false) Then
				Me.OnBSN_TELEPHONEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_TELEPHONE = value
				Me.SendPropertyChanged("BSN_TELEPHONE")
				Me.OnBSN_TELEPHONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_FAX", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_FAX() As String
		Get
			Return Me._BSN_FAX
		End Get
		Set
			If (String.Equals(Me._BSN_FAX, value) = false) Then
				Me.OnBSN_FAXChanging(value)
				Me.SendPropertyChanging
				Me._BSN_FAX = value
				Me.SendPropertyChanged("BSN_FAX")
				Me.OnBSN_FAXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_EMAIL() As String
		Get
			Return Me._BSN_EMAIL
		End Get
		Set
			If (String.Equals(Me._BSN_EMAIL, value) = false) Then
				Me.OnBSN_EMAILChanging(value)
				Me.SendPropertyChanging
				Me._BSN_EMAIL = value
				Me.SendPropertyChanged("BSN_EMAIL")
				Me.OnBSN_EMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHANGWAT_ID", DbType:="Int")>  _
	Public Property CHANGWAT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CHANGWAT_ID
		End Get
		Set
			If (Me._CHANGWAT_ID.Equals(value) = false) Then
				Me.OnCHANGWAT_IDChanging(value)
				Me.SendPropertyChanging
				Me._CHANGWAT_ID = value
				Me.SendPropertyChanged("CHANGWAT_ID")
				Me.OnCHANGWAT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHR_ID", DbType:="Int")>  _
	Public Property AMPHR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._AMPHR_ID
		End Get
		Set
			If (Me._AMPHR_ID.Equals(value) = false) Then
				Me.OnAMPHR_IDChanging(value)
				Me.SendPropertyChanging
				Me._AMPHR_ID = value
				Me.SendPropertyChanged("AMPHR_ID")
				Me.OnAMPHR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TUMBON_ID", DbType:="Int")>  _
	Public Property TUMBON_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TUMBON_ID
		End Get
		Set
			If (Me._TUMBON_ID.Equals(value) = false) Then
				Me.OnTUMBON_IDChanging(value)
				Me.SendPropertyChanging
				Me._TUMBON_ID = value
				Me.SendPropertyChanged("TUMBON_ID")
				Me.OnTUMBON_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGADDR", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGADDR() As String
		Get
			Return Me._BSN_ENGADDR
		End Get
		Set
			If (String.Equals(Me._BSN_ENGADDR, value) = false) Then
				Me.OnBSN_ENGADDRChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGADDR = value
				Me.SendPropertyChanged("BSN_ENGADDR")
				Me.OnBSN_ENGADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_FLOOR", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_FLOOR() As String
		Get
			Return Me._BSN_FLOOR
		End Get
		Set
			If (String.Equals(Me._BSN_FLOOR, value) = false) Then
				Me.OnBSN_FLOORChanging(value)
				Me.SendPropertyChanging
				Me._BSN_FLOOR = value
				Me.SendPropertyChanged("BSN_FLOOR")
				Me.OnBSN_FLOORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGMU", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGMU() As String
		Get
			Return Me._BSN_ENGMU
		End Get
		Set
			If (String.Equals(Me._BSN_ENGMU, value) = false) Then
				Me.OnBSN_ENGMUChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGMU = value
				Me.SendPropertyChanged("BSN_ENGMU")
				Me.OnBSN_ENGMUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGSOI", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGSOI() As String
		Get
			Return Me._BSN_ENGSOI
		End Get
		Set
			If (String.Equals(Me._BSN_ENGSOI, value) = false) Then
				Me.OnBSN_ENGSOIChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGSOI = value
				Me.SendPropertyChanged("BSN_ENGSOI")
				Me.OnBSN_ENGSOIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGROAD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGROAD() As String
		Get
			Return Me._BSN_ENGROAD
		End Get
		Set
			If (String.Equals(Me._BSN_ENGROAD, value) = false) Then
				Me.OnBSN_ENGROADChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGROAD = value
				Me.SendPropertyChanged("BSN_ENGROAD")
				Me.OnBSN_ENGROADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_CHWNG_ENGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_CHWNG_ENGNAME() As String
		Get
			Return Me._BSN_CHWNG_ENGNAME
		End Get
		Set
			If (String.Equals(Me._BSN_CHWNG_ENGNAME, value) = false) Then
				Me.OnBSN_CHWNG_ENGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_CHWNG_ENGNAME = value
				Me.SendPropertyChanged("BSN_CHWNG_ENGNAME")
				Me.OnBSN_CHWNG_ENGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_AMPHR_ENGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_AMPHR_ENGNAME() As String
		Get
			Return Me._BSN_AMPHR_ENGNAME
		End Get
		Set
			If (String.Equals(Me._BSN_AMPHR_ENGNAME, value) = false) Then
				Me.OnBSN_AMPHR_ENGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_AMPHR_ENGNAME = value
				Me.SendPropertyChanged("BSN_AMPHR_ENGNAME")
				Me.OnBSN_AMPHR_ENGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THMBL_ENGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THMBL_ENGNAME() As String
		Get
			Return Me._BSN_THMBL_ENGNAME
		End Get
		Set
			If (String.Equals(Me._BSN_THMBL_ENGNAME, value) = false) Then
				Me.OnBSN_THMBL_ENGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THMBL_ENGNAME = value
				Me.SendPropertyChanged("BSN_THMBL_ENGNAME")
				Me.OnBSN_THMBL_ENGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanameplace", DbType:="NVarChar(MAX)")>  _
	Public Property thanameplace() As String
		Get
			Return Me._thanameplace
		End Get
		Set
			If (String.Equals(Me._thanameplace, value) = false) Then
				Me.OnthanameplaceChanging(value)
				Me.SendPropertyChanging
				Me._thanameplace = value
				Me.SendPropertyChanged("thanameplace")
				Me.OnthanameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thanameplace", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thanameplace() As String
		Get
			Return Me._LOCATION_ADDRESS_thanameplace
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thanameplace, value) = false) Then
				Me.OnLOCATION_ADDRESS_thanameplaceChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thanameplace = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thanameplace")
				Me.OnLOCATION_ADDRESS_thanameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engnameplace", DbType:="NVarChar(MAX)")>  _
	Public Property engnameplace() As String
		Get
			Return Me._engnameplace
		End Get
		Set
			If (String.Equals(Me._engnameplace, value) = false) Then
				Me.OnengnameplaceChanging(value)
				Me.SendPropertyChanging
				Me._engnameplace = value
				Me.SendPropertyChanged("engnameplace")
				Me.OnengnameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engnameplace", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engnameplace() As String
		Get
			Return Me._LOCATION_ADDRESS_engnameplace
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engnameplace, value) = false) Then
				Me.OnLOCATION_ADDRESS_engnameplaceChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engnameplace = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engnameplace")
				Me.OnLOCATION_ADDRESS_engnameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_HOUSENO", DbType:="NVarChar(50)")>  _
	Public Property LOCATION_ADDRESS_HOUSENO() As String
		Get
			Return Me._LOCATION_ADDRESS_HOUSENO
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_HOUSENO, value) = false) Then
				Me.OnLOCATION_ADDRESS_HOUSENOChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_HOUSENO = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_HOUSENO")
				Me.OnLOCATION_ADDRESS_HOUSENOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thaaddr", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thaaddr() As String
		Get
			Return Me._LOCATION_ADDRESS_thaaddr
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thaaddr, value) = false) Then
				Me.OnLOCATION_ADDRESS_thaaddrChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thaaddr = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thaaddr")
				Me.OnLOCATION_ADDRESS_thaaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thasoi", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thasoi() As String
		Get
			Return Me._LOCATION_ADDRESS_thasoi
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thasoi, value) = false) Then
				Me.OnLOCATION_ADDRESS_thasoiChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thasoi = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thasoi")
				Me.OnLOCATION_ADDRESS_thasoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_tharoad", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_tharoad() As String
		Get
			Return Me._LOCATION_ADDRESS_tharoad
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_tharoad, value) = false) Then
				Me.OnLOCATION_ADDRESS_tharoadChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_tharoad = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_tharoad")
				Me.OnLOCATION_ADDRESS_tharoadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thamu", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thamu() As String
		Get
			Return Me._LOCATION_ADDRESS_thamu
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thamu, value) = false) Then
				Me.OnLOCATION_ADDRESS_thamuChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thamu = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thamu")
				Me.OnLOCATION_ADDRESS_thamuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thathmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thathmblnm() As String
		Get
			Return Me._LOCATION_ADDRESS_thathmblnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thathmblnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_thathmblnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thathmblnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thathmblnm")
				Me.OnLOCATION_ADDRESS_thathmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thaamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thaamphrnm() As String
		Get
			Return Me._LOCATION_ADDRESS_thaamphrnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thaamphrnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_thaamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thaamphrnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thaamphrnm")
				Me.OnLOCATION_ADDRESS_thaamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thachngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thachngwtnm() As String
		Get
			Return Me._LOCATION_ADDRESS_thachngwtnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thachngwtnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_thachngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thachngwtnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thachngwtnm")
				Me.OnLOCATION_ADDRESS_thachngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_tel", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_tel() As String
		Get
			Return Me._LOCATION_ADDRESS_tel
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_tel, value) = false) Then
				Me.OnLOCATION_ADDRESS_telChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_tel = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_tel")
				Me.OnLOCATION_ADDRESS_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_fax", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_fax() As String
		Get
			Return Me._LOCATION_ADDRESS_fax
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_fax, value) = false) Then
				Me.OnLOCATION_ADDRESS_faxChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_fax = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_fax")
				Me.OnLOCATION_ADDRESS_faxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thmblcd", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_thmblcd() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_thmblcd
		End Get
		Set
			If (Me._LOCATION_ADDRESS_thmblcd.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_thmblcdChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thmblcd = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thmblcd")
				Me.OnLOCATION_ADDRESS_thmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_chngwtcd", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_chngwtcd
		End Get
		Set
			If (Me._LOCATION_ADDRESS_chngwtcd.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_chngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_chngwtcd = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_chngwtcd")
				Me.OnLOCATION_ADDRESS_chngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_amphrcd", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_amphrcd() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_amphrcd
		End Get
		Set
			If (Me._LOCATION_ADDRESS_amphrcd.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_amphrcdChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_amphrcd = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_amphrcd")
				Me.OnLOCATION_ADDRESS_amphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engaddr", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engaddr() As String
		Get
			Return Me._LOCATION_ADDRESS_engaddr
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engaddr, value) = false) Then
				Me.OnLOCATION_ADDRESS_engaddrChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engaddr = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engaddr")
				Me.OnLOCATION_ADDRESS_engaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engsoi", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engsoi() As String
		Get
			Return Me._LOCATION_ADDRESS_engsoi
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engsoi, value) = false) Then
				Me.OnLOCATION_ADDRESS_engsoiChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engsoi = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engsoi")
				Me.OnLOCATION_ADDRESS_engsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engroad", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engroad() As String
		Get
			Return Me._LOCATION_ADDRESS_engroad
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engroad, value) = false) Then
				Me.OnLOCATION_ADDRESS_engroadChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engroad = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engroad")
				Me.OnLOCATION_ADDRESS_engroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engmu", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engmu() As String
		Get
			Return Me._LOCATION_ADDRESS_engmu
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engmu, value) = false) Then
				Me.OnLOCATION_ADDRESS_engmuChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engmu = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engmu")
				Me.OnLOCATION_ADDRESS_engmuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engthmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engthmblnm() As String
		Get
			Return Me._LOCATION_ADDRESS_engthmblnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engthmblnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_engthmblnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engthmblnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engthmblnm")
				Me.OnLOCATION_ADDRESS_engthmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engamphrnm() As String
		Get
			Return Me._LOCATION_ADDRESS_engamphrnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engamphrnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_engamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engamphrnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engamphrnm")
				Me.OnLOCATION_ADDRESS_engamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engchngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engchngwtnm() As String
		Get
			Return Me._LOCATION_ADDRESS_engchngwtnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engchngwtnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_engchngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engchngwtnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engchngwtnm")
				Me.OnLOCATION_ADDRESS_engchngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOUSENO", DbType:="NVarChar(50)")>  _
	Public Property HOUSENO() As String
		Get
			Return Me._HOUSENO
		End Get
		Set
			If (String.Equals(Me._HOUSENO, value) = false) Then
				Me.OnHOUSENOChanging(value)
				Me.SendPropertyChanging
				Me._HOUSENO = value
				Me.SendPropertyChanged("HOUSENO")
				Me.OnHOUSENOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaaddr", DbType:="NVarChar(MAX)")>  _
	Public Property thaaddr() As String
		Get
			Return Me._thaaddr
		End Get
		Set
			If (String.Equals(Me._thaaddr, value) = false) Then
				Me.OnthaaddrChanging(value)
				Me.SendPropertyChanging
				Me._thaaddr = value
				Me.SendPropertyChanged("thaaddr")
				Me.OnthaaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thasoi", DbType:="NVarChar(MAX)")>  _
	Public Property thasoi() As String
		Get
			Return Me._thasoi
		End Get
		Set
			If (String.Equals(Me._thasoi, value) = false) Then
				Me.OnthasoiChanging(value)
				Me.SendPropertyChanging
				Me._thasoi = value
				Me.SendPropertyChanged("thasoi")
				Me.OnthasoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoad", DbType:="NVarChar(MAX)")>  _
	Public Property tharoad() As String
		Get
			Return Me._tharoad
		End Get
		Set
			If (String.Equals(Me._tharoad, value) = false) Then
				Me.OntharoadChanging(value)
				Me.SendPropertyChanging
				Me._tharoad = value
				Me.SendPropertyChanged("tharoad")
				Me.OntharoadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thamu", DbType:="NVarChar(MAX)")>  _
	Public Property thamu() As String
		Get
			Return Me._thamu
		End Get
		Set
			If (String.Equals(Me._thamu, value) = false) Then
				Me.OnthamuChanging(value)
				Me.SendPropertyChanging
				Me._thamu = value
				Me.SendPropertyChanged("thamu")
				Me.OnthamuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thathmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property thathmblnm() As String
		Get
			Return Me._thathmblnm
		End Get
		Set
			If (String.Equals(Me._thathmblnm, value) = false) Then
				Me.OnthathmblnmChanging(value)
				Me.SendPropertyChanging
				Me._thathmblnm = value
				Me.SendPropertyChanged("thathmblnm")
				Me.OnthathmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property thaamphrnm() As String
		Get
			Return Me._thaamphrnm
		End Get
		Set
			If (String.Equals(Me._thaamphrnm, value) = false) Then
				Me.OnthaamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._thaamphrnm = value
				Me.SendPropertyChanged("thaamphrnm")
				Me.OnthaamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thachngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property thachngwtnm() As String
		Get
			Return Me._thachngwtnm
		End Get
		Set
			If (String.Equals(Me._thachngwtnm, value) = false) Then
				Me.OnthachngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._thachngwtnm = value
				Me.SendPropertyChanged("thachngwtnm")
				Me.OnthachngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="NVarChar(MAX)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="NVarChar(MAX)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="Int")>  _
	Public Property amphrcd() As System.Nullable(Of Integer)
		Get
			Return Me._amphrcd
		End Get
		Set
			If (Me._amphrcd.Equals(value) = false) Then
				Me.OnamphrcdChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd = value
				Me.SendPropertyChanged("amphrcd")
				Me.OnamphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="Int")>  _
	Public Property chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (Me._chngwtcd.Equals(value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd", DbType:="Int")>  _
	Public Property thmblcd() As System.Nullable(Of Integer)
		Get
			Return Me._thmblcd
		End Get
		Set
			If (Me._thmblcd.Equals(value) = false) Then
				Me.OnthmblcdChanging(value)
				Me.SendPropertyChanging
				Me._thmblcd = value
				Me.SendPropertyChanged("thmblcd")
				Me.OnthmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engaddr", DbType:="NVarChar(MAX)")>  _
	Public Property engaddr() As String
		Get
			Return Me._engaddr
		End Get
		Set
			If (String.Equals(Me._engaddr, value) = false) Then
				Me.OnengaddrChanging(value)
				Me.SendPropertyChanging
				Me._engaddr = value
				Me.SendPropertyChanged("engaddr")
				Me.OnengaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engmu", DbType:="NVarChar(MAX)")>  _
	Public Property engmu() As String
		Get
			Return Me._engmu
		End Get
		Set
			If (String.Equals(Me._engmu, value) = false) Then
				Me.OnengmuChanging(value)
				Me.SendPropertyChanging
				Me._engmu = value
				Me.SendPropertyChanged("engmu")
				Me.OnengmuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engsoi", DbType:="NVarChar(MAX)")>  _
	Public Property engsoi() As String
		Get
			Return Me._engsoi
		End Get
		Set
			If (String.Equals(Me._engsoi, value) = false) Then
				Me.OnengsoiChanging(value)
				Me.SendPropertyChanging
				Me._engsoi = value
				Me.SendPropertyChanged("engsoi")
				Me.OnengsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engroad", DbType:="NVarChar(MAX)")>  _
	Public Property engroad() As String
		Get
			Return Me._engroad
		End Get
		Set
			If (String.Equals(Me._engroad, value) = false) Then
				Me.OnengroadChanging(value)
				Me.SendPropertyChanging
				Me._engroad = value
				Me.SendPropertyChanged("engroad")
				Me.OnengroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engchngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property engchngwtnm() As String
		Get
			Return Me._engchngwtnm
		End Get
		Set
			If (String.Equals(Me._engchngwtnm, value) = false) Then
				Me.OnengchngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._engchngwtnm = value
				Me.SendPropertyChanged("engchngwtnm")
				Me.OnengchngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property engamphrnm() As String
		Get
			Return Me._engamphrnm
		End Get
		Set
			If (String.Equals(Me._engamphrnm, value) = false) Then
				Me.OnengamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._engamphrnm = value
				Me.SendPropertyChanged("engamphrnm")
				Me.OnengamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engthmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property engthmblnm() As String
		Get
			Return Me._engthmblnm
		End Get
		Set
			If (String.Equals(Me._engthmblnm, value) = false) Then
				Me.OnengthmblnmChanging(value)
				Me.SendPropertyChanging
				Me._engthmblnm = value
				Me.SendPropertyChanged("engthmblnm")
				Me.OnengthmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THAIFULLNAME_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THAIFULLNAME_OLD() As String
		Get
			Return Me._BSN_THAIFULLNAME_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_THAIFULLNAME_OLD, value) = false) Then
				Me.OnBSN_THAIFULLNAME_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THAIFULLNAME_OLD = value
				Me.SendPropertyChanged("BSN_THAIFULLNAME_OLD")
				Me.OnBSN_THAIFULLNAME_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_IDENTIFY_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_IDENTIFY_OLD() As String
		Get
			Return Me._BSN_IDENTIFY_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_IDENTIFY_OLD, value) = false) Then
				Me.OnBSN_IDENTIFY_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_IDENTIFY_OLD = value
				Me.SendPropertyChanged("BSN_IDENTIFY_OLD")
				Me.OnBSN_IDENTIFY_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_PREFIXTHAICD_OLD", DbType:="Int")>  _
	Public Property BSN_PREFIXTHAICD_OLD() As System.Nullable(Of Integer)
		Get
			Return Me._BSN_PREFIXTHAICD_OLD
		End Get
		Set
			If (Me._BSN_PREFIXTHAICD_OLD.Equals(value) = false) Then
				Me.OnBSN_PREFIXTHAICD_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_PREFIXTHAICD_OLD = value
				Me.SendPropertyChanged("BSN_PREFIXTHAICD_OLD")
				Me.OnBSN_PREFIXTHAICD_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THAINAME_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THAINAME_OLD() As String
		Get
			Return Me._BSN_THAINAME_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_THAINAME_OLD, value) = false) Then
				Me.OnBSN_THAINAME_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THAINAME_OLD = value
				Me.SendPropertyChanged("BSN_THAINAME_OLD")
				Me.OnBSN_THAINAME_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THAILASTNAME_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THAILASTNAME_OLD() As String
		Get
			Return Me._BSN_THAILASTNAME_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_THAILASTNAME_OLD, value) = false) Then
				Me.OnBSN_THAILASTNAME_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THAILASTNAME_OLD = value
				Me.SendPropertyChanged("BSN_THAILASTNAME_OLD")
				Me.OnBSN_THAILASTNAME_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGNAME_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGNAME_OLD() As String
		Get
			Return Me._BSN_ENGNAME_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_ENGNAME_OLD, value) = false) Then
				Me.OnBSN_ENGNAME_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGNAME_OLD = value
				Me.SendPropertyChanged("BSN_ENGNAME_OLD")
				Me.OnBSN_ENGNAME_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGLASTNAME_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGLASTNAME_OLD() As String
		Get
			Return Me._BSN_ENGLASTNAME_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_ENGLASTNAME_OLD, value) = false) Then
				Me.OnBSN_ENGLASTNAME_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGLASTNAME_OLD = value
				Me.SendPropertyChanged("BSN_ENGLASTNAME_OLD")
				Me.OnBSN_ENGLASTNAME_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGFULLNAME_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGFULLNAME_OLD() As String
		Get
			Return Me._BSN_ENGFULLNAME_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_ENGFULLNAME_OLD, value) = false) Then
				Me.OnBSN_ENGFULLNAME_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGFULLNAME_OLD = value
				Me.SendPropertyChanged("BSN_ENGFULLNAME_OLD")
				Me.OnBSN_ENGFULLNAME_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_HOUSENO_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_HOUSENO_OLD() As String
		Get
			Return Me._BSN_HOUSENO_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_HOUSENO_OLD, value) = false) Then
				Me.OnBSN_HOUSENO_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_HOUSENO_OLD = value
				Me.SendPropertyChanged("BSN_HOUSENO_OLD")
				Me.OnBSN_HOUSENO_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ADDR_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ADDR_OLD() As String
		Get
			Return Me._BSN_ADDR_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_ADDR_OLD, value) = false) Then
				Me.OnBSN_ADDR_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ADDR_OLD = value
				Me.SendPropertyChanged("BSN_ADDR_OLD")
				Me.OnBSN_ADDR_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_SOI_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_SOI_OLD() As String
		Get
			Return Me._BSN_SOI_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_SOI_OLD, value) = false) Then
				Me.OnBSN_SOI_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_SOI_OLD = value
				Me.SendPropertyChanged("BSN_SOI_OLD")
				Me.OnBSN_SOI_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ROAD_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ROAD_OLD() As String
		Get
			Return Me._BSN_ROAD_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_ROAD_OLD, value) = false) Then
				Me.OnBSN_ROAD_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ROAD_OLD = value
				Me.SendPropertyChanged("BSN_ROAD_OLD")
				Me.OnBSN_ROAD_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_MOO_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_MOO_OLD() As String
		Get
			Return Me._BSN_MOO_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_MOO_OLD, value) = false) Then
				Me.OnBSN_MOO_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_MOO_OLD = value
				Me.SendPropertyChanged("BSN_MOO_OLD")
				Me.OnBSN_MOO_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THMBL_NAME_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THMBL_NAME_OLD() As String
		Get
			Return Me._BSN_THMBL_NAME_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_THMBL_NAME_OLD, value) = false) Then
				Me.OnBSN_THMBL_NAME_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THMBL_NAME_OLD = value
				Me.SendPropertyChanged("BSN_THMBL_NAME_OLD")
				Me.OnBSN_THMBL_NAME_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_AMPHR_NAME_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_AMPHR_NAME_OLD() As String
		Get
			Return Me._BSN_AMPHR_NAME_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_AMPHR_NAME_OLD, value) = false) Then
				Me.OnBSN_AMPHR_NAME_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_AMPHR_NAME_OLD = value
				Me.SendPropertyChanged("BSN_AMPHR_NAME_OLD")
				Me.OnBSN_AMPHR_NAME_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_CHWNGNAME_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_CHWNGNAME_OLD() As String
		Get
			Return Me._BSN_CHWNGNAME_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_CHWNGNAME_OLD, value) = false) Then
				Me.OnBSN_CHWNGNAME_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_CHWNGNAME_OLD = value
				Me.SendPropertyChanged("BSN_CHWNGNAME_OLD")
				Me.OnBSN_CHWNGNAME_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_TELEPHONE_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_TELEPHONE_OLD() As String
		Get
			Return Me._BSN_TELEPHONE_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_TELEPHONE_OLD, value) = false) Then
				Me.OnBSN_TELEPHONE_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_TELEPHONE_OLD = value
				Me.SendPropertyChanged("BSN_TELEPHONE_OLD")
				Me.OnBSN_TELEPHONE_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_FAX_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_FAX_OLD() As String
		Get
			Return Me._BSN_FAX_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_FAX_OLD, value) = false) Then
				Me.OnBSN_FAX_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_FAX_OLD = value
				Me.SendPropertyChanged("BSN_FAX_OLD")
				Me.OnBSN_FAX_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_EMAIL_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_EMAIL_OLD() As String
		Get
			Return Me._BSN_EMAIL_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_EMAIL_OLD, value) = false) Then
				Me.OnBSN_EMAIL_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_EMAIL_OLD = value
				Me.SendPropertyChanged("BSN_EMAIL_OLD")
				Me.OnBSN_EMAIL_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHANGWAT_ID_OLD", DbType:="Int")>  _
	Public Property CHANGWAT_ID_OLD() As System.Nullable(Of Integer)
		Get
			Return Me._CHANGWAT_ID_OLD
		End Get
		Set
			If (Me._CHANGWAT_ID_OLD.Equals(value) = false) Then
				Me.OnCHANGWAT_ID_OLDChanging(value)
				Me.SendPropertyChanging
				Me._CHANGWAT_ID_OLD = value
				Me.SendPropertyChanged("CHANGWAT_ID_OLD")
				Me.OnCHANGWAT_ID_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHR_ID_OLD", DbType:="Int")>  _
	Public Property AMPHR_ID_OLD() As System.Nullable(Of Integer)
		Get
			Return Me._AMPHR_ID_OLD
		End Get
		Set
			If (Me._AMPHR_ID_OLD.Equals(value) = false) Then
				Me.OnAMPHR_ID_OLDChanging(value)
				Me.SendPropertyChanging
				Me._AMPHR_ID_OLD = value
				Me.SendPropertyChanged("AMPHR_ID_OLD")
				Me.OnAMPHR_ID_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TUMBON_ID_OLD", DbType:="Int")>  _
	Public Property TUMBON_ID_OLD() As System.Nullable(Of Integer)
		Get
			Return Me._TUMBON_ID_OLD
		End Get
		Set
			If (Me._TUMBON_ID_OLD.Equals(value) = false) Then
				Me.OnTUMBON_ID_OLDChanging(value)
				Me.SendPropertyChanging
				Me._TUMBON_ID_OLD = value
				Me.SendPropertyChanged("TUMBON_ID_OLD")
				Me.OnTUMBON_ID_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGADDR_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGADDR_OLD() As String
		Get
			Return Me._BSN_ENGADDR_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_ENGADDR_OLD, value) = false) Then
				Me.OnBSN_ENGADDR_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGADDR_OLD = value
				Me.SendPropertyChanged("BSN_ENGADDR_OLD")
				Me.OnBSN_ENGADDR_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_FLOOR_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_FLOOR_OLD() As String
		Get
			Return Me._BSN_FLOOR_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_FLOOR_OLD, value) = false) Then
				Me.OnBSN_FLOOR_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_FLOOR_OLD = value
				Me.SendPropertyChanged("BSN_FLOOR_OLD")
				Me.OnBSN_FLOOR_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGMU_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGMU_OLD() As String
		Get
			Return Me._BSN_ENGMU_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_ENGMU_OLD, value) = false) Then
				Me.OnBSN_ENGMU_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGMU_OLD = value
				Me.SendPropertyChanged("BSN_ENGMU_OLD")
				Me.OnBSN_ENGMU_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGSOI_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGSOI_OLD() As String
		Get
			Return Me._BSN_ENGSOI_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_ENGSOI_OLD, value) = false) Then
				Me.OnBSN_ENGSOI_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGSOI_OLD = value
				Me.SendPropertyChanged("BSN_ENGSOI_OLD")
				Me.OnBSN_ENGSOI_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGROAD_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGROAD_OLD() As String
		Get
			Return Me._BSN_ENGROAD_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_ENGROAD_OLD, value) = false) Then
				Me.OnBSN_ENGROAD_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGROAD_OLD = value
				Me.SendPropertyChanged("BSN_ENGROAD_OLD")
				Me.OnBSN_ENGROAD_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_CHWNG_ENGNAME_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_CHWNG_ENGNAME_OLD() As String
		Get
			Return Me._BSN_CHWNG_ENGNAME_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_CHWNG_ENGNAME_OLD, value) = false) Then
				Me.OnBSN_CHWNG_ENGNAME_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_CHWNG_ENGNAME_OLD = value
				Me.SendPropertyChanged("BSN_CHWNG_ENGNAME_OLD")
				Me.OnBSN_CHWNG_ENGNAME_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_AMPHR_ENGNAME_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_AMPHR_ENGNAME_OLD() As String
		Get
			Return Me._BSN_AMPHR_ENGNAME_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_AMPHR_ENGNAME_OLD, value) = false) Then
				Me.OnBSN_AMPHR_ENGNAME_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_AMPHR_ENGNAME_OLD = value
				Me.SendPropertyChanged("BSN_AMPHR_ENGNAME_OLD")
				Me.OnBSN_AMPHR_ENGNAME_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THMBL_ENGNAME_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THMBL_ENGNAME_OLD() As String
		Get
			Return Me._BSN_THMBL_ENGNAME_OLD
		End Get
		Set
			If (String.Equals(Me._BSN_THMBL_ENGNAME_OLD, value) = false) Then
				Me.OnBSN_THMBL_ENGNAME_OLDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THMBL_ENGNAME_OLD = value
				Me.SendPropertyChanged("BSN_THMBL_ENGNAME_OLD")
				Me.OnBSN_THMBL_ENGNAME_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanameplace_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property thanameplace_OLD() As String
		Get
			Return Me._thanameplace_OLD
		End Get
		Set
			If (String.Equals(Me._thanameplace_OLD, value) = false) Then
				Me.Onthanameplace_OLDChanging(value)
				Me.SendPropertyChanging
				Me._thanameplace_OLD = value
				Me.SendPropertyChanged("thanameplace_OLD")
				Me.Onthanameplace_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thanameplace_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thanameplace_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_thanameplace_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thanameplace_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_thanameplace_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thanameplace_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thanameplace_OLD")
				Me.OnLOCATION_ADDRESS_thanameplace_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engnameplace_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property engnameplace_OLD() As String
		Get
			Return Me._engnameplace_OLD
		End Get
		Set
			If (String.Equals(Me._engnameplace_OLD, value) = false) Then
				Me.Onengnameplace_OLDChanging(value)
				Me.SendPropertyChanging
				Me._engnameplace_OLD = value
				Me.SendPropertyChanged("engnameplace_OLD")
				Me.Onengnameplace_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engnameplace_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engnameplace_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_engnameplace_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engnameplace_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_engnameplace_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engnameplace_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engnameplace_OLD")
				Me.OnLOCATION_ADDRESS_engnameplace_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_HOUSENO_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_HOUSENO_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_HOUSENO_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_HOUSENO_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_HOUSENO_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_HOUSENO_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_HOUSENO_OLD")
				Me.OnLOCATION_ADDRESS_HOUSENO_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thaaddr_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thaaddr_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_thaaddr_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thaaddr_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_thaaddr_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thaaddr_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thaaddr_OLD")
				Me.OnLOCATION_ADDRESS_thaaddr_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thasoi_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thasoi_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_thasoi_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thasoi_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_thasoi_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thasoi_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thasoi_OLD")
				Me.OnLOCATION_ADDRESS_thasoi_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_tharoad_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_tharoad_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_tharoad_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_tharoad_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_tharoad_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_tharoad_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_tharoad_OLD")
				Me.OnLOCATION_ADDRESS_tharoad_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thamu_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thamu_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_thamu_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thamu_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_thamu_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thamu_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thamu_OLD")
				Me.OnLOCATION_ADDRESS_thamu_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thathmblnm_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thathmblnm_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_thathmblnm_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thathmblnm_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_thathmblnm_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thathmblnm_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thathmblnm_OLD")
				Me.OnLOCATION_ADDRESS_thathmblnm_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thaamphrnm_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thaamphrnm_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_thaamphrnm_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thaamphrnm_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_thaamphrnm_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thaamphrnm_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thaamphrnm_OLD")
				Me.OnLOCATION_ADDRESS_thaamphrnm_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thachngwtnm_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thachngwtnm_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_thachngwtnm_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thachngwtnm_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_thachngwtnm_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thachngwtnm_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thachngwtnm_OLD")
				Me.OnLOCATION_ADDRESS_thachngwtnm_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_tel_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_tel_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_tel_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_tel_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_tel_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_tel_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_tel_OLD")
				Me.OnLOCATION_ADDRESS_tel_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_fax_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_fax_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_fax_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_fax_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_fax_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_fax_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_fax_OLD")
				Me.OnLOCATION_ADDRESS_fax_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thmblcd_OLD", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_thmblcd_OLD() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_thmblcd_OLD
		End Get
		Set
			If (Me._LOCATION_ADDRESS_thmblcd_OLD.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_thmblcd_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thmblcd_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thmblcd_OLD")
				Me.OnLOCATION_ADDRESS_thmblcd_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_chngwtcd_OLD", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_chngwtcd_OLD() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_chngwtcd_OLD
		End Get
		Set
			If (Me._LOCATION_ADDRESS_chngwtcd_OLD.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_chngwtcd_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_chngwtcd_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_chngwtcd_OLD")
				Me.OnLOCATION_ADDRESS_chngwtcd_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_amphrcd_OLD", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_amphrcd_OLD() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_amphrcd_OLD
		End Get
		Set
			If (Me._LOCATION_ADDRESS_amphrcd_OLD.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_amphrcd_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_amphrcd_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_amphrcd_OLD")
				Me.OnLOCATION_ADDRESS_amphrcd_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engaddr_OLD", DbType:="VarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engaddr_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_engaddr_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engaddr_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_engaddr_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engaddr_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engaddr_OLD")
				Me.OnLOCATION_ADDRESS_engaddr_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engsoi_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engsoi_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_engsoi_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engsoi_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_engsoi_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engsoi_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engsoi_OLD")
				Me.OnLOCATION_ADDRESS_engsoi_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engroad_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engroad_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_engroad_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engroad_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_engroad_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engroad_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engroad_OLD")
				Me.OnLOCATION_ADDRESS_engroad_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engmu_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engmu_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_engmu_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engmu_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_engmu_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engmu_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engmu_OLD")
				Me.OnLOCATION_ADDRESS_engmu_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engthmblnm_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engthmblnm_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_engthmblnm_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engthmblnm_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_engthmblnm_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engthmblnm_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engthmblnm_OLD")
				Me.OnLOCATION_ADDRESS_engthmblnm_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engamphrnm_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engamphrnm_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_engamphrnm_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engamphrnm_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_engamphrnm_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engamphrnm_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engamphrnm_OLD")
				Me.OnLOCATION_ADDRESS_engamphrnm_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engchngwtnm_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engchngwtnm_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_engchngwtnm_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engchngwtnm_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_engchngwtnm_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engchngwtnm_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engchngwtnm_OLD")
				Me.OnLOCATION_ADDRESS_engchngwtnm_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOUSENO_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property HOUSENO_OLD() As String
		Get
			Return Me._HOUSENO_OLD
		End Get
		Set
			If (String.Equals(Me._HOUSENO_OLD, value) = false) Then
				Me.OnHOUSENO_OLDChanging(value)
				Me.SendPropertyChanging
				Me._HOUSENO_OLD = value
				Me.SendPropertyChanged("HOUSENO_OLD")
				Me.OnHOUSENO_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaaddr_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property thaaddr_OLD() As String
		Get
			Return Me._thaaddr_OLD
		End Get
		Set
			If (String.Equals(Me._thaaddr_OLD, value) = false) Then
				Me.Onthaaddr_OLDChanging(value)
				Me.SendPropertyChanging
				Me._thaaddr_OLD = value
				Me.SendPropertyChanged("thaaddr_OLD")
				Me.Onthaaddr_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thasoi_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property thasoi_OLD() As String
		Get
			Return Me._thasoi_OLD
		End Get
		Set
			If (String.Equals(Me._thasoi_OLD, value) = false) Then
				Me.Onthasoi_OLDChanging(value)
				Me.SendPropertyChanging
				Me._thasoi_OLD = value
				Me.SendPropertyChanged("thasoi_OLD")
				Me.Onthasoi_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoad_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property tharoad_OLD() As String
		Get
			Return Me._tharoad_OLD
		End Get
		Set
			If (String.Equals(Me._tharoad_OLD, value) = false) Then
				Me.Ontharoad_OLDChanging(value)
				Me.SendPropertyChanging
				Me._tharoad_OLD = value
				Me.SendPropertyChanged("tharoad_OLD")
				Me.Ontharoad_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thamu_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property thamu_OLD() As String
		Get
			Return Me._thamu_OLD
		End Get
		Set
			If (String.Equals(Me._thamu_OLD, value) = false) Then
				Me.Onthamu_OLDChanging(value)
				Me.SendPropertyChanging
				Me._thamu_OLD = value
				Me.SendPropertyChanged("thamu_OLD")
				Me.Onthamu_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thathmblnm_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property thathmblnm_OLD() As String
		Get
			Return Me._thathmblnm_OLD
		End Get
		Set
			If (String.Equals(Me._thathmblnm_OLD, value) = false) Then
				Me.Onthathmblnm_OLDChanging(value)
				Me.SendPropertyChanging
				Me._thathmblnm_OLD = value
				Me.SendPropertyChanged("thathmblnm_OLD")
				Me.Onthathmblnm_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaamphrnm_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property thaamphrnm_OLD() As String
		Get
			Return Me._thaamphrnm_OLD
		End Get
		Set
			If (String.Equals(Me._thaamphrnm_OLD, value) = false) Then
				Me.Onthaamphrnm_OLDChanging(value)
				Me.SendPropertyChanging
				Me._thaamphrnm_OLD = value
				Me.SendPropertyChanged("thaamphrnm_OLD")
				Me.Onthaamphrnm_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thachngwtnm_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property thachngwtnm_OLD() As String
		Get
			Return Me._thachngwtnm_OLD
		End Get
		Set
			If (String.Equals(Me._thachngwtnm_OLD, value) = false) Then
				Me.Onthachngwtnm_OLDChanging(value)
				Me.SendPropertyChanging
				Me._thachngwtnm_OLD = value
				Me.SendPropertyChanged("thachngwtnm_OLD")
				Me.Onthachngwtnm_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property tel_OLD() As String
		Get
			Return Me._tel_OLD
		End Get
		Set
			If (String.Equals(Me._tel_OLD, value) = false) Then
				Me.Ontel_OLDChanging(value)
				Me.SendPropertyChanging
				Me._tel_OLD = value
				Me.SendPropertyChanged("tel_OLD")
				Me.Ontel_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property fax_OLD() As String
		Get
			Return Me._fax_OLD
		End Get
		Set
			If (String.Equals(Me._fax_OLD, value) = false) Then
				Me.Onfax_OLDChanging(value)
				Me.SendPropertyChanging
				Me._fax_OLD = value
				Me.SendPropertyChanged("fax_OLD")
				Me.Onfax_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd_OLD", DbType:="Int")>  _
	Public Property amphrcd_OLD() As System.Nullable(Of Integer)
		Get
			Return Me._amphrcd_OLD
		End Get
		Set
			If (Me._amphrcd_OLD.Equals(value) = false) Then
				Me.Onamphrcd_OLDChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd_OLD = value
				Me.SendPropertyChanged("amphrcd_OLD")
				Me.Onamphrcd_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd_OLD", DbType:="Int")>  _
	Public Property chngwtcd_OLD() As System.Nullable(Of Integer)
		Get
			Return Me._chngwtcd_OLD
		End Get
		Set
			If (Me._chngwtcd_OLD.Equals(value) = false) Then
				Me.Onchngwtcd_OLDChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd_OLD = value
				Me.SendPropertyChanged("chngwtcd_OLD")
				Me.Onchngwtcd_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd_OLD", DbType:="Int")>  _
	Public Property thmblcd_OLD() As System.Nullable(Of Integer)
		Get
			Return Me._thmblcd_OLD
		End Get
		Set
			If (Me._thmblcd_OLD.Equals(value) = false) Then
				Me.Onthmblcd_OLDChanging(value)
				Me.SendPropertyChanging
				Me._thmblcd_OLD = value
				Me.SendPropertyChanged("thmblcd_OLD")
				Me.Onthmblcd_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engaddr_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property engaddr_OLD() As String
		Get
			Return Me._engaddr_OLD
		End Get
		Set
			If (String.Equals(Me._engaddr_OLD, value) = false) Then
				Me.Onengaddr_OLDChanging(value)
				Me.SendPropertyChanging
				Me._engaddr_OLD = value
				Me.SendPropertyChanged("engaddr_OLD")
				Me.Onengaddr_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engmu_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property engmu_OLD() As String
		Get
			Return Me._engmu_OLD
		End Get
		Set
			If (String.Equals(Me._engmu_OLD, value) = false) Then
				Me.Onengmu_OLDChanging(value)
				Me.SendPropertyChanging
				Me._engmu_OLD = value
				Me.SendPropertyChanged("engmu_OLD")
				Me.Onengmu_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engsoi_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property engsoi_OLD() As String
		Get
			Return Me._engsoi_OLD
		End Get
		Set
			If (String.Equals(Me._engsoi_OLD, value) = false) Then
				Me.Onengsoi_OLDChanging(value)
				Me.SendPropertyChanging
				Me._engsoi_OLD = value
				Me.SendPropertyChanged("engsoi_OLD")
				Me.Onengsoi_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engroad_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property engroad_OLD() As String
		Get
			Return Me._engroad_OLD
		End Get
		Set
			If (String.Equals(Me._engroad_OLD, value) = false) Then
				Me.Onengroad_OLDChanging(value)
				Me.SendPropertyChanging
				Me._engroad_OLD = value
				Me.SendPropertyChanged("engroad_OLD")
				Me.Onengroad_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engchngwtnm_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property engchngwtnm_OLD() As String
		Get
			Return Me._engchngwtnm_OLD
		End Get
		Set
			If (String.Equals(Me._engchngwtnm_OLD, value) = false) Then
				Me.Onengchngwtnm_OLDChanging(value)
				Me.SendPropertyChanging
				Me._engchngwtnm_OLD = value
				Me.SendPropertyChanged("engchngwtnm_OLD")
				Me.Onengchngwtnm_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engamphrnm_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property engamphrnm_OLD() As String
		Get
			Return Me._engamphrnm_OLD
		End Get
		Set
			If (String.Equals(Me._engamphrnm_OLD, value) = false) Then
				Me.Onengamphrnm_OLDChanging(value)
				Me.SendPropertyChanging
				Me._engamphrnm_OLD = value
				Me.SendPropertyChanged("engamphrnm_OLD")
				Me.Onengamphrnm_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engthmblnm_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property engthmblnm_OLD() As String
		Get
			Return Me._engthmblnm_OLD
		End Get
		Set
			If (String.Equals(Me._engthmblnm_OLD, value) = false) Then
				Me.Onengthmblnm_OLDChanging(value)
				Me.SendPropertyChanging
				Me._engthmblnm_OLD = value
				Me.SendPropertyChanged("engthmblnm_OLD")
				Me.Onengthmblnm_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_TYPE", DbType:="Int")>  _
	Public Property EDIT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._EDIT_TYPE
		End Get
		Set
			If (Me._EDIT_TYPE.Equals(value) = false) Then
				Me.OnEDIT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_TYPE = value
				Me.SendPropertyChanged("EDIT_TYPE")
				Me.OnEDIT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDEN_EDITOR", DbType:="NVarChar(50)")>  _
	Public Property IDEN_EDITOR() As String
		Get
			Return Me._IDEN_EDITOR
		End Get
		Set
			If (String.Equals(Me._IDEN_EDITOR, value) = false) Then
				Me.OnIDEN_EDITORChanging(value)
				Me.SendPropertyChanging
				Me._IDEN_EDITOR = value
				Me.SendPropertyChanged("IDEN_EDITOR")
				Me.OnIDEN_EDITORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSERT_DATE", DbType:="DateTime")>  _
	Public Property INSERT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._INSERT_DATE
		End Get
		Set
			If (Me._INSERT_DATE.Equals(value) = false) Then
				Me.OnINSERT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._INSERT_DATE = value
				Me.SendPropertyChanged("INSERT_DATE")
				Me.OnINSERT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIPCODE", DbType:="NVarChar(MAX)")>  _
	Public Property ZIPCODE() As String
		Get
			Return Me._ZIPCODE
		End Get
		Set
			If (String.Equals(Me._ZIPCODE, value) = false) Then
				Me.OnZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIPCODE = value
				Me.SendPropertyChanged("ZIPCODE")
				Me.OnZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIPCODE_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property ZIPCODE_OLD() As String
		Get
			Return Me._ZIPCODE_OLD
		End Get
		Set
			If (String.Equals(Me._ZIPCODE_OLD, value) = false) Then
				Me.OnZIPCODE_OLDChanging(value)
				Me.SendPropertyChanging
				Me._ZIPCODE_OLD = value
				Me.SendPropertyChanged("ZIPCODE_OLD")
				Me.OnZIPCODE_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_ZIPCODE", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_ZIPCODE() As String
		Get
			Return Me._LOCATION_ADDRESS_ZIPCODE
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_ZIPCODE, value) = false) Then
				Me.OnLOCATION_ADDRESS_ZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_ZIPCODE = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_ZIPCODE")
				Me.OnLOCATION_ADDRESS_ZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_ZIPCODE_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_ZIPCODE_OLD() As String
		Get
			Return Me._LOCATION_ADDRESS_ZIPCODE_OLD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_ZIPCODE_OLD, value) = false) Then
				Me.OnLOCATION_ADDRESS_ZIPCODE_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_ZIPCODE_OLD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_ZIPCODE_OLD")
				Me.OnLOCATION_ADDRESS_ZIPCODE_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SELECT_EDIT_DATE", DbType:="DateTime")>  _
	Public Property SELECT_EDIT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._SELECT_EDIT_DATE
		End Get
		Set
			If (Me._SELECT_EDIT_DATE.Equals(value) = false) Then
				Me.OnSELECT_EDIT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._SELECT_EDIT_DATE = value
				Me.SendPropertyChanged("SELECT_EDIT_DATE")
				Me.OnSELECT_EDIT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPEN_TIME_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property OPEN_TIME_OLD() As String
		Get
			Return Me._OPEN_TIME_OLD
		End Get
		Set
			If (String.Equals(Me._OPEN_TIME_OLD, value) = false) Then
				Me.OnOPEN_TIME_OLDChanging(value)
				Me.SendPropertyChanging
				Me._OPEN_TIME_OLD = value
				Me.SendPropertyChanged("OPEN_TIME_OLD")
				Me.OnOPEN_TIME_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OPEN_TIME_NEW", DbType:="NVarChar(MAX)")>  _
	Public Property OPEN_TIME_NEW() As String
		Get
			Return Me._OPEN_TIME_NEW
		End Get
		Set
			If (String.Equals(Me._OPEN_TIME_NEW, value) = false) Then
				Me.OnOPEN_TIME_NEWChanging(value)
				Me.SendPropertyChanging
				Me._OPEN_TIME_NEW = value
				Me.SendPropertyChanged("OPEN_TIME_NEW")
				Me.OnOPEN_TIME_NEWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_new", DbType:="NVarChar(50)")>  _
	Public Property lcnsid_new() As String
		Get
			Return Me._lcnsid_new
		End Get
		Set
			If (String.Equals(Me._lcnsid_new, value) = false) Then
				Me.Onlcnsid_newChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_new = value
				Me.SendPropertyChanged("lcnsid_new")
				Me.Onlcnsid_newChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_old", DbType:="NVarChar(50)")>  _
	Public Property lcnsid_old() As String
		Get
			Return Me._lcnsid_old
		End Get
		Set
			If (String.Equals(Me._lcnsid_old, value) = false) Then
				Me.Onlcnsid_oldChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_old = value
				Me.SendPropertyChanged("lcnsid_old")
				Me.Onlcnsid_oldChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsnid_new", DbType:="NVarChar(50)")>  _
	Public Property bsnid_new() As String
		Get
			Return Me._bsnid_new
		End Get
		Set
			If (String.Equals(Me._bsnid_new, value) = false) Then
				Me.Onbsnid_newChanging(value)
				Me.SendPropertyChanging
				Me._bsnid_new = value
				Me.SendPropertyChanged("bsnid_new")
				Me.Onbsnid_newChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsnid_old", DbType:="NVarChar(50)")>  _
	Public Property bsnid_old() As String
		Get
			Return Me._bsnid_old
		End Get
		Set
			If (String.Equals(Me._bsnid_old, value) = false) Then
				Me.Onbsnid_oldChanging(value)
				Me.SendPropertyChanging
				Me._bsnid_old = value
				Me.SendPropertyChanged("bsnid_old")
				Me.Onbsnid_oldChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCT_IDA_OLD", DbType:="Int")>  _
	Public Property LCT_IDA_OLD() As System.Nullable(Of Integer)
		Get
			Return Me._LCT_IDA_OLD
		End Get
		Set
			If (Me._LCT_IDA_OLD.Equals(value) = false) Then
				Me.OnLCT_IDA_OLDChanging(value)
				Me.SendPropertyChanging
				Me._LCT_IDA_OLD = value
				Me.SendPropertyChanged("LCT_IDA_OLD")
				Me.OnLCT_IDA_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCT_IDA_NEW", DbType:="Int")>  _
	Public Property LCT_IDA_NEW() As System.Nullable(Of Integer)
		Get
			Return Me._LCT_IDA_NEW
		End Get
		Set
			If (Me._LCT_IDA_NEW.Equals(value) = false) Then
				Me.OnLCT_IDA_NEWChanging(value)
				Me.SendPropertyChanging
				Me._LCT_IDA_NEW = value
				Me.SendPropertyChanged("LCT_IDA_NEW")
				Me.OnLCT_IDA_NEWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property XML_OLD() As String
		Get
			Return Me._XML_OLD
		End Get
		Set
			If (String.Equals(Me._XML_OLD, value) = false) Then
				Me.OnXML_OLDChanging(value)
				Me.SendPropertyChanging
				Me._XML_OLD = value
				Me.SendPropertyChanged("XML_OLD")
				Me.OnXML_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_NEW", DbType:="NVarChar(MAX)")>  _
	Public Property XML_NEW() As String
		Get
			Return Me._XML_NEW
		End Get
		Set
			If (String.Equals(Me._XML_NEW, value) = false) Then
				Me.OnXML_NEWChanging(value)
				Me.SendPropertyChanging
				Me._XML_NEW = value
				Me.SendPropertyChanged("XML_NEW")
				Me.OnXML_NEWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_SUSTAIN1", DbType:="Bit")>  _
	Public Property CHK_SUSTAIN1() As System.Nullable(Of Boolean)
		Get
			Return Me._CHK_SUSTAIN1
		End Get
		Set
			If (Me._CHK_SUSTAIN1.Equals(value) = false) Then
				Me.OnCHK_SUSTAIN1Changing(value)
				Me.SendPropertyChanging
				Me._CHK_SUSTAIN1 = value
				Me.SendPropertyChanged("CHK_SUSTAIN1")
				Me.OnCHK_SUSTAIN1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_SUSTAIN2", DbType:="Bit")>  _
	Public Property CHK_SUSTAIN2() As System.Nullable(Of Boolean)
		Get
			Return Me._CHK_SUSTAIN2
		End Get
		Set
			If (Me._CHK_SUSTAIN2.Equals(value) = false) Then
				Me.OnCHK_SUSTAIN2Changing(value)
				Me.SendPropertyChanging
				Me._CHK_SUSTAIN2 = value
				Me.SendPropertyChanged("CHK_SUSTAIN2")
				Me.OnCHK_SUSTAIN2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_SUSTAIN3", DbType:="Bit")>  _
	Public Property CHK_SUSTAIN3() As System.Nullable(Of Boolean)
		Get
			Return Me._CHK_SUSTAIN3
		End Get
		Set
			If (Me._CHK_SUSTAIN3.Equals(value) = false) Then
				Me.OnCHK_SUSTAIN3Changing(value)
				Me.SendPropertyChanging
				Me._CHK_SUSTAIN3 = value
				Me.SendPropertyChanged("CHK_SUSTAIN3")
				Me.OnCHK_SUSTAIN3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUSTAIN_TYPE", DbType:="Int")>  _
	Public Property SUSTAIN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._SUSTAIN_TYPE
		End Get
		Set
			If (Me._SUSTAIN_TYPE.Equals(value) = false) Then
				Me.OnSUSTAIN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._SUSTAIN_TYPE = value
				Me.SendPropertyChanged("SUSTAIN_TYPE")
				Me.OnSUSTAIN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PASS_AWAY_DATE", DbType:="DateTime")>  _
	Public Property PASS_AWAY_DATE() As System.Nullable(Of Date)
		Get
			Return Me._PASS_AWAY_DATE
		End Get
		Set
			If (Me._PASS_AWAY_DATE.Equals(value) = false) Then
				Me.OnPASS_AWAY_DATEChanging(value)
				Me.SendPropertyChanging
				Me._PASS_AWAY_DATE = value
				Me.SendPropertyChanged("PASS_AWAY_DATE")
				Me.OnPASS_AWAY_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDR_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property ADDR_OLD() As String
		Get
			Return Me._ADDR_OLD
		End Get
		Set
			If (String.Equals(Me._ADDR_OLD, value) = false) Then
				Me.OnADDR_OLDChanging(value)
				Me.SendPropertyChanging
				Me._ADDR_OLD = value
				Me.SendPropertyChanged("ADDR_OLD")
				Me.OnADDR_OLDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDR_NEW", DbType:="NVarChar(MAX)")>  _
	Public Property ADDR_NEW() As String
		Get
			Return Me._ADDR_NEW
		End Get
		Set
			If (String.Equals(Me._ADDR_NEW, value) = false) Then
				Me.OnADDR_NEWChanging(value)
				Me.SendPropertyChanging
				Me._ADDR_NEW = value
				Me.SendPropertyChanged("ADDR_NEW")
				Me.OnADDR_NEWChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TYPE_REQUESTS")>  _
Partial Public Class MAS_TYPE_REQUEST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TYPE_REQUESTS_ID As String
	
	Private _TYPE_REQUESTS_NAME As String
	
	Private _ACTIVE As String
	
	Private _jpctpcd As String
	
	Private _jpcabbr As String
	
	Private _TYPE_REQUESTS_SHOW As String
	
	Private _WORK_GROUP_TYPE As String
	
	Private _DAY_WORK As System.Nullable(Of Double)
	
	Private _NEW_WORK_GROUP_NAME As String
	
	Private _NEW_WORK_GROUP As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_IDChanged()
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_NAMEChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As String)
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    Partial Private Sub OnjpctpcdChanging(value As String)
    End Sub
    Partial Private Sub OnjpctpcdChanged()
    End Sub
    Partial Private Sub OnjpcabbrChanging(value As String)
    End Sub
    Partial Private Sub OnjpcabbrChanged()
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_SHOWChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_SHOWChanged()
    End Sub
    Partial Private Sub OnWORK_GROUP_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnWORK_GROUP_TYPEChanged()
    End Sub
    Partial Private Sub OnDAY_WORKChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDAY_WORKChanged()
    End Sub
    Partial Private Sub OnNEW_WORK_GROUP_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNEW_WORK_GROUP_NAMEChanged()
    End Sub
    Partial Private Sub OnNEW_WORK_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNEW_WORK_GROUPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_REQUESTS_ID", DbType:="NVarChar(50)")>  _
	Public Property TYPE_REQUESTS_ID() As String
		Get
			Return Me._TYPE_REQUESTS_ID
		End Get
		Set
			If (String.Equals(Me._TYPE_REQUESTS_ID, value) = false) Then
				Me.OnTYPE_REQUESTS_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_REQUESTS_ID = value
				Me.SendPropertyChanged("TYPE_REQUESTS_ID")
				Me.OnTYPE_REQUESTS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_REQUESTS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_REQUESTS_NAME() As String
		Get
			Return Me._TYPE_REQUESTS_NAME
		End Get
		Set
			If (String.Equals(Me._TYPE_REQUESTS_NAME, value) = false) Then
				Me.OnTYPE_REQUESTS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_REQUESTS_NAME = value
				Me.SendPropertyChanged("TYPE_REQUESTS_NAME")
				Me.OnTYPE_REQUESTS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="NVarChar(50)")>  _
	Public Property ACTIVE() As String
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (String.Equals(Me._ACTIVE, value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jpctpcd", DbType:="NVarChar(50)")>  _
	Public Property jpctpcd() As String
		Get
			Return Me._jpctpcd
		End Get
		Set
			If (String.Equals(Me._jpctpcd, value) = false) Then
				Me.OnjpctpcdChanging(value)
				Me.SendPropertyChanging
				Me._jpctpcd = value
				Me.SendPropertyChanged("jpctpcd")
				Me.OnjpctpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jpcabbr", DbType:="NVarChar(150)")>  _
	Public Property jpcabbr() As String
		Get
			Return Me._jpcabbr
		End Get
		Set
			If (String.Equals(Me._jpcabbr, value) = false) Then
				Me.OnjpcabbrChanging(value)
				Me.SendPropertyChanging
				Me._jpcabbr = value
				Me.SendPropertyChanged("jpcabbr")
				Me.OnjpcabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_REQUESTS_SHOW", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_REQUESTS_SHOW() As String
		Get
			Return Me._TYPE_REQUESTS_SHOW
		End Get
		Set
			If (String.Equals(Me._TYPE_REQUESTS_SHOW, value) = false) Then
				Me.OnTYPE_REQUESTS_SHOWChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_REQUESTS_SHOW = value
				Me.SendPropertyChanged("TYPE_REQUESTS_SHOW")
				Me.OnTYPE_REQUESTS_SHOWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORK_GROUP_TYPE", DbType:="NVarChar(50)")>  _
	Public Property WORK_GROUP_TYPE() As String
		Get
			Return Me._WORK_GROUP_TYPE
		End Get
		Set
			If (String.Equals(Me._WORK_GROUP_TYPE, value) = false) Then
				Me.OnWORK_GROUP_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._WORK_GROUP_TYPE = value
				Me.SendPropertyChanged("WORK_GROUP_TYPE")
				Me.OnWORK_GROUP_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DAY_WORK", DbType:="Float")>  _
	Public Property DAY_WORK() As System.Nullable(Of Double)
		Get
			Return Me._DAY_WORK
		End Get
		Set
			If (Me._DAY_WORK.Equals(value) = false) Then
				Me.OnDAY_WORKChanging(value)
				Me.SendPropertyChanging
				Me._DAY_WORK = value
				Me.SendPropertyChanged("DAY_WORK")
				Me.OnDAY_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_WORK_GROUP_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NEW_WORK_GROUP_NAME() As String
		Get
			Return Me._NEW_WORK_GROUP_NAME
		End Get
		Set
			If (String.Equals(Me._NEW_WORK_GROUP_NAME, value) = false) Then
				Me.OnNEW_WORK_GROUP_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._NEW_WORK_GROUP_NAME = value
				Me.SendPropertyChanged("NEW_WORK_GROUP_NAME")
				Me.OnNEW_WORK_GROUP_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_WORK_GROUP", DbType:="Int")>  _
	Public Property NEW_WORK_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._NEW_WORK_GROUP
		End Get
		Set
			If (Me._NEW_WORK_GROUP.Equals(value) = false) Then
				Me.OnNEW_WORK_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._NEW_WORK_GROUP = value
				Me.SendPropertyChanged("NEW_WORK_GROUP")
				Me.OnNEW_WORK_GROUPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_REQUEST_CENTER")>  _
Partial Public Class DRUG_REQUEST_CENTER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TYPE_REQUEST As System.Nullable(Of Integer)
	
	Private _CITIZEN_AUTHIRIZE As String
	
	Private _CITIZEN_ID As String
	
	Private _PLACENAME As String
	
	Private _LCNNO_DISPLAY As String
	
	Private _LCN_IDA As System.Nullable(Of Integer)
	
	Private _PRODUCT_ID As String
	
	Private _FK_PRODUCT_IDA As System.Nullable(Of Integer)
	
	Private _WORK_GROUP As System.Nullable(Of Integer)
	
	Private _ACTIVE As System.Nullable(Of Integer)
	
	Private _RCVNO_DISPLAY As String
	
	Private _RCVNO As String
	
	Private _REQUEST_DATE As System.Nullable(Of Date)
	
	Private _REQUEST_DATE_DISPLAY As String
	
	Private _PVNCD As System.Nullable(Of Integer)
	
	Private _CITIZEN_UPLOAD As String
	
	Private _TYPE_REQUEST_NAME As String
	
	Private _FK_LOCATION_IDA As System.Nullable(Of Integer)
	
	Private _TRADENAME As String
	
	Private _TRADENAME_ENG As String
	
	Private _ALLOW_NAME As String
	
	Private _HEAD_IDA As System.Nullable(Of Integer)
	
	Private _REQUEST_CENTER_TYPE As System.Nullable(Of Integer)
	
	Private _TABEAN_DISPLAY As String
	
	Private _OTHER_DETAIL As String
	
	Private _thanameplace As String
	
	Private _fulladdr As String
	
	Private _PROCESS_DIGITS As String
	
	Private _REF_NO As String
	
	Private _STAFF_IDENTIFY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTYPE_REQUESTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_REQUESTChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHIRIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHIRIZEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnPLACENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPLACENAMEChanged()
    End Sub
    Partial Private Sub OnLCNNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnPRODUCT_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_IDChanged()
    End Sub
    Partial Private Sub OnFK_PRODUCT_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_PRODUCT_IDAChanged()
    End Sub
    Partial Private Sub OnWORK_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnWORK_GROUPChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnREQUEST_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUEST_DATEChanged()
    End Sub
    Partial Private Sub OnREQUEST_DATE_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnREQUEST_DATE_DISPLAYChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_UPLOADChanged()
    End Sub
    Partial Private Sub OnTYPE_REQUEST_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_REQUEST_NAMEChanged()
    End Sub
    Partial Private Sub OnFK_LOCATION_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_LOCATION_IDAChanged()
    End Sub
    Partial Private Sub OnTRADENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTRADENAMEChanged()
    End Sub
    Partial Private Sub OnTRADENAME_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnTRADENAME_ENGChanged()
    End Sub
    Partial Private Sub OnALLOW_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnALLOW_NAMEChanged()
    End Sub
    Partial Private Sub OnHEAD_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEAD_IDAChanged()
    End Sub
    Partial Private Sub OnREQUEST_CENTER_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREQUEST_CENTER_TYPEChanged()
    End Sub
    Partial Private Sub OnTABEAN_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnTABEAN_DISPLAYChanged()
    End Sub
    Partial Private Sub OnOTHER_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnOTHER_DETAILChanged()
    End Sub
    Partial Private Sub OnthanameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnthanameplaceChanged()
    End Sub
    Partial Private Sub OnfulladdrChanging(value As String)
    End Sub
    Partial Private Sub OnfulladdrChanged()
    End Sub
    Partial Private Sub OnPROCESS_DIGITSChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_DIGITSChanged()
    End Sub
    Partial Private Sub OnREF_NOChanging(value As String)
    End Sub
    Partial Private Sub OnREF_NOChanged()
    End Sub
    Partial Private Sub OnSTAFF_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_IDENTIFYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_REQUEST", DbType:="Int")>  _
	Public Property TYPE_REQUEST() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_REQUEST
		End Get
		Set
			If (Me._TYPE_REQUEST.Equals(value) = false) Then
				Me.OnTYPE_REQUESTChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_REQUEST = value
				Me.SendPropertyChanged("TYPE_REQUEST")
				Me.OnTYPE_REQUESTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHIRIZE", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_AUTHIRIZE() As String
		Get
			Return Me._CITIZEN_AUTHIRIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHIRIZE, value) = false) Then
				Me.OnCITIZEN_AUTHIRIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHIRIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHIRIZE")
				Me.OnCITIZEN_AUTHIRIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLACENAME", DbType:="NVarChar(MAX)")>  _
	Public Property PLACENAME() As String
		Get
			Return Me._PLACENAME
		End Get
		Set
			If (String.Equals(Me._PLACENAME, value) = false) Then
				Me.OnPLACENAMEChanging(value)
				Me.SendPropertyChanging
				Me._PLACENAME = value
				Me.SendPropertyChanged("PLACENAME")
				Me.OnPLACENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property LCNNO_DISPLAY() As String
		Get
			Return Me._LCNNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._LCNNO_DISPLAY, value) = false) Then
				Me.OnLCNNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO_DISPLAY = value
				Me.SendPropertyChanged("LCNNO_DISPLAY")
				Me.OnLCNNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="Int")>  _
	Public Property LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (Me._LCN_IDA.Equals(value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_ID() As String
		Get
			Return Me._PRODUCT_ID
		End Get
		Set
			If (String.Equals(Me._PRODUCT_ID, value) = false) Then
				Me.OnPRODUCT_IDChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_ID = value
				Me.SendPropertyChanged("PRODUCT_ID")
				Me.OnPRODUCT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PRODUCT_IDA", DbType:="Int")>  _
	Public Property FK_PRODUCT_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_PRODUCT_IDA
		End Get
		Set
			If (Me._FK_PRODUCT_IDA.Equals(value) = false) Then
				Me.OnFK_PRODUCT_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_PRODUCT_IDA = value
				Me.SendPropertyChanged("FK_PRODUCT_IDA")
				Me.OnFK_PRODUCT_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORK_GROUP", DbType:="Int")>  _
	Public Property WORK_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._WORK_GROUP
		End Get
		Set
			If (Me._WORK_GROUP.Equals(value) = false) Then
				Me.OnWORK_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._WORK_GROUP = value
				Me.SendPropertyChanged("WORK_GROUP")
				Me.OnWORK_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="Int")>  _
	Public Property ACTIVE() As System.Nullable(Of Integer)
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (Me._ACTIVE.Equals(value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_DISPLAY() As String
		Get
			Return Me._RCVNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVNO_DISPLAY, value) = false) Then
				Me.OnRCVNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_DISPLAY = value
				Me.SendPropertyChanged("RCVNO_DISPLAY")
				Me.OnRCVNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO() As String
		Get
			Return Me._RCVNO
		End Get
		Set
			If (String.Equals(Me._RCVNO, value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_DATE
		End Get
		Set
			If (Me._REQUEST_DATE.Equals(value) = false) Then
				Me.OnREQUEST_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_DATE = value
				Me.SendPropertyChanged("REQUEST_DATE")
				Me.OnREQUEST_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_DATE_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property REQUEST_DATE_DISPLAY() As String
		Get
			Return Me._REQUEST_DATE_DISPLAY
		End Get
		Set
			If (String.Equals(Me._REQUEST_DATE_DISPLAY, value) = false) Then
				Me.OnREQUEST_DATE_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_DATE_DISPLAY = value
				Me.SendPropertyChanged("REQUEST_DATE_DISPLAY")
				Me.OnREQUEST_DATE_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="Int")>  _
	Public Property PVNCD() As System.Nullable(Of Integer)
		Get
			Return Me._PVNCD
		End Get
		Set
			If (Me._PVNCD.Equals(value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_UPLOAD() As String
		Get
			Return Me._CITIZEN_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_UPLOAD, value) = false) Then
				Me.OnCITIZEN_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_UPLOAD")
				Me.OnCITIZEN_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_REQUEST_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_REQUEST_NAME() As String
		Get
			Return Me._TYPE_REQUEST_NAME
		End Get
		Set
			If (String.Equals(Me._TYPE_REQUEST_NAME, value) = false) Then
				Me.OnTYPE_REQUEST_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_REQUEST_NAME = value
				Me.SendPropertyChanged("TYPE_REQUEST_NAME")
				Me.OnTYPE_REQUEST_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_LOCATION_IDA", DbType:="Int")>  _
	Public Property FK_LOCATION_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_LOCATION_IDA
		End Get
		Set
			If (Me._FK_LOCATION_IDA.Equals(value) = false) Then
				Me.OnFK_LOCATION_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_LOCATION_IDA = value
				Me.SendPropertyChanged("FK_LOCATION_IDA")
				Me.OnFK_LOCATION_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRADENAME", DbType:="NVarChar(MAX)")>  _
	Public Property TRADENAME() As String
		Get
			Return Me._TRADENAME
		End Get
		Set
			If (String.Equals(Me._TRADENAME, value) = false) Then
				Me.OnTRADENAMEChanging(value)
				Me.SendPropertyChanging
				Me._TRADENAME = value
				Me.SendPropertyChanged("TRADENAME")
				Me.OnTRADENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRADENAME_ENG", DbType:="NVarChar(MAX)")>  _
	Public Property TRADENAME_ENG() As String
		Get
			Return Me._TRADENAME_ENG
		End Get
		Set
			If (String.Equals(Me._TRADENAME_ENG, value) = false) Then
				Me.OnTRADENAME_ENGChanging(value)
				Me.SendPropertyChanging
				Me._TRADENAME_ENG = value
				Me.SendPropertyChanged("TRADENAME_ENG")
				Me.OnTRADENAME_ENGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLOW_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ALLOW_NAME() As String
		Get
			Return Me._ALLOW_NAME
		End Get
		Set
			If (String.Equals(Me._ALLOW_NAME, value) = false) Then
				Me.OnALLOW_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ALLOW_NAME = value
				Me.SendPropertyChanged("ALLOW_NAME")
				Me.OnALLOW_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_IDA", DbType:="Int")>  _
	Public Property HEAD_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_IDA
		End Get
		Set
			If (Me._HEAD_IDA.Equals(value) = false) Then
				Me.OnHEAD_IDAChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_IDA = value
				Me.SendPropertyChanged("HEAD_IDA")
				Me.OnHEAD_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_CENTER_TYPE", DbType:="Int")>  _
	Public Property REQUEST_CENTER_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._REQUEST_CENTER_TYPE
		End Get
		Set
			If (Me._REQUEST_CENTER_TYPE.Equals(value) = false) Then
				Me.OnREQUEST_CENTER_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_CENTER_TYPE = value
				Me.SendPropertyChanged("REQUEST_CENTER_TYPE")
				Me.OnREQUEST_CENTER_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TABEAN_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property TABEAN_DISPLAY() As String
		Get
			Return Me._TABEAN_DISPLAY
		End Get
		Set
			If (String.Equals(Me._TABEAN_DISPLAY, value) = false) Then
				Me.OnTABEAN_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._TABEAN_DISPLAY = value
				Me.SendPropertyChanged("TABEAN_DISPLAY")
				Me.OnTABEAN_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER_DETAIL() As String
		Get
			Return Me._OTHER_DETAIL
		End Get
		Set
			If (String.Equals(Me._OTHER_DETAIL, value) = false) Then
				Me.OnOTHER_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._OTHER_DETAIL = value
				Me.SendPropertyChanged("OTHER_DETAIL")
				Me.OnOTHER_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanameplace", DbType:="NVarChar(MAX)")>  _
	Public Property thanameplace() As String
		Get
			Return Me._thanameplace
		End Get
		Set
			If (String.Equals(Me._thanameplace, value) = false) Then
				Me.OnthanameplaceChanging(value)
				Me.SendPropertyChanging
				Me._thanameplace = value
				Me.SendPropertyChanged("thanameplace")
				Me.OnthanameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fulladdr", DbType:="NVarChar(MAX)")>  _
	Public Property fulladdr() As String
		Get
			Return Me._fulladdr
		End Get
		Set
			If (String.Equals(Me._fulladdr, value) = false) Then
				Me.OnfulladdrChanging(value)
				Me.SendPropertyChanging
				Me._fulladdr = value
				Me.SendPropertyChanged("fulladdr")
				Me.OnfulladdrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_DIGITS", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_DIGITS() As String
		Get
			Return Me._PROCESS_DIGITS
		End Get
		Set
			If (String.Equals(Me._PROCESS_DIGITS, value) = false) Then
				Me.OnPROCESS_DIGITSChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_DIGITS = value
				Me.SendPropertyChanged("PROCESS_DIGITS")
				Me.OnPROCESS_DIGITSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_NO", DbType:="NVarChar(MAX)")>  _
	Public Property REF_NO() As String
		Get
			Return Me._REF_NO
		End Get
		Set
			If (String.Equals(Me._REF_NO, value) = false) Then
				Me.OnREF_NOChanging(value)
				Me.SendPropertyChanging
				Me._REF_NO = value
				Me.SendPropertyChanged("REF_NO")
				Me.OnREF_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_IDENTIFY() As String
		Get
			Return Me._STAFF_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._STAFF_IDENTIFY, value) = false) Then
				Me.OnSTAFF_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_IDENTIFY = value
				Me.SendPropertyChanged("STAFF_IDENTIFY")
				Me.OnSTAFF_IDENTIFYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_LCN_EXTEND_TYPE")>  _
Partial Public Class MAS_LCN_EXTEND_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _type_lcn As String
	
	Private _process As String
	
	Private _process_l44 As String
	
	Private _descriptions As String
	
	Private _description44 As String
	
	Private _pay_amount As System.Nullable(Of Decimal)
	
	Private _pay_amount44 As System.Nullable(Of Decimal)
	
	Private _active As System.Nullable(Of Integer)
	
	Private _dalcn_process As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub Ontype_lcnChanging(value As String)
    End Sub
    Partial Private Sub Ontype_lcnChanged()
    End Sub
    Partial Private Sub OnprocessChanging(value As String)
    End Sub
    Partial Private Sub OnprocessChanged()
    End Sub
    Partial Private Sub Onprocess_l44Changing(value As String)
    End Sub
    Partial Private Sub Onprocess_l44Changed()
    End Sub
    Partial Private Sub OndescriptionsChanging(value As String)
    End Sub
    Partial Private Sub OndescriptionsChanged()
    End Sub
    Partial Private Sub Ondescription44Changing(value As String)
    End Sub
    Partial Private Sub Ondescription44Changed()
    End Sub
    Partial Private Sub Onpay_amountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpay_amountChanged()
    End Sub
    Partial Private Sub Onpay_amount44Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpay_amount44Changed()
    End Sub
    Partial Private Sub OnactiveChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnactiveChanged()
    End Sub
    Partial Private Sub Ondalcn_processChanging(value As String)
    End Sub
    Partial Private Sub Ondalcn_processChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type_lcn", DbType:="NVarChar(MAX)")>  _
	Public Property type_lcn() As String
		Get
			Return Me._type_lcn
		End Get
		Set
			If (String.Equals(Me._type_lcn, value) = false) Then
				Me.Ontype_lcnChanging(value)
				Me.SendPropertyChanging
				Me._type_lcn = value
				Me.SendPropertyChanged("type_lcn")
				Me.Ontype_lcnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_process", DbType:="NVarChar(MAX)")>  _
	Public Property process() As String
		Get
			Return Me._process
		End Get
		Set
			If (String.Equals(Me._process, value) = false) Then
				Me.OnprocessChanging(value)
				Me.SendPropertyChanging
				Me._process = value
				Me.SendPropertyChanged("process")
				Me.OnprocessChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_process_l44", DbType:="NVarChar(MAX)")>  _
	Public Property process_l44() As String
		Get
			Return Me._process_l44
		End Get
		Set
			If (String.Equals(Me._process_l44, value) = false) Then
				Me.Onprocess_l44Changing(value)
				Me.SendPropertyChanging
				Me._process_l44 = value
				Me.SendPropertyChanged("process_l44")
				Me.Onprocess_l44Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_descriptions", DbType:="NVarChar(MAX)")>  _
	Public Property descriptions() As String
		Get
			Return Me._descriptions
		End Get
		Set
			If (String.Equals(Me._descriptions, value) = false) Then
				Me.OndescriptionsChanging(value)
				Me.SendPropertyChanging
				Me._descriptions = value
				Me.SendPropertyChanged("descriptions")
				Me.OndescriptionsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_description44", DbType:="NVarChar(MAX)")>  _
	Public Property description44() As String
		Get
			Return Me._description44
		End Get
		Set
			If (String.Equals(Me._description44, value) = false) Then
				Me.Ondescription44Changing(value)
				Me.SendPropertyChanging
				Me._description44 = value
				Me.SendPropertyChanged("description44")
				Me.Ondescription44Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pay_amount", DbType:="Money")>  _
	Public Property pay_amount() As System.Nullable(Of Decimal)
		Get
			Return Me._pay_amount
		End Get
		Set
			If (Me._pay_amount.Equals(value) = false) Then
				Me.Onpay_amountChanging(value)
				Me.SendPropertyChanging
				Me._pay_amount = value
				Me.SendPropertyChanged("pay_amount")
				Me.Onpay_amountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pay_amount44", DbType:="Money")>  _
	Public Property pay_amount44() As System.Nullable(Of Decimal)
		Get
			Return Me._pay_amount44
		End Get
		Set
			If (Me._pay_amount44.Equals(value) = false) Then
				Me.Onpay_amount44Changing(value)
				Me.SendPropertyChanging
				Me._pay_amount44 = value
				Me.SendPropertyChanged("pay_amount44")
				Me.Onpay_amount44Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_active", DbType:="Int")>  _
	Public Property active() As System.Nullable(Of Integer)
		Get
			Return Me._active
		End Get
		Set
			If (Me._active.Equals(value) = false) Then
				Me.OnactiveChanging(value)
				Me.SendPropertyChanging
				Me._active = value
				Me.SendPropertyChanged("active")
				Me.OnactiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dalcn_process", DbType:="NVarChar(MAX)")>  _
	Public Property dalcn_process() As String
		Get
			Return Me._dalcn_process
		End Get
		Set
			If (String.Equals(Me._dalcn_process, value) = false) Then
				Me.Ondalcn_processChanging(value)
				Me.SendPropertyChanging
				Me._dalcn_process = value
				Me.SendPropertyChanged("dalcn_process")
				Me.Ondalcn_processChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_PROFESSIONAL_NAME")>  _
Partial Public Class MAS_PROFESSIONAL_NAME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PREFIXCD As System.Nullable(Of Integer)
	
	Private _FULLNAME As String
	
	Private _NAME As String
	
	Private _SURNAME As String
	
	Private _CITIZEN_ID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPREFIXCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPREFIXCDChanged()
    End Sub
    Partial Private Sub OnFULLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFULLNAMEChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnSURNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSURNAMEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFIXCD", DbType:="Int")>  _
	Public Property PREFIXCD() As System.Nullable(Of Integer)
		Get
			Return Me._PREFIXCD
		End Get
		Set
			If (Me._PREFIXCD.Equals(value) = false) Then
				Me.OnPREFIXCDChanging(value)
				Me.SendPropertyChanging
				Me._PREFIXCD = value
				Me.SendPropertyChanged("PREFIXCD")
				Me.OnPREFIXCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FULLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property FULLNAME() As String
		Get
			Return Me._FULLNAME
		End Get
		Set
			If (String.Equals(Me._FULLNAME, value) = false) Then
				Me.OnFULLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._FULLNAME = value
				Me.SendPropertyChanged("FULLNAME")
				Me.OnFULLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SURNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SURNAME() As String
		Get
			Return Me._SURNAME
		End Get
		Set
			If (String.Equals(Me._SURNAME, value) = false) Then
				Me.OnSURNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SURNAME = value
				Me.SendPropertyChanged("SURNAME")
				Me.OnSURNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_EXPERT_NAME")>  _
Partial Public Class MAS_EXPERT_NAME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FULLNAME As String
	
	Private _IS_OUT As System.Nullable(Of Boolean)
	
	Private _IDENTIFY As String
	
	Private _PREFIXCD As System.Nullable(Of Integer)
	
	Private _NAME As String
	
	Private _SURNAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFULLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFULLNAMEChanged()
    End Sub
    Partial Private Sub OnIS_OUTChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_OUTChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnPREFIXCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPREFIXCDChanged()
    End Sub
    Partial Private Sub OnNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEChanged()
    End Sub
    Partial Private Sub OnSURNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSURNAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FULLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property FULLNAME() As String
		Get
			Return Me._FULLNAME
		End Get
		Set
			If (String.Equals(Me._FULLNAME, value) = false) Then
				Me.OnFULLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._FULLNAME = value
				Me.SendPropertyChanged("FULLNAME")
				Me.OnFULLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_OUT", DbType:="Bit")>  _
	Public Property IS_OUT() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_OUT
		End Get
		Set
			If (Me._IS_OUT.Equals(value) = false) Then
				Me.OnIS_OUTChanging(value)
				Me.SendPropertyChanging
				Me._IS_OUT = value
				Me.SendPropertyChanged("IS_OUT")
				Me.OnIS_OUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(50)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFIXCD", DbType:="Int")>  _
	Public Property PREFIXCD() As System.Nullable(Of Integer)
		Get
			Return Me._PREFIXCD
		End Get
		Set
			If (Me._PREFIXCD.Equals(value) = false) Then
				Me.OnPREFIXCDChanging(value)
				Me.SendPropertyChanging
				Me._PREFIXCD = value
				Me.SendPropertyChanged("PREFIXCD")
				Me.OnPREFIXCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me.OnNAMEChanging(value)
				Me.SendPropertyChanging
				Me._NAME = value
				Me.SendPropertyChanged("NAME")
				Me.OnNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SURNAME", DbType:="NVarChar(MAX)")>  _
	Public Property SURNAME() As String
		Get
			Return Me._SURNAME
		End Get
		Set
			If (String.Equals(Me._SURNAME, value) = false) Then
				Me.OnSURNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SURNAME = value
				Me.SendPropertyChanged("SURNAME")
				Me.OnSURNAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_FOREIGN")>  _
Partial Public Class CER_FOREIGN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _MANUFACTURER_CONFORMS_TO As String
	
	Private _CERTIFICATION_NUMBER_ALL As String
	
	Private _FOREIGN_LOCATION_NAME As String
	
	Private _ADDRESS_DETAIL As String
	
	Private _CITY_NAME As String
	
	Private _ZIPCODE As String
	
	Private _COUNTRY_IDA As System.Nullable(Of Integer)
	
	Private _ORGANIZATION_CODE As String
	
	Private _MANUFACTURER_LICENCE_NUMBER As String
	
	Private _LOCATION_STANDARD As String
	
	Private _GLN As String
	
	Private _DOCUMENT_DATE As System.Nullable(Of Date)
	
	Private _EXP_DOCUMENT_DATE As System.Nullable(Of Date)
	
	Private _DEPARTMENT_REGIST_CER_TYPE As System.Nullable(Of Integer)
	
	Private _DEPARTMENT_REGIST_CER_NAME As String
	
	Private _COUNTRY_OF_DEPARTMENT_IDA As System.Nullable(Of Integer)
	
	Private _ANALYZE_IDA As System.Nullable(Of Integer)
	
	Private _GMP_STANDARD As String
	
	Private _ESTABLISHMENT_CONFORMS As String
	
	Private _CERTIFICATION_NUMBER_ALL_FOR_ANALYZE As String
	
	Private _LAB_STANDARD As String
	
	Private _LAB_ADDR As String
	
	Private _LAB_CITY As String
	
	Private _LAB_ZIPCODE As String
	
	Private _LAB_COUNTRY_IDA As System.Nullable(Of Integer)
	
	Private _LAB_ORGANIZATION_CODE As String
	
	Private _LAB_GLN As String
	
	Private _LAB_ISO_DATE As System.Nullable(Of Date)
	
	Private _LAB_ISO_EXP_DATE As System.Nullable(Of Date)
	
	Private _LAB_DEPARTMENT_REGIST_CB As String
	
	Private _LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA As System.Nullable(Of Integer)
	
	Private _CER_SCOPE As String
	
	Private _CER_TYPE As System.Nullable(Of Integer)
	
	Private _FK_MANUFACTURE_LOCATION_ADDRESS_ID As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _CER_NUMBER As String
	
	Private _LCNSID As String
	
	Private _IDENTIFY As String
	
	Private _XML_NAME As String
	
	Private _RCVNO As String
	
	Private _RCVDATE As System.Nullable(Of Date)
	
	Private _RCVDATE_DISPLAY As String
	
	Private _STAFF_RCV As String
	
	Private _CER_DATE As System.Nullable(Of Date)
	
	Private _BUYER_NAME As String
	
	Private _BUYER_COUNTRY As System.Nullable(Of Integer)
	
	Private _BUYER_STANDARD As String
	
	Private _IMAGE_QR_INPUT As String
	
	Private _IMAGE_QR_OUTPUT As String
	
	Private _REMARK As String
	
	Private _CER_FORMAT As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _PICS_NAT_ALPHA3 As String
	
	Private _PO_OTHER As String
	
	Private _MOBILE As String
	
	Private _OLD_TR_ID As String
	
	Private _REQUEST_DATE As System.Nullable(Of Date)
	
	Private _WRITE_AT As String
	
	Private _WRITE_DATE As System.Nullable(Of Date)
	
	Private _THAIFULLNAME As String
	
	Private _TEL As String
	
	Private _MOBILE2 As String
	
	Private _EMAIL As String
	
	Private _EMAIL2 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnMANUFACTURER_CONFORMS_TOChanging(value As String)
    End Sub
    Partial Private Sub OnMANUFACTURER_CONFORMS_TOChanged()
    End Sub
    Partial Private Sub OnCERTIFICATION_NUMBER_ALLChanging(value As String)
    End Sub
    Partial Private Sub OnCERTIFICATION_NUMBER_ALLChanged()
    End Sub
    Partial Private Sub OnFOREIGN_LOCATION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFOREIGN_LOCATION_NAMEChanged()
    End Sub
    Partial Private Sub OnADDRESS_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_DETAILChanged()
    End Sub
    Partial Private Sub OnCITY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCITY_NAMEChanged()
    End Sub
    Partial Private Sub OnZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIPCODEChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_IDAChanged()
    End Sub
    Partial Private Sub OnORGANIZATION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnORGANIZATION_CODEChanged()
    End Sub
    Partial Private Sub OnMANUFACTURER_LICENCE_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnMANUFACTURER_LICENCE_NUMBERChanged()
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanged()
    End Sub
    Partial Private Sub OnGLNChanging(value As String)
    End Sub
    Partial Private Sub OnGLNChanged()
    End Sub
    Partial Private Sub OnDOCUMENT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDOCUMENT_DATEChanged()
    End Sub
    Partial Private Sub OnEXP_DOCUMENT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEXP_DOCUMENT_DATEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_REGIST_CER_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPARTMENT_REGIST_CER_TYPEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_REGIST_CER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_REGIST_CER_NAMEChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_OF_DEPARTMENT_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_OF_DEPARTMENT_IDAChanged()
    End Sub
    Partial Private Sub OnANALYZE_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnANALYZE_IDAChanged()
    End Sub
    Partial Private Sub OnGMP_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnGMP_STANDARDChanged()
    End Sub
    Partial Private Sub OnESTABLISHMENT_CONFORMSChanging(value As String)
    End Sub
    Partial Private Sub OnESTABLISHMENT_CONFORMSChanged()
    End Sub
    Partial Private Sub OnCERTIFICATION_NUMBER_ALL_FOR_ANALYZEChanging(value As String)
    End Sub
    Partial Private Sub OnCERTIFICATION_NUMBER_ALL_FOR_ANALYZEChanged()
    End Sub
    Partial Private Sub OnLAB_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_STANDARDChanged()
    End Sub
    Partial Private Sub OnLAB_ADDRChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_ADDRChanged()
    End Sub
    Partial Private Sub OnLAB_CITYChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_CITYChanged()
    End Sub
    Partial Private Sub OnLAB_ZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_ZIPCODEChanged()
    End Sub
    Partial Private Sub OnLAB_COUNTRY_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_COUNTRY_IDAChanged()
    End Sub
    Partial Private Sub OnLAB_ORGANIZATION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_ORGANIZATION_CODEChanged()
    End Sub
    Partial Private Sub OnLAB_GLNChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_GLNChanged()
    End Sub
    Partial Private Sub OnLAB_ISO_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLAB_ISO_DATEChanged()
    End Sub
    Partial Private Sub OnLAB_ISO_EXP_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLAB_ISO_EXP_DATEChanged()
    End Sub
    Partial Private Sub OnLAB_DEPARTMENT_REGIST_CBChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_DEPARTMENT_REGIST_CBChanged()
    End Sub
    Partial Private Sub OnLAB_COUNTRY_DEPARTMENT_REGIST_CB_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLAB_COUNTRY_DEPARTMENT_REGIST_CB_IDAChanged()
    End Sub
    Partial Private Sub OnCER_SCOPEChanging(value As String)
    End Sub
    Partial Private Sub OnCER_SCOPEChanged()
    End Sub
    Partial Private Sub OnCER_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCER_TYPEChanged()
    End Sub
    Partial Private Sub OnFK_MANUFACTURE_LOCATION_ADDRESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_MANUFACTURE_LOCATION_ADDRESS_IDChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnCER_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnCER_NUMBERChanged()
    End Sub
    Partial Private Sub OnLCNSIDChanging(value As String)
    End Sub
    Partial Private Sub OnLCNSIDChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnXML_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnXML_NAMEChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnRCVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCVDATEChanged()
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanged()
    End Sub
    Partial Private Sub OnSTAFF_RCVChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_RCVChanged()
    End Sub
    Partial Private Sub OnCER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCER_DATEChanged()
    End Sub
    Partial Private Sub OnBUYER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBUYER_NAMEChanged()
    End Sub
    Partial Private Sub OnBUYER_COUNTRYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBUYER_COUNTRYChanged()
    End Sub
    Partial Private Sub OnBUYER_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnBUYER_STANDARDChanged()
    End Sub
    Partial Private Sub OnIMAGE_QR_INPUTChanging(value As String)
    End Sub
    Partial Private Sub OnIMAGE_QR_INPUTChanged()
    End Sub
    Partial Private Sub OnIMAGE_QR_OUTPUTChanging(value As String)
    End Sub
    Partial Private Sub OnIMAGE_QR_OUTPUTChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnCER_FORMATChanging(value As String)
    End Sub
    Partial Private Sub OnCER_FORMATChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnPICS_NAT_ALPHA3Changing(value As String)
    End Sub
    Partial Private Sub OnPICS_NAT_ALPHA3Changed()
    End Sub
    Partial Private Sub OnPO_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnPO_OTHERChanged()
    End Sub
    Partial Private Sub OnMOBILEChanging(value As String)
    End Sub
    Partial Private Sub OnMOBILEChanged()
    End Sub
    Partial Private Sub OnOLD_TR_IDChanging(value As String)
    End Sub
    Partial Private Sub OnOLD_TR_IDChanged()
    End Sub
    Partial Private Sub OnREQUEST_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUEST_DATEChanged()
    End Sub
    Partial Private Sub OnWRITE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_ATChanged()
    End Sub
    Partial Private Sub OnWRITE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnWRITE_DATEChanged()
    End Sub
    Partial Private Sub OnTHAIFULLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTHAIFULLNAMEChanged()
    End Sub
    Partial Private Sub OnTELChanging(value As String)
    End Sub
    Partial Private Sub OnTELChanged()
    End Sub
    Partial Private Sub OnMOBILE2Changing(value As String)
    End Sub
    Partial Private Sub OnMOBILE2Changed()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnEMAIL2Changing(value As String)
    End Sub
    Partial Private Sub OnEMAIL2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFACTURER_CONFORMS_TO", DbType:="NVarChar(MAX)")>  _
	Public Property MANUFACTURER_CONFORMS_TO() As String
		Get
			Return Me._MANUFACTURER_CONFORMS_TO
		End Get
		Set
			If (String.Equals(Me._MANUFACTURER_CONFORMS_TO, value) = false) Then
				Me.OnMANUFACTURER_CONFORMS_TOChanging(value)
				Me.SendPropertyChanging
				Me._MANUFACTURER_CONFORMS_TO = value
				Me.SendPropertyChanged("MANUFACTURER_CONFORMS_TO")
				Me.OnMANUFACTURER_CONFORMS_TOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CERTIFICATION_NUMBER_ALL", DbType:="NVarChar(MAX)")>  _
	Public Property CERTIFICATION_NUMBER_ALL() As String
		Get
			Return Me._CERTIFICATION_NUMBER_ALL
		End Get
		Set
			If (String.Equals(Me._CERTIFICATION_NUMBER_ALL, value) = false) Then
				Me.OnCERTIFICATION_NUMBER_ALLChanging(value)
				Me.SendPropertyChanging
				Me._CERTIFICATION_NUMBER_ALL = value
				Me.SendPropertyChanged("CERTIFICATION_NUMBER_ALL")
				Me.OnCERTIFICATION_NUMBER_ALLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOREIGN_LOCATION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FOREIGN_LOCATION_NAME() As String
		Get
			Return Me._FOREIGN_LOCATION_NAME
		End Get
		Set
			If (String.Equals(Me._FOREIGN_LOCATION_NAME, value) = false) Then
				Me.OnFOREIGN_LOCATION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FOREIGN_LOCATION_NAME = value
				Me.SendPropertyChanged("FOREIGN_LOCATION_NAME")
				Me.OnFOREIGN_LOCATION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_DETAIL() As String
		Get
			Return Me._ADDRESS_DETAIL
		End Get
		Set
			If (String.Equals(Me._ADDRESS_DETAIL, value) = false) Then
				Me.OnADDRESS_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_DETAIL = value
				Me.SendPropertyChanged("ADDRESS_DETAIL")
				Me.OnADDRESS_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CITY_NAME() As String
		Get
			Return Me._CITY_NAME
		End Get
		Set
			If (String.Equals(Me._CITY_NAME, value) = false) Then
				Me.OnCITY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CITY_NAME = value
				Me.SendPropertyChanged("CITY_NAME")
				Me.OnCITY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property ZIPCODE() As String
		Get
			Return Me._ZIPCODE
		End Get
		Set
			If (String.Equals(Me._ZIPCODE, value) = false) Then
				Me.OnZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIPCODE = value
				Me.SendPropertyChanged("ZIPCODE")
				Me.OnZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_IDA", DbType:="Int")>  _
	Public Property COUNTRY_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_IDA
		End Get
		Set
			If (Me._COUNTRY_IDA.Equals(value) = false) Then
				Me.OnCOUNTRY_IDAChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_IDA = value
				Me.SendPropertyChanged("COUNTRY_IDA")
				Me.OnCOUNTRY_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property ORGANIZATION_CODE() As String
		Get
			Return Me._ORGANIZATION_CODE
		End Get
		Set
			If (String.Equals(Me._ORGANIZATION_CODE, value) = false) Then
				Me.OnORGANIZATION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_CODE = value
				Me.SendPropertyChanged("ORGANIZATION_CODE")
				Me.OnORGANIZATION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFACTURER_LICENCE_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property MANUFACTURER_LICENCE_NUMBER() As String
		Get
			Return Me._MANUFACTURER_LICENCE_NUMBER
		End Get
		Set
			If (String.Equals(Me._MANUFACTURER_LICENCE_NUMBER, value) = false) Then
				Me.OnMANUFACTURER_LICENCE_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._MANUFACTURER_LICENCE_NUMBER = value
				Me.SendPropertyChanged("MANUFACTURER_LICENCE_NUMBER")
				Me.OnMANUFACTURER_LICENCE_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_STANDARD() As String
		Get
			Return Me._LOCATION_STANDARD
		End Get
		Set
			If (String.Equals(Me._LOCATION_STANDARD, value) = false) Then
				Me.OnLOCATION_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_STANDARD = value
				Me.SendPropertyChanged("LOCATION_STANDARD")
				Me.OnLOCATION_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GLN", DbType:="NVarChar(MAX)")>  _
	Public Property GLN() As String
		Get
			Return Me._GLN
		End Get
		Set
			If (String.Equals(Me._GLN, value) = false) Then
				Me.OnGLNChanging(value)
				Me.SendPropertyChanging
				Me._GLN = value
				Me.SendPropertyChanged("GLN")
				Me.OnGLNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOCUMENT_DATE", DbType:="DateTime")>  _
	Public Property DOCUMENT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DOCUMENT_DATE
		End Get
		Set
			If (Me._DOCUMENT_DATE.Equals(value) = false) Then
				Me.OnDOCUMENT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DOCUMENT_DATE = value
				Me.SendPropertyChanged("DOCUMENT_DATE")
				Me.OnDOCUMENT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXP_DOCUMENT_DATE", DbType:="DateTime")>  _
	Public Property EXP_DOCUMENT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._EXP_DOCUMENT_DATE
		End Get
		Set
			If (Me._EXP_DOCUMENT_DATE.Equals(value) = false) Then
				Me.OnEXP_DOCUMENT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._EXP_DOCUMENT_DATE = value
				Me.SendPropertyChanged("EXP_DOCUMENT_DATE")
				Me.OnEXP_DOCUMENT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_REGIST_CER_TYPE", DbType:="Int")>  _
	Public Property DEPARTMENT_REGIST_CER_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._DEPARTMENT_REGIST_CER_TYPE
		End Get
		Set
			If (Me._DEPARTMENT_REGIST_CER_TYPE.Equals(value) = false) Then
				Me.OnDEPARTMENT_REGIST_CER_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_REGIST_CER_TYPE = value
				Me.SendPropertyChanged("DEPARTMENT_REGIST_CER_TYPE")
				Me.OnDEPARTMENT_REGIST_CER_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_REGIST_CER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DEPARTMENT_REGIST_CER_NAME() As String
		Get
			Return Me._DEPARTMENT_REGIST_CER_NAME
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_REGIST_CER_NAME, value) = false) Then
				Me.OnDEPARTMENT_REGIST_CER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_REGIST_CER_NAME = value
				Me.SendPropertyChanged("DEPARTMENT_REGIST_CER_NAME")
				Me.OnDEPARTMENT_REGIST_CER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_OF_DEPARTMENT_IDA", DbType:="Int")>  _
	Public Property COUNTRY_OF_DEPARTMENT_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_OF_DEPARTMENT_IDA
		End Get
		Set
			If (Me._COUNTRY_OF_DEPARTMENT_IDA.Equals(value) = false) Then
				Me.OnCOUNTRY_OF_DEPARTMENT_IDAChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_OF_DEPARTMENT_IDA = value
				Me.SendPropertyChanged("COUNTRY_OF_DEPARTMENT_IDA")
				Me.OnCOUNTRY_OF_DEPARTMENT_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANALYZE_IDA", DbType:="Int")>  _
	Public Property ANALYZE_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._ANALYZE_IDA
		End Get
		Set
			If (Me._ANALYZE_IDA.Equals(value) = false) Then
				Me.OnANALYZE_IDAChanging(value)
				Me.SendPropertyChanging
				Me._ANALYZE_IDA = value
				Me.SendPropertyChanged("ANALYZE_IDA")
				Me.OnANALYZE_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GMP_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property GMP_STANDARD() As String
		Get
			Return Me._GMP_STANDARD
		End Get
		Set
			If (String.Equals(Me._GMP_STANDARD, value) = false) Then
				Me.OnGMP_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._GMP_STANDARD = value
				Me.SendPropertyChanged("GMP_STANDARD")
				Me.OnGMP_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ESTABLISHMENT_CONFORMS", DbType:="NVarChar(MAX)")>  _
	Public Property ESTABLISHMENT_CONFORMS() As String
		Get
			Return Me._ESTABLISHMENT_CONFORMS
		End Get
		Set
			If (String.Equals(Me._ESTABLISHMENT_CONFORMS, value) = false) Then
				Me.OnESTABLISHMENT_CONFORMSChanging(value)
				Me.SendPropertyChanging
				Me._ESTABLISHMENT_CONFORMS = value
				Me.SendPropertyChanged("ESTABLISHMENT_CONFORMS")
				Me.OnESTABLISHMENT_CONFORMSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CERTIFICATION_NUMBER_ALL_FOR_ANALYZE", DbType:="NVarChar(MAX)")>  _
	Public Property CERTIFICATION_NUMBER_ALL_FOR_ANALYZE() As String
		Get
			Return Me._CERTIFICATION_NUMBER_ALL_FOR_ANALYZE
		End Get
		Set
			If (String.Equals(Me._CERTIFICATION_NUMBER_ALL_FOR_ANALYZE, value) = false) Then
				Me.OnCERTIFICATION_NUMBER_ALL_FOR_ANALYZEChanging(value)
				Me.SendPropertyChanging
				Me._CERTIFICATION_NUMBER_ALL_FOR_ANALYZE = value
				Me.SendPropertyChanged("CERTIFICATION_NUMBER_ALL_FOR_ANALYZE")
				Me.OnCERTIFICATION_NUMBER_ALL_FOR_ANALYZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_STANDARD() As String
		Get
			Return Me._LAB_STANDARD
		End Get
		Set
			If (String.Equals(Me._LAB_STANDARD, value) = false) Then
				Me.OnLAB_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_STANDARD = value
				Me.SendPropertyChanged("LAB_STANDARD")
				Me.OnLAB_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_ADDR", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_ADDR() As String
		Get
			Return Me._LAB_ADDR
		End Get
		Set
			If (String.Equals(Me._LAB_ADDR, value) = false) Then
				Me.OnLAB_ADDRChanging(value)
				Me.SendPropertyChanging
				Me._LAB_ADDR = value
				Me.SendPropertyChanged("LAB_ADDR")
				Me.OnLAB_ADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_CITY", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_CITY() As String
		Get
			Return Me._LAB_CITY
		End Get
		Set
			If (String.Equals(Me._LAB_CITY, value) = false) Then
				Me.OnLAB_CITYChanging(value)
				Me.SendPropertyChanging
				Me._LAB_CITY = value
				Me.SendPropertyChanged("LAB_CITY")
				Me.OnLAB_CITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property LAB_ZIPCODE() As String
		Get
			Return Me._LAB_ZIPCODE
		End Get
		Set
			If (String.Equals(Me._LAB_ZIPCODE, value) = false) Then
				Me.OnLAB_ZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_ZIPCODE = value
				Me.SendPropertyChanged("LAB_ZIPCODE")
				Me.OnLAB_ZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_COUNTRY_IDA", DbType:="Int")>  _
	Public Property LAB_COUNTRY_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_COUNTRY_IDA
		End Get
		Set
			If (Me._LAB_COUNTRY_IDA.Equals(value) = false) Then
				Me.OnLAB_COUNTRY_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LAB_COUNTRY_IDA = value
				Me.SendPropertyChanged("LAB_COUNTRY_IDA")
				Me.OnLAB_COUNTRY_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_ORGANIZATION_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_ORGANIZATION_CODE() As String
		Get
			Return Me._LAB_ORGANIZATION_CODE
		End Get
		Set
			If (String.Equals(Me._LAB_ORGANIZATION_CODE, value) = false) Then
				Me.OnLAB_ORGANIZATION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_ORGANIZATION_CODE = value
				Me.SendPropertyChanged("LAB_ORGANIZATION_CODE")
				Me.OnLAB_ORGANIZATION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_GLN", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_GLN() As String
		Get
			Return Me._LAB_GLN
		End Get
		Set
			If (String.Equals(Me._LAB_GLN, value) = false) Then
				Me.OnLAB_GLNChanging(value)
				Me.SendPropertyChanging
				Me._LAB_GLN = value
				Me.SendPropertyChanged("LAB_GLN")
				Me.OnLAB_GLNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_ISO_DATE", DbType:="DateTime")>  _
	Public Property LAB_ISO_DATE() As System.Nullable(Of Date)
		Get
			Return Me._LAB_ISO_DATE
		End Get
		Set
			If (Me._LAB_ISO_DATE.Equals(value) = false) Then
				Me.OnLAB_ISO_DATEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_ISO_DATE = value
				Me.SendPropertyChanged("LAB_ISO_DATE")
				Me.OnLAB_ISO_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_ISO_EXP_DATE", DbType:="DateTime")>  _
	Public Property LAB_ISO_EXP_DATE() As System.Nullable(Of Date)
		Get
			Return Me._LAB_ISO_EXP_DATE
		End Get
		Set
			If (Me._LAB_ISO_EXP_DATE.Equals(value) = false) Then
				Me.OnLAB_ISO_EXP_DATEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_ISO_EXP_DATE = value
				Me.SendPropertyChanged("LAB_ISO_EXP_DATE")
				Me.OnLAB_ISO_EXP_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_DEPARTMENT_REGIST_CB", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_DEPARTMENT_REGIST_CB() As String
		Get
			Return Me._LAB_DEPARTMENT_REGIST_CB
		End Get
		Set
			If (String.Equals(Me._LAB_DEPARTMENT_REGIST_CB, value) = false) Then
				Me.OnLAB_DEPARTMENT_REGIST_CBChanging(value)
				Me.SendPropertyChanging
				Me._LAB_DEPARTMENT_REGIST_CB = value
				Me.SendPropertyChanged("LAB_DEPARTMENT_REGIST_CB")
				Me.OnLAB_DEPARTMENT_REGIST_CBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA", DbType:="Int")>  _
	Public Property LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA
		End Get
		Set
			If (Me._LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA.Equals(value) = false) Then
				Me.OnLAB_COUNTRY_DEPARTMENT_REGIST_CB_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA = value
				Me.SendPropertyChanged("LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA")
				Me.OnLAB_COUNTRY_DEPARTMENT_REGIST_CB_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_SCOPE", DbType:="NVarChar(MAX)")>  _
	Public Property CER_SCOPE() As String
		Get
			Return Me._CER_SCOPE
		End Get
		Set
			If (String.Equals(Me._CER_SCOPE, value) = false) Then
				Me.OnCER_SCOPEChanging(value)
				Me.SendPropertyChanging
				Me._CER_SCOPE = value
				Me.SendPropertyChanged("CER_SCOPE")
				Me.OnCER_SCOPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_TYPE", DbType:="Int")>  _
	Public Property CER_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._CER_TYPE
		End Get
		Set
			If (Me._CER_TYPE.Equals(value) = false) Then
				Me.OnCER_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CER_TYPE = value
				Me.SendPropertyChanged("CER_TYPE")
				Me.OnCER_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_MANUFACTURE_LOCATION_ADDRESS_ID", DbType:="Int")>  _
	Public Property FK_MANUFACTURE_LOCATION_ADDRESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FK_MANUFACTURE_LOCATION_ADDRESS_ID
		End Get
		Set
			If (Me._FK_MANUFACTURE_LOCATION_ADDRESS_ID.Equals(value) = false) Then
				Me.OnFK_MANUFACTURE_LOCATION_ADDRESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._FK_MANUFACTURE_LOCATION_ADDRESS_ID = value
				Me.SendPropertyChanged("FK_MANUFACTURE_LOCATION_ADDRESS_ID")
				Me.OnFK_MANUFACTURE_LOCATION_ADDRESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="Date")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property CER_NUMBER() As String
		Get
			Return Me._CER_NUMBER
		End Get
		Set
			If (String.Equals(Me._CER_NUMBER, value) = false) Then
				Me.OnCER_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._CER_NUMBER = value
				Me.SendPropertyChanged("CER_NUMBER")
				Me.OnCER_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNSID", DbType:="NVarChar(20)")>  _
	Public Property LCNSID() As String
		Get
			Return Me._LCNSID
		End Get
		Set
			If (String.Equals(Me._LCNSID, value) = false) Then
				Me.OnLCNSIDChanging(value)
				Me.SendPropertyChanging
				Me._LCNSID = value
				Me.SendPropertyChanged("LCNSID")
				Me.OnLCNSIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(20)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property XML_NAME() As String
		Get
			Return Me._XML_NAME
		End Get
		Set
			If (String.Equals(Me._XML_NAME, value) = false) Then
				Me.OnXML_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._XML_NAME = value
				Me.SendPropertyChanged("XML_NAME")
				Me.OnXML_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO() As String
		Get
			Return Me._RCVNO
		End Get
		Set
			If (String.Equals(Me._RCVNO, value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE", DbType:="DateTime")>  _
	Public Property RCVDATE() As System.Nullable(Of Date)
		Get
			Return Me._RCVDATE
		End Get
		Set
			If (Me._RCVDATE.Equals(value) = false) Then
				Me.OnRCVDATEChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE = value
				Me.SendPropertyChanged("RCVDATE")
				Me.OnRCVDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE_DISPLAY", DbType:="NVarChar(50)")>  _
	Public Property RCVDATE_DISPLAY() As String
		Get
			Return Me._RCVDATE_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVDATE_DISPLAY, value) = false) Then
				Me.OnRCVDATE_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE_DISPLAY = value
				Me.SendPropertyChanged("RCVDATE_DISPLAY")
				Me.OnRCVDATE_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_RCV", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_RCV() As String
		Get
			Return Me._STAFF_RCV
		End Get
		Set
			If (String.Equals(Me._STAFF_RCV, value) = false) Then
				Me.OnSTAFF_RCVChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_RCV = value
				Me.SendPropertyChanged("STAFF_RCV")
				Me.OnSTAFF_RCVChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_DATE", DbType:="DateTime")>  _
	Public Property CER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CER_DATE
		End Get
		Set
			If (Me._CER_DATE.Equals(value) = false) Then
				Me.OnCER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CER_DATE = value
				Me.SendPropertyChanged("CER_DATE")
				Me.OnCER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUYER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BUYER_NAME() As String
		Get
			Return Me._BUYER_NAME
		End Get
		Set
			If (String.Equals(Me._BUYER_NAME, value) = false) Then
				Me.OnBUYER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BUYER_NAME = value
				Me.SendPropertyChanged("BUYER_NAME")
				Me.OnBUYER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUYER_COUNTRY", DbType:="Int")>  _
	Public Property BUYER_COUNTRY() As System.Nullable(Of Integer)
		Get
			Return Me._BUYER_COUNTRY
		End Get
		Set
			If (Me._BUYER_COUNTRY.Equals(value) = false) Then
				Me.OnBUYER_COUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._BUYER_COUNTRY = value
				Me.SendPropertyChanged("BUYER_COUNTRY")
				Me.OnBUYER_COUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUYER_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property BUYER_STANDARD() As String
		Get
			Return Me._BUYER_STANDARD
		End Get
		Set
			If (String.Equals(Me._BUYER_STANDARD, value) = false) Then
				Me.OnBUYER_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._BUYER_STANDARD = value
				Me.SendPropertyChanged("BUYER_STANDARD")
				Me.OnBUYER_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_QR_INPUT", DbType:="NVarChar(MAX)")>  _
	Public Property IMAGE_QR_INPUT() As String
		Get
			Return Me._IMAGE_QR_INPUT
		End Get
		Set
			If (String.Equals(Me._IMAGE_QR_INPUT, value) = false) Then
				Me.OnIMAGE_QR_INPUTChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_QR_INPUT = value
				Me.SendPropertyChanged("IMAGE_QR_INPUT")
				Me.OnIMAGE_QR_INPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_QR_OUTPUT", DbType:="NVarChar(MAX)")>  _
	Public Property IMAGE_QR_OUTPUT() As String
		Get
			Return Me._IMAGE_QR_OUTPUT
		End Get
		Set
			If (String.Equals(Me._IMAGE_QR_OUTPUT, value) = false) Then
				Me.OnIMAGE_QR_OUTPUTChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_QR_OUTPUT = value
				Me.SendPropertyChanged("IMAGE_QR_OUTPUT")
				Me.OnIMAGE_QR_OUTPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_FORMAT", DbType:="NVarChar(MAX)")>  _
	Public Property CER_FORMAT() As String
		Get
			Return Me._CER_FORMAT
		End Get
		Set
			If (String.Equals(Me._CER_FORMAT, value) = false) Then
				Me.OnCER_FORMATChanging(value)
				Me.SendPropertyChanging
				Me._CER_FORMAT = value
				Me.SendPropertyChanged("CER_FORMAT")
				Me.OnCER_FORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PICS_NAT_ALPHA3", DbType:="NVarChar(50)")>  _
	Public Property PICS_NAT_ALPHA3() As String
		Get
			Return Me._PICS_NAT_ALPHA3
		End Get
		Set
			If (String.Equals(Me._PICS_NAT_ALPHA3, value) = false) Then
				Me.OnPICS_NAT_ALPHA3Changing(value)
				Me.SendPropertyChanging
				Me._PICS_NAT_ALPHA3 = value
				Me.SendPropertyChanged("PICS_NAT_ALPHA3")
				Me.OnPICS_NAT_ALPHA3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PO_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property PO_OTHER() As String
		Get
			Return Me._PO_OTHER
		End Get
		Set
			If (String.Equals(Me._PO_OTHER, value) = false) Then
				Me.OnPO_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._PO_OTHER = value
				Me.SendPropertyChanged("PO_OTHER")
				Me.OnPO_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOBILE", DbType:="NVarChar(MAX)")>  _
	Public Property MOBILE() As String
		Get
			Return Me._MOBILE
		End Get
		Set
			If (String.Equals(Me._MOBILE, value) = false) Then
				Me.OnMOBILEChanging(value)
				Me.SendPropertyChanging
				Me._MOBILE = value
				Me.SendPropertyChanged("MOBILE")
				Me.OnMOBILEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_TR_ID", DbType:="NVarChar(MAX)")>  _
	Public Property OLD_TR_ID() As String
		Get
			Return Me._OLD_TR_ID
		End Get
		Set
			If (String.Equals(Me._OLD_TR_ID, value) = false) Then
				Me.OnOLD_TR_IDChanging(value)
				Me.SendPropertyChanging
				Me._OLD_TR_ID = value
				Me.SendPropertyChanged("OLD_TR_ID")
				Me.OnOLD_TR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_DATE
		End Get
		Set
			If (Me._REQUEST_DATE.Equals(value) = false) Then
				Me.OnREQUEST_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_DATE = value
				Me.SendPropertyChanged("REQUEST_DATE")
				Me.OnREQUEST_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_AT() As String
		Get
			Return Me._WRITE_AT
		End Get
		Set
			If (String.Equals(Me._WRITE_AT, value) = false) Then
				Me.OnWRITE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_AT = value
				Me.SendPropertyChanged("WRITE_AT")
				Me.OnWRITE_ATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_DATE", DbType:="DateTime")>  _
	Public Property WRITE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._WRITE_DATE
		End Get
		Set
			If (Me._WRITE_DATE.Equals(value) = false) Then
				Me.OnWRITE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_DATE = value
				Me.SendPropertyChanged("WRITE_DATE")
				Me.OnWRITE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_THAIFULLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property THAIFULLNAME() As String
		Get
			Return Me._THAIFULLNAME
		End Get
		Set
			If (String.Equals(Me._THAIFULLNAME, value) = false) Then
				Me.OnTHAIFULLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._THAIFULLNAME = value
				Me.SendPropertyChanged("THAIFULLNAME")
				Me.OnTHAIFULLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL", DbType:="NVarChar(MAX)")>  _
	Public Property TEL() As String
		Get
			Return Me._TEL
		End Get
		Set
			If (String.Equals(Me._TEL, value) = false) Then
				Me.OnTELChanging(value)
				Me.SendPropertyChanging
				Me._TEL = value
				Me.SendPropertyChanged("TEL")
				Me.OnTELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOBILE2", DbType:="NVarChar(MAX)")>  _
	Public Property MOBILE2() As String
		Get
			Return Me._MOBILE2
		End Get
		Set
			If (String.Equals(Me._MOBILE2, value) = false) Then
				Me.OnMOBILE2Changing(value)
				Me.SendPropertyChanging
				Me._MOBILE2 = value
				Me.SendPropertyChanged("MOBILE2")
				Me.OnMOBILE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL2", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL2() As String
		Get
			Return Me._EMAIL2
		End Get
		Set
			If (String.Equals(Me._EMAIL2, value) = false) Then
				Me.OnEMAIL2Changing(value)
				Me.SendPropertyChanging
				Me._EMAIL2 = value
				Me.SendPropertyChanged("EMAIL2")
				Me.OnEMAIL2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_UNIT_CONTAIN")>  _
Partial Public Class MAS_UNIT_CONTAIN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _unitcd As String
	
	Private _unitnm As String
	
	Private _unitcd2 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnunitcdChanging(value As String)
    End Sub
    Partial Private Sub OnunitcdChanged()
    End Sub
    Partial Private Sub OnunitnmChanging(value As String)
    End Sub
    Partial Private Sub OnunitnmChanged()
    End Sub
    Partial Private Sub Onunitcd2Changing(value As String)
    End Sub
    Partial Private Sub Onunitcd2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitcd", DbType:="NVarChar(50)")>  _
	Public Property unitcd() As String
		Get
			Return Me._unitcd
		End Get
		Set
			If (String.Equals(Me._unitcd, value) = false) Then
				Me.OnunitcdChanging(value)
				Me.SendPropertyChanging
				Me._unitcd = value
				Me.SendPropertyChanged("unitcd")
				Me.OnunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitnm", DbType:="NVarChar(MAX)")>  _
	Public Property unitnm() As String
		Get
			Return Me._unitnm
		End Get
		Set
			If (String.Equals(Me._unitnm, value) = false) Then
				Me.OnunitnmChanging(value)
				Me.SendPropertyChanging
				Me._unitnm = value
				Me.SendPropertyChanged("unitnm")
				Me.OnunitnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitcd2", DbType:="NVarChar(50)")>  _
	Public Property unitcd2() As String
		Get
			Return Me._unitcd2
		End Get
		Set
			If (String.Equals(Me._unitcd2, value) = false) Then
				Me.Onunitcd2Changing(value)
				Me.SendPropertyChanging
				Me._unitcd2 = value
				Me.SendPropertyChanged("unitcd2")
				Me.Onunitcd2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EDT_COUNT")>  _
Partial Public Class EDT_COUNT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _RQT_TYPE As System.Nullable(Of Integer)
	
	Private _EDIT_COUNT As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _COUNT_DATE As System.Nullable(Of Date)
	
	Private _IDEN_INSERT As String
	
	Private _RCVNO_T As String
	
	Private _REMARK As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnRQT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRQT_TYPEChanged()
    End Sub
    Partial Private Sub OnEDIT_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEDIT_COUNTChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnCOUNT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCOUNT_DATEChanged()
    End Sub
    Partial Private Sub OnIDEN_INSERTChanging(value As String)
    End Sub
    Partial Private Sub OnIDEN_INSERTChanged()
    End Sub
    Partial Private Sub OnRCVNO_TChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_TChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RQT_TYPE", DbType:="Int")>  _
	Public Property RQT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._RQT_TYPE
		End Get
		Set
			If (Me._RQT_TYPE.Equals(value) = false) Then
				Me.OnRQT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._RQT_TYPE = value
				Me.SendPropertyChanged("RQT_TYPE")
				Me.OnRQT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_COUNT", DbType:="Int")>  _
	Public Property EDIT_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._EDIT_COUNT
		End Get
		Set
			If (Me._EDIT_COUNT.Equals(value) = false) Then
				Me.OnEDIT_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_COUNT = value
				Me.SendPropertyChanged("EDIT_COUNT")
				Me.OnEDIT_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNT_DATE", DbType:="DateTime")>  _
	Public Property COUNT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._COUNT_DATE
		End Get
		Set
			If (Me._COUNT_DATE.Equals(value) = false) Then
				Me.OnCOUNT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._COUNT_DATE = value
				Me.SendPropertyChanged("COUNT_DATE")
				Me.OnCOUNT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDEN_INSERT", DbType:="NVarChar(MAX)")>  _
	Public Property IDEN_INSERT() As String
		Get
			Return Me._IDEN_INSERT
		End Get
		Set
			If (String.Equals(Me._IDEN_INSERT, value) = false) Then
				Me.OnIDEN_INSERTChanging(value)
				Me.SendPropertyChanging
				Me._IDEN_INSERT = value
				Me.SendPropertyChanged("IDEN_INSERT")
				Me.OnIDEN_INSERTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_T", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_T() As String
		Get
			Return Me._RCVNO_T
		End Get
		Set
			If (String.Equals(Me._RCVNO_T, value) = false) Then
				Me.OnRCVNO_TChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_T = value
				Me.SendPropertyChanged("RCVNO_T")
				Me.OnRCVNO_TChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_PRODUCT_ID")>  _
Partial Public Class DRUG_PRODUCT_ID
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TRADE_NAME As String
	
	Private _TRADE_NAME_ENG As String
	
	Private _PVNCD As System.Nullable(Of Integer)
	
	Private _RCVNO As System.Nullable(Of Integer)
	
	Private _RCVDATE As System.Nullable(Of Date)
	
	Private _LCNNO As String
	
	Private _LCNNODATE As System.Nullable(Of Date)
	
	Private _LCNSID As System.Nullable(Of Integer)
	
	Private _STRENGTH_DRUG As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _RCVNO_DISPLAY As String
	
	Private _TRANSECTION_ID_UPLOAD As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _CITIZEN_ID_AUTHORIZE As String
	
	Private _CITIZEN_ID_UPLOAD As String
	
	Private _RCVDATE_DISPLAY As String
	
	Private _LCNNO_DISPLAY As String
	
	Private _IDENTIFY As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _APPDATE As System.Nullable(Of Date)
	
	Private _IOWACD As System.Nullable(Of Integer)
	
	Private _ctgcd As System.Nullable(Of Integer)
	
	Private _DRUG_NAME_OR_CODE As String
	
	Private _TERM_TO_USE As String
	
	Private _NATIONAL_TYPE As System.Nullable(Of Integer)
	
	Private _HEAD_PRODUCT_IDA As System.Nullable(Of Integer)
	
	Private _IS_BE As System.Nullable(Of Boolean)
	
	Private _LINK_TYPE As System.Nullable(Of Integer)
	
	Private _PHYSIC_UNIT As System.Nullable(Of Integer)
	
	Private _BIO_PACK As System.Nullable(Of Integer)
	
	Private _BIO_UNIT As System.Nullable(Of Integer)
	
	Private _IS_BIO As System.Nullable(Of Boolean)
	
	Private _REMARK As String
	
	Private _CANCEL_STATUS As System.Nullable(Of Integer)
	
	Private _CANCEL_DATE As System.Nullable(Of Date)
	
	Private _DRUG_NATURE As String
	
	Private _LCN_IDA As System.Nullable(Of Integer)
	
	Private _CANCEL_TYPE As System.Nullable(Of Integer)
	
	Private _REJECT_REMARK As String
	
	Private _ACTIVE As System.Nullable(Of Integer)
	
	Private _NON_ACTIVE_DATE As System.Nullable(Of Date)
	
	Private _PJSUM_IDA As System.Nullable(Of Integer)
	
	Private _pj_othernm As String
	
	Private _pj_washoutperiod As String
	
	Private _pj_drugtypecd As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTRADE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTRADE_NAMEChanged()
    End Sub
    Partial Private Sub OnTRADE_NAME_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnTRADE_NAME_ENGChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnRCVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCVDATEChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnLCNNODATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLCNNODATEChanged()
    End Sub
    Partial Private Sub OnLCNSIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCNSIDChanged()
    End Sub
    Partial Private Sub OnSTRENGTH_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnSTRENGTH_DRUGChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnTRANSECTION_ID_UPLOADChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRANSECTION_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanged()
    End Sub
    Partial Private Sub OnLCNNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnAPPDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAPPDATEChanged()
    End Sub
    Partial Private Sub OnIOWACDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIOWACDChanged()
    End Sub
    Partial Private Sub OnctgcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnctgcdChanged()
    End Sub
    Partial Private Sub OnDRUG_NAME_OR_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NAME_OR_CODEChanged()
    End Sub
    Partial Private Sub OnTERM_TO_USEChanging(value As String)
    End Sub
    Partial Private Sub OnTERM_TO_USEChanged()
    End Sub
    Partial Private Sub OnNATIONAL_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNATIONAL_TYPEChanged()
    End Sub
    Partial Private Sub OnHEAD_PRODUCT_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEAD_PRODUCT_IDAChanged()
    End Sub
    Partial Private Sub OnIS_BEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_BEChanged()
    End Sub
    Partial Private Sub OnLINK_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLINK_TYPEChanged()
    End Sub
    Partial Private Sub OnPHYSIC_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPHYSIC_UNITChanged()
    End Sub
    Partial Private Sub OnBIO_PACKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBIO_PACKChanged()
    End Sub
    Partial Private Sub OnBIO_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBIO_UNITChanged()
    End Sub
    Partial Private Sub OnIS_BIOChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_BIOChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnCANCEL_STATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCANCEL_STATUSChanged()
    End Sub
    Partial Private Sub OnCANCEL_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCANCEL_DATEChanged()
    End Sub
    Partial Private Sub OnDRUG_NATUREChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NATUREChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnCANCEL_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCANCEL_TYPEChanged()
    End Sub
    Partial Private Sub OnREJECT_REMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREJECT_REMARKChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    Partial Private Sub OnNON_ACTIVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnNON_ACTIVE_DATEChanged()
    End Sub
    Partial Private Sub OnPJSUM_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPJSUM_IDAChanged()
    End Sub
    Partial Private Sub Onpj_othernmChanging(value As String)
    End Sub
    Partial Private Sub Onpj_othernmChanged()
    End Sub
    Partial Private Sub Onpj_washoutperiodChanging(value As String)
    End Sub
    Partial Private Sub Onpj_washoutperiodChanged()
    End Sub
    Partial Private Sub Onpj_drugtypecdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpj_drugtypecdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRADE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TRADE_NAME() As String
		Get
			Return Me._TRADE_NAME
		End Get
		Set
			If (String.Equals(Me._TRADE_NAME, value) = false) Then
				Me.OnTRADE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TRADE_NAME = value
				Me.SendPropertyChanged("TRADE_NAME")
				Me.OnTRADE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRADE_NAME_ENG", DbType:="NVarChar(MAX)")>  _
	Public Property TRADE_NAME_ENG() As String
		Get
			Return Me._TRADE_NAME_ENG
		End Get
		Set
			If (String.Equals(Me._TRADE_NAME_ENG, value) = false) Then
				Me.OnTRADE_NAME_ENGChanging(value)
				Me.SendPropertyChanging
				Me._TRADE_NAME_ENG = value
				Me.SendPropertyChanged("TRADE_NAME_ENG")
				Me.OnTRADE_NAME_ENGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="Int")>  _
	Public Property PVNCD() As System.Nullable(Of Integer)
		Get
			Return Me._PVNCD
		End Get
		Set
			If (Me._PVNCD.Equals(value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="Int")>  _
	Public Property RCVNO() As System.Nullable(Of Integer)
		Get
			Return Me._RCVNO
		End Get
		Set
			If (Me._RCVNO.Equals(value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE", DbType:="DateTime")>  _
	Public Property RCVDATE() As System.Nullable(Of Date)
		Get
			Return Me._RCVDATE
		End Get
		Set
			If (Me._RCVDATE.Equals(value) = false) Then
				Me.OnRCVDATEChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE = value
				Me.SendPropertyChanged("RCVDATE")
				Me.OnRCVDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(MAX)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNODATE", DbType:="DateTime")>  _
	Public Property LCNNODATE() As System.Nullable(Of Date)
		Get
			Return Me._LCNNODATE
		End Get
		Set
			If (Me._LCNNODATE.Equals(value) = false) Then
				Me.OnLCNNODATEChanging(value)
				Me.SendPropertyChanging
				Me._LCNNODATE = value
				Me.SendPropertyChanged("LCNNODATE")
				Me.OnLCNNODATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNSID", DbType:="Int")>  _
	Public Property LCNSID() As System.Nullable(Of Integer)
		Get
			Return Me._LCNSID
		End Get
		Set
			If (Me._LCNSID.Equals(value) = false) Then
				Me.OnLCNSIDChanging(value)
				Me.SendPropertyChanging
				Me._LCNSID = value
				Me.SendPropertyChanged("LCNSID")
				Me.OnLCNSIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STRENGTH_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property STRENGTH_DRUG() As String
		Get
			Return Me._STRENGTH_DRUG
		End Get
		Set
			If (String.Equals(Me._STRENGTH_DRUG, value) = false) Then
				Me.OnSTRENGTH_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._STRENGTH_DRUG = value
				Me.SendPropertyChanged("STRENGTH_DRUG")
				Me.OnSTRENGTH_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_DISPLAY() As String
		Get
			Return Me._RCVNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVNO_DISPLAY, value) = false) Then
				Me.OnRCVNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_DISPLAY = value
				Me.SendPropertyChanged("RCVNO_DISPLAY")
				Me.OnRCVNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSECTION_ID_UPLOAD", DbType:="Int")>  _
	Public Property TRANSECTION_ID_UPLOAD() As System.Nullable(Of Integer)
		Get
			Return Me._TRANSECTION_ID_UPLOAD
		End Get
		Set
			If (Me._TRANSECTION_ID_UPLOAD.Equals(value) = false) Then
				Me.OnTRANSECTION_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._TRANSECTION_ID_UPLOAD = value
				Me.SendPropertyChanged("TRANSECTION_ID_UPLOAD")
				Me.OnTRANSECTION_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_ID_AUTHORIZE")
				Me.OnCITIZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_UPLOAD", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID_UPLOAD() As String
		Get
			Return Me._CITIZEN_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_UPLOAD, value) = false) Then
				Me.OnCITIZEN_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_ID_UPLOAD")
				Me.OnCITIZEN_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVDATE_DISPLAY() As String
		Get
			Return Me._RCVDATE_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVDATE_DISPLAY, value) = false) Then
				Me.OnRCVDATE_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE_DISPLAY = value
				Me.SendPropertyChanged("RCVDATE_DISPLAY")
				Me.OnRCVDATE_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property LCNNO_DISPLAY() As String
		Get
			Return Me._LCNNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._LCNNO_DISPLAY, value) = false) Then
				Me.OnLCNNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO_DISPLAY = value
				Me.SendPropertyChanged("LCNNO_DISPLAY")
				Me.OnLCNNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(50)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPDATE", DbType:="DateTime")>  _
	Public Property APPDATE() As System.Nullable(Of Date)
		Get
			Return Me._APPDATE
		End Get
		Set
			If (Me._APPDATE.Equals(value) = false) Then
				Me.OnAPPDATEChanging(value)
				Me.SendPropertyChanging
				Me._APPDATE = value
				Me.SendPropertyChanged("APPDATE")
				Me.OnAPPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWACD", DbType:="Int")>  _
	Public Property IOWACD() As System.Nullable(Of Integer)
		Get
			Return Me._IOWACD
		End Get
		Set
			If (Me._IOWACD.Equals(value) = false) Then
				Me.OnIOWACDChanging(value)
				Me.SendPropertyChanging
				Me._IOWACD = value
				Me.SendPropertyChanged("IOWACD")
				Me.OnIOWACDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctgcd", DbType:="Int")>  _
	Public Property ctgcd() As System.Nullable(Of Integer)
		Get
			Return Me._ctgcd
		End Get
		Set
			If (Me._ctgcd.Equals(value) = false) Then
				Me.OnctgcdChanging(value)
				Me.SendPropertyChanging
				Me._ctgcd = value
				Me.SendPropertyChanged("ctgcd")
				Me.OnctgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NAME_OR_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NAME_OR_CODE() As String
		Get
			Return Me._DRUG_NAME_OR_CODE
		End Get
		Set
			If (String.Equals(Me._DRUG_NAME_OR_CODE, value) = false) Then
				Me.OnDRUG_NAME_OR_CODEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NAME_OR_CODE = value
				Me.SendPropertyChanged("DRUG_NAME_OR_CODE")
				Me.OnDRUG_NAME_OR_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TERM_TO_USE", DbType:="NVarChar(MAX)")>  _
	Public Property TERM_TO_USE() As String
		Get
			Return Me._TERM_TO_USE
		End Get
		Set
			If (String.Equals(Me._TERM_TO_USE, value) = false) Then
				Me.OnTERM_TO_USEChanging(value)
				Me.SendPropertyChanging
				Me._TERM_TO_USE = value
				Me.SendPropertyChanged("TERM_TO_USE")
				Me.OnTERM_TO_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATIONAL_TYPE", DbType:="Int")>  _
	Public Property NATIONAL_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._NATIONAL_TYPE
		End Get
		Set
			If (Me._NATIONAL_TYPE.Equals(value) = false) Then
				Me.OnNATIONAL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._NATIONAL_TYPE = value
				Me.SendPropertyChanged("NATIONAL_TYPE")
				Me.OnNATIONAL_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_PRODUCT_IDA", DbType:="Int")>  _
	Public Property HEAD_PRODUCT_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_PRODUCT_IDA
		End Get
		Set
			If (Me._HEAD_PRODUCT_IDA.Equals(value) = false) Then
				Me.OnHEAD_PRODUCT_IDAChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_PRODUCT_IDA = value
				Me.SendPropertyChanged("HEAD_PRODUCT_IDA")
				Me.OnHEAD_PRODUCT_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_BE", DbType:="Bit")>  _
	Public Property IS_BE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_BE
		End Get
		Set
			If (Me._IS_BE.Equals(value) = false) Then
				Me.OnIS_BEChanging(value)
				Me.SendPropertyChanging
				Me._IS_BE = value
				Me.SendPropertyChanged("IS_BE")
				Me.OnIS_BEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LINK_TYPE", DbType:="Int")>  _
	Public Property LINK_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._LINK_TYPE
		End Get
		Set
			If (Me._LINK_TYPE.Equals(value) = false) Then
				Me.OnLINK_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._LINK_TYPE = value
				Me.SendPropertyChanged("LINK_TYPE")
				Me.OnLINK_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHYSIC_UNIT", DbType:="Int")>  _
	Public Property PHYSIC_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._PHYSIC_UNIT
		End Get
		Set
			If (Me._PHYSIC_UNIT.Equals(value) = false) Then
				Me.OnPHYSIC_UNITChanging(value)
				Me.SendPropertyChanging
				Me._PHYSIC_UNIT = value
				Me.SendPropertyChanged("PHYSIC_UNIT")
				Me.OnPHYSIC_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIO_PACK", DbType:="Int")>  _
	Public Property BIO_PACK() As System.Nullable(Of Integer)
		Get
			Return Me._BIO_PACK
		End Get
		Set
			If (Me._BIO_PACK.Equals(value) = false) Then
				Me.OnBIO_PACKChanging(value)
				Me.SendPropertyChanging
				Me._BIO_PACK = value
				Me.SendPropertyChanged("BIO_PACK")
				Me.OnBIO_PACKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIO_UNIT", DbType:="Int")>  _
	Public Property BIO_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._BIO_UNIT
		End Get
		Set
			If (Me._BIO_UNIT.Equals(value) = false) Then
				Me.OnBIO_UNITChanging(value)
				Me.SendPropertyChanging
				Me._BIO_UNIT = value
				Me.SendPropertyChanged("BIO_UNIT")
				Me.OnBIO_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_BIO", DbType:="Bit")>  _
	Public Property IS_BIO() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_BIO
		End Get
		Set
			If (Me._IS_BIO.Equals(value) = false) Then
				Me.OnIS_BIOChanging(value)
				Me.SendPropertyChanging
				Me._IS_BIO = value
				Me.SendPropertyChanged("IS_BIO")
				Me.OnIS_BIOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CANCEL_STATUS", DbType:="Int")>  _
	Public Property CANCEL_STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._CANCEL_STATUS
		End Get
		Set
			If (Me._CANCEL_STATUS.Equals(value) = false) Then
				Me.OnCANCEL_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._CANCEL_STATUS = value
				Me.SendPropertyChanged("CANCEL_STATUS")
				Me.OnCANCEL_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CANCEL_DATE", DbType:="DateTime")>  _
	Public Property CANCEL_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CANCEL_DATE
		End Get
		Set
			If (Me._CANCEL_DATE.Equals(value) = false) Then
				Me.OnCANCEL_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CANCEL_DATE = value
				Me.SendPropertyChanged("CANCEL_DATE")
				Me.OnCANCEL_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NATURE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NATURE() As String
		Get
			Return Me._DRUG_NATURE
		End Get
		Set
			If (String.Equals(Me._DRUG_NATURE, value) = false) Then
				Me.OnDRUG_NATUREChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NATURE = value
				Me.SendPropertyChanged("DRUG_NATURE")
				Me.OnDRUG_NATUREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="Int")>  _
	Public Property LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (Me._LCN_IDA.Equals(value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CANCEL_TYPE", DbType:="Int")>  _
	Public Property CANCEL_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._CANCEL_TYPE
		End Get
		Set
			If (Me._CANCEL_TYPE.Equals(value) = false) Then
				Me.OnCANCEL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CANCEL_TYPE = value
				Me.SendPropertyChanged("CANCEL_TYPE")
				Me.OnCANCEL_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REJECT_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REJECT_REMARK() As String
		Get
			Return Me._REJECT_REMARK
		End Get
		Set
			If (String.Equals(Me._REJECT_REMARK, value) = false) Then
				Me.OnREJECT_REMARKChanging(value)
				Me.SendPropertyChanging
				Me._REJECT_REMARK = value
				Me.SendPropertyChanged("REJECT_REMARK")
				Me.OnREJECT_REMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="Int")>  _
	Public Property ACTIVE() As System.Nullable(Of Integer)
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (Me._ACTIVE.Equals(value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NON_ACTIVE_DATE", DbType:="DateTime")>  _
	Public Property NON_ACTIVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._NON_ACTIVE_DATE
		End Get
		Set
			If (Me._NON_ACTIVE_DATE.Equals(value) = false) Then
				Me.OnNON_ACTIVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._NON_ACTIVE_DATE = value
				Me.SendPropertyChanged("NON_ACTIVE_DATE")
				Me.OnNON_ACTIVE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PJSUM_IDA", DbType:="Int")>  _
	Public Property PJSUM_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._PJSUM_IDA
		End Get
		Set
			If (Me._PJSUM_IDA.Equals(value) = false) Then
				Me.OnPJSUM_IDAChanging(value)
				Me.SendPropertyChanging
				Me._PJSUM_IDA = value
				Me.SendPropertyChanged("PJSUM_IDA")
				Me.OnPJSUM_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pj_othernm", DbType:="NVarChar(MAX)")>  _
	Public Property pj_othernm() As String
		Get
			Return Me._pj_othernm
		End Get
		Set
			If (String.Equals(Me._pj_othernm, value) = false) Then
				Me.Onpj_othernmChanging(value)
				Me.SendPropertyChanging
				Me._pj_othernm = value
				Me.SendPropertyChanged("pj_othernm")
				Me.Onpj_othernmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pj_washoutperiod", DbType:="NVarChar(MAX)")>  _
	Public Property pj_washoutperiod() As String
		Get
			Return Me._pj_washoutperiod
		End Get
		Set
			If (String.Equals(Me._pj_washoutperiod, value) = false) Then
				Me.Onpj_washoutperiodChanging(value)
				Me.SendPropertyChanging
				Me._pj_washoutperiod = value
				Me.SendPropertyChanged("pj_washoutperiod")
				Me.Onpj_washoutperiodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pj_drugtypecd", DbType:="Int")>  _
	Public Property pj_drugtypecd() As System.Nullable(Of Integer)
		Get
			Return Me._pj_drugtypecd
		End Get
		Set
			If (Me._pj_drugtypecd.Equals(value) = false) Then
				Me.Onpj_drugtypecdChanging(value)
				Me.SendPropertyChanging
				Me._pj_drugtypecd = value
				Me.SendPropertyChanged("pj_drugtypecd")
				Me.Onpj_drugtypecdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_PROJECT_DRUG_ACTIVE_INGREDIENTS")>  _
Partial Public Class DRUG_PROJECT_DRUG_ACTIVE_INGREDIENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _IOWACD As String
	
	Private _IOWANM As String
	
	Private _UNIT_ID As System.Nullable(Of Integer)
	
	Private _UNIT_NM As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _DOSAGE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnIOWACDChanging(value As String)
    End Sub
    Partial Private Sub OnIOWACDChanged()
    End Sub
    Partial Private Sub OnIOWANMChanging(value As String)
    End Sub
    Partial Private Sub OnIOWANMChanged()
    End Sub
    Partial Private Sub OnUNIT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUNIT_IDChanged()
    End Sub
    Partial Private Sub OnUNIT_NMChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_NMChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnDOSAGEChanging(value As String)
    End Sub
    Partial Private Sub OnDOSAGEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWACD", DbType:="NVarChar(MAX)")>  _
	Public Property IOWACD() As String
		Get
			Return Me._IOWACD
		End Get
		Set
			If (String.Equals(Me._IOWACD, value) = false) Then
				Me.OnIOWACDChanging(value)
				Me.SendPropertyChanging
				Me._IOWACD = value
				Me.SendPropertyChanged("IOWACD")
				Me.OnIOWACDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWANM", DbType:="NVarChar(MAX)")>  _
	Public Property IOWANM() As String
		Get
			Return Me._IOWANM
		End Get
		Set
			If (String.Equals(Me._IOWANM, value) = false) Then
				Me.OnIOWANMChanging(value)
				Me.SendPropertyChanging
				Me._IOWANM = value
				Me.SendPropertyChanged("IOWANM")
				Me.OnIOWANMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_ID", DbType:="Int")>  _
	Public Property UNIT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._UNIT_ID
		End Get
		Set
			If (Me._UNIT_ID.Equals(value) = false) Then
				Me.OnUNIT_IDChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_ID = value
				Me.SendPropertyChanged("UNIT_ID")
				Me.OnUNIT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_NM", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_NM() As String
		Get
			Return Me._UNIT_NM
		End Get
		Set
			If (String.Equals(Me._UNIT_NM, value) = false) Then
				Me.OnUNIT_NMChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_NM = value
				Me.SendPropertyChanged("UNIT_NM")
				Me.OnUNIT_NMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOSAGE", DbType:="NVarChar(MAX)")>  _
	Public Property DOSAGE() As String
		Get
			Return Me._DOSAGE
		End Get
		Set
			If (String.Equals(Me._DOSAGE, value) = false) Then
				Me.OnDOSAGEChanging(value)
				Me.SendPropertyChanging
				Me._DOSAGE = value
				Me.SendPropertyChanged("DOSAGE")
				Me.OnDOSAGEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_ATC_DETAIL")>  _
Partial Public Class DRRGT_ATC_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As Integer
	
	Private _ATC_IDA As String
	
	Private _ATC_CODE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnATC_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnATC_IDAChanged()
    End Sub
    Partial Private Sub OnATC_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnATC_CODEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int NOT NULL")>  _
	Public Property FK_IDA() As Integer
		Get
			Return Me._FK_IDA
		End Get
		Set
			If ((Me._FK_IDA = value)  _
						= false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATC_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property ATC_IDA() As String
		Get
			Return Me._ATC_IDA
		End Get
		Set
			If (String.Equals(Me._ATC_IDA, value) = false) Then
				Me.OnATC_IDAChanging(value)
				Me.SendPropertyChanging
				Me._ATC_IDA = value
				Me.SendPropertyChanged("ATC_IDA")
				Me.OnATC_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATC_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property ATC_CODE() As String
		Get
			Return Me._ATC_CODE
		End Get
		Set
			If (String.Equals(Me._ATC_CODE, value) = false) Then
				Me.OnATC_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ATC_CODE = value
				Me.SendPropertyChanged("ATC_CODE")
				Me.OnATC_CODEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_PROPERTIES")>  _
Partial Public Class DRRGT_PROPERTy
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _CHK_DRUG_PROPERTIES As String
	
	Private _DRUG_PROPERTIES As String
	
	Private _CHK_DRUG_PROPERTIES_OTHER As String
	
	Private _DRUG_PROPERTIES_OTHER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnCHK_DRUG_PROPERTIESChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_DRUG_PROPERTIESChanged()
    End Sub
    Partial Private Sub OnDRUG_PROPERTIESChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_PROPERTIESChanged()
    End Sub
    Partial Private Sub OnCHK_DRUG_PROPERTIES_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_DRUG_PROPERTIES_OTHERChanged()
    End Sub
    Partial Private Sub OnDRUG_PROPERTIES_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_PROPERTIES_OTHERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_DRUG_PROPERTIES", DbType:="NVarChar(50)")>  _
	Public Property CHK_DRUG_PROPERTIES() As String
		Get
			Return Me._CHK_DRUG_PROPERTIES
		End Get
		Set
			If (String.Equals(Me._CHK_DRUG_PROPERTIES, value) = false) Then
				Me.OnCHK_DRUG_PROPERTIESChanging(value)
				Me.SendPropertyChanging
				Me._CHK_DRUG_PROPERTIES = value
				Me.SendPropertyChanged("CHK_DRUG_PROPERTIES")
				Me.OnCHK_DRUG_PROPERTIESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_PROPERTIES", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_PROPERTIES() As String
		Get
			Return Me._DRUG_PROPERTIES
		End Get
		Set
			If (String.Equals(Me._DRUG_PROPERTIES, value) = false) Then
				Me.OnDRUG_PROPERTIESChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_PROPERTIES = value
				Me.SendPropertyChanged("DRUG_PROPERTIES")
				Me.OnDRUG_PROPERTIESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_DRUG_PROPERTIES_OTHER", DbType:="NVarChar(50)")>  _
	Public Property CHK_DRUG_PROPERTIES_OTHER() As String
		Get
			Return Me._CHK_DRUG_PROPERTIES_OTHER
		End Get
		Set
			If (String.Equals(Me._CHK_DRUG_PROPERTIES_OTHER, value) = false) Then
				Me.OnCHK_DRUG_PROPERTIES_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._CHK_DRUG_PROPERTIES_OTHER = value
				Me.SendPropertyChanged("CHK_DRUG_PROPERTIES_OTHER")
				Me.OnCHK_DRUG_PROPERTIES_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_PROPERTIES_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_PROPERTIES_OTHER() As String
		Get
			Return Me._DRUG_PROPERTIES_OTHER
		End Get
		Set
			If (String.Equals(Me._DRUG_PROPERTIES_OTHER, value) = false) Then
				Me.OnDRUG_PROPERTIES_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_PROPERTIES_OTHER = value
				Me.SendPropertyChanged("DRUG_PROPERTIES_OTHER")
				Me.OnDRUG_PROPERTIES_OTHERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_PROJECT_RESEARCH_FACILITY")>  _
Partial Public Class DRUG_PROJECT_RESEARCH_FACILITY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PJ_IDA As System.Nullable(Of Integer)
	
	Private _placenm As String
	
	Private _volunteer_amount As String
	
	Private _main_research As String
	
	Private _addr As String
	
	Private _tel As String
	
	Private _email As String
	
	Private _taxno As String
	
	Private _houseno As String
	
	Private _latitude As System.Nullable(Of Decimal)
	
	Private _longtitude As System.Nullable(Of Decimal)
	
	Private _chngwtcd As System.Nullable(Of Integer)
	
	Private _chngwtnm As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPJ_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPJ_IDAChanged()
    End Sub
    Partial Private Sub OnplacenmChanging(value As String)
    End Sub
    Partial Private Sub OnplacenmChanged()
    End Sub
    Partial Private Sub Onvolunteer_amountChanging(value As String)
    End Sub
    Partial Private Sub Onvolunteer_amountChanged()
    End Sub
    Partial Private Sub Onmain_researchChanging(value As String)
    End Sub
    Partial Private Sub Onmain_researchChanged()
    End Sub
    Partial Private Sub OnaddrChanging(value As String)
    End Sub
    Partial Private Sub OnaddrChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnemailChanging(value As String)
    End Sub
    Partial Private Sub OnemailChanged()
    End Sub
    Partial Private Sub OntaxnoChanging(value As String)
    End Sub
    Partial Private Sub OntaxnoChanged()
    End Sub
    Partial Private Sub OnhousenoChanging(value As String)
    End Sub
    Partial Private Sub OnhousenoChanged()
    End Sub
    Partial Private Sub OnlatitudeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnlatitudeChanged()
    End Sub
    Partial Private Sub OnlongtitudeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnlongtitudeChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnchngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnchngwtnmChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PJ_IDA", DbType:="Int")>  _
	Public Property PJ_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._PJ_IDA
		End Get
		Set
			If (Me._PJ_IDA.Equals(value) = false) Then
				Me.OnPJ_IDAChanging(value)
				Me.SendPropertyChanging
				Me._PJ_IDA = value
				Me.SendPropertyChanged("PJ_IDA")
				Me.OnPJ_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_placenm", DbType:="NVarChar(MAX)")>  _
	Public Property placenm() As String
		Get
			Return Me._placenm
		End Get
		Set
			If (String.Equals(Me._placenm, value) = false) Then
				Me.OnplacenmChanging(value)
				Me.SendPropertyChanging
				Me._placenm = value
				Me.SendPropertyChanged("placenm")
				Me.OnplacenmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_volunteer_amount", DbType:="NVarChar(MAX)")>  _
	Public Property volunteer_amount() As String
		Get
			Return Me._volunteer_amount
		End Get
		Set
			If (String.Equals(Me._volunteer_amount, value) = false) Then
				Me.Onvolunteer_amountChanging(value)
				Me.SendPropertyChanging
				Me._volunteer_amount = value
				Me.SendPropertyChanged("volunteer_amount")
				Me.Onvolunteer_amountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_main_research", DbType:="NVarChar(MAX)")>  _
	Public Property main_research() As String
		Get
			Return Me._main_research
		End Get
		Set
			If (String.Equals(Me._main_research, value) = false) Then
				Me.Onmain_researchChanging(value)
				Me.SendPropertyChanging
				Me._main_research = value
				Me.SendPropertyChanged("main_research")
				Me.Onmain_researchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_addr", DbType:="NVarChar(MAX)")>  _
	Public Property addr() As String
		Get
			Return Me._addr
		End Get
		Set
			If (String.Equals(Me._addr, value) = false) Then
				Me.OnaddrChanging(value)
				Me.SendPropertyChanging
				Me._addr = value
				Me.SendPropertyChanged("addr")
				Me.OnaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="NVarChar(MAX)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_email", DbType:="NVarChar(MAX)")>  _
	Public Property email() As String
		Get
			Return Me._email
		End Get
		Set
			If (String.Equals(Me._email, value) = false) Then
				Me.OnemailChanging(value)
				Me.SendPropertyChanging
				Me._email = value
				Me.SendPropertyChanged("email")
				Me.OnemailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_taxno", DbType:="NVarChar(MAX)")>  _
	Public Property taxno() As String
		Get
			Return Me._taxno
		End Get
		Set
			If (String.Equals(Me._taxno, value) = false) Then
				Me.OntaxnoChanging(value)
				Me.SendPropertyChanging
				Me._taxno = value
				Me.SendPropertyChanged("taxno")
				Me.OntaxnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_houseno", DbType:="NVarChar(MAX)")>  _
	Public Property houseno() As String
		Get
			Return Me._houseno
		End Get
		Set
			If (String.Equals(Me._houseno, value) = false) Then
				Me.OnhousenoChanging(value)
				Me.SendPropertyChanging
				Me._houseno = value
				Me.SendPropertyChanged("houseno")
				Me.OnhousenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_latitude", DbType:="Decimal(18,10)")>  _
	Public Property latitude() As System.Nullable(Of Decimal)
		Get
			Return Me._latitude
		End Get
		Set
			If (Me._latitude.Equals(value) = false) Then
				Me.OnlatitudeChanging(value)
				Me.SendPropertyChanging
				Me._latitude = value
				Me.SendPropertyChanged("latitude")
				Me.OnlatitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_longtitude", DbType:="Decimal(18,10)")>  _
	Public Property longtitude() As System.Nullable(Of Decimal)
		Get
			Return Me._longtitude
		End Get
		Set
			If (Me._longtitude.Equals(value) = false) Then
				Me.OnlongtitudeChanging(value)
				Me.SendPropertyChanging
				Me._longtitude = value
				Me.SendPropertyChanged("longtitude")
				Me.OnlongtitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="Int")>  _
	Public Property chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (Me._chngwtcd.Equals(value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property chngwtnm() As String
		Get
			Return Me._chngwtnm
		End Get
		Set
			If (String.Equals(Me._chngwtnm, value) = false) Then
				Me.OnchngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._chngwtnm = value
				Me.SendPropertyChanged("chngwtnm")
				Me.OnchngwtnmChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_PROJECT_CLINICAL_LABORATORY")>  _
Partial Public Class DRUG_PROJECT_CLINICAL_LABORATORY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PJ_IDA As System.Nullable(Of Integer)
	
	Private _labnm As String
	
	Private _groupnm As String
	
	Private _addr As String
	
	Private _tel As String
	
	Private _email_website As String
	
	Private _countrycd As System.Nullable(Of Integer)
	
	Private _countrynm As String
	
	Private _chngwtcd As System.Nullable(Of Integer)
	
	Private _chngwtnm As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPJ_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPJ_IDAChanged()
    End Sub
    Partial Private Sub OnlabnmChanging(value As String)
    End Sub
    Partial Private Sub OnlabnmChanged()
    End Sub
    Partial Private Sub OngroupnmChanging(value As String)
    End Sub
    Partial Private Sub OngroupnmChanged()
    End Sub
    Partial Private Sub OnaddrChanging(value As String)
    End Sub
    Partial Private Sub OnaddrChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub Onemail_websiteChanging(value As String)
    End Sub
    Partial Private Sub Onemail_websiteChanged()
    End Sub
    Partial Private Sub OncountrycdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncountrycdChanged()
    End Sub
    Partial Private Sub OncountrynmChanging(value As String)
    End Sub
    Partial Private Sub OncountrynmChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnchngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnchngwtnmChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PJ_IDA", DbType:="Int")>  _
	Public Property PJ_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._PJ_IDA
		End Get
		Set
			If (Me._PJ_IDA.Equals(value) = false) Then
				Me.OnPJ_IDAChanging(value)
				Me.SendPropertyChanging
				Me._PJ_IDA = value
				Me.SendPropertyChanged("PJ_IDA")
				Me.OnPJ_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_labnm", DbType:="NVarChar(MAX)")>  _
	Public Property labnm() As String
		Get
			Return Me._labnm
		End Get
		Set
			If (String.Equals(Me._labnm, value) = false) Then
				Me.OnlabnmChanging(value)
				Me.SendPropertyChanging
				Me._labnm = value
				Me.SendPropertyChanged("labnm")
				Me.OnlabnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_groupnm", DbType:="NVarChar(MAX)")>  _
	Public Property groupnm() As String
		Get
			Return Me._groupnm
		End Get
		Set
			If (String.Equals(Me._groupnm, value) = false) Then
				Me.OngroupnmChanging(value)
				Me.SendPropertyChanging
				Me._groupnm = value
				Me.SendPropertyChanged("groupnm")
				Me.OngroupnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_addr", DbType:="NVarChar(MAX)")>  _
	Public Property addr() As String
		Get
			Return Me._addr
		End Get
		Set
			If (String.Equals(Me._addr, value) = false) Then
				Me.OnaddrChanging(value)
				Me.SendPropertyChanging
				Me._addr = value
				Me.SendPropertyChanged("addr")
				Me.OnaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="NVarChar(MAX)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_email_website", DbType:="NVarChar(MAX)")>  _
	Public Property email_website() As String
		Get
			Return Me._email_website
		End Get
		Set
			If (String.Equals(Me._email_website, value) = false) Then
				Me.Onemail_websiteChanging(value)
				Me.SendPropertyChanging
				Me._email_website = value
				Me.SendPropertyChanged("email_website")
				Me.Onemail_websiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_countrycd", DbType:="Int")>  _
	Public Property countrycd() As System.Nullable(Of Integer)
		Get
			Return Me._countrycd
		End Get
		Set
			If (Me._countrycd.Equals(value) = false) Then
				Me.OncountrycdChanging(value)
				Me.SendPropertyChanging
				Me._countrycd = value
				Me.SendPropertyChanged("countrycd")
				Me.OncountrycdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_countrynm", DbType:="NVarChar(MAX)")>  _
	Public Property countrynm() As String
		Get
			Return Me._countrynm
		End Get
		Set
			If (String.Equals(Me._countrynm, value) = false) Then
				Me.OncountrynmChanging(value)
				Me.SendPropertyChanging
				Me._countrynm = value
				Me.SendPropertyChanged("countrynm")
				Me.OncountrynmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="Int")>  _
	Public Property chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (Me._chngwtcd.Equals(value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property chngwtnm() As String
		Get
			Return Me._chngwtnm
		End Get
		Set
			If (String.Equals(Me._chngwtnm, value) = false) Then
				Me.OnchngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._chngwtnm = value
				Me.SendPropertyChanged("chngwtnm")
				Me.OnchngwtnmChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_PROJECT_SUMMARY_LOG")>  _
Partial Public Class DRUG_PROJECT_SUMMARY_LOG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PJSUM_IDA As System.Nullable(Of Integer)
	
	Private _modified_times As System.Nullable(Of Integer)
	
	Private _modified_date As System.Nullable(Of Date)
	
	Private _citizen_modified As String
	
	Private _th_spon_group As String
	
	Private _th_spon_addr As String
	
	Private _th_spon_tel As String
	
	Private _th_spon_email_website As String
	
	Private _for_spon_group As String
	
	Private _for_spon_addr As String
	
	Private _for_spon_tel As String
	
	Private _for_spon_email_website As String
	
	Private _monitor_type As System.Nullable(Of Integer)
	
	Private _monitor_group As String
	
	Private _monitor_addr As String
	
	Private _monitor_tel As String
	
	Private _monitor_email_website As String
	
	Private _PM_type As System.Nullable(Of Integer)
	
	Private _PM_group As String
	
	Private _PM_addr As String
	
	Private _PM_tel As String
	
	Private _PM_email_website As String
	
	Private _DM_type As System.Nullable(Of Integer)
	
	Private _DM_group As String
	
	Private _DM_addr As String
	
	Private _DM_tel As String
	
	Private _DM_email_website As String
	
	Private _thspons_taxno As String
	
	Private _forspons_taxno As String
	
	Private _monitor_taxno As String
	
	Private _pm_taxno As String
	
	Private _dm_taxno As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPJSUM_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPJSUM_IDAChanged()
    End Sub
    Partial Private Sub Onmodified_timesChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onmodified_timesChanged()
    End Sub
    Partial Private Sub Onmodified_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onmodified_dateChanged()
    End Sub
    Partial Private Sub Oncitizen_modifiedChanging(value As String)
    End Sub
    Partial Private Sub Oncitizen_modifiedChanged()
    End Sub
    Partial Private Sub Onth_spon_groupChanging(value As String)
    End Sub
    Partial Private Sub Onth_spon_groupChanged()
    End Sub
    Partial Private Sub Onth_spon_addrChanging(value As String)
    End Sub
    Partial Private Sub Onth_spon_addrChanged()
    End Sub
    Partial Private Sub Onth_spon_telChanging(value As String)
    End Sub
    Partial Private Sub Onth_spon_telChanged()
    End Sub
    Partial Private Sub Onth_spon_email_websiteChanging(value As String)
    End Sub
    Partial Private Sub Onth_spon_email_websiteChanged()
    End Sub
    Partial Private Sub Onfor_spon_groupChanging(value As String)
    End Sub
    Partial Private Sub Onfor_spon_groupChanged()
    End Sub
    Partial Private Sub Onfor_spon_addrChanging(value As String)
    End Sub
    Partial Private Sub Onfor_spon_addrChanged()
    End Sub
    Partial Private Sub Onfor_spon_telChanging(value As String)
    End Sub
    Partial Private Sub Onfor_spon_telChanged()
    End Sub
    Partial Private Sub Onfor_spon_email_websiteChanging(value As String)
    End Sub
    Partial Private Sub Onfor_spon_email_websiteChanged()
    End Sub
    Partial Private Sub Onmonitor_typeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onmonitor_typeChanged()
    End Sub
    Partial Private Sub Onmonitor_groupChanging(value As String)
    End Sub
    Partial Private Sub Onmonitor_groupChanged()
    End Sub
    Partial Private Sub Onmonitor_addrChanging(value As String)
    End Sub
    Partial Private Sub Onmonitor_addrChanged()
    End Sub
    Partial Private Sub Onmonitor_telChanging(value As String)
    End Sub
    Partial Private Sub Onmonitor_telChanged()
    End Sub
    Partial Private Sub Onmonitor_email_websiteChanging(value As String)
    End Sub
    Partial Private Sub Onmonitor_email_websiteChanged()
    End Sub
    Partial Private Sub OnPM_typeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPM_typeChanged()
    End Sub
    Partial Private Sub OnPM_groupChanging(value As String)
    End Sub
    Partial Private Sub OnPM_groupChanged()
    End Sub
    Partial Private Sub OnPM_addrChanging(value As String)
    End Sub
    Partial Private Sub OnPM_addrChanged()
    End Sub
    Partial Private Sub OnPM_telChanging(value As String)
    End Sub
    Partial Private Sub OnPM_telChanged()
    End Sub
    Partial Private Sub OnPM_email_websiteChanging(value As String)
    End Sub
    Partial Private Sub OnPM_email_websiteChanged()
    End Sub
    Partial Private Sub OnDM_typeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDM_typeChanged()
    End Sub
    Partial Private Sub OnDM_groupChanging(value As String)
    End Sub
    Partial Private Sub OnDM_groupChanged()
    End Sub
    Partial Private Sub OnDM_addrChanging(value As String)
    End Sub
    Partial Private Sub OnDM_addrChanged()
    End Sub
    Partial Private Sub OnDM_telChanging(value As String)
    End Sub
    Partial Private Sub OnDM_telChanged()
    End Sub
    Partial Private Sub OnDM_email_websiteChanging(value As String)
    End Sub
    Partial Private Sub OnDM_email_websiteChanged()
    End Sub
    Partial Private Sub Onthspons_taxnoChanging(value As String)
    End Sub
    Partial Private Sub Onthspons_taxnoChanged()
    End Sub
    Partial Private Sub Onforspons_taxnoChanging(value As String)
    End Sub
    Partial Private Sub Onforspons_taxnoChanged()
    End Sub
    Partial Private Sub Onmonitor_taxnoChanging(value As String)
    End Sub
    Partial Private Sub Onmonitor_taxnoChanged()
    End Sub
    Partial Private Sub Onpm_taxnoChanging(value As String)
    End Sub
    Partial Private Sub Onpm_taxnoChanged()
    End Sub
    Partial Private Sub Ondm_taxnoChanging(value As String)
    End Sub
    Partial Private Sub Ondm_taxnoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PJSUM_IDA", DbType:="Int")>  _
	Public Property PJSUM_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._PJSUM_IDA
		End Get
		Set
			If (Me._PJSUM_IDA.Equals(value) = false) Then
				Me.OnPJSUM_IDAChanging(value)
				Me.SendPropertyChanging
				Me._PJSUM_IDA = value
				Me.SendPropertyChanged("PJSUM_IDA")
				Me.OnPJSUM_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modified_times", DbType:="Int")>  _
	Public Property modified_times() As System.Nullable(Of Integer)
		Get
			Return Me._modified_times
		End Get
		Set
			If (Me._modified_times.Equals(value) = false) Then
				Me.Onmodified_timesChanging(value)
				Me.SendPropertyChanging
				Me._modified_times = value
				Me.SendPropertyChanged("modified_times")
				Me.Onmodified_timesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modified_date", DbType:="DateTime")>  _
	Public Property modified_date() As System.Nullable(Of Date)
		Get
			Return Me._modified_date
		End Get
		Set
			If (Me._modified_date.Equals(value) = false) Then
				Me.Onmodified_dateChanging(value)
				Me.SendPropertyChanging
				Me._modified_date = value
				Me.SendPropertyChanged("modified_date")
				Me.Onmodified_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_citizen_modified", DbType:="NVarChar(MAX)")>  _
	Public Property citizen_modified() As String
		Get
			Return Me._citizen_modified
		End Get
		Set
			If (String.Equals(Me._citizen_modified, value) = false) Then
				Me.Oncitizen_modifiedChanging(value)
				Me.SendPropertyChanging
				Me._citizen_modified = value
				Me.SendPropertyChanged("citizen_modified")
				Me.Oncitizen_modifiedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_th_spon_group", DbType:="NVarChar(MAX)")>  _
	Public Property th_spon_group() As String
		Get
			Return Me._th_spon_group
		End Get
		Set
			If (String.Equals(Me._th_spon_group, value) = false) Then
				Me.Onth_spon_groupChanging(value)
				Me.SendPropertyChanging
				Me._th_spon_group = value
				Me.SendPropertyChanged("th_spon_group")
				Me.Onth_spon_groupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_th_spon_addr", DbType:="NVarChar(MAX)")>  _
	Public Property th_spon_addr() As String
		Get
			Return Me._th_spon_addr
		End Get
		Set
			If (String.Equals(Me._th_spon_addr, value) = false) Then
				Me.Onth_spon_addrChanging(value)
				Me.SendPropertyChanging
				Me._th_spon_addr = value
				Me.SendPropertyChanged("th_spon_addr")
				Me.Onth_spon_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_th_spon_tel", DbType:="NVarChar(MAX)")>  _
	Public Property th_spon_tel() As String
		Get
			Return Me._th_spon_tel
		End Get
		Set
			If (String.Equals(Me._th_spon_tel, value) = false) Then
				Me.Onth_spon_telChanging(value)
				Me.SendPropertyChanging
				Me._th_spon_tel = value
				Me.SendPropertyChanged("th_spon_tel")
				Me.Onth_spon_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_th_spon_email_website", DbType:="NVarChar(MAX)")>  _
	Public Property th_spon_email_website() As String
		Get
			Return Me._th_spon_email_website
		End Get
		Set
			If (String.Equals(Me._th_spon_email_website, value) = false) Then
				Me.Onth_spon_email_websiteChanging(value)
				Me.SendPropertyChanging
				Me._th_spon_email_website = value
				Me.SendPropertyChanged("th_spon_email_website")
				Me.Onth_spon_email_websiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_for_spon_group", DbType:="NVarChar(MAX)")>  _
	Public Property for_spon_group() As String
		Get
			Return Me._for_spon_group
		End Get
		Set
			If (String.Equals(Me._for_spon_group, value) = false) Then
				Me.Onfor_spon_groupChanging(value)
				Me.SendPropertyChanging
				Me._for_spon_group = value
				Me.SendPropertyChanged("for_spon_group")
				Me.Onfor_spon_groupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_for_spon_addr", DbType:="NVarChar(MAX)")>  _
	Public Property for_spon_addr() As String
		Get
			Return Me._for_spon_addr
		End Get
		Set
			If (String.Equals(Me._for_spon_addr, value) = false) Then
				Me.Onfor_spon_addrChanging(value)
				Me.SendPropertyChanging
				Me._for_spon_addr = value
				Me.SendPropertyChanged("for_spon_addr")
				Me.Onfor_spon_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_for_spon_tel", DbType:="NVarChar(MAX)")>  _
	Public Property for_spon_tel() As String
		Get
			Return Me._for_spon_tel
		End Get
		Set
			If (String.Equals(Me._for_spon_tel, value) = false) Then
				Me.Onfor_spon_telChanging(value)
				Me.SendPropertyChanging
				Me._for_spon_tel = value
				Me.SendPropertyChanged("for_spon_tel")
				Me.Onfor_spon_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_for_spon_email_website", DbType:="NVarChar(MAX)")>  _
	Public Property for_spon_email_website() As String
		Get
			Return Me._for_spon_email_website
		End Get
		Set
			If (String.Equals(Me._for_spon_email_website, value) = false) Then
				Me.Onfor_spon_email_websiteChanging(value)
				Me.SendPropertyChanging
				Me._for_spon_email_website = value
				Me.SendPropertyChanged("for_spon_email_website")
				Me.Onfor_spon_email_websiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monitor_type", DbType:="Int")>  _
	Public Property monitor_type() As System.Nullable(Of Integer)
		Get
			Return Me._monitor_type
		End Get
		Set
			If (Me._monitor_type.Equals(value) = false) Then
				Me.Onmonitor_typeChanging(value)
				Me.SendPropertyChanging
				Me._monitor_type = value
				Me.SendPropertyChanged("monitor_type")
				Me.Onmonitor_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monitor_group", DbType:="NVarChar(MAX)")>  _
	Public Property monitor_group() As String
		Get
			Return Me._monitor_group
		End Get
		Set
			If (String.Equals(Me._monitor_group, value) = false) Then
				Me.Onmonitor_groupChanging(value)
				Me.SendPropertyChanging
				Me._monitor_group = value
				Me.SendPropertyChanged("monitor_group")
				Me.Onmonitor_groupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monitor_addr", DbType:="NVarChar(MAX)")>  _
	Public Property monitor_addr() As String
		Get
			Return Me._monitor_addr
		End Get
		Set
			If (String.Equals(Me._monitor_addr, value) = false) Then
				Me.Onmonitor_addrChanging(value)
				Me.SendPropertyChanging
				Me._monitor_addr = value
				Me.SendPropertyChanged("monitor_addr")
				Me.Onmonitor_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monitor_tel", DbType:="NVarChar(MAX)")>  _
	Public Property monitor_tel() As String
		Get
			Return Me._monitor_tel
		End Get
		Set
			If (String.Equals(Me._monitor_tel, value) = false) Then
				Me.Onmonitor_telChanging(value)
				Me.SendPropertyChanging
				Me._monitor_tel = value
				Me.SendPropertyChanged("monitor_tel")
				Me.Onmonitor_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monitor_email_website", DbType:="NVarChar(MAX)")>  _
	Public Property monitor_email_website() As String
		Get
			Return Me._monitor_email_website
		End Get
		Set
			If (String.Equals(Me._monitor_email_website, value) = false) Then
				Me.Onmonitor_email_websiteChanging(value)
				Me.SendPropertyChanging
				Me._monitor_email_website = value
				Me.SendPropertyChanged("monitor_email_website")
				Me.Onmonitor_email_websiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PM_type", DbType:="Int")>  _
	Public Property PM_type() As System.Nullable(Of Integer)
		Get
			Return Me._PM_type
		End Get
		Set
			If (Me._PM_type.Equals(value) = false) Then
				Me.OnPM_typeChanging(value)
				Me.SendPropertyChanging
				Me._PM_type = value
				Me.SendPropertyChanged("PM_type")
				Me.OnPM_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PM_group", DbType:="NVarChar(MAX)")>  _
	Public Property PM_group() As String
		Get
			Return Me._PM_group
		End Get
		Set
			If (String.Equals(Me._PM_group, value) = false) Then
				Me.OnPM_groupChanging(value)
				Me.SendPropertyChanging
				Me._PM_group = value
				Me.SendPropertyChanged("PM_group")
				Me.OnPM_groupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PM_addr", DbType:="NVarChar(MAX)")>  _
	Public Property PM_addr() As String
		Get
			Return Me._PM_addr
		End Get
		Set
			If (String.Equals(Me._PM_addr, value) = false) Then
				Me.OnPM_addrChanging(value)
				Me.SendPropertyChanging
				Me._PM_addr = value
				Me.SendPropertyChanged("PM_addr")
				Me.OnPM_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PM_tel", DbType:="NVarChar(MAX)")>  _
	Public Property PM_tel() As String
		Get
			Return Me._PM_tel
		End Get
		Set
			If (String.Equals(Me._PM_tel, value) = false) Then
				Me.OnPM_telChanging(value)
				Me.SendPropertyChanging
				Me._PM_tel = value
				Me.SendPropertyChanged("PM_tel")
				Me.OnPM_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PM_email_website", DbType:="NVarChar(MAX)")>  _
	Public Property PM_email_website() As String
		Get
			Return Me._PM_email_website
		End Get
		Set
			If (String.Equals(Me._PM_email_website, value) = false) Then
				Me.OnPM_email_websiteChanging(value)
				Me.SendPropertyChanging
				Me._PM_email_website = value
				Me.SendPropertyChanged("PM_email_website")
				Me.OnPM_email_websiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DM_type", DbType:="Int")>  _
	Public Property DM_type() As System.Nullable(Of Integer)
		Get
			Return Me._DM_type
		End Get
		Set
			If (Me._DM_type.Equals(value) = false) Then
				Me.OnDM_typeChanging(value)
				Me.SendPropertyChanging
				Me._DM_type = value
				Me.SendPropertyChanged("DM_type")
				Me.OnDM_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DM_group", DbType:="NVarChar(MAX)")>  _
	Public Property DM_group() As String
		Get
			Return Me._DM_group
		End Get
		Set
			If (String.Equals(Me._DM_group, value) = false) Then
				Me.OnDM_groupChanging(value)
				Me.SendPropertyChanging
				Me._DM_group = value
				Me.SendPropertyChanged("DM_group")
				Me.OnDM_groupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DM_addr", DbType:="NVarChar(MAX)")>  _
	Public Property DM_addr() As String
		Get
			Return Me._DM_addr
		End Get
		Set
			If (String.Equals(Me._DM_addr, value) = false) Then
				Me.OnDM_addrChanging(value)
				Me.SendPropertyChanging
				Me._DM_addr = value
				Me.SendPropertyChanged("DM_addr")
				Me.OnDM_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DM_tel", DbType:="NVarChar(MAX)")>  _
	Public Property DM_tel() As String
		Get
			Return Me._DM_tel
		End Get
		Set
			If (String.Equals(Me._DM_tel, value) = false) Then
				Me.OnDM_telChanging(value)
				Me.SendPropertyChanging
				Me._DM_tel = value
				Me.SendPropertyChanged("DM_tel")
				Me.OnDM_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DM_email_website", DbType:="NVarChar(MAX)")>  _
	Public Property DM_email_website() As String
		Get
			Return Me._DM_email_website
		End Get
		Set
			If (String.Equals(Me._DM_email_website, value) = false) Then
				Me.OnDM_email_websiteChanging(value)
				Me.SendPropertyChanging
				Me._DM_email_website = value
				Me.SendPropertyChanged("DM_email_website")
				Me.OnDM_email_websiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thspons_taxno", DbType:="NVarChar(MAX)")>  _
	Public Property thspons_taxno() As String
		Get
			Return Me._thspons_taxno
		End Get
		Set
			If (String.Equals(Me._thspons_taxno, value) = false) Then
				Me.Onthspons_taxnoChanging(value)
				Me.SendPropertyChanging
				Me._thspons_taxno = value
				Me.SendPropertyChanged("thspons_taxno")
				Me.Onthspons_taxnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_forspons_taxno", DbType:="NVarChar(MAX)")>  _
	Public Property forspons_taxno() As String
		Get
			Return Me._forspons_taxno
		End Get
		Set
			If (String.Equals(Me._forspons_taxno, value) = false) Then
				Me.Onforspons_taxnoChanging(value)
				Me.SendPropertyChanging
				Me._forspons_taxno = value
				Me.SendPropertyChanged("forspons_taxno")
				Me.Onforspons_taxnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monitor_taxno", DbType:="NVarChar(MAX)")>  _
	Public Property monitor_taxno() As String
		Get
			Return Me._monitor_taxno
		End Get
		Set
			If (String.Equals(Me._monitor_taxno, value) = false) Then
				Me.Onmonitor_taxnoChanging(value)
				Me.SendPropertyChanging
				Me._monitor_taxno = value
				Me.SendPropertyChanged("monitor_taxno")
				Me.Onmonitor_taxnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pm_taxno", DbType:="NVarChar(MAX)")>  _
	Public Property pm_taxno() As String
		Get
			Return Me._pm_taxno
		End Get
		Set
			If (String.Equals(Me._pm_taxno, value) = false) Then
				Me.Onpm_taxnoChanging(value)
				Me.SendPropertyChanging
				Me._pm_taxno = value
				Me.SendPropertyChanged("pm_taxno")
				Me.Onpm_taxnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dm_taxno", DbType:="NVarChar(MAX)")>  _
	Public Property dm_taxno() As String
		Get
			Return Me._dm_taxno
		End Get
		Set
			If (String.Equals(Me._dm_taxno, value) = false) Then
				Me.Ondm_taxnoChanging(value)
				Me.SendPropertyChanging
				Me._dm_taxno = value
				Me.SendPropertyChanged("dm_taxno")
				Me.Ondm_taxnoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_NORYORMOR1_IMPORT")>  _
Partial Public Class DRUG_NORYORMOR1_IMPORT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PJ_SUM As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TIMES As System.Nullable(Of Integer)
	
	Private _DRUG_NAME As String
	
	Private _IMP_AMOUNT As System.Nullable(Of Double)
	
	Private _IS_USED As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPJ_SUMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPJ_SUMChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTIMESChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTIMESChanged()
    End Sub
    Partial Private Sub OnDRUG_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NAMEChanged()
    End Sub
    Partial Private Sub OnIMP_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnIMP_AMOUNTChanged()
    End Sub
    Partial Private Sub OnIS_USEDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_USEDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PJ_SUM", DbType:="Int")>  _
	Public Property PJ_SUM() As System.Nullable(Of Integer)
		Get
			Return Me._PJ_SUM
		End Get
		Set
			If (Me._PJ_SUM.Equals(value) = false) Then
				Me.OnPJ_SUMChanging(value)
				Me.SendPropertyChanging
				Me._PJ_SUM = value
				Me.SendPropertyChanged("PJ_SUM")
				Me.OnPJ_SUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIMES", DbType:="Int")>  _
	Public Property TIMES() As System.Nullable(Of Integer)
		Get
			Return Me._TIMES
		End Get
		Set
			If (Me._TIMES.Equals(value) = false) Then
				Me.OnTIMESChanging(value)
				Me.SendPropertyChanging
				Me._TIMES = value
				Me.SendPropertyChanged("TIMES")
				Me.OnTIMESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NAME() As String
		Get
			Return Me._DRUG_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_NAME, value) = false) Then
				Me.OnDRUG_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NAME = value
				Me.SendPropertyChanged("DRUG_NAME")
				Me.OnDRUG_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMP_AMOUNT", DbType:="Float")>  _
	Public Property IMP_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._IMP_AMOUNT
		End Get
		Set
			If (Me._IMP_AMOUNT.Equals(value) = false) Then
				Me.OnIMP_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._IMP_AMOUNT = value
				Me.SendPropertyChanged("IMP_AMOUNT")
				Me.OnIMP_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_USED", DbType:="Bit")>  _
	Public Property IS_USED() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_USED
		End Get
		Set
			If (Me._IS_USED.Equals(value) = false) Then
				Me.OnIS_USEDChanging(value)
				Me.SendPropertyChanging
				Me._IS_USED = value
				Me.SendPropertyChanged("IS_USED")
				Me.OnIS_USEDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRSAMP_PACKAGE_DETAIL")>  _
Partial Public Class DRSAMP_PACKAGE_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _DRSAMP_IDA As System.Nullable(Of Integer)
	
	Private _MEDIUM_UNIT As System.Nullable(Of Integer)
	
	Private _SMALL_AMOUNT As System.Nullable(Of Double)
	
	Private _SMALL_UNIT As System.Nullable(Of Integer)
	
	Private _BIG_UNIT As System.Nullable(Of Integer)
	
	Private _MEDIUM_AMOUNT As System.Nullable(Of Double)
	
	Private _BARCODE As String
	
	Private _PACKAGE_NAME As String
	
	Private _CHECK_PACKAGE As System.Nullable(Of Boolean)
	
	Private _SUM As System.Nullable(Of Integer)
	
	Private _IM_QTY As System.Nullable(Of Integer)
	
	Private _IM_DETAIL As String
	
	Private _DATE_ADD As System.Nullable(Of Date)
	
	Private _order_id As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnDRSAMP_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRSAMP_IDAChanged()
    End Sub
    Partial Private Sub OnMEDIUM_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDIUM_UNITChanged()
    End Sub
    Partial Private Sub OnSMALL_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSMALL_AMOUNTChanged()
    End Sub
    Partial Private Sub OnSMALL_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSMALL_UNITChanged()
    End Sub
    Partial Private Sub OnBIG_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBIG_UNITChanged()
    End Sub
    Partial Private Sub OnMEDIUM_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMEDIUM_AMOUNTChanged()
    End Sub
    Partial Private Sub OnBARCODEChanging(value As String)
    End Sub
    Partial Private Sub OnBARCODEChanged()
    End Sub
    Partial Private Sub OnPACKAGE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPACKAGE_NAMEChanged()
    End Sub
    Partial Private Sub OnCHECK_PACKAGEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCHECK_PACKAGEChanged()
    End Sub
    Partial Private Sub OnSUMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUMChanged()
    End Sub
    Partial Private Sub OnIM_QTYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIM_QTYChanged()
    End Sub
    Partial Private Sub OnIM_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnIM_DETAILChanged()
    End Sub
    Partial Private Sub OnDATE_ADDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_ADDChanged()
    End Sub
    Partial Private Sub Onorder_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onorder_idChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRSAMP_IDA", DbType:="Int")>  _
	Public Property DRSAMP_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._DRSAMP_IDA
		End Get
		Set
			If (Me._DRSAMP_IDA.Equals(value) = false) Then
				Me.OnDRSAMP_IDAChanging(value)
				Me.SendPropertyChanging
				Me._DRSAMP_IDA = value
				Me.SendPropertyChanged("DRSAMP_IDA")
				Me.OnDRSAMP_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDIUM_UNIT", DbType:="Int")>  _
	Public Property MEDIUM_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._MEDIUM_UNIT
		End Get
		Set
			If (Me._MEDIUM_UNIT.Equals(value) = false) Then
				Me.OnMEDIUM_UNITChanging(value)
				Me.SendPropertyChanging
				Me._MEDIUM_UNIT = value
				Me.SendPropertyChanged("MEDIUM_UNIT")
				Me.OnMEDIUM_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_AMOUNT", DbType:="Float")>  _
	Public Property SMALL_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._SMALL_AMOUNT
		End Get
		Set
			If (Me._SMALL_AMOUNT.Equals(value) = false) Then
				Me.OnSMALL_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_AMOUNT = value
				Me.SendPropertyChanged("SMALL_AMOUNT")
				Me.OnSMALL_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_UNIT", DbType:="Int")>  _
	Public Property SMALL_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._SMALL_UNIT
		End Get
		Set
			If (Me._SMALL_UNIT.Equals(value) = false) Then
				Me.OnSMALL_UNITChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_UNIT = value
				Me.SendPropertyChanged("SMALL_UNIT")
				Me.OnSMALL_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIG_UNIT", DbType:="Int")>  _
	Public Property BIG_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._BIG_UNIT
		End Get
		Set
			If (Me._BIG_UNIT.Equals(value) = false) Then
				Me.OnBIG_UNITChanging(value)
				Me.SendPropertyChanging
				Me._BIG_UNIT = value
				Me.SendPropertyChanged("BIG_UNIT")
				Me.OnBIG_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDIUM_AMOUNT", DbType:="Float")>  _
	Public Property MEDIUM_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._MEDIUM_AMOUNT
		End Get
		Set
			If (Me._MEDIUM_AMOUNT.Equals(value) = false) Then
				Me.OnMEDIUM_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._MEDIUM_AMOUNT = value
				Me.SendPropertyChanged("MEDIUM_AMOUNT")
				Me.OnMEDIUM_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BARCODE", DbType:="NVarChar(MAX)")>  _
	Public Property BARCODE() As String
		Get
			Return Me._BARCODE
		End Get
		Set
			If (String.Equals(Me._BARCODE, value) = false) Then
				Me.OnBARCODEChanging(value)
				Me.SendPropertyChanging
				Me._BARCODE = value
				Me.SendPropertyChanged("BARCODE")
				Me.OnBARCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACKAGE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PACKAGE_NAME() As String
		Get
			Return Me._PACKAGE_NAME
		End Get
		Set
			If (String.Equals(Me._PACKAGE_NAME, value) = false) Then
				Me.OnPACKAGE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PACKAGE_NAME = value
				Me.SendPropertyChanged("PACKAGE_NAME")
				Me.OnPACKAGE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_PACKAGE", DbType:="Bit")>  _
	Public Property CHECK_PACKAGE() As System.Nullable(Of Boolean)
		Get
			Return Me._CHECK_PACKAGE
		End Get
		Set
			If (Me._CHECK_PACKAGE.Equals(value) = false) Then
				Me.OnCHECK_PACKAGEChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_PACKAGE = value
				Me.SendPropertyChanged("CHECK_PACKAGE")
				Me.OnCHECK_PACKAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUM", DbType:="Int")>  _
	Public Property SUM() As System.Nullable(Of Integer)
		Get
			Return Me._SUM
		End Get
		Set
			If (Me._SUM.Equals(value) = false) Then
				Me.OnSUMChanging(value)
				Me.SendPropertyChanging
				Me._SUM = value
				Me.SendPropertyChanged("SUM")
				Me.OnSUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IM_QTY", DbType:="Int")>  _
	Public Property IM_QTY() As System.Nullable(Of Integer)
		Get
			Return Me._IM_QTY
		End Get
		Set
			If (Me._IM_QTY.Equals(value) = false) Then
				Me.OnIM_QTYChanging(value)
				Me.SendPropertyChanging
				Me._IM_QTY = value
				Me.SendPropertyChanged("IM_QTY")
				Me.OnIM_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IM_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property IM_DETAIL() As String
		Get
			Return Me._IM_DETAIL
		End Get
		Set
			If (String.Equals(Me._IM_DETAIL, value) = false) Then
				Me.OnIM_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._IM_DETAIL = value
				Me.SendPropertyChanged("IM_DETAIL")
				Me.OnIM_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ADD", DbType:="Date")>  _
	Public Property DATE_ADD() As System.Nullable(Of Date)
		Get
			Return Me._DATE_ADD
		End Get
		Set
			If (Me._DATE_ADD.Equals(value) = false) Then
				Me.OnDATE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ADD = value
				Me.SendPropertyChanged("DATE_ADD")
				Me.OnDATE_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_order_id", DbType:="Int")>  _
	Public Property order_id() As System.Nullable(Of Integer)
		Get
			Return Me._order_id
		End Get
		Set
			If (Me._order_id.Equals(value) = false) Then
				Me.Onorder_idChanging(value)
				Me.SendPropertyChanging
				Me._order_id = value
				Me.SendPropertyChanged("order_id")
				Me.Onorder_idChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ADMIN_GROUP_BUTTON")>  _
Partial Public Class MAS_ADMIN_GROUP_BUTTON
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _GROUP_ID As System.Nullable(Of Integer)
	
	Private _GROUP_NAME As String
	
	Private _GROUP_USER As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnGROUP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_IDChanged()
    End Sub
    Partial Private Sub OnGROUP_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_NAMEChanged()
    End Sub
    Partial Private Sub OnGROUP_USERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_USERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_ID", DbType:="Int")>  _
	Public Property GROUP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_ID
		End Get
		Set
			If (Me._GROUP_ID.Equals(value) = false) Then
				Me.OnGROUP_IDChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_ID = value
				Me.SendPropertyChanged("GROUP_ID")
				Me.OnGROUP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property GROUP_NAME() As String
		Get
			Return Me._GROUP_NAME
		End Get
		Set
			If (String.Equals(Me._GROUP_NAME, value) = false) Then
				Me.OnGROUP_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_NAME = value
				Me.SendPropertyChanged("GROUP_NAME")
				Me.OnGROUP_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_USER", DbType:="Int")>  _
	Public Property GROUP_USER() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_USER
		End Get
		Set
			If (Me._GROUP_USER.Equals(value) = false) Then
				Me.OnGROUP_USERChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_USER = value
				Me.SendPropertyChanged("GROUP_USER")
				Me.OnGROUP_USERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_LOCATION_BSN")>  _
Partial Public Class DALCN_LOCATION_BSN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _OLD_IDA As String
	
	Private _LCN_IDA As String
	
	Private _BSN_PREFIXTHAICD As String
	
	Private _BSN_THAINAME As String
	
	Private _BSN_THAILASTNAME As String
	
	Private _BSN_THAIFULLNAME As String
	
	Private _BSN_PREFIXENGCD As String
	
	Private _BSN_ENGNAME As String
	
	Private _BSN_ENGLASTNAME As String
	
	Private _BSN_ENGFULLNAME As String
	
	Private _BSN_IDENTIFY As String
	
	Private _CHANGWAT_ID As String
	
	Private _AMPHR_ID As String
	
	Private _TUMBON_ID As String
	
	Private _BSN_ADDR As String
	
	Private _BSN_MOO As String
	
	Private _BSN_SOI As String
	
	Private _BSN_ROAD As String
	
	Private _BSN_FLOOR As String
	
	Private _BSN_BUILDING As String
	
	Private _BSN_TELEPHONE As String
	
	Private _BSN_ZIPCODE As String
	
	Private _BSN_FAX As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _FK_IDA As String
	
	Private _TR_ID As String
	
	Private _DOWN_ID As String
	
	Private _CITIZEN_ID As String
	
	Private _CITIZEN_ID_UPLOAD As String
	
	Private _XMLNAME As String
	
	Private _AGE As String
	
	Private _NATIONALITY As String
	
	Private _BSN_HOUSENO As String
	
	Private _BSN_ENGADDR As String
	
	Private _BSN_ENGMU As String
	
	Private _BSN_ENGSOI As String
	
	Private _BSN_ENGROAD As String
	
	Private _BSN_CHWNGNAME As String
	
	Private _BSN_AMPHR_NAME As String
	
	Private _BSN_THMBL_NAME As String
	
	Private _BSN_CHWNG_ENGNAME As String
	
	Private _BSN_AMPHR_ENGNAME As String
	
	Private _BSN_THMBL_ENGNAME As String
	
	Private _BSN_NATIONALITY_CD As String
	
	Private _BSN_Mobile As String
	
	Private _BSNID As String
	
	Private _BSNLCTCD As String
	
	Private _lcnsid As String
	
	Private _lctcd As String
	
	Private _BSNSCD As String
	
	Private _lcnscd As String
	
	Private _BSN_TEL As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnOLD_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnOLD_IDAChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnBSN_PREFIXTHAICDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_PREFIXTHAICDChanged()
    End Sub
    Partial Private Sub OnBSN_THAINAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THAINAMEChanged()
    End Sub
    Partial Private Sub OnBSN_THAILASTNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THAILASTNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_THAIFULLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THAIFULLNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_PREFIXENGCDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_PREFIXENGCDChanged()
    End Sub
    Partial Private Sub OnBSN_ENGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_ENGLASTNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGLASTNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_ENGFULLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGFULLNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnCHANGWAT_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCHANGWAT_IDChanged()
    End Sub
    Partial Private Sub OnAMPHR_IDChanging(value As String)
    End Sub
    Partial Private Sub OnAMPHR_IDChanged()
    End Sub
    Partial Private Sub OnTUMBON_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTUMBON_IDChanged()
    End Sub
    Partial Private Sub OnBSN_ADDRChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ADDRChanged()
    End Sub
    Partial Private Sub OnBSN_MOOChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_MOOChanged()
    End Sub
    Partial Private Sub OnBSN_SOIChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_SOIChanged()
    End Sub
    Partial Private Sub OnBSN_ROADChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ROADChanged()
    End Sub
    Partial Private Sub OnBSN_FLOORChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_FLOORChanged()
    End Sub
    Partial Private Sub OnBSN_BUILDINGChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_BUILDINGChanged()
    End Sub
    Partial Private Sub OnBSN_TELEPHONEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_TELEPHONEChanged()
    End Sub
    Partial Private Sub OnBSN_ZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ZIPCODEChanged()
    End Sub
    Partial Private Sub OnBSN_FAXChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_FAXChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnDOWN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnDOWN_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnXMLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnXMLNAMEChanged()
    End Sub
    Partial Private Sub OnAGEChanging(value As String)
    End Sub
    Partial Private Sub OnAGEChanged()
    End Sub
    Partial Private Sub OnNATIONALITYChanging(value As String)
    End Sub
    Partial Private Sub OnNATIONALITYChanged()
    End Sub
    Partial Private Sub OnBSN_HOUSENOChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_HOUSENOChanged()
    End Sub
    Partial Private Sub OnBSN_ENGADDRChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGADDRChanged()
    End Sub
    Partial Private Sub OnBSN_ENGMUChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGMUChanged()
    End Sub
    Partial Private Sub OnBSN_ENGSOIChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGSOIChanged()
    End Sub
    Partial Private Sub OnBSN_ENGROADChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGROADChanged()
    End Sub
    Partial Private Sub OnBSN_CHWNGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_CHWNGNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_AMPHR_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_AMPHR_NAMEChanged()
    End Sub
    Partial Private Sub OnBSN_THMBL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THMBL_NAMEChanged()
    End Sub
    Partial Private Sub OnBSN_CHWNG_ENGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_CHWNG_ENGNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_AMPHR_ENGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_AMPHR_ENGNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_THMBL_ENGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THMBL_ENGNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_NATIONALITY_CDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_NATIONALITY_CDChanged()
    End Sub
    Partial Private Sub OnBSN_MobileChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_MobileChanged()
    End Sub
    Partial Private Sub OnBSNIDChanging(value As String)
    End Sub
    Partial Private Sub OnBSNIDChanged()
    End Sub
    Partial Private Sub OnBSNLCTCDChanging(value As String)
    End Sub
    Partial Private Sub OnBSNLCTCDChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As String)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As String)
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnBSNSCDChanging(value As String)
    End Sub
    Partial Private Sub OnBSNSCDChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As String)
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnBSN_TELChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_TELChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property OLD_IDA() As String
		Get
			Return Me._OLD_IDA
		End Get
		Set
			If (String.Equals(Me._OLD_IDA, value) = false) Then
				Me.OnOLD_IDAChanging(value)
				Me.SendPropertyChanging
				Me._OLD_IDA = value
				Me.SendPropertyChanged("OLD_IDA")
				Me.OnOLD_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property LCN_IDA() As String
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (String.Equals(Me._LCN_IDA, value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_PREFIXTHAICD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_PREFIXTHAICD() As String
		Get
			Return Me._BSN_PREFIXTHAICD
		End Get
		Set
			If (String.Equals(Me._BSN_PREFIXTHAICD, value) = false) Then
				Me.OnBSN_PREFIXTHAICDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_PREFIXTHAICD = value
				Me.SendPropertyChanged("BSN_PREFIXTHAICD")
				Me.OnBSN_PREFIXTHAICDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THAINAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THAINAME() As String
		Get
			Return Me._BSN_THAINAME
		End Get
		Set
			If (String.Equals(Me._BSN_THAINAME, value) = false) Then
				Me.OnBSN_THAINAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THAINAME = value
				Me.SendPropertyChanged("BSN_THAINAME")
				Me.OnBSN_THAINAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THAILASTNAME", DbType:="VarChar(MAX)")>  _
	Public Property BSN_THAILASTNAME() As String
		Get
			Return Me._BSN_THAILASTNAME
		End Get
		Set
			If (String.Equals(Me._BSN_THAILASTNAME, value) = false) Then
				Me.OnBSN_THAILASTNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THAILASTNAME = value
				Me.SendPropertyChanged("BSN_THAILASTNAME")
				Me.OnBSN_THAILASTNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THAIFULLNAME", DbType:="VarChar(MAX)")>  _
	Public Property BSN_THAIFULLNAME() As String
		Get
			Return Me._BSN_THAIFULLNAME
		End Get
		Set
			If (String.Equals(Me._BSN_THAIFULLNAME, value) = false) Then
				Me.OnBSN_THAIFULLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THAIFULLNAME = value
				Me.SendPropertyChanged("BSN_THAIFULLNAME")
				Me.OnBSN_THAIFULLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_PREFIXENGCD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_PREFIXENGCD() As String
		Get
			Return Me._BSN_PREFIXENGCD
		End Get
		Set
			If (String.Equals(Me._BSN_PREFIXENGCD, value) = false) Then
				Me.OnBSN_PREFIXENGCDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_PREFIXENGCD = value
				Me.SendPropertyChanged("BSN_PREFIXENGCD")
				Me.OnBSN_PREFIXENGCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGNAME", DbType:="VarChar(MAX)")>  _
	Public Property BSN_ENGNAME() As String
		Get
			Return Me._BSN_ENGNAME
		End Get
		Set
			If (String.Equals(Me._BSN_ENGNAME, value) = false) Then
				Me.OnBSN_ENGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGNAME = value
				Me.SendPropertyChanged("BSN_ENGNAME")
				Me.OnBSN_ENGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGLASTNAME", DbType:="VarChar(MAX)")>  _
	Public Property BSN_ENGLASTNAME() As String
		Get
			Return Me._BSN_ENGLASTNAME
		End Get
		Set
			If (String.Equals(Me._BSN_ENGLASTNAME, value) = false) Then
				Me.OnBSN_ENGLASTNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGLASTNAME = value
				Me.SendPropertyChanged("BSN_ENGLASTNAME")
				Me.OnBSN_ENGLASTNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGFULLNAME", DbType:="VarChar(MAX)")>  _
	Public Property BSN_ENGFULLNAME() As String
		Get
			Return Me._BSN_ENGFULLNAME
		End Get
		Set
			If (String.Equals(Me._BSN_ENGFULLNAME, value) = false) Then
				Me.OnBSN_ENGFULLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGFULLNAME = value
				Me.SendPropertyChanged("BSN_ENGFULLNAME")
				Me.OnBSN_ENGFULLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_IDENTIFY() As String
		Get
			Return Me._BSN_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._BSN_IDENTIFY, value) = false) Then
				Me.OnBSN_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._BSN_IDENTIFY = value
				Me.SendPropertyChanged("BSN_IDENTIFY")
				Me.OnBSN_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHANGWAT_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CHANGWAT_ID() As String
		Get
			Return Me._CHANGWAT_ID
		End Get
		Set
			If (String.Equals(Me._CHANGWAT_ID, value) = false) Then
				Me.OnCHANGWAT_IDChanging(value)
				Me.SendPropertyChanging
				Me._CHANGWAT_ID = value
				Me.SendPropertyChanged("CHANGWAT_ID")
				Me.OnCHANGWAT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHR_ID", DbType:="NVarChar(MAX)")>  _
	Public Property AMPHR_ID() As String
		Get
			Return Me._AMPHR_ID
		End Get
		Set
			If (String.Equals(Me._AMPHR_ID, value) = false) Then
				Me.OnAMPHR_IDChanging(value)
				Me.SendPropertyChanging
				Me._AMPHR_ID = value
				Me.SendPropertyChanged("AMPHR_ID")
				Me.OnAMPHR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TUMBON_ID", DbType:="NVarChar(MAX)")>  _
	Public Property TUMBON_ID() As String
		Get
			Return Me._TUMBON_ID
		End Get
		Set
			If (String.Equals(Me._TUMBON_ID, value) = false) Then
				Me.OnTUMBON_IDChanging(value)
				Me.SendPropertyChanging
				Me._TUMBON_ID = value
				Me.SendPropertyChanged("TUMBON_ID")
				Me.OnTUMBON_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ADDR", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ADDR() As String
		Get
			Return Me._BSN_ADDR
		End Get
		Set
			If (String.Equals(Me._BSN_ADDR, value) = false) Then
				Me.OnBSN_ADDRChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ADDR = value
				Me.SendPropertyChanged("BSN_ADDR")
				Me.OnBSN_ADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_MOO", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_MOO() As String
		Get
			Return Me._BSN_MOO
		End Get
		Set
			If (String.Equals(Me._BSN_MOO, value) = false) Then
				Me.OnBSN_MOOChanging(value)
				Me.SendPropertyChanging
				Me._BSN_MOO = value
				Me.SendPropertyChanged("BSN_MOO")
				Me.OnBSN_MOOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_SOI", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_SOI() As String
		Get
			Return Me._BSN_SOI
		End Get
		Set
			If (String.Equals(Me._BSN_SOI, value) = false) Then
				Me.OnBSN_SOIChanging(value)
				Me.SendPropertyChanging
				Me._BSN_SOI = value
				Me.SendPropertyChanged("BSN_SOI")
				Me.OnBSN_SOIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ROAD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ROAD() As String
		Get
			Return Me._BSN_ROAD
		End Get
		Set
			If (String.Equals(Me._BSN_ROAD, value) = false) Then
				Me.OnBSN_ROADChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ROAD = value
				Me.SendPropertyChanged("BSN_ROAD")
				Me.OnBSN_ROADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_FLOOR", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_FLOOR() As String
		Get
			Return Me._BSN_FLOOR
		End Get
		Set
			If (String.Equals(Me._BSN_FLOOR, value) = false) Then
				Me.OnBSN_FLOORChanging(value)
				Me.SendPropertyChanging
				Me._BSN_FLOOR = value
				Me.SendPropertyChanged("BSN_FLOOR")
				Me.OnBSN_FLOORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_BUILDING", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_BUILDING() As String
		Get
			Return Me._BSN_BUILDING
		End Get
		Set
			If (String.Equals(Me._BSN_BUILDING, value) = false) Then
				Me.OnBSN_BUILDINGChanging(value)
				Me.SendPropertyChanging
				Me._BSN_BUILDING = value
				Me.SendPropertyChanged("BSN_BUILDING")
				Me.OnBSN_BUILDINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_TELEPHONE", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_TELEPHONE() As String
		Get
			Return Me._BSN_TELEPHONE
		End Get
		Set
			If (String.Equals(Me._BSN_TELEPHONE, value) = false) Then
				Me.OnBSN_TELEPHONEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_TELEPHONE = value
				Me.SendPropertyChanged("BSN_TELEPHONE")
				Me.OnBSN_TELEPHONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ZIPCODE", DbType:="VarChar(MAX)")>  _
	Public Property BSN_ZIPCODE() As String
		Get
			Return Me._BSN_ZIPCODE
		End Get
		Set
			If (String.Equals(Me._BSN_ZIPCODE, value) = false) Then
				Me.OnBSN_ZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ZIPCODE = value
				Me.SendPropertyChanged("BSN_ZIPCODE")
				Me.OnBSN_ZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_FAX", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_FAX() As String
		Get
			Return Me._BSN_FAX
		End Get
		Set
			If (String.Equals(Me._BSN_FAX, value) = false) Then
				Me.OnBSN_FAXChanging(value)
				Me.SendPropertyChanging
				Me._BSN_FAX = value
				Me.SendPropertyChanged("BSN_FAX")
				Me.OnBSN_FAXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="NVarChar(MAX)")>  _
	Public Property TR_ID() As String
		Get
			Return Me._TR_ID
		End Get
		Set
			If (String.Equals(Me._TR_ID, value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOWN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property DOWN_ID() As String
		Get
			Return Me._DOWN_ID
		End Get
		Set
			If (String.Equals(Me._DOWN_ID, value) = false) Then
				Me.OnDOWN_IDChanging(value)
				Me.SendPropertyChanging
				Me._DOWN_ID = value
				Me.SendPropertyChanged("DOWN_ID")
				Me.OnDOWN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_UPLOAD() As String
		Get
			Return Me._CITIZEN_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_UPLOAD, value) = false) Then
				Me.OnCITIZEN_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_ID_UPLOAD")
				Me.OnCITIZEN_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XMLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property XMLNAME() As String
		Get
			Return Me._XMLNAME
		End Get
		Set
			If (String.Equals(Me._XMLNAME, value) = false) Then
				Me.OnXMLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._XMLNAME = value
				Me.SendPropertyChanged("XMLNAME")
				Me.OnXMLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AGE", DbType:="VarChar(MAX)")>  _
	Public Property AGE() As String
		Get
			Return Me._AGE
		End Get
		Set
			If (String.Equals(Me._AGE, value) = false) Then
				Me.OnAGEChanging(value)
				Me.SendPropertyChanging
				Me._AGE = value
				Me.SendPropertyChanged("AGE")
				Me.OnAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATIONALITY", DbType:="VarChar(MAX)")>  _
	Public Property NATIONALITY() As String
		Get
			Return Me._NATIONALITY
		End Get
		Set
			If (String.Equals(Me._NATIONALITY, value) = false) Then
				Me.OnNATIONALITYChanging(value)
				Me.SendPropertyChanging
				Me._NATIONALITY = value
				Me.SendPropertyChanged("NATIONALITY")
				Me.OnNATIONALITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_HOUSENO", DbType:="VarChar(MAX)")>  _
	Public Property BSN_HOUSENO() As String
		Get
			Return Me._BSN_HOUSENO
		End Get
		Set
			If (String.Equals(Me._BSN_HOUSENO, value) = false) Then
				Me.OnBSN_HOUSENOChanging(value)
				Me.SendPropertyChanging
				Me._BSN_HOUSENO = value
				Me.SendPropertyChanged("BSN_HOUSENO")
				Me.OnBSN_HOUSENOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGADDR", DbType:="VarChar(MAX)")>  _
	Public Property BSN_ENGADDR() As String
		Get
			Return Me._BSN_ENGADDR
		End Get
		Set
			If (String.Equals(Me._BSN_ENGADDR, value) = false) Then
				Me.OnBSN_ENGADDRChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGADDR = value
				Me.SendPropertyChanged("BSN_ENGADDR")
				Me.OnBSN_ENGADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGMU", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGMU() As String
		Get
			Return Me._BSN_ENGMU
		End Get
		Set
			If (String.Equals(Me._BSN_ENGMU, value) = false) Then
				Me.OnBSN_ENGMUChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGMU = value
				Me.SendPropertyChanged("BSN_ENGMU")
				Me.OnBSN_ENGMUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGSOI", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGSOI() As String
		Get
			Return Me._BSN_ENGSOI
		End Get
		Set
			If (String.Equals(Me._BSN_ENGSOI, value) = false) Then
				Me.OnBSN_ENGSOIChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGSOI = value
				Me.SendPropertyChanged("BSN_ENGSOI")
				Me.OnBSN_ENGSOIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGROAD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGROAD() As String
		Get
			Return Me._BSN_ENGROAD
		End Get
		Set
			If (String.Equals(Me._BSN_ENGROAD, value) = false) Then
				Me.OnBSN_ENGROADChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGROAD = value
				Me.SendPropertyChanged("BSN_ENGROAD")
				Me.OnBSN_ENGROADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_CHWNGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_CHWNGNAME() As String
		Get
			Return Me._BSN_CHWNGNAME
		End Get
		Set
			If (String.Equals(Me._BSN_CHWNGNAME, value) = false) Then
				Me.OnBSN_CHWNGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_CHWNGNAME = value
				Me.SendPropertyChanged("BSN_CHWNGNAME")
				Me.OnBSN_CHWNGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_AMPHR_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_AMPHR_NAME() As String
		Get
			Return Me._BSN_AMPHR_NAME
		End Get
		Set
			If (String.Equals(Me._BSN_AMPHR_NAME, value) = false) Then
				Me.OnBSN_AMPHR_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_AMPHR_NAME = value
				Me.SendPropertyChanged("BSN_AMPHR_NAME")
				Me.OnBSN_AMPHR_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THMBL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THMBL_NAME() As String
		Get
			Return Me._BSN_THMBL_NAME
		End Get
		Set
			If (String.Equals(Me._BSN_THMBL_NAME, value) = false) Then
				Me.OnBSN_THMBL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THMBL_NAME = value
				Me.SendPropertyChanged("BSN_THMBL_NAME")
				Me.OnBSN_THMBL_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_CHWNG_ENGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_CHWNG_ENGNAME() As String
		Get
			Return Me._BSN_CHWNG_ENGNAME
		End Get
		Set
			If (String.Equals(Me._BSN_CHWNG_ENGNAME, value) = false) Then
				Me.OnBSN_CHWNG_ENGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_CHWNG_ENGNAME = value
				Me.SendPropertyChanged("BSN_CHWNG_ENGNAME")
				Me.OnBSN_CHWNG_ENGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_AMPHR_ENGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_AMPHR_ENGNAME() As String
		Get
			Return Me._BSN_AMPHR_ENGNAME
		End Get
		Set
			If (String.Equals(Me._BSN_AMPHR_ENGNAME, value) = false) Then
				Me.OnBSN_AMPHR_ENGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_AMPHR_ENGNAME = value
				Me.SendPropertyChanged("BSN_AMPHR_ENGNAME")
				Me.OnBSN_AMPHR_ENGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THMBL_ENGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THMBL_ENGNAME() As String
		Get
			Return Me._BSN_THMBL_ENGNAME
		End Get
		Set
			If (String.Equals(Me._BSN_THMBL_ENGNAME, value) = false) Then
				Me.OnBSN_THMBL_ENGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THMBL_ENGNAME = value
				Me.SendPropertyChanged("BSN_THMBL_ENGNAME")
				Me.OnBSN_THMBL_ENGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_NATIONALITY_CD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_NATIONALITY_CD() As String
		Get
			Return Me._BSN_NATIONALITY_CD
		End Get
		Set
			If (String.Equals(Me._BSN_NATIONALITY_CD, value) = false) Then
				Me.OnBSN_NATIONALITY_CDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_NATIONALITY_CD = value
				Me.SendPropertyChanged("BSN_NATIONALITY_CD")
				Me.OnBSN_NATIONALITY_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_Mobile", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_Mobile() As String
		Get
			Return Me._BSN_Mobile
		End Get
		Set
			If (String.Equals(Me._BSN_Mobile, value) = false) Then
				Me.OnBSN_MobileChanging(value)
				Me.SendPropertyChanging
				Me._BSN_Mobile = value
				Me.SendPropertyChanged("BSN_Mobile")
				Me.OnBSN_MobileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSNID", DbType:="NVarChar(MAX)")>  _
	Public Property BSNID() As String
		Get
			Return Me._BSNID
		End Get
		Set
			If (String.Equals(Me._BSNID, value) = false) Then
				Me.OnBSNIDChanging(value)
				Me.SendPropertyChanging
				Me._BSNID = value
				Me.SendPropertyChanged("BSNID")
				Me.OnBSNIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSNLCTCD", DbType:="NVarChar(MAX)")>  _
	Public Property BSNLCTCD() As String
		Get
			Return Me._BSNLCTCD
		End Get
		Set
			If (String.Equals(Me._BSNLCTCD, value) = false) Then
				Me.OnBSNLCTCDChanging(value)
				Me.SendPropertyChanging
				Me._BSNLCTCD = value
				Me.SendPropertyChanged("BSNLCTCD")
				Me.OnBSNLCTCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid() As String
		Get
			Return Me._lcnsid
		End Get
		Set
			If (String.Equals(Me._lcnsid, value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="NVarChar(MAX)")>  _
	Public Property lctcd() As String
		Get
			Return Me._lctcd
		End Get
		Set
			If (String.Equals(Me._lctcd, value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSNSCD", DbType:="NVarChar(MAX)")>  _
	Public Property BSNSCD() As String
		Get
			Return Me._BSNSCD
		End Get
		Set
			If (String.Equals(Me._BSNSCD, value) = false) Then
				Me.OnBSNSCDChanging(value)
				Me.SendPropertyChanging
				Me._BSNSCD = value
				Me.SendPropertyChanged("BSNSCD")
				Me.OnBSNSCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="NVarChar(MAX)")>  _
	Public Property lcnscd() As String
		Get
			Return Me._lcnscd
		End Get
		Set
			If (String.Equals(Me._lcnscd, value) = false) Then
				Me.OnlcnscdChanging(value)
				Me.SendPropertyChanging
				Me._lcnscd = value
				Me.SendPropertyChanged("lcnscd")
				Me.OnlcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_TEL", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_TEL() As String
		Get
			Return Me._BSN_TEL
		End Get
		Set
			If (String.Equals(Me._BSN_TEL, value) = false) Then
				Me.OnBSN_TELChanging(value)
				Me.SendPropertyChanging
				Me._BSN_TEL = value
				Me.SendPropertyChanged("BSN_TEL")
				Me.OnBSN_TELChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_EXPERT_COMMENT")>  _
Partial Public Class MAS_EXPERT_COMMENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _EXPERT_COMMENT As String
	
	Private _ACTIVE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnEXPERT_COMMENTChanging(value As String)
    End Sub
    Partial Private Sub OnEXPERT_COMMENTChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPERT_COMMENT", DbType:="NVarChar(MAX)")>  _
	Public Property EXPERT_COMMENT() As String
		Get
			Return Me._EXPERT_COMMENT
		End Get
		Set
			If (String.Equals(Me._EXPERT_COMMENT, value) = false) Then
				Me.OnEXPERT_COMMENTChanging(value)
				Me.SendPropertyChanging
				Me._EXPERT_COMMENT = value
				Me.SendPropertyChanged("EXPERT_COMMENT")
				Me.OnEXPERT_COMMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="Int")>  _
	Public Property ACTIVE() As System.Nullable(Of Integer)
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (Me._ACTIVE.Equals(value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACKING_EXPERT_SELECTED")>  _
Partial Public Class E_TRACKING_EXPERT_SELECTED
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_EXPERT As System.Nullable(Of Integer)
	
	Private _FK_EXPERT_SKILL As System.Nullable(Of Integer)
	
	Private _NEWCODE As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _rcvno As String
	
	Private _ctzid As String
	
	Private _rgttpcd As String
	
	Private _PRODUCT_TYPE As System.Nullable(Of Integer)
	
	Private _SUB_PRODUCT_TYPE As System.Nullable(Of Integer)
	
	Private _TIME_START_DATE As System.Nullable(Of Date)
	
	Private _TIME_STOP_DATE As System.Nullable(Of Date)
	
	Private _drgtpcd As String
	
	Private _COUNT_P As System.Nullable(Of Integer)
	
	Private _FK_COMMENT As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_EXPERTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_EXPERTChanged()
    End Sub
    Partial Private Sub OnFK_EXPERT_SKILLChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_EXPERT_SKILLChanged()
    End Sub
    Partial Private Sub OnNEWCODEChanging(value As String)
    End Sub
    Partial Private Sub OnNEWCODEChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnctzidChanging(value As String)
    End Sub
    Partial Private Sub OnctzidChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanged()
    End Sub
    Partial Private Sub OnSUB_PRODUCT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUB_PRODUCT_TYPEChanged()
    End Sub
    Partial Private Sub OnTIME_START_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTIME_START_DATEChanged()
    End Sub
    Partial Private Sub OnTIME_STOP_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTIME_STOP_DATEChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnCOUNT_PChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNT_PChanged()
    End Sub
    Partial Private Sub OnFK_COMMENTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_COMMENTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_EXPERT", DbType:="Int")>  _
	Public Property FK_EXPERT() As System.Nullable(Of Integer)
		Get
			Return Me._FK_EXPERT
		End Get
		Set
			If (Me._FK_EXPERT.Equals(value) = false) Then
				Me.OnFK_EXPERTChanging(value)
				Me.SendPropertyChanging
				Me._FK_EXPERT = value
				Me.SendPropertyChanged("FK_EXPERT")
				Me.OnFK_EXPERTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_EXPERT_SKILL", DbType:="Int")>  _
	Public Property FK_EXPERT_SKILL() As System.Nullable(Of Integer)
		Get
			Return Me._FK_EXPERT_SKILL
		End Get
		Set
			If (Me._FK_EXPERT_SKILL.Equals(value) = false) Then
				Me.OnFK_EXPERT_SKILLChanging(value)
				Me.SendPropertyChanging
				Me._FK_EXPERT_SKILL = value
				Me.SendPropertyChanged("FK_EXPERT_SKILL")
				Me.OnFK_EXPERT_SKILLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEWCODE", DbType:="NVarChar(MAX)")>  _
	Public Property NEWCODE() As String
		Get
			Return Me._NEWCODE
		End Get
		Set
			If (String.Equals(Me._NEWCODE, value) = false) Then
				Me.OnNEWCODEChanging(value)
				Me.SendPropertyChanging
				Me._NEWCODE = value
				Me.SendPropertyChanged("NEWCODE")
				Me.OnNEWCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(MAX)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctzid", DbType:="NVarChar(MAX)")>  _
	Public Property ctzid() As String
		Get
			Return Me._ctzid
		End Get
		Set
			If (String.Equals(Me._ctzid, value) = false) Then
				Me.OnctzidChanging(value)
				Me.SendPropertyChanging
				Me._ctzid = value
				Me.SendPropertyChanged("ctzid")
				Me.OnctzidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_TYPE", DbType:="Int")>  _
	Public Property PRODUCT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PRODUCT_TYPE
		End Get
		Set
			If (Me._PRODUCT_TYPE.Equals(value) = false) Then
				Me.OnPRODUCT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_TYPE = value
				Me.SendPropertyChanged("PRODUCT_TYPE")
				Me.OnPRODUCT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_PRODUCT_TYPE", DbType:="Int")>  _
	Public Property SUB_PRODUCT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._SUB_PRODUCT_TYPE
		End Get
		Set
			If (Me._SUB_PRODUCT_TYPE.Equals(value) = false) Then
				Me.OnSUB_PRODUCT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._SUB_PRODUCT_TYPE = value
				Me.SendPropertyChanged("SUB_PRODUCT_TYPE")
				Me.OnSUB_PRODUCT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME_START_DATE", DbType:="DateTime")>  _
	Public Property TIME_START_DATE() As System.Nullable(Of Date)
		Get
			Return Me._TIME_START_DATE
		End Get
		Set
			If (Me._TIME_START_DATE.Equals(value) = false) Then
				Me.OnTIME_START_DATEChanging(value)
				Me.SendPropertyChanging
				Me._TIME_START_DATE = value
				Me.SendPropertyChanged("TIME_START_DATE")
				Me.OnTIME_START_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TIME_STOP_DATE", DbType:="DateTime")>  _
	Public Property TIME_STOP_DATE() As System.Nullable(Of Date)
		Get
			Return Me._TIME_STOP_DATE
		End Get
		Set
			If (Me._TIME_STOP_DATE.Equals(value) = false) Then
				Me.OnTIME_STOP_DATEChanging(value)
				Me.SendPropertyChanging
				Me._TIME_STOP_DATE = value
				Me.SendPropertyChanged("TIME_STOP_DATE")
				Me.OnTIME_STOP_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNT_P", DbType:="Int")>  _
	Public Property COUNT_P() As System.Nullable(Of Integer)
		Get
			Return Me._COUNT_P
		End Get
		Set
			If (Me._COUNT_P.Equals(value) = false) Then
				Me.OnCOUNT_PChanging(value)
				Me.SendPropertyChanging
				Me._COUNT_P = value
				Me.SendPropertyChanged("COUNT_P")
				Me.OnCOUNT_PChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_COMMENT", DbType:="Int")>  _
	Public Property FK_COMMENT() As System.Nullable(Of Integer)
		Get
			Return Me._FK_COMMENT
		End Get
		Set
			If (Me._FK_COMMENT.Equals(value) = false) Then
				Me.OnFK_COMMENTChanging(value)
				Me.SendPropertyChanging
				Me._FK_COMMENT = value
				Me.SendPropertyChanged("FK_COMMENT")
				Me.OnFK_COMMENTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_PROJECT_SUMMARY")>  _
Partial Public Class DRUG_PROJECT_SUMMARY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TFDA_CT_no As String
	
	Private _rcvno As String
	
	Private _RCVNO_DISPLAY As String
	
	Private _DATE_RCV As System.Nullable(Of Date)
	
	Private _RCVDATE_DISPLAY As String
	
	Private _givedata_times As System.Nullable(Of Integer)
	
	Private _givedata_date As System.Nullable(Of Date)
	
	Private _citizen_submit As String
	
	Private _date_submit As System.Nullable(Of Date)
	
	Private _pj_thname As String
	
	Private _pj_enname As String
	
	Private _pj_code As String
	
	Private _pj_othernmcd As System.Nullable(Of Integer)
	
	Private _pj_othernm As String
	
	Private _ind_numbercd As System.Nullable(Of Integer)
	
	Private _ind_number As String
	
	Private _CTR As String
	
	Private _pj_typecd As System.Nullable(Of Integer)
	
	Private _pj_1sttime As System.Nullable(Of Integer)
	
	Private _supporttypr As System.Nullable(Of Integer)
	
	Private _company_nm As String
	
	Private _country As String
	
	Private _inter_intitute As String
	
	Private _inter_volunteer As String
	
	Private _th_intitute As String
	
	Private _th_spon_group As String
	
	Private _th_spon_addr As String
	
	Private _th_spon_tel As String
	
	Private _th_spon_email_website As String
	
	Private _th_spon_chngwtcd As System.Nullable(Of Integer)
	
	Private _th_spon_chngwtnm As String
	
	Private _for_spon_group As String
	
	Private _for_spon_addr As String
	
	Private _for_spon_tel As String
	
	Private _for_spon_email_website As String
	
	Private _for_spon_countrycd As System.Nullable(Of Integer)
	
	Private _for_spon_countrynm As String
	
	Private _monitor_type As System.Nullable(Of Integer)
	
	Private _monitor_group As String
	
	Private _monitor_addr As String
	
	Private _monitor_tel As String
	
	Private _monitor_email_website As String
	
	Private _monitor_chngwtcd As System.Nullable(Of Integer)
	
	Private _monitor_chngwtnm As String
	
	Private _monitor_countrycd As System.Nullable(Of Integer)
	
	Private _monitor_countrynm As String
	
	Private _PM_type As System.Nullable(Of Integer)
	
	Private _PM_group As String
	
	Private _PM_addr As String
	
	Private _PM_tel As String
	
	Private _PM_email_website As String
	
	Private _PM_chngwtcd As System.Nullable(Of Integer)
	
	Private _PM_chngwtnm As String
	
	Private _PM_countrycd As System.Nullable(Of Integer)
	
	Private _PM_countrynm As String
	
	Private _DM_type As System.Nullable(Of Integer)
	
	Private _DM_group As String
	
	Private _DM_addr As String
	
	Private _DM_tel As String
	
	Private _DM_email_website As String
	
	Private _DM_chngwtcd As System.Nullable(Of Integer)
	
	Private _DM_chngwtnm As String
	
	Private _DM_countrycd As System.Nullable(Of Integer)
	
	Private _DM_countrynm As String
	
	Private _clinical_laboratorycd As System.Nullable(Of Integer)
	
	Private _placebo_cd As System.Nullable(Of Integer)
	
	Private _pj_start_inth As System.Nullable(Of Date)
	
	Private _pj_end_inth As System.Nullable(Of Date)
	
	Private _volunteer As System.Nullable(Of Integer)
	
	Private _volunteer_descript As String
	
	Private _Financing_and_Insurance As System.Nullable(Of Integer)
	
	Private _Financing_and_Insurance_Descript As String
	
	Private _fk_attach As System.Nullable(Of Integer)
	
	Private _thspons_taxno As String
	
	Private _forspons_taxno As String
	
	Private _monitor_taxno As String
	
	Private _pm_taxno As String
	
	Private _dm_taxno As String
	
	Private _CITIZEN As String
	
	Private _CITIZEN_AUTHORIZE As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _FK_STAFF_OFFER_IDA As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _CONSIDER_DATE As System.Nullable(Of Date)
	
	Private _appdate As System.Nullable(Of Date)
	
	Private _REMARK As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTFDA_CT_noChanging(value As String)
    End Sub
    Partial Private Sub OnTFDA_CT_noChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnDATE_RCVChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_RCVChanged()
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanged()
    End Sub
    Partial Private Sub Ongivedata_timesChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ongivedata_timesChanged()
    End Sub
    Partial Private Sub Ongivedata_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ongivedata_dateChanged()
    End Sub
    Partial Private Sub Oncitizen_submitChanging(value As String)
    End Sub
    Partial Private Sub Oncitizen_submitChanged()
    End Sub
    Partial Private Sub Ondate_submitChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondate_submitChanged()
    End Sub
    Partial Private Sub Onpj_thnameChanging(value As String)
    End Sub
    Partial Private Sub Onpj_thnameChanged()
    End Sub
    Partial Private Sub Onpj_ennameChanging(value As String)
    End Sub
    Partial Private Sub Onpj_ennameChanged()
    End Sub
    Partial Private Sub Onpj_codeChanging(value As String)
    End Sub
    Partial Private Sub Onpj_codeChanged()
    End Sub
    Partial Private Sub Onpj_othernmcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpj_othernmcdChanged()
    End Sub
    Partial Private Sub Onpj_othernmChanging(value As String)
    End Sub
    Partial Private Sub Onpj_othernmChanged()
    End Sub
    Partial Private Sub Onind_numbercdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onind_numbercdChanged()
    End Sub
    Partial Private Sub Onind_numberChanging(value As String)
    End Sub
    Partial Private Sub Onind_numberChanged()
    End Sub
    Partial Private Sub OnCTRChanging(value As String)
    End Sub
    Partial Private Sub OnCTRChanged()
    End Sub
    Partial Private Sub Onpj_typecdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpj_typecdChanged()
    End Sub
    Partial Private Sub Onpj_1sttimeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpj_1sttimeChanged()
    End Sub
    Partial Private Sub OnsupporttyprChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsupporttyprChanged()
    End Sub
    Partial Private Sub Oncompany_nmChanging(value As String)
    End Sub
    Partial Private Sub Oncompany_nmChanged()
    End Sub
    Partial Private Sub OncountryChanging(value As String)
    End Sub
    Partial Private Sub OncountryChanged()
    End Sub
    Partial Private Sub Oninter_intituteChanging(value As String)
    End Sub
    Partial Private Sub Oninter_intituteChanged()
    End Sub
    Partial Private Sub Oninter_volunteerChanging(value As String)
    End Sub
    Partial Private Sub Oninter_volunteerChanged()
    End Sub
    Partial Private Sub Onth_intituteChanging(value As String)
    End Sub
    Partial Private Sub Onth_intituteChanged()
    End Sub
    Partial Private Sub Onth_spon_groupChanging(value As String)
    End Sub
    Partial Private Sub Onth_spon_groupChanged()
    End Sub
    Partial Private Sub Onth_spon_addrChanging(value As String)
    End Sub
    Partial Private Sub Onth_spon_addrChanged()
    End Sub
    Partial Private Sub Onth_spon_telChanging(value As String)
    End Sub
    Partial Private Sub Onth_spon_telChanged()
    End Sub
    Partial Private Sub Onth_spon_email_websiteChanging(value As String)
    End Sub
    Partial Private Sub Onth_spon_email_websiteChanged()
    End Sub
    Partial Private Sub Onth_spon_chngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onth_spon_chngwtcdChanged()
    End Sub
    Partial Private Sub Onth_spon_chngwtnmChanging(value As String)
    End Sub
    Partial Private Sub Onth_spon_chngwtnmChanged()
    End Sub
    Partial Private Sub Onfor_spon_groupChanging(value As String)
    End Sub
    Partial Private Sub Onfor_spon_groupChanged()
    End Sub
    Partial Private Sub Onfor_spon_addrChanging(value As String)
    End Sub
    Partial Private Sub Onfor_spon_addrChanged()
    End Sub
    Partial Private Sub Onfor_spon_telChanging(value As String)
    End Sub
    Partial Private Sub Onfor_spon_telChanged()
    End Sub
    Partial Private Sub Onfor_spon_email_websiteChanging(value As String)
    End Sub
    Partial Private Sub Onfor_spon_email_websiteChanged()
    End Sub
    Partial Private Sub Onfor_spon_countrycdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onfor_spon_countrycdChanged()
    End Sub
    Partial Private Sub Onfor_spon_countrynmChanging(value As String)
    End Sub
    Partial Private Sub Onfor_spon_countrynmChanged()
    End Sub
    Partial Private Sub Onmonitor_typeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onmonitor_typeChanged()
    End Sub
    Partial Private Sub Onmonitor_groupChanging(value As String)
    End Sub
    Partial Private Sub Onmonitor_groupChanged()
    End Sub
    Partial Private Sub Onmonitor_addrChanging(value As String)
    End Sub
    Partial Private Sub Onmonitor_addrChanged()
    End Sub
    Partial Private Sub Onmonitor_telChanging(value As String)
    End Sub
    Partial Private Sub Onmonitor_telChanged()
    End Sub
    Partial Private Sub Onmonitor_email_websiteChanging(value As String)
    End Sub
    Partial Private Sub Onmonitor_email_websiteChanged()
    End Sub
    Partial Private Sub Onmonitor_chngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onmonitor_chngwtcdChanged()
    End Sub
    Partial Private Sub Onmonitor_chngwtnmChanging(value As String)
    End Sub
    Partial Private Sub Onmonitor_chngwtnmChanged()
    End Sub
    Partial Private Sub Onmonitor_countrycdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onmonitor_countrycdChanged()
    End Sub
    Partial Private Sub Onmonitor_countrynmChanging(value As String)
    End Sub
    Partial Private Sub Onmonitor_countrynmChanged()
    End Sub
    Partial Private Sub OnPM_typeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPM_typeChanged()
    End Sub
    Partial Private Sub OnPM_groupChanging(value As String)
    End Sub
    Partial Private Sub OnPM_groupChanged()
    End Sub
    Partial Private Sub OnPM_addrChanging(value As String)
    End Sub
    Partial Private Sub OnPM_addrChanged()
    End Sub
    Partial Private Sub OnPM_telChanging(value As String)
    End Sub
    Partial Private Sub OnPM_telChanged()
    End Sub
    Partial Private Sub OnPM_email_websiteChanging(value As String)
    End Sub
    Partial Private Sub OnPM_email_websiteChanged()
    End Sub
    Partial Private Sub OnPM_chngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPM_chngwtcdChanged()
    End Sub
    Partial Private Sub OnPM_chngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnPM_chngwtnmChanged()
    End Sub
    Partial Private Sub OnPM_countrycdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPM_countrycdChanged()
    End Sub
    Partial Private Sub OnPM_countrynmChanging(value As String)
    End Sub
    Partial Private Sub OnPM_countrynmChanged()
    End Sub
    Partial Private Sub OnDM_typeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDM_typeChanged()
    End Sub
    Partial Private Sub OnDM_groupChanging(value As String)
    End Sub
    Partial Private Sub OnDM_groupChanged()
    End Sub
    Partial Private Sub OnDM_addrChanging(value As String)
    End Sub
    Partial Private Sub OnDM_addrChanged()
    End Sub
    Partial Private Sub OnDM_telChanging(value As String)
    End Sub
    Partial Private Sub OnDM_telChanged()
    End Sub
    Partial Private Sub OnDM_email_websiteChanging(value As String)
    End Sub
    Partial Private Sub OnDM_email_websiteChanged()
    End Sub
    Partial Private Sub OnDM_chngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDM_chngwtcdChanged()
    End Sub
    Partial Private Sub OnDM_chngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnDM_chngwtnmChanged()
    End Sub
    Partial Private Sub OnDM_countrycdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDM_countrycdChanged()
    End Sub
    Partial Private Sub OnDM_countrynmChanging(value As String)
    End Sub
    Partial Private Sub OnDM_countrynmChanged()
    End Sub
    Partial Private Sub Onclinical_laboratorycdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onclinical_laboratorycdChanged()
    End Sub
    Partial Private Sub Onplacebo_cdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onplacebo_cdChanged()
    End Sub
    Partial Private Sub Onpj_start_inthChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpj_start_inthChanged()
    End Sub
    Partial Private Sub Onpj_end_inthChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpj_end_inthChanged()
    End Sub
    Partial Private Sub OnvolunteerChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnvolunteerChanged()
    End Sub
    Partial Private Sub Onvolunteer_descriptChanging(value As String)
    End Sub
    Partial Private Sub Onvolunteer_descriptChanged()
    End Sub
    Partial Private Sub OnFinancing_and_InsuranceChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFinancing_and_InsuranceChanged()
    End Sub
    Partial Private Sub OnFinancing_and_Insurance_DescriptChanging(value As String)
    End Sub
    Partial Private Sub OnFinancing_and_Insurance_DescriptChanged()
    End Sub
    Partial Private Sub Onfk_attachChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onfk_attachChanged()
    End Sub
    Partial Private Sub Onthspons_taxnoChanging(value As String)
    End Sub
    Partial Private Sub Onthspons_taxnoChanged()
    End Sub
    Partial Private Sub Onforspons_taxnoChanging(value As String)
    End Sub
    Partial Private Sub Onforspons_taxnoChanged()
    End Sub
    Partial Private Sub Onmonitor_taxnoChanging(value As String)
    End Sub
    Partial Private Sub Onmonitor_taxnoChanged()
    End Sub
    Partial Private Sub Onpm_taxnoChanging(value As String)
    End Sub
    Partial Private Sub Onpm_taxnoChanged()
    End Sub
    Partial Private Sub Ondm_taxnoChanging(value As String)
    End Sub
    Partial Private Sub Ondm_taxnoChanged()
    End Sub
    Partial Private Sub OnCITIZENChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZENChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TFDA_CT_no", DbType:="NVarChar(MAX)")>  _
	Public Property TFDA_CT_no() As String
		Get
			Return Me._TFDA_CT_no
		End Get
		Set
			If (String.Equals(Me._TFDA_CT_no, value) = false) Then
				Me.OnTFDA_CT_noChanging(value)
				Me.SendPropertyChanging
				Me._TFDA_CT_no = value
				Me.SendPropertyChanged("TFDA_CT_no")
				Me.OnTFDA_CT_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(MAX)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_DISPLAY() As String
		Get
			Return Me._RCVNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVNO_DISPLAY, value) = false) Then
				Me.OnRCVNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_DISPLAY = value
				Me.SendPropertyChanged("RCVNO_DISPLAY")
				Me.OnRCVNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_RCV", DbType:="DateTime")>  _
	Public Property DATE_RCV() As System.Nullable(Of Date)
		Get
			Return Me._DATE_RCV
		End Get
		Set
			If (Me._DATE_RCV.Equals(value) = false) Then
				Me.OnDATE_RCVChanging(value)
				Me.SendPropertyChanging
				Me._DATE_RCV = value
				Me.SendPropertyChanged("DATE_RCV")
				Me.OnDATE_RCVChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVDATE_DISPLAY() As String
		Get
			Return Me._RCVDATE_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVDATE_DISPLAY, value) = false) Then
				Me.OnRCVDATE_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE_DISPLAY = value
				Me.SendPropertyChanged("RCVDATE_DISPLAY")
				Me.OnRCVDATE_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_givedata_times", DbType:="Int")>  _
	Public Property givedata_times() As System.Nullable(Of Integer)
		Get
			Return Me._givedata_times
		End Get
		Set
			If (Me._givedata_times.Equals(value) = false) Then
				Me.Ongivedata_timesChanging(value)
				Me.SendPropertyChanging
				Me._givedata_times = value
				Me.SendPropertyChanged("givedata_times")
				Me.Ongivedata_timesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_givedata_date", DbType:="Date")>  _
	Public Property givedata_date() As System.Nullable(Of Date)
		Get
			Return Me._givedata_date
		End Get
		Set
			If (Me._givedata_date.Equals(value) = false) Then
				Me.Ongivedata_dateChanging(value)
				Me.SendPropertyChanging
				Me._givedata_date = value
				Me.SendPropertyChanged("givedata_date")
				Me.Ongivedata_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_citizen_submit", DbType:="NVarChar(MAX)")>  _
	Public Property citizen_submit() As String
		Get
			Return Me._citizen_submit
		End Get
		Set
			If (String.Equals(Me._citizen_submit, value) = false) Then
				Me.Oncitizen_submitChanging(value)
				Me.SendPropertyChanging
				Me._citizen_submit = value
				Me.SendPropertyChanged("citizen_submit")
				Me.Oncitizen_submitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_date_submit", DbType:="Date")>  _
	Public Property date_submit() As System.Nullable(Of Date)
		Get
			Return Me._date_submit
		End Get
		Set
			If (Me._date_submit.Equals(value) = false) Then
				Me.Ondate_submitChanging(value)
				Me.SendPropertyChanging
				Me._date_submit = value
				Me.SendPropertyChanged("date_submit")
				Me.Ondate_submitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pj_thname", DbType:="NVarChar(MAX)")>  _
	Public Property pj_thname() As String
		Get
			Return Me._pj_thname
		End Get
		Set
			If (String.Equals(Me._pj_thname, value) = false) Then
				Me.Onpj_thnameChanging(value)
				Me.SendPropertyChanging
				Me._pj_thname = value
				Me.SendPropertyChanged("pj_thname")
				Me.Onpj_thnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pj_enname", DbType:="NVarChar(MAX)")>  _
	Public Property pj_enname() As String
		Get
			Return Me._pj_enname
		End Get
		Set
			If (String.Equals(Me._pj_enname, value) = false) Then
				Me.Onpj_ennameChanging(value)
				Me.SendPropertyChanging
				Me._pj_enname = value
				Me.SendPropertyChanged("pj_enname")
				Me.Onpj_ennameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pj_code", DbType:="NVarChar(MAX)")>  _
	Public Property pj_code() As String
		Get
			Return Me._pj_code
		End Get
		Set
			If (String.Equals(Me._pj_code, value) = false) Then
				Me.Onpj_codeChanging(value)
				Me.SendPropertyChanging
				Me._pj_code = value
				Me.SendPropertyChanged("pj_code")
				Me.Onpj_codeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pj_othernmcd", DbType:="Int")>  _
	Public Property pj_othernmcd() As System.Nullable(Of Integer)
		Get
			Return Me._pj_othernmcd
		End Get
		Set
			If (Me._pj_othernmcd.Equals(value) = false) Then
				Me.Onpj_othernmcdChanging(value)
				Me.SendPropertyChanging
				Me._pj_othernmcd = value
				Me.SendPropertyChanged("pj_othernmcd")
				Me.Onpj_othernmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pj_othernm", DbType:="NVarChar(MAX)")>  _
	Public Property pj_othernm() As String
		Get
			Return Me._pj_othernm
		End Get
		Set
			If (String.Equals(Me._pj_othernm, value) = false) Then
				Me.Onpj_othernmChanging(value)
				Me.SendPropertyChanging
				Me._pj_othernm = value
				Me.SendPropertyChanged("pj_othernm")
				Me.Onpj_othernmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ind_numbercd", DbType:="Int")>  _
	Public Property ind_numbercd() As System.Nullable(Of Integer)
		Get
			Return Me._ind_numbercd
		End Get
		Set
			If (Me._ind_numbercd.Equals(value) = false) Then
				Me.Onind_numbercdChanging(value)
				Me.SendPropertyChanging
				Me._ind_numbercd = value
				Me.SendPropertyChanged("ind_numbercd")
				Me.Onind_numbercdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ind_number", DbType:="NVarChar(MAX)")>  _
	Public Property ind_number() As String
		Get
			Return Me._ind_number
		End Get
		Set
			If (String.Equals(Me._ind_number, value) = false) Then
				Me.Onind_numberChanging(value)
				Me.SendPropertyChanging
				Me._ind_number = value
				Me.SendPropertyChanged("ind_number")
				Me.Onind_numberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CTR", DbType:="NVarChar(MAX)")>  _
	Public Property CTR() As String
		Get
			Return Me._CTR
		End Get
		Set
			If (String.Equals(Me._CTR, value) = false) Then
				Me.OnCTRChanging(value)
				Me.SendPropertyChanging
				Me._CTR = value
				Me.SendPropertyChanged("CTR")
				Me.OnCTRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pj_typecd", DbType:="Int")>  _
	Public Property pj_typecd() As System.Nullable(Of Integer)
		Get
			Return Me._pj_typecd
		End Get
		Set
			If (Me._pj_typecd.Equals(value) = false) Then
				Me.Onpj_typecdChanging(value)
				Me.SendPropertyChanging
				Me._pj_typecd = value
				Me.SendPropertyChanged("pj_typecd")
				Me.Onpj_typecdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pj_1sttime", DbType:="Int")>  _
	Public Property pj_1sttime() As System.Nullable(Of Integer)
		Get
			Return Me._pj_1sttime
		End Get
		Set
			If (Me._pj_1sttime.Equals(value) = false) Then
				Me.Onpj_1sttimeChanging(value)
				Me.SendPropertyChanging
				Me._pj_1sttime = value
				Me.SendPropertyChanged("pj_1sttime")
				Me.Onpj_1sttimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_supporttypr", DbType:="Int")>  _
	Public Property supporttypr() As System.Nullable(Of Integer)
		Get
			Return Me._supporttypr
		End Get
		Set
			If (Me._supporttypr.Equals(value) = false) Then
				Me.OnsupporttyprChanging(value)
				Me.SendPropertyChanging
				Me._supporttypr = value
				Me.SendPropertyChanged("supporttypr")
				Me.OnsupporttyprChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_company_nm", DbType:="NVarChar(MAX)")>  _
	Public Property company_nm() As String
		Get
			Return Me._company_nm
		End Get
		Set
			If (String.Equals(Me._company_nm, value) = false) Then
				Me.Oncompany_nmChanging(value)
				Me.SendPropertyChanging
				Me._company_nm = value
				Me.SendPropertyChanged("company_nm")
				Me.Oncompany_nmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_country", DbType:="NVarChar(MAX)")>  _
	Public Property country() As String
		Get
			Return Me._country
		End Get
		Set
			If (String.Equals(Me._country, value) = false) Then
				Me.OncountryChanging(value)
				Me.SendPropertyChanging
				Me._country = value
				Me.SendPropertyChanged("country")
				Me.OncountryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_inter_intitute", DbType:="NVarChar(MAX)")>  _
	Public Property inter_intitute() As String
		Get
			Return Me._inter_intitute
		End Get
		Set
			If (String.Equals(Me._inter_intitute, value) = false) Then
				Me.Oninter_intituteChanging(value)
				Me.SendPropertyChanging
				Me._inter_intitute = value
				Me.SendPropertyChanged("inter_intitute")
				Me.Oninter_intituteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_inter_volunteer", DbType:="NVarChar(MAX)")>  _
	Public Property inter_volunteer() As String
		Get
			Return Me._inter_volunteer
		End Get
		Set
			If (String.Equals(Me._inter_volunteer, value) = false) Then
				Me.Oninter_volunteerChanging(value)
				Me.SendPropertyChanging
				Me._inter_volunteer = value
				Me.SendPropertyChanged("inter_volunteer")
				Me.Oninter_volunteerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_th_intitute", DbType:="NVarChar(MAX)")>  _
	Public Property th_intitute() As String
		Get
			Return Me._th_intitute
		End Get
		Set
			If (String.Equals(Me._th_intitute, value) = false) Then
				Me.Onth_intituteChanging(value)
				Me.SendPropertyChanging
				Me._th_intitute = value
				Me.SendPropertyChanged("th_intitute")
				Me.Onth_intituteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_th_spon_group", DbType:="NVarChar(MAX)")>  _
	Public Property th_spon_group() As String
		Get
			Return Me._th_spon_group
		End Get
		Set
			If (String.Equals(Me._th_spon_group, value) = false) Then
				Me.Onth_spon_groupChanging(value)
				Me.SendPropertyChanging
				Me._th_spon_group = value
				Me.SendPropertyChanged("th_spon_group")
				Me.Onth_spon_groupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_th_spon_addr", DbType:="NVarChar(MAX)")>  _
	Public Property th_spon_addr() As String
		Get
			Return Me._th_spon_addr
		End Get
		Set
			If (String.Equals(Me._th_spon_addr, value) = false) Then
				Me.Onth_spon_addrChanging(value)
				Me.SendPropertyChanging
				Me._th_spon_addr = value
				Me.SendPropertyChanged("th_spon_addr")
				Me.Onth_spon_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_th_spon_tel", DbType:="NVarChar(MAX)")>  _
	Public Property th_spon_tel() As String
		Get
			Return Me._th_spon_tel
		End Get
		Set
			If (String.Equals(Me._th_spon_tel, value) = false) Then
				Me.Onth_spon_telChanging(value)
				Me.SendPropertyChanging
				Me._th_spon_tel = value
				Me.SendPropertyChanged("th_spon_tel")
				Me.Onth_spon_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_th_spon_email_website", DbType:="NVarChar(MAX)")>  _
	Public Property th_spon_email_website() As String
		Get
			Return Me._th_spon_email_website
		End Get
		Set
			If (String.Equals(Me._th_spon_email_website, value) = false) Then
				Me.Onth_spon_email_websiteChanging(value)
				Me.SendPropertyChanging
				Me._th_spon_email_website = value
				Me.SendPropertyChanged("th_spon_email_website")
				Me.Onth_spon_email_websiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_th_spon_chngwtcd", DbType:="Int")>  _
	Public Property th_spon_chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._th_spon_chngwtcd
		End Get
		Set
			If (Me._th_spon_chngwtcd.Equals(value) = false) Then
				Me.Onth_spon_chngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._th_spon_chngwtcd = value
				Me.SendPropertyChanged("th_spon_chngwtcd")
				Me.Onth_spon_chngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_th_spon_chngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property th_spon_chngwtnm() As String
		Get
			Return Me._th_spon_chngwtnm
		End Get
		Set
			If (String.Equals(Me._th_spon_chngwtnm, value) = false) Then
				Me.Onth_spon_chngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._th_spon_chngwtnm = value
				Me.SendPropertyChanged("th_spon_chngwtnm")
				Me.Onth_spon_chngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_for_spon_group", DbType:="NVarChar(MAX)")>  _
	Public Property for_spon_group() As String
		Get
			Return Me._for_spon_group
		End Get
		Set
			If (String.Equals(Me._for_spon_group, value) = false) Then
				Me.Onfor_spon_groupChanging(value)
				Me.SendPropertyChanging
				Me._for_spon_group = value
				Me.SendPropertyChanged("for_spon_group")
				Me.Onfor_spon_groupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_for_spon_addr", DbType:="NVarChar(MAX)")>  _
	Public Property for_spon_addr() As String
		Get
			Return Me._for_spon_addr
		End Get
		Set
			If (String.Equals(Me._for_spon_addr, value) = false) Then
				Me.Onfor_spon_addrChanging(value)
				Me.SendPropertyChanging
				Me._for_spon_addr = value
				Me.SendPropertyChanged("for_spon_addr")
				Me.Onfor_spon_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_for_spon_tel", DbType:="NVarChar(MAX)")>  _
	Public Property for_spon_tel() As String
		Get
			Return Me._for_spon_tel
		End Get
		Set
			If (String.Equals(Me._for_spon_tel, value) = false) Then
				Me.Onfor_spon_telChanging(value)
				Me.SendPropertyChanging
				Me._for_spon_tel = value
				Me.SendPropertyChanged("for_spon_tel")
				Me.Onfor_spon_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_for_spon_email_website", DbType:="NVarChar(MAX)")>  _
	Public Property for_spon_email_website() As String
		Get
			Return Me._for_spon_email_website
		End Get
		Set
			If (String.Equals(Me._for_spon_email_website, value) = false) Then
				Me.Onfor_spon_email_websiteChanging(value)
				Me.SendPropertyChanging
				Me._for_spon_email_website = value
				Me.SendPropertyChanged("for_spon_email_website")
				Me.Onfor_spon_email_websiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_for_spon_countrycd", DbType:="Int")>  _
	Public Property for_spon_countrycd() As System.Nullable(Of Integer)
		Get
			Return Me._for_spon_countrycd
		End Get
		Set
			If (Me._for_spon_countrycd.Equals(value) = false) Then
				Me.Onfor_spon_countrycdChanging(value)
				Me.SendPropertyChanging
				Me._for_spon_countrycd = value
				Me.SendPropertyChanged("for_spon_countrycd")
				Me.Onfor_spon_countrycdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_for_spon_countrynm", DbType:="NVarChar(MAX)")>  _
	Public Property for_spon_countrynm() As String
		Get
			Return Me._for_spon_countrynm
		End Get
		Set
			If (String.Equals(Me._for_spon_countrynm, value) = false) Then
				Me.Onfor_spon_countrynmChanging(value)
				Me.SendPropertyChanging
				Me._for_spon_countrynm = value
				Me.SendPropertyChanged("for_spon_countrynm")
				Me.Onfor_spon_countrynmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monitor_type", DbType:="Int")>  _
	Public Property monitor_type() As System.Nullable(Of Integer)
		Get
			Return Me._monitor_type
		End Get
		Set
			If (Me._monitor_type.Equals(value) = false) Then
				Me.Onmonitor_typeChanging(value)
				Me.SendPropertyChanging
				Me._monitor_type = value
				Me.SendPropertyChanged("monitor_type")
				Me.Onmonitor_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monitor_group", DbType:="NVarChar(MAX)")>  _
	Public Property monitor_group() As String
		Get
			Return Me._monitor_group
		End Get
		Set
			If (String.Equals(Me._monitor_group, value) = false) Then
				Me.Onmonitor_groupChanging(value)
				Me.SendPropertyChanging
				Me._monitor_group = value
				Me.SendPropertyChanged("monitor_group")
				Me.Onmonitor_groupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monitor_addr", DbType:="NVarChar(MAX)")>  _
	Public Property monitor_addr() As String
		Get
			Return Me._monitor_addr
		End Get
		Set
			If (String.Equals(Me._monitor_addr, value) = false) Then
				Me.Onmonitor_addrChanging(value)
				Me.SendPropertyChanging
				Me._monitor_addr = value
				Me.SendPropertyChanged("monitor_addr")
				Me.Onmonitor_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monitor_tel", DbType:="NVarChar(MAX)")>  _
	Public Property monitor_tel() As String
		Get
			Return Me._monitor_tel
		End Get
		Set
			If (String.Equals(Me._monitor_tel, value) = false) Then
				Me.Onmonitor_telChanging(value)
				Me.SendPropertyChanging
				Me._monitor_tel = value
				Me.SendPropertyChanged("monitor_tel")
				Me.Onmonitor_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monitor_email_website", DbType:="NVarChar(MAX)")>  _
	Public Property monitor_email_website() As String
		Get
			Return Me._monitor_email_website
		End Get
		Set
			If (String.Equals(Me._monitor_email_website, value) = false) Then
				Me.Onmonitor_email_websiteChanging(value)
				Me.SendPropertyChanging
				Me._monitor_email_website = value
				Me.SendPropertyChanged("monitor_email_website")
				Me.Onmonitor_email_websiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monitor_chngwtcd", DbType:="Int")>  _
	Public Property monitor_chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._monitor_chngwtcd
		End Get
		Set
			If (Me._monitor_chngwtcd.Equals(value) = false) Then
				Me.Onmonitor_chngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._monitor_chngwtcd = value
				Me.SendPropertyChanged("monitor_chngwtcd")
				Me.Onmonitor_chngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monitor_chngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property monitor_chngwtnm() As String
		Get
			Return Me._monitor_chngwtnm
		End Get
		Set
			If (String.Equals(Me._monitor_chngwtnm, value) = false) Then
				Me.Onmonitor_chngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._monitor_chngwtnm = value
				Me.SendPropertyChanged("monitor_chngwtnm")
				Me.Onmonitor_chngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monitor_countrycd", DbType:="Int")>  _
	Public Property monitor_countrycd() As System.Nullable(Of Integer)
		Get
			Return Me._monitor_countrycd
		End Get
		Set
			If (Me._monitor_countrycd.Equals(value) = false) Then
				Me.Onmonitor_countrycdChanging(value)
				Me.SendPropertyChanging
				Me._monitor_countrycd = value
				Me.SendPropertyChanged("monitor_countrycd")
				Me.Onmonitor_countrycdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monitor_countrynm", DbType:="NVarChar(MAX)")>  _
	Public Property monitor_countrynm() As String
		Get
			Return Me._monitor_countrynm
		End Get
		Set
			If (String.Equals(Me._monitor_countrynm, value) = false) Then
				Me.Onmonitor_countrynmChanging(value)
				Me.SendPropertyChanging
				Me._monitor_countrynm = value
				Me.SendPropertyChanged("monitor_countrynm")
				Me.Onmonitor_countrynmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PM_type", DbType:="Int")>  _
	Public Property PM_type() As System.Nullable(Of Integer)
		Get
			Return Me._PM_type
		End Get
		Set
			If (Me._PM_type.Equals(value) = false) Then
				Me.OnPM_typeChanging(value)
				Me.SendPropertyChanging
				Me._PM_type = value
				Me.SendPropertyChanged("PM_type")
				Me.OnPM_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PM_group", DbType:="NVarChar(MAX)")>  _
	Public Property PM_group() As String
		Get
			Return Me._PM_group
		End Get
		Set
			If (String.Equals(Me._PM_group, value) = false) Then
				Me.OnPM_groupChanging(value)
				Me.SendPropertyChanging
				Me._PM_group = value
				Me.SendPropertyChanged("PM_group")
				Me.OnPM_groupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PM_addr", DbType:="NVarChar(MAX)")>  _
	Public Property PM_addr() As String
		Get
			Return Me._PM_addr
		End Get
		Set
			If (String.Equals(Me._PM_addr, value) = false) Then
				Me.OnPM_addrChanging(value)
				Me.SendPropertyChanging
				Me._PM_addr = value
				Me.SendPropertyChanged("PM_addr")
				Me.OnPM_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PM_tel", DbType:="NVarChar(MAX)")>  _
	Public Property PM_tel() As String
		Get
			Return Me._PM_tel
		End Get
		Set
			If (String.Equals(Me._PM_tel, value) = false) Then
				Me.OnPM_telChanging(value)
				Me.SendPropertyChanging
				Me._PM_tel = value
				Me.SendPropertyChanged("PM_tel")
				Me.OnPM_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PM_email_website", DbType:="NVarChar(MAX)")>  _
	Public Property PM_email_website() As String
		Get
			Return Me._PM_email_website
		End Get
		Set
			If (String.Equals(Me._PM_email_website, value) = false) Then
				Me.OnPM_email_websiteChanging(value)
				Me.SendPropertyChanging
				Me._PM_email_website = value
				Me.SendPropertyChanged("PM_email_website")
				Me.OnPM_email_websiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PM_chngwtcd", DbType:="Int")>  _
	Public Property PM_chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._PM_chngwtcd
		End Get
		Set
			If (Me._PM_chngwtcd.Equals(value) = false) Then
				Me.OnPM_chngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._PM_chngwtcd = value
				Me.SendPropertyChanged("PM_chngwtcd")
				Me.OnPM_chngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PM_chngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property PM_chngwtnm() As String
		Get
			Return Me._PM_chngwtnm
		End Get
		Set
			If (String.Equals(Me._PM_chngwtnm, value) = false) Then
				Me.OnPM_chngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._PM_chngwtnm = value
				Me.SendPropertyChanged("PM_chngwtnm")
				Me.OnPM_chngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PM_countrycd", DbType:="Int")>  _
	Public Property PM_countrycd() As System.Nullable(Of Integer)
		Get
			Return Me._PM_countrycd
		End Get
		Set
			If (Me._PM_countrycd.Equals(value) = false) Then
				Me.OnPM_countrycdChanging(value)
				Me.SendPropertyChanging
				Me._PM_countrycd = value
				Me.SendPropertyChanged("PM_countrycd")
				Me.OnPM_countrycdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PM_countrynm", DbType:="NVarChar(MAX)")>  _
	Public Property PM_countrynm() As String
		Get
			Return Me._PM_countrynm
		End Get
		Set
			If (String.Equals(Me._PM_countrynm, value) = false) Then
				Me.OnPM_countrynmChanging(value)
				Me.SendPropertyChanging
				Me._PM_countrynm = value
				Me.SendPropertyChanged("PM_countrynm")
				Me.OnPM_countrynmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DM_type", DbType:="Int")>  _
	Public Property DM_type() As System.Nullable(Of Integer)
		Get
			Return Me._DM_type
		End Get
		Set
			If (Me._DM_type.Equals(value) = false) Then
				Me.OnDM_typeChanging(value)
				Me.SendPropertyChanging
				Me._DM_type = value
				Me.SendPropertyChanged("DM_type")
				Me.OnDM_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DM_group", DbType:="NVarChar(MAX)")>  _
	Public Property DM_group() As String
		Get
			Return Me._DM_group
		End Get
		Set
			If (String.Equals(Me._DM_group, value) = false) Then
				Me.OnDM_groupChanging(value)
				Me.SendPropertyChanging
				Me._DM_group = value
				Me.SendPropertyChanged("DM_group")
				Me.OnDM_groupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DM_addr", DbType:="NVarChar(MAX)")>  _
	Public Property DM_addr() As String
		Get
			Return Me._DM_addr
		End Get
		Set
			If (String.Equals(Me._DM_addr, value) = false) Then
				Me.OnDM_addrChanging(value)
				Me.SendPropertyChanging
				Me._DM_addr = value
				Me.SendPropertyChanged("DM_addr")
				Me.OnDM_addrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DM_tel", DbType:="NVarChar(MAX)")>  _
	Public Property DM_tel() As String
		Get
			Return Me._DM_tel
		End Get
		Set
			If (String.Equals(Me._DM_tel, value) = false) Then
				Me.OnDM_telChanging(value)
				Me.SendPropertyChanging
				Me._DM_tel = value
				Me.SendPropertyChanged("DM_tel")
				Me.OnDM_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DM_email_website", DbType:="NVarChar(MAX)")>  _
	Public Property DM_email_website() As String
		Get
			Return Me._DM_email_website
		End Get
		Set
			If (String.Equals(Me._DM_email_website, value) = false) Then
				Me.OnDM_email_websiteChanging(value)
				Me.SendPropertyChanging
				Me._DM_email_website = value
				Me.SendPropertyChanged("DM_email_website")
				Me.OnDM_email_websiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DM_chngwtcd", DbType:="Int")>  _
	Public Property DM_chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._DM_chngwtcd
		End Get
		Set
			If (Me._DM_chngwtcd.Equals(value) = false) Then
				Me.OnDM_chngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._DM_chngwtcd = value
				Me.SendPropertyChanged("DM_chngwtcd")
				Me.OnDM_chngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DM_chngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property DM_chngwtnm() As String
		Get
			Return Me._DM_chngwtnm
		End Get
		Set
			If (String.Equals(Me._DM_chngwtnm, value) = false) Then
				Me.OnDM_chngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._DM_chngwtnm = value
				Me.SendPropertyChanged("DM_chngwtnm")
				Me.OnDM_chngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DM_countrycd", DbType:="Int")>  _
	Public Property DM_countrycd() As System.Nullable(Of Integer)
		Get
			Return Me._DM_countrycd
		End Get
		Set
			If (Me._DM_countrycd.Equals(value) = false) Then
				Me.OnDM_countrycdChanging(value)
				Me.SendPropertyChanging
				Me._DM_countrycd = value
				Me.SendPropertyChanged("DM_countrycd")
				Me.OnDM_countrycdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DM_countrynm", DbType:="NVarChar(MAX)")>  _
	Public Property DM_countrynm() As String
		Get
			Return Me._DM_countrynm
		End Get
		Set
			If (String.Equals(Me._DM_countrynm, value) = false) Then
				Me.OnDM_countrynmChanging(value)
				Me.SendPropertyChanging
				Me._DM_countrynm = value
				Me.SendPropertyChanged("DM_countrynm")
				Me.OnDM_countrynmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clinical_laboratorycd", DbType:="Int")>  _
	Public Property clinical_laboratorycd() As System.Nullable(Of Integer)
		Get
			Return Me._clinical_laboratorycd
		End Get
		Set
			If (Me._clinical_laboratorycd.Equals(value) = false) Then
				Me.Onclinical_laboratorycdChanging(value)
				Me.SendPropertyChanging
				Me._clinical_laboratorycd = value
				Me.SendPropertyChanged("clinical_laboratorycd")
				Me.Onclinical_laboratorycdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_placebo_cd", DbType:="Int")>  _
	Public Property placebo_cd() As System.Nullable(Of Integer)
		Get
			Return Me._placebo_cd
		End Get
		Set
			If (Me._placebo_cd.Equals(value) = false) Then
				Me.Onplacebo_cdChanging(value)
				Me.SendPropertyChanging
				Me._placebo_cd = value
				Me.SendPropertyChanged("placebo_cd")
				Me.Onplacebo_cdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pj_start_inth", DbType:="DateTime")>  _
	Public Property pj_start_inth() As System.Nullable(Of Date)
		Get
			Return Me._pj_start_inth
		End Get
		Set
			If (Me._pj_start_inth.Equals(value) = false) Then
				Me.Onpj_start_inthChanging(value)
				Me.SendPropertyChanging
				Me._pj_start_inth = value
				Me.SendPropertyChanged("pj_start_inth")
				Me.Onpj_start_inthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pj_end_inth", DbType:="DateTime")>  _
	Public Property pj_end_inth() As System.Nullable(Of Date)
		Get
			Return Me._pj_end_inth
		End Get
		Set
			If (Me._pj_end_inth.Equals(value) = false) Then
				Me.Onpj_end_inthChanging(value)
				Me.SendPropertyChanging
				Me._pj_end_inth = value
				Me.SendPropertyChanged("pj_end_inth")
				Me.Onpj_end_inthChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_volunteer", DbType:="Int")>  _
	Public Property volunteer() As System.Nullable(Of Integer)
		Get
			Return Me._volunteer
		End Get
		Set
			If (Me._volunteer.Equals(value) = false) Then
				Me.OnvolunteerChanging(value)
				Me.SendPropertyChanging
				Me._volunteer = value
				Me.SendPropertyChanged("volunteer")
				Me.OnvolunteerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_volunteer_descript", DbType:="NVarChar(MAX)")>  _
	Public Property volunteer_descript() As String
		Get
			Return Me._volunteer_descript
		End Get
		Set
			If (String.Equals(Me._volunteer_descript, value) = false) Then
				Me.Onvolunteer_descriptChanging(value)
				Me.SendPropertyChanging
				Me._volunteer_descript = value
				Me.SendPropertyChanged("volunteer_descript")
				Me.Onvolunteer_descriptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Financing_and_Insurance", DbType:="Int")>  _
	Public Property Financing_and_Insurance() As System.Nullable(Of Integer)
		Get
			Return Me._Financing_and_Insurance
		End Get
		Set
			If (Me._Financing_and_Insurance.Equals(value) = false) Then
				Me.OnFinancing_and_InsuranceChanging(value)
				Me.SendPropertyChanging
				Me._Financing_and_Insurance = value
				Me.SendPropertyChanged("Financing_and_Insurance")
				Me.OnFinancing_and_InsuranceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Financing_and_Insurance_Descript", DbType:="NVarChar(MAX)")>  _
	Public Property Financing_and_Insurance_Descript() As String
		Get
			Return Me._Financing_and_Insurance_Descript
		End Get
		Set
			If (String.Equals(Me._Financing_and_Insurance_Descript, value) = false) Then
				Me.OnFinancing_and_Insurance_DescriptChanging(value)
				Me.SendPropertyChanging
				Me._Financing_and_Insurance_Descript = value
				Me.SendPropertyChanged("Financing_and_Insurance_Descript")
				Me.OnFinancing_and_Insurance_DescriptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fk_attach", DbType:="Int")>  _
	Public Property fk_attach() As System.Nullable(Of Integer)
		Get
			Return Me._fk_attach
		End Get
		Set
			If (Me._fk_attach.Equals(value) = false) Then
				Me.Onfk_attachChanging(value)
				Me.SendPropertyChanging
				Me._fk_attach = value
				Me.SendPropertyChanged("fk_attach")
				Me.Onfk_attachChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thspons_taxno", DbType:="NVarChar(MAX)")>  _
	Public Property thspons_taxno() As String
		Get
			Return Me._thspons_taxno
		End Get
		Set
			If (String.Equals(Me._thspons_taxno, value) = false) Then
				Me.Onthspons_taxnoChanging(value)
				Me.SendPropertyChanging
				Me._thspons_taxno = value
				Me.SendPropertyChanged("thspons_taxno")
				Me.Onthspons_taxnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_forspons_taxno", DbType:="NVarChar(MAX)")>  _
	Public Property forspons_taxno() As String
		Get
			Return Me._forspons_taxno
		End Get
		Set
			If (String.Equals(Me._forspons_taxno, value) = false) Then
				Me.Onforspons_taxnoChanging(value)
				Me.SendPropertyChanging
				Me._forspons_taxno = value
				Me.SendPropertyChanged("forspons_taxno")
				Me.Onforspons_taxnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_monitor_taxno", DbType:="NVarChar(MAX)")>  _
	Public Property monitor_taxno() As String
		Get
			Return Me._monitor_taxno
		End Get
		Set
			If (String.Equals(Me._monitor_taxno, value) = false) Then
				Me.Onmonitor_taxnoChanging(value)
				Me.SendPropertyChanging
				Me._monitor_taxno = value
				Me.SendPropertyChanged("monitor_taxno")
				Me.Onmonitor_taxnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pm_taxno", DbType:="NVarChar(MAX)")>  _
	Public Property pm_taxno() As String
		Get
			Return Me._pm_taxno
		End Get
		Set
			If (String.Equals(Me._pm_taxno, value) = false) Then
				Me.Onpm_taxnoChanging(value)
				Me.SendPropertyChanging
				Me._pm_taxno = value
				Me.SendPropertyChanged("pm_taxno")
				Me.Onpm_taxnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dm_taxno", DbType:="NVarChar(MAX)")>  _
	Public Property dm_taxno() As String
		Get
			Return Me._dm_taxno
		End Get
		Set
			If (String.Equals(Me._dm_taxno, value) = false) Then
				Me.Ondm_taxnoChanging(value)
				Me.SendPropertyChanging
				Me._dm_taxno = value
				Me.SendPropertyChanged("dm_taxno")
				Me.Ondm_taxnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN() As String
		Get
			Return Me._CITIZEN
		End Get
		Set
			If (String.Equals(Me._CITIZEN, value) = false) Then
				Me.OnCITIZENChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN = value
				Me.SendPropertyChanged("CITIZEN")
				Me.OnCITIZENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_STAFF_OFFER_IDA", DbType:="Int")>  _
	Public Property FK_STAFF_OFFER_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_STAFF_OFFER_IDA
		End Get
		Set
			If (Me._FK_STAFF_OFFER_IDA.Equals(value) = false) Then
				Me.OnFK_STAFF_OFFER_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_STAFF_OFFER_IDA = value
				Me.SendPropertyChanged("FK_STAFF_OFFER_IDA")
				Me.OnFK_STAFF_OFFER_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSIDER_DATE", DbType:="DateTime")>  _
	Public Property CONSIDER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONSIDER_DATE
		End Get
		Set
			If (Me._CONSIDER_DATE.Equals(value) = false) Then
				Me.OnCONSIDER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONSIDER_DATE = value
				Me.SendPropertyChanged("CONSIDER_DATE")
				Me.OnCONSIDER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="DateTime")>  _
	Public Property appdate() As System.Nullable(Of Date)
		Get
			Return Me._appdate
		End Get
		Set
			If (Me._appdate.Equals(value) = false) Then
				Me.OnappdateChanging(value)
				Me.SendPropertyChanging
				Me._appdate = value
				Me.SendPropertyChanged("appdate")
				Me.OnappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_DETAIL_LOCATION_KEEP")>  _
Partial Public Class DALCN_DETAIL_LOCATION_KEEP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _LCN_IDA As String
	
	Private _LOCATION_IDA As String
	
	Private _IDENTIFY As String
	
	Private _TR_ID As String
	
	Private _FK_IDA As String
	
	Private _LOCATION_ADDRESS_thanameplace As String
	
	Private _LOCATION_ADDRESS_thaaddr As String
	
	Private _LOCATION_ADDRESS_thasoi As String
	
	Private _LOCATION_ADDRESS_tharoad As String
	
	Private _LOCATION_ADDRESS_thamu As String
	
	Private _LOCATION_ADDRESS_thathmblnm As String
	
	Private _LOCATION_ADDRESS_thaamphrnm As String
	
	Private _LOCATION_ADDRESS_thachngwtnm As String
	
	Private _LOCATION_ADDRESS_tel As String
	
	Private _LOCATION_ADDRESS_fax As String
	
	Private _LOCATION_ADDRESS_lcnsid As String
	
	Private _LOCATION_ADDRESS_engaddr As String
	
	Private _LOCATION_ADDRESS_tharoom As String
	
	Private _LOCATION_ADDRESS_thafloor As String
	
	Private _LOCATION_ADDRESS_thabuilding As String
	
	Private _LOCATION_ADDRESS_engsoi As String
	
	Private _LOCATION_ADDRESS_engroad As String
	
	Private _LOCATION_ADDRESS_zipcode As String
	
	Private _LOCATION_ADDRESS_lstfcd As String
	
	Private _LOCATION_ADDRESS_lmdfdate As System.Nullable(Of Date)
	
	Private _LOCATION_ADDRESS_IDA As String
	
	Private _LOCATION_ADDRESS_FK_IDA As String
	
	Private _LOCATION_ADDRESS_TR_ID As String
	
	Private _LOCATION_ADDRESS_DOWN_ID As String
	
	Private _LOCATION_ADDRESS_CITIZEN_ID As String
	
	Private _LOCATION_ADDRESS_CITIZEN_ID_UPLOAD As String
	
	Private _LOCATION_ADDRESS_XMLNAME As String
	
	Private _LOCATION_ADDRESS_engmu As String
	
	Private _LOCATION_ADDRESS_engfloor As String
	
	Private _LOCATION_ADDRESS_engbuilding As String
	
	Private _LOCATION_ADDRESS_rcvno As String
	
	Private _LOCATION_ADDRESS_rcvdate As System.Nullable(Of Date)
	
	Private _LOCATION_ADDRESS_lctcd As String
	
	Private _LOCATION_ADDRESS_engnameplace As String
	
	Private _LOCATION_ADDRESS_STATUS_ID As String
	
	Private _LOCATION_ADDRESS_HOUSENO As String
	
	Private _LOCATION_ADDRESS_Branch As String
	
	Private _LOCATION_ADDRESS_LOCATION_TYPE_NORMAL As String
	
	Private _LOCATION_ADDRESS_LOCATION_TYPE_OTHER As String
	
	Private _LOCATION_ADDRESS_LOCATION_TYPE_ID As String
	
	Private _LOCATION_ADDRESS_SYSTEM_NAME As String
	
	Private _LOCATION_ADDRESS_thmblcd As String
	
	Private _LOCATION_ADDRESS_chngwtcd As String
	
	Private _LOCATION_ADDRESS_engthmblnm As String
	
	Private _LOCATION_ADDRESS_engamphrnm As String
	
	Private _LOCATION_ADDRESS_engchngwtnm As String
	
	Private _LOCATION_ADDRESS_IDENTIFY As String
	
	Private _LOCATION_ADDRESS_REMARK As String
	
	Private _LOCATION_ADDRESS_Mobile As String
	
	Private _LOCATION_ADDRESS_amphrcd As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnLOCATION_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_IDAChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thanameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thanameplaceChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaaddrChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaaddrChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thasoiChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thasoiChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tharoadChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tharoadChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thamuChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thamuChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thathmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thathmblnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaamphrnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thachngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thachngwtnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_telChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_telChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_faxChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_faxChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_lcnsidChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_lcnsidChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engaddrChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engaddrChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tharoomChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tharoomChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thafloorChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thafloorChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thabuildingChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thabuildingChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engsoiChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engsoiChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engroadChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engroadChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_zipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_zipcodeChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_lstfcdChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_lstfcdChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_lmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_lmdfdateChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_IDAChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_FK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_FK_IDAChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_TR_IDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_TR_IDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_DOWN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_DOWN_IDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_CITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_CITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_CITIZEN_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_CITIZEN_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_XMLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_XMLNAMEChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engmuChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engmuChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engfloorChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engfloorChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engbuildingChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engbuildingChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_rcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_rcvnoChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_rcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_rcvdateChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_lctcdChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_lctcdChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engnameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engnameplaceChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_STATUS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_STATUS_IDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_HOUSENOChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_HOUSENOChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_BranchChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_BranchChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_LOCATION_TYPE_NORMALChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_LOCATION_TYPE_NORMALChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_LOCATION_TYPE_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_LOCATION_TYPE_OTHERChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_LOCATION_TYPE_IDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_LOCATION_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_SYSTEM_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_SYSTEM_NAMEChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thmblcdChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thmblcdChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_chngwtcdChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_chngwtcdChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engthmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engthmblnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engamphrnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engchngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engchngwtnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_REMARKChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_REMARKChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_MobileChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_MobileChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_amphrcdChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_amphrcdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property LCN_IDA() As String
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (String.Equals(Me._LCN_IDA, value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_IDA() As String
		Get
			Return Me._LOCATION_IDA
		End Get
		Set
			If (String.Equals(Me._LOCATION_IDA, value) = false) Then
				Me.OnLOCATION_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_IDA = value
				Me.SendPropertyChanged("LOCATION_IDA")
				Me.OnLOCATION_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="NVarChar(MAX)")>  _
	Public Property TR_ID() As String
		Get
			Return Me._TR_ID
		End Get
		Set
			If (String.Equals(Me._TR_ID, value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thanameplace", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thanameplace() As String
		Get
			Return Me._LOCATION_ADDRESS_thanameplace
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thanameplace, value) = false) Then
				Me.OnLOCATION_ADDRESS_thanameplaceChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thanameplace = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thanameplace")
				Me.OnLOCATION_ADDRESS_thanameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thaaddr", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thaaddr() As String
		Get
			Return Me._LOCATION_ADDRESS_thaaddr
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thaaddr, value) = false) Then
				Me.OnLOCATION_ADDRESS_thaaddrChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thaaddr = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thaaddr")
				Me.OnLOCATION_ADDRESS_thaaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thasoi", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thasoi() As String
		Get
			Return Me._LOCATION_ADDRESS_thasoi
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thasoi, value) = false) Then
				Me.OnLOCATION_ADDRESS_thasoiChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thasoi = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thasoi")
				Me.OnLOCATION_ADDRESS_thasoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_tharoad", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_tharoad() As String
		Get
			Return Me._LOCATION_ADDRESS_tharoad
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_tharoad, value) = false) Then
				Me.OnLOCATION_ADDRESS_tharoadChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_tharoad = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_tharoad")
				Me.OnLOCATION_ADDRESS_tharoadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thamu", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thamu() As String
		Get
			Return Me._LOCATION_ADDRESS_thamu
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thamu, value) = false) Then
				Me.OnLOCATION_ADDRESS_thamuChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thamu = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thamu")
				Me.OnLOCATION_ADDRESS_thamuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thathmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thathmblnm() As String
		Get
			Return Me._LOCATION_ADDRESS_thathmblnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thathmblnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_thathmblnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thathmblnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thathmblnm")
				Me.OnLOCATION_ADDRESS_thathmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thaamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thaamphrnm() As String
		Get
			Return Me._LOCATION_ADDRESS_thaamphrnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thaamphrnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_thaamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thaamphrnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thaamphrnm")
				Me.OnLOCATION_ADDRESS_thaamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thachngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thachngwtnm() As String
		Get
			Return Me._LOCATION_ADDRESS_thachngwtnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thachngwtnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_thachngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thachngwtnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thachngwtnm")
				Me.OnLOCATION_ADDRESS_thachngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_tel", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_tel() As String
		Get
			Return Me._LOCATION_ADDRESS_tel
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_tel, value) = false) Then
				Me.OnLOCATION_ADDRESS_telChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_tel = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_tel")
				Me.OnLOCATION_ADDRESS_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_fax", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_fax() As String
		Get
			Return Me._LOCATION_ADDRESS_fax
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_fax, value) = false) Then
				Me.OnLOCATION_ADDRESS_faxChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_fax = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_fax")
				Me.OnLOCATION_ADDRESS_faxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_lcnsid", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_lcnsid() As String
		Get
			Return Me._LOCATION_ADDRESS_lcnsid
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_lcnsid, value) = false) Then
				Me.OnLOCATION_ADDRESS_lcnsidChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_lcnsid = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_lcnsid")
				Me.OnLOCATION_ADDRESS_lcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engaddr", DbType:="VarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engaddr() As String
		Get
			Return Me._LOCATION_ADDRESS_engaddr
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engaddr, value) = false) Then
				Me.OnLOCATION_ADDRESS_engaddrChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engaddr = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engaddr")
				Me.OnLOCATION_ADDRESS_engaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_tharoom", DbType:="NVarChar(60)")>  _
	Public Property LOCATION_ADDRESS_tharoom() As String
		Get
			Return Me._LOCATION_ADDRESS_tharoom
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_tharoom, value) = false) Then
				Me.OnLOCATION_ADDRESS_tharoomChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_tharoom = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_tharoom")
				Me.OnLOCATION_ADDRESS_tharoomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thafloor", DbType:="NVarChar(60)")>  _
	Public Property LOCATION_ADDRESS_thafloor() As String
		Get
			Return Me._LOCATION_ADDRESS_thafloor
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thafloor, value) = false) Then
				Me.OnLOCATION_ADDRESS_thafloorChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thafloor = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thafloor")
				Me.OnLOCATION_ADDRESS_thafloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thabuilding", DbType:="VarChar(250)")>  _
	Public Property LOCATION_ADDRESS_thabuilding() As String
		Get
			Return Me._LOCATION_ADDRESS_thabuilding
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thabuilding, value) = false) Then
				Me.OnLOCATION_ADDRESS_thabuildingChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thabuilding = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thabuilding")
				Me.OnLOCATION_ADDRESS_thabuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engsoi", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engsoi() As String
		Get
			Return Me._LOCATION_ADDRESS_engsoi
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engsoi, value) = false) Then
				Me.OnLOCATION_ADDRESS_engsoiChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engsoi = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engsoi")
				Me.OnLOCATION_ADDRESS_engsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engroad", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engroad() As String
		Get
			Return Me._LOCATION_ADDRESS_engroad
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engroad, value) = false) Then
				Me.OnLOCATION_ADDRESS_engroadChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engroad = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engroad")
				Me.OnLOCATION_ADDRESS_engroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_zipcode", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_zipcode() As String
		Get
			Return Me._LOCATION_ADDRESS_zipcode
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_zipcode, value) = false) Then
				Me.OnLOCATION_ADDRESS_zipcodeChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_zipcode = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_zipcode")
				Me.OnLOCATION_ADDRESS_zipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_lstfcd", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_lstfcd() As String
		Get
			Return Me._LOCATION_ADDRESS_lstfcd
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_lstfcd, value) = false) Then
				Me.OnLOCATION_ADDRESS_lstfcdChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_lstfcd = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_lstfcd")
				Me.OnLOCATION_ADDRESS_lstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_lmdfdate", DbType:="DateTime")>  _
	Public Property LOCATION_ADDRESS_lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._LOCATION_ADDRESS_lmdfdate
		End Get
		Set
			If (Me._LOCATION_ADDRESS_lmdfdate.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_lmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_lmdfdate = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_lmdfdate")
				Me.OnLOCATION_ADDRESS_lmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_IDA() As String
		Get
			Return Me._LOCATION_ADDRESS_IDA
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_IDA, value) = false) Then
				Me.OnLOCATION_ADDRESS_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_IDA = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_IDA")
				Me.OnLOCATION_ADDRESS_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_FK_IDA() As String
		Get
			Return Me._LOCATION_ADDRESS_FK_IDA
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_FK_IDA, value) = false) Then
				Me.OnLOCATION_ADDRESS_FK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_FK_IDA = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_FK_IDA")
				Me.OnLOCATION_ADDRESS_FK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_TR_ID", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_TR_ID() As String
		Get
			Return Me._LOCATION_ADDRESS_TR_ID
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_TR_ID, value) = false) Then
				Me.OnLOCATION_ADDRESS_TR_IDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_TR_ID = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_TR_ID")
				Me.OnLOCATION_ADDRESS_TR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_DOWN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_DOWN_ID() As String
		Get
			Return Me._LOCATION_ADDRESS_DOWN_ID
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_DOWN_ID, value) = false) Then
				Me.OnLOCATION_ADDRESS_DOWN_IDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_DOWN_ID = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_DOWN_ID")
				Me.OnLOCATION_ADDRESS_DOWN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_CITIZEN_ID() As String
		Get
			Return Me._LOCATION_ADDRESS_CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_CITIZEN_ID, value) = false) Then
				Me.OnLOCATION_ADDRESS_CITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_CITIZEN_ID = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_CITIZEN_ID")
				Me.OnLOCATION_ADDRESS_CITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_CITIZEN_ID_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_CITIZEN_ID_UPLOAD() As String
		Get
			Return Me._LOCATION_ADDRESS_CITIZEN_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_CITIZEN_ID_UPLOAD, value) = false) Then
				Me.OnLOCATION_ADDRESS_CITIZEN_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_CITIZEN_ID_UPLOAD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_CITIZEN_ID_UPLOAD")
				Me.OnLOCATION_ADDRESS_CITIZEN_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_XMLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_XMLNAME() As String
		Get
			Return Me._LOCATION_ADDRESS_XMLNAME
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_XMLNAME, value) = false) Then
				Me.OnLOCATION_ADDRESS_XMLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_XMLNAME = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_XMLNAME")
				Me.OnLOCATION_ADDRESS_XMLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engmu", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engmu() As String
		Get
			Return Me._LOCATION_ADDRESS_engmu
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engmu, value) = false) Then
				Me.OnLOCATION_ADDRESS_engmuChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engmu = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engmu")
				Me.OnLOCATION_ADDRESS_engmuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engfloor", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engfloor() As String
		Get
			Return Me._LOCATION_ADDRESS_engfloor
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engfloor, value) = false) Then
				Me.OnLOCATION_ADDRESS_engfloorChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engfloor = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engfloor")
				Me.OnLOCATION_ADDRESS_engfloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engbuilding", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engbuilding() As String
		Get
			Return Me._LOCATION_ADDRESS_engbuilding
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engbuilding, value) = false) Then
				Me.OnLOCATION_ADDRESS_engbuildingChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engbuilding = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engbuilding")
				Me.OnLOCATION_ADDRESS_engbuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_rcvno", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_rcvno() As String
		Get
			Return Me._LOCATION_ADDRESS_rcvno
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_rcvno, value) = false) Then
				Me.OnLOCATION_ADDRESS_rcvnoChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_rcvno = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_rcvno")
				Me.OnLOCATION_ADDRESS_rcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_rcvdate", DbType:="DateTime")>  _
	Public Property LOCATION_ADDRESS_rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._LOCATION_ADDRESS_rcvdate
		End Get
		Set
			If (Me._LOCATION_ADDRESS_rcvdate.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_rcvdateChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_rcvdate = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_rcvdate")
				Me.OnLOCATION_ADDRESS_rcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_lctcd", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_lctcd() As String
		Get
			Return Me._LOCATION_ADDRESS_lctcd
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_lctcd, value) = false) Then
				Me.OnLOCATION_ADDRESS_lctcdChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_lctcd = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_lctcd")
				Me.OnLOCATION_ADDRESS_lctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engnameplace", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engnameplace() As String
		Get
			Return Me._LOCATION_ADDRESS_engnameplace
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engnameplace, value) = false) Then
				Me.OnLOCATION_ADDRESS_engnameplaceChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engnameplace = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engnameplace")
				Me.OnLOCATION_ADDRESS_engnameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_STATUS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_STATUS_ID() As String
		Get
			Return Me._LOCATION_ADDRESS_STATUS_ID
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_STATUS_ID, value) = false) Then
				Me.OnLOCATION_ADDRESS_STATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_STATUS_ID = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_STATUS_ID")
				Me.OnLOCATION_ADDRESS_STATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_HOUSENO", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_HOUSENO() As String
		Get
			Return Me._LOCATION_ADDRESS_HOUSENO
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_HOUSENO, value) = false) Then
				Me.OnLOCATION_ADDRESS_HOUSENOChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_HOUSENO = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_HOUSENO")
				Me.OnLOCATION_ADDRESS_HOUSENOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_Branch", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_Branch() As String
		Get
			Return Me._LOCATION_ADDRESS_Branch
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_Branch, value) = false) Then
				Me.OnLOCATION_ADDRESS_BranchChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_Branch = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_Branch")
				Me.OnLOCATION_ADDRESS_BranchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_LOCATION_TYPE_NORMAL", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_LOCATION_TYPE_NORMAL() As String
		Get
			Return Me._LOCATION_ADDRESS_LOCATION_TYPE_NORMAL
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_LOCATION_TYPE_NORMAL, value) = false) Then
				Me.OnLOCATION_ADDRESS_LOCATION_TYPE_NORMALChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_LOCATION_TYPE_NORMAL = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_LOCATION_TYPE_NORMAL")
				Me.OnLOCATION_ADDRESS_LOCATION_TYPE_NORMALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_LOCATION_TYPE_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_LOCATION_TYPE_OTHER() As String
		Get
			Return Me._LOCATION_ADDRESS_LOCATION_TYPE_OTHER
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_LOCATION_TYPE_OTHER, value) = false) Then
				Me.OnLOCATION_ADDRESS_LOCATION_TYPE_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_LOCATION_TYPE_OTHER = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_LOCATION_TYPE_OTHER")
				Me.OnLOCATION_ADDRESS_LOCATION_TYPE_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_LOCATION_TYPE_ID", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_LOCATION_TYPE_ID() As String
		Get
			Return Me._LOCATION_ADDRESS_LOCATION_TYPE_ID
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_LOCATION_TYPE_ID, value) = false) Then
				Me.OnLOCATION_ADDRESS_LOCATION_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_LOCATION_TYPE_ID = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_LOCATION_TYPE_ID")
				Me.OnLOCATION_ADDRESS_LOCATION_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_SYSTEM_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_SYSTEM_NAME() As String
		Get
			Return Me._LOCATION_ADDRESS_SYSTEM_NAME
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_SYSTEM_NAME, value) = false) Then
				Me.OnLOCATION_ADDRESS_SYSTEM_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_SYSTEM_NAME = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_SYSTEM_NAME")
				Me.OnLOCATION_ADDRESS_SYSTEM_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thmblcd", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thmblcd() As String
		Get
			Return Me._LOCATION_ADDRESS_thmblcd
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thmblcd, value) = false) Then
				Me.OnLOCATION_ADDRESS_thmblcdChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thmblcd = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thmblcd")
				Me.OnLOCATION_ADDRESS_thmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_chngwtcd", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_chngwtcd() As String
		Get
			Return Me._LOCATION_ADDRESS_chngwtcd
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_chngwtcd, value) = false) Then
				Me.OnLOCATION_ADDRESS_chngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_chngwtcd = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_chngwtcd")
				Me.OnLOCATION_ADDRESS_chngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engthmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engthmblnm() As String
		Get
			Return Me._LOCATION_ADDRESS_engthmblnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engthmblnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_engthmblnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engthmblnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engthmblnm")
				Me.OnLOCATION_ADDRESS_engthmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engamphrnm() As String
		Get
			Return Me._LOCATION_ADDRESS_engamphrnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engamphrnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_engamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engamphrnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engamphrnm")
				Me.OnLOCATION_ADDRESS_engamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engchngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engchngwtnm() As String
		Get
			Return Me._LOCATION_ADDRESS_engchngwtnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engchngwtnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_engchngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engchngwtnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engchngwtnm")
				Me.OnLOCATION_ADDRESS_engchngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_IDENTIFY() As String
		Get
			Return Me._LOCATION_ADDRESS_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_IDENTIFY, value) = false) Then
				Me.OnLOCATION_ADDRESS_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_IDENTIFY = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_IDENTIFY")
				Me.OnLOCATION_ADDRESS_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_REMARK() As String
		Get
			Return Me._LOCATION_ADDRESS_REMARK
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_REMARK, value) = false) Then
				Me.OnLOCATION_ADDRESS_REMARKChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_REMARK = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_REMARK")
				Me.OnLOCATION_ADDRESS_REMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_Mobile", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_Mobile() As String
		Get
			Return Me._LOCATION_ADDRESS_Mobile
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_Mobile, value) = false) Then
				Me.OnLOCATION_ADDRESS_MobileChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_Mobile = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_Mobile")
				Me.OnLOCATION_ADDRESS_MobileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_amphrcd", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_amphrcd() As String
		Get
			Return Me._LOCATION_ADDRESS_amphrcd
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_amphrcd, value) = false) Then
				Me.OnLOCATION_ADDRESS_amphrcdChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_amphrcd = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_amphrcd")
				Me.OnLOCATION_ADDRESS_amphrcdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_NORYORMOR4_DONATE_DETAIL")>  _
Partial Public Class DRUG_NORYORMOR4_DONATE_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _DRSAMP_FK_IDA As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_FK_IDA As System.Nullable(Of Integer)
	
	Private _place_name As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnDRSAMP_FK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRSAMP_FK_IDAChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_FK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_FK_IDAChanged()
    End Sub
    Partial Private Sub Onplace_nameChanging(value As String)
    End Sub
    Partial Private Sub Onplace_nameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRSAMP_FK_IDA", DbType:="Int")>  _
	Public Property DRSAMP_FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._DRSAMP_FK_IDA
		End Get
		Set
			If (Me._DRSAMP_FK_IDA.Equals(value) = false) Then
				Me.OnDRSAMP_FK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._DRSAMP_FK_IDA = value
				Me.SendPropertyChanged("DRSAMP_FK_IDA")
				Me.OnDRSAMP_FK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_FK_IDA", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_FK_IDA
		End Get
		Set
			If (Me._LOCATION_ADDRESS_FK_IDA.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_FK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_FK_IDA = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_FK_IDA")
				Me.OnLOCATION_ADDRESS_FK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_place_name", DbType:="NVarChar(MAX)")>  _
	Public Property place_name() As String
		Get
			Return Me._place_name
		End Get
		Set
			If (String.Equals(Me._place_name, value) = false) Then
				Me.Onplace_nameChanging(value)
				Me.SendPropertyChanging
				Me._place_name = value
				Me.SendPropertyChanged("place_name")
				Me.Onplace_nameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_NORYORMOR_PROOF")>  _
Partial Public Class DRUG_NORYORMOR_PROOF
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_DRSAMP As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _EMAIL_SUBMIT As String
	
	Private _EMAIL2 As String
	
	Private _RCV_NO As String
	
	Private _RCV_DATE As System.Nullable(Of Date)
	
	Private _SENT_DATE As System.Nullable(Of Date)
	
	Private _CHK15D As System.Nullable(Of Boolean)
	
	Private _CHK30D As System.Nullable(Of Boolean)
	
	Private _RCV_PROOF As System.Nullable(Of Boolean)
	
	Private _RCV_PROOF_DATE As System.Nullable(Of Date)
	
	Private _FAKE_NAME As String
	
	Private _REAL_NAME As String
	
	Private _CITIZEN_ID_UPLOAD As String
	
	Private _CITIZEN_ID_AUTHORIZE As String
	
	Private _EXCEED_TIME_LIMIT As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_DRSAMPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_DRSAMPChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnEMAIL_SUBMITChanging(value As String)
    End Sub
    Partial Private Sub OnEMAIL_SUBMITChanged()
    End Sub
    Partial Private Sub OnEMAIL2Changing(value As String)
    End Sub
    Partial Private Sub OnEMAIL2Changed()
    End Sub
    Partial Private Sub OnRCV_NOChanging(value As String)
    End Sub
    Partial Private Sub OnRCV_NOChanged()
    End Sub
    Partial Private Sub OnRCV_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCV_DATEChanged()
    End Sub
    Partial Private Sub OnSENT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSENT_DATEChanged()
    End Sub
    Partial Private Sub OnCHK15DChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCHK15DChanged()
    End Sub
    Partial Private Sub OnCHK30DChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCHK30DChanged()
    End Sub
    Partial Private Sub OnRCV_PROOFChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnRCV_PROOFChanged()
    End Sub
    Partial Private Sub OnRCV_PROOF_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCV_PROOF_DATEChanged()
    End Sub
    Partial Private Sub OnFAKE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFAKE_NAMEChanged()
    End Sub
    Partial Private Sub OnREAL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnREAL_NAMEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnEXCEED_TIME_LIMITChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnEXCEED_TIME_LIMITChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_DRSAMP", DbType:="Int")>  _
	Public Property FK_DRSAMP() As System.Nullable(Of Integer)
		Get
			Return Me._FK_DRSAMP
		End Get
		Set
			If (Me._FK_DRSAMP.Equals(value) = false) Then
				Me.OnFK_DRSAMPChanging(value)
				Me.SendPropertyChanging
				Me._FK_DRSAMP = value
				Me.SendPropertyChanged("FK_DRSAMP")
				Me.OnFK_DRSAMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL_SUBMIT", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL_SUBMIT() As String
		Get
			Return Me._EMAIL_SUBMIT
		End Get
		Set
			If (String.Equals(Me._EMAIL_SUBMIT, value) = false) Then
				Me.OnEMAIL_SUBMITChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL_SUBMIT = value
				Me.SendPropertyChanged("EMAIL_SUBMIT")
				Me.OnEMAIL_SUBMITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL2", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL2() As String
		Get
			Return Me._EMAIL2
		End Get
		Set
			If (String.Equals(Me._EMAIL2, value) = false) Then
				Me.OnEMAIL2Changing(value)
				Me.SendPropertyChanging
				Me._EMAIL2 = value
				Me.SendPropertyChanged("EMAIL2")
				Me.OnEMAIL2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCV_NO", DbType:="NVarChar(50)")>  _
	Public Property RCV_NO() As String
		Get
			Return Me._RCV_NO
		End Get
		Set
			If (String.Equals(Me._RCV_NO, value) = false) Then
				Me.OnRCV_NOChanging(value)
				Me.SendPropertyChanging
				Me._RCV_NO = value
				Me.SendPropertyChanged("RCV_NO")
				Me.OnRCV_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCV_DATE", DbType:="Date")>  _
	Public Property RCV_DATE() As System.Nullable(Of Date)
		Get
			Return Me._RCV_DATE
		End Get
		Set
			If (Me._RCV_DATE.Equals(value) = false) Then
				Me.OnRCV_DATEChanging(value)
				Me.SendPropertyChanging
				Me._RCV_DATE = value
				Me.SendPropertyChanged("RCV_DATE")
				Me.OnRCV_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SENT_DATE", DbType:="Date")>  _
	Public Property SENT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._SENT_DATE
		End Get
		Set
			If (Me._SENT_DATE.Equals(value) = false) Then
				Me.OnSENT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._SENT_DATE = value
				Me.SendPropertyChanged("SENT_DATE")
				Me.OnSENT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK15D", DbType:="Bit")>  _
	Public Property CHK15D() As System.Nullable(Of Boolean)
		Get
			Return Me._CHK15D
		End Get
		Set
			If (Me._CHK15D.Equals(value) = false) Then
				Me.OnCHK15DChanging(value)
				Me.SendPropertyChanging
				Me._CHK15D = value
				Me.SendPropertyChanged("CHK15D")
				Me.OnCHK15DChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK30D", DbType:="Bit")>  _
	Public Property CHK30D() As System.Nullable(Of Boolean)
		Get
			Return Me._CHK30D
		End Get
		Set
			If (Me._CHK30D.Equals(value) = false) Then
				Me.OnCHK30DChanging(value)
				Me.SendPropertyChanging
				Me._CHK30D = value
				Me.SendPropertyChanged("CHK30D")
				Me.OnCHK30DChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCV_PROOF", DbType:="Bit")>  _
	Public Property RCV_PROOF() As System.Nullable(Of Boolean)
		Get
			Return Me._RCV_PROOF
		End Get
		Set
			If (Me._RCV_PROOF.Equals(value) = false) Then
				Me.OnRCV_PROOFChanging(value)
				Me.SendPropertyChanging
				Me._RCV_PROOF = value
				Me.SendPropertyChanged("RCV_PROOF")
				Me.OnRCV_PROOFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCV_PROOF_DATE", DbType:="Date")>  _
	Public Property RCV_PROOF_DATE() As System.Nullable(Of Date)
		Get
			Return Me._RCV_PROOF_DATE
		End Get
		Set
			If (Me._RCV_PROOF_DATE.Equals(value) = false) Then
				Me.OnRCV_PROOF_DATEChanging(value)
				Me.SendPropertyChanging
				Me._RCV_PROOF_DATE = value
				Me.SendPropertyChanged("RCV_PROOF_DATE")
				Me.OnRCV_PROOF_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAKE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FAKE_NAME() As String
		Get
			Return Me._FAKE_NAME
		End Get
		Set
			If (String.Equals(Me._FAKE_NAME, value) = false) Then
				Me.OnFAKE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FAKE_NAME = value
				Me.SendPropertyChanged("FAKE_NAME")
				Me.OnFAKE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REAL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property REAL_NAME() As String
		Get
			Return Me._REAL_NAME
		End Get
		Set
			If (String.Equals(Me._REAL_NAME, value) = false) Then
				Me.OnREAL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._REAL_NAME = value
				Me.SendPropertyChanged("REAL_NAME")
				Me.OnREAL_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_UPLOAD", DbType:="NVarChar(20)")>  _
	Public Property CITIZEN_ID_UPLOAD() As String
		Get
			Return Me._CITIZEN_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_UPLOAD, value) = false) Then
				Me.OnCITIZEN_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_ID_UPLOAD")
				Me.OnCITIZEN_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_AUTHORIZE", DbType:="NVarChar(20)")>  _
	Public Property CITIZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_ID_AUTHORIZE")
				Me.OnCITIZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXCEED_TIME_LIMIT", DbType:="Bit")>  _
	Public Property EXCEED_TIME_LIMIT() As System.Nullable(Of Boolean)
		Get
			Return Me._EXCEED_TIME_LIMIT
		End Get
		Set
			If (Me._EXCEED_TIME_LIMIT.Equals(value) = false) Then
				Me.OnEXCEED_TIME_LIMITChanging(value)
				Me.SendPropertyChanging
				Me._EXCEED_TIME_LIMIT = value
				Me.SendPropertyChanged("EXCEED_TIME_LIMIT")
				Me.OnEXCEED_TIME_LIMITChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ADMIN_BUTTON")>  _
Partial Public Class MAS_ADMIN_BUTTON
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _BTN_NAME As String
	
	Private _BTN_URL As String
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _BTN_GROUP As System.Nullable(Of Integer)
	
	Private _IDgroup As System.Nullable(Of Integer)
	
	Private _type_g As System.Nullable(Of Integer)
	
	Private _ADMIN_GROUP As System.Nullable(Of Integer)
	
	Private _TARGET As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnBTN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBTN_NAMEChanged()
    End Sub
    Partial Private Sub OnBTN_URLChanging(value As String)
    End Sub
    Partial Private Sub OnBTN_URLChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnBTN_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBTN_GROUPChanged()
    End Sub
    Partial Private Sub OnIDgroupChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDgroupChanged()
    End Sub
    Partial Private Sub Ontype_gChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ontype_gChanged()
    End Sub
    Partial Private Sub OnADMIN_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnADMIN_GROUPChanged()
    End Sub
    Partial Private Sub OnTARGETChanging(value As String)
    End Sub
    Partial Private Sub OnTARGETChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BTN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BTN_NAME() As String
		Get
			Return Me._BTN_NAME
		End Get
		Set
			If (String.Equals(Me._BTN_NAME, value) = false) Then
				Me.OnBTN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BTN_NAME = value
				Me.SendPropertyChanged("BTN_NAME")
				Me.OnBTN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BTN_URL", DbType:="NVarChar(MAX)")>  _
	Public Property BTN_URL() As String
		Get
			Return Me._BTN_URL
		End Get
		Set
			If (String.Equals(Me._BTN_URL, value) = false) Then
				Me.OnBTN_URLChanging(value)
				Me.SendPropertyChanging
				Me._BTN_URL = value
				Me.SendPropertyChanged("BTN_URL")
				Me.OnBTN_URLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BTN_GROUP", DbType:="Int")>  _
	Public Property BTN_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._BTN_GROUP
		End Get
		Set
			If (Me._BTN_GROUP.Equals(value) = false) Then
				Me.OnBTN_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._BTN_GROUP = value
				Me.SendPropertyChanged("BTN_GROUP")
				Me.OnBTN_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDgroup", DbType:="Int")>  _
	Public Property IDgroup() As System.Nullable(Of Integer)
		Get
			Return Me._IDgroup
		End Get
		Set
			If (Me._IDgroup.Equals(value) = false) Then
				Me.OnIDgroupChanging(value)
				Me.SendPropertyChanging
				Me._IDgroup = value
				Me.SendPropertyChanged("IDgroup")
				Me.OnIDgroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type_g", DbType:="Int")>  _
	Public Property type_g() As System.Nullable(Of Integer)
		Get
			Return Me._type_g
		End Get
		Set
			If (Me._type_g.Equals(value) = false) Then
				Me.Ontype_gChanging(value)
				Me.SendPropertyChanging
				Me._type_g = value
				Me.SendPropertyChanged("type_g")
				Me.Ontype_gChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMIN_GROUP", DbType:="Int")>  _
	Public Property ADMIN_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._ADMIN_GROUP
		End Get
		Set
			If (Me._ADMIN_GROUP.Equals(value) = false) Then
				Me.OnADMIN_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._ADMIN_GROUP = value
				Me.SendPropertyChanged("ADMIN_GROUP")
				Me.OnADMIN_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TARGET", DbType:="NVarChar(50)")>  _
	Public Property TARGET() As String
		Get
			Return Me._TARGET
		End Get
		Set
			If (String.Equals(Me._TARGET, value) = false) Then
				Me.OnTARGETChanging(value)
				Me.SendPropertyChanging
				Me._TARGET = value
				Me.SendPropertyChanged("TARGET")
				Me.OnTARGETChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drdrgtype")>  _
Partial Public Class drdrgtype
	
	Private _drgtpcd As String
	
	Private _thadrgtpnm As String
	
	Private _engdrgtpnm As String
	
	Private _drgtpabbr As String
	
	Private _useinpvn As Short
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me._drgtpcd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadrgtpnm", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property thadrgtpnm() As String
		Get
			Return Me._thadrgtpnm
		End Get
		Set
			If (String.Equals(Me._thadrgtpnm, value) = false) Then
				Me._thadrgtpnm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgtpnm", DbType:="VarChar(50)")>  _
	Public Property engdrgtpnm() As String
		Get
			Return Me._engdrgtpnm
		End Get
		Set
			If (String.Equals(Me._engdrgtpnm, value) = false) Then
				Me._engdrgtpnm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpabbr", DbType:="VarChar(5)")>  _
	Public Property drgtpabbr() As String
		Get
			Return Me._drgtpabbr
		End Get
		Set
			If (String.Equals(Me._drgtpabbr, value) = false) Then
				Me._drgtpabbr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_useinpvn", DbType:="SmallInt NOT NULL")>  _
	Public Property useinpvn() As Short
		Get
			Return Me._useinpvn
		End Get
		Set
			If ((Me._useinpvn = value)  _
						= false) Then
				Me._useinpvn = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_REGISTRATION_PROP_AND_DETAIL")>  _
Partial Public Class DRUG_REGISTRATION_PROP_AND_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _ROWS As String
	
	Private _DRUG_PROPERTIES_AND_DETAIL As String
	
	Private _OTHER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnROWSChanging(value As String)
    End Sub
    Partial Private Sub OnROWSChanged()
    End Sub
    Partial Private Sub OnDRUG_PROPERTIES_AND_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_PROPERTIES_AND_DETAILChanged()
    End Sub
    Partial Private Sub OnOTHERChanging(value As String)
    End Sub
    Partial Private Sub OnOTHERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROWS", DbType:="NVarChar(50)")>  _
	Public Property ROWS() As String
		Get
			Return Me._ROWS
		End Get
		Set
			If (String.Equals(Me._ROWS, value) = false) Then
				Me.OnROWSChanging(value)
				Me.SendPropertyChanging
				Me._ROWS = value
				Me.SendPropertyChanged("ROWS")
				Me.OnROWSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_PROPERTIES_AND_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_PROPERTIES_AND_DETAIL() As String
		Get
			Return Me._DRUG_PROPERTIES_AND_DETAIL
		End Get
		Set
			If (String.Equals(Me._DRUG_PROPERTIES_AND_DETAIL, value) = false) Then
				Me.OnDRUG_PROPERTIES_AND_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_PROPERTIES_AND_DETAIL = value
				Me.SendPropertyChanged("DRUG_PROPERTIES_AND_DETAIL")
				Me.OnDRUG_PROPERTIES_AND_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER() As String
		Get
			Return Me._OTHER
		End Get
		Set
			If (String.Equals(Me._OTHER, value) = false) Then
				Me.OnOTHERChanging(value)
				Me.SendPropertyChanging
				Me._OTHER = value
				Me.SendPropertyChanged("OTHER")
				Me.OnOTHERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_PROPERTIES_AND_DETAIL")>  _
Partial Public Class DRRGT_PROPERTIES_AND_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _ROWS As String
	
	Private _DRUG_PROPERTIES_AND_DETAIL As String
	
	Private _OTHER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnROWSChanging(value As String)
    End Sub
    Partial Private Sub OnROWSChanged()
    End Sub
    Partial Private Sub OnDRUG_PROPERTIES_AND_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_PROPERTIES_AND_DETAILChanged()
    End Sub
    Partial Private Sub OnOTHERChanging(value As String)
    End Sub
    Partial Private Sub OnOTHERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROWS", DbType:="NVarChar(50)")>  _
	Public Property ROWS() As String
		Get
			Return Me._ROWS
		End Get
		Set
			If (String.Equals(Me._ROWS, value) = false) Then
				Me.OnROWSChanging(value)
				Me.SendPropertyChanging
				Me._ROWS = value
				Me.SendPropertyChanged("ROWS")
				Me.OnROWSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_PROPERTIES_AND_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_PROPERTIES_AND_DETAIL() As String
		Get
			Return Me._DRUG_PROPERTIES_AND_DETAIL
		End Get
		Set
			If (String.Equals(Me._DRUG_PROPERTIES_AND_DETAIL, value) = false) Then
				Me.OnDRUG_PROPERTIES_AND_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_PROPERTIES_AND_DETAIL = value
				Me.SendPropertyChanged("DRUG_PROPERTIES_AND_DETAIL")
				Me.OnDRUG_PROPERTIES_AND_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER() As String
		Get
			Return Me._OTHER
		End Get
		Set
			If (String.Equals(Me._OTHER, value) = false) Then
				Me.OnOTHERChanging(value)
				Me.SendPropertyChanging
				Me._OTHER = value
				Me.SendPropertyChanged("OTHER")
				Me.OnOTHERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TABEAN_TEMPLATE")>  _
Partial Public Class MAS_TABEAN_TEMPLATE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TEMPLATE_TYPE As System.Nullable(Of Integer)
	
	Private _FIELD_DESCRIPTION As String
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _REPLACE_TEXT As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTEMPLATE_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTEMPLATE_TYPEChanged()
    End Sub
    Partial Private Sub OnFIELD_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnFIELD_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnREPLACE_TEXTChanging(value As String)
    End Sub
    Partial Private Sub OnREPLACE_TEXTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPLATE_TYPE", DbType:="Int")>  _
	Public Property TEMPLATE_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._TEMPLATE_TYPE
		End Get
		Set
			If (Me._TEMPLATE_TYPE.Equals(value) = false) Then
				Me.OnTEMPLATE_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._TEMPLATE_TYPE = value
				Me.SendPropertyChanged("TEMPLATE_TYPE")
				Me.OnTEMPLATE_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIELD_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property FIELD_DESCRIPTION() As String
		Get
			Return Me._FIELD_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._FIELD_DESCRIPTION, value) = false) Then
				Me.OnFIELD_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._FIELD_DESCRIPTION = value
				Me.SendPropertyChanged("FIELD_DESCRIPTION")
				Me.OnFIELD_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REPLACE_TEXT", DbType:="NVarChar(50)")>  _
	Public Property REPLACE_TEXT() As String
		Get
			Return Me._REPLACE_TEXT
		End Get
		Set
			If (String.Equals(Me._REPLACE_TEXT, value) = false) Then
				Me.OnREPLACE_TEXTChanging(value)
				Me.SendPropertyChanging
				Me._REPLACE_TEXT = value
				Me.SendPropertyChanged("REPLACE_TEXT")
				Me.OnREPLACE_TEXTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_DRUG_GROUP")>  _
Partial Public Class DRRGT_DRUG_GROUP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _rgttpcd As String
	
	Private _thargttpnm As String
	
	Private _engrgttpnm As String
	
	Private _grptpcd As System.Nullable(Of Integer)
	
	Private _subtpcd As System.Nullable(Of Integer)
	
	Private _sorm As System.Nullable(Of Integer)
	
	Private _useinpvn As System.Nullable(Of Integer)
	
	Private _thargttpnm_short As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnthargttpnmChanging(value As String)
    End Sub
    Partial Private Sub OnthargttpnmChanged()
    End Sub
    Partial Private Sub OnengrgttpnmChanging(value As String)
    End Sub
    Partial Private Sub OnengrgttpnmChanged()
    End Sub
    Partial Private Sub OngrptpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OngrptpcdChanged()
    End Sub
    Partial Private Sub OnsubtpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsubtpcdChanged()
    End Sub
    Partial Private Sub OnsormChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsormChanged()
    End Sub
    Partial Private Sub OnuseinpvnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnuseinpvnChanged()
    End Sub
    Partial Private Sub Onthargttpnm_shortChanging(value As String)
    End Sub
    Partial Private Sub Onthargttpnm_shortChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thargttpnm", DbType:="NVarChar(MAX)")>  _
	Public Property thargttpnm() As String
		Get
			Return Me._thargttpnm
		End Get
		Set
			If (String.Equals(Me._thargttpnm, value) = false) Then
				Me.OnthargttpnmChanging(value)
				Me.SendPropertyChanging
				Me._thargttpnm = value
				Me.SendPropertyChanged("thargttpnm")
				Me.OnthargttpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engrgttpnm", DbType:="NVarChar(MAX)")>  _
	Public Property engrgttpnm() As String
		Get
			Return Me._engrgttpnm
		End Get
		Set
			If (String.Equals(Me._engrgttpnm, value) = false) Then
				Me.OnengrgttpnmChanging(value)
				Me.SendPropertyChanging
				Me._engrgttpnm = value
				Me.SendPropertyChanged("engrgttpnm")
				Me.OnengrgttpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grptpcd", DbType:="Int")>  _
	Public Property grptpcd() As System.Nullable(Of Integer)
		Get
			Return Me._grptpcd
		End Get
		Set
			If (Me._grptpcd.Equals(value) = false) Then
				Me.OngrptpcdChanging(value)
				Me.SendPropertyChanging
				Me._grptpcd = value
				Me.SendPropertyChanged("grptpcd")
				Me.OngrptpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_subtpcd", DbType:="Int")>  _
	Public Property subtpcd() As System.Nullable(Of Integer)
		Get
			Return Me._subtpcd
		End Get
		Set
			If (Me._subtpcd.Equals(value) = false) Then
				Me.OnsubtpcdChanging(value)
				Me.SendPropertyChanging
				Me._subtpcd = value
				Me.SendPropertyChanged("subtpcd")
				Me.OnsubtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sorm", DbType:="Int")>  _
	Public Property sorm() As System.Nullable(Of Integer)
		Get
			Return Me._sorm
		End Get
		Set
			If (Me._sorm.Equals(value) = false) Then
				Me.OnsormChanging(value)
				Me.SendPropertyChanging
				Me._sorm = value
				Me.SendPropertyChanged("sorm")
				Me.OnsormChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_useinpvn", DbType:="Int")>  _
	Public Property useinpvn() As System.Nullable(Of Integer)
		Get
			Return Me._useinpvn
		End Get
		Set
			If (Me._useinpvn.Equals(value) = false) Then
				Me.OnuseinpvnChanging(value)
				Me.SendPropertyChanging
				Me._useinpvn = value
				Me.SendPropertyChanged("useinpvn")
				Me.OnuseinpvnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thargttpnm_short", DbType:="NVarChar(MAX)")>  _
	Public Property thargttpnm_short() As String
		Get
			Return Me._thargttpnm_short
		End Get
		Set
			If (String.Equals(Me._thargttpnm_short, value) = false) Then
				Me.Onthargttpnm_shortChanging(value)
				Me.SendPropertyChanging
				Me._thargttpnm_short = value
				Me.SendPropertyChanged("thargttpnm_short")
				Me.Onthargttpnm_shortChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ATC_DRUG")>  _
Partial Public Class ATC_DRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _atccd As String
	
	Private _atcnm As String
	
	Private _version_update As String
	
	Private _is_active As System.Nullable(Of Integer)
	
	Private _DDD As String
	
	Private _UNIT_CD As String
	
	Private _Adm_R As String
	
	Private _Comment_txt As String
	
	Private _MAIN_REF As String
	
	Private _create_date As System.Nullable(Of Date)
	
	Private _citizen_id_update As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnatccdChanging(value As String)
    End Sub
    Partial Private Sub OnatccdChanged()
    End Sub
    Partial Private Sub OnatcnmChanging(value As String)
    End Sub
    Partial Private Sub OnatcnmChanged()
    End Sub
    Partial Private Sub Onversion_updateChanging(value As String)
    End Sub
    Partial Private Sub Onversion_updateChanged()
    End Sub
    Partial Private Sub Onis_activeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onis_activeChanged()
    End Sub
    Partial Private Sub OnDDDChanging(value As String)
    End Sub
    Partial Private Sub OnDDDChanged()
    End Sub
    Partial Private Sub OnUNIT_CDChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_CDChanged()
    End Sub
    Partial Private Sub OnAdm_RChanging(value As String)
    End Sub
    Partial Private Sub OnAdm_RChanged()
    End Sub
    Partial Private Sub OnComment_txtChanging(value As String)
    End Sub
    Partial Private Sub OnComment_txtChanged()
    End Sub
    Partial Private Sub OnMAIN_REFChanging(value As String)
    End Sub
    Partial Private Sub OnMAIN_REFChanged()
    End Sub
    Partial Private Sub Oncreate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreate_dateChanged()
    End Sub
    Partial Private Sub Oncitizen_id_updateChanging(value As String)
    End Sub
    Partial Private Sub Oncitizen_id_updateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_atccd", DbType:="NVarChar(MAX)")>  _
	Public Property atccd() As String
		Get
			Return Me._atccd
		End Get
		Set
			If (String.Equals(Me._atccd, value) = false) Then
				Me.OnatccdChanging(value)
				Me.SendPropertyChanging
				Me._atccd = value
				Me.SendPropertyChanged("atccd")
				Me.OnatccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_atcnm", DbType:="NVarChar(MAX)")>  _
	Public Property atcnm() As String
		Get
			Return Me._atcnm
		End Get
		Set
			If (String.Equals(Me._atcnm, value) = false) Then
				Me.OnatcnmChanging(value)
				Me.SendPropertyChanging
				Me._atcnm = value
				Me.SendPropertyChanged("atcnm")
				Me.OnatcnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_version_update", DbType:="NVarChar(MAX)")>  _
	Public Property version_update() As String
		Get
			Return Me._version_update
		End Get
		Set
			If (String.Equals(Me._version_update, value) = false) Then
				Me.Onversion_updateChanging(value)
				Me.SendPropertyChanging
				Me._version_update = value
				Me.SendPropertyChanged("version_update")
				Me.Onversion_updateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_is_active", DbType:="Int")>  _
	Public Property is_active() As System.Nullable(Of Integer)
		Get
			Return Me._is_active
		End Get
		Set
			If (Me._is_active.Equals(value) = false) Then
				Me.Onis_activeChanging(value)
				Me.SendPropertyChanging
				Me._is_active = value
				Me.SendPropertyChanged("is_active")
				Me.Onis_activeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DDD", DbType:="NVarChar(MAX)")>  _
	Public Property DDD() As String
		Get
			Return Me._DDD
		End Get
		Set
			If (String.Equals(Me._DDD, value) = false) Then
				Me.OnDDDChanging(value)
				Me.SendPropertyChanging
				Me._DDD = value
				Me.SendPropertyChanged("DDD")
				Me.OnDDDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_CD", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_CD() As String
		Get
			Return Me._UNIT_CD
		End Get
		Set
			If (String.Equals(Me._UNIT_CD, value) = false) Then
				Me.OnUNIT_CDChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_CD = value
				Me.SendPropertyChanged("UNIT_CD")
				Me.OnUNIT_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Adm_R", DbType:="NVarChar(MAX)")>  _
	Public Property Adm_R() As String
		Get
			Return Me._Adm_R
		End Get
		Set
			If (String.Equals(Me._Adm_R, value) = false) Then
				Me.OnAdm_RChanging(value)
				Me.SendPropertyChanging
				Me._Adm_R = value
				Me.SendPropertyChanged("Adm_R")
				Me.OnAdm_RChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comment_txt", DbType:="NVarChar(MAX)")>  _
	Public Property Comment_txt() As String
		Get
			Return Me._Comment_txt
		End Get
		Set
			If (String.Equals(Me._Comment_txt, value) = false) Then
				Me.OnComment_txtChanging(value)
				Me.SendPropertyChanging
				Me._Comment_txt = value
				Me.SendPropertyChanged("Comment_txt")
				Me.OnComment_txtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAIN_REF", DbType:="NVarChar(MAX)")>  _
	Public Property MAIN_REF() As String
		Get
			Return Me._MAIN_REF
		End Get
		Set
			If (String.Equals(Me._MAIN_REF, value) = false) Then
				Me.OnMAIN_REFChanging(value)
				Me.SendPropertyChanging
				Me._MAIN_REF = value
				Me.SendPropertyChanged("MAIN_REF")
				Me.OnMAIN_REFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_create_date", DbType:="DateTime")>  _
	Public Property create_date() As System.Nullable(Of Date)
		Get
			Return Me._create_date
		End Get
		Set
			If (Me._create_date.Equals(value) = false) Then
				Me.Oncreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._create_date = value
				Me.SendPropertyChanged("create_date")
				Me.Oncreate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_citizen_id_update", DbType:="NVarChar(50)")>  _
	Public Property citizen_id_update() As String
		Get
			Return Me._citizen_id_update
		End Get
		Set
			If (String.Equals(Me._citizen_id_update, value) = false) Then
				Me.Oncitizen_id_updateChanging(value)
				Me.SendPropertyChanging
				Me._citizen_id_update = value
				Me.SendPropertyChanged("citizen_id_update")
				Me.Oncitizen_id_updateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_PRODUCER_OTHER")>  _
Partial Public Class DRRGT_PRODUCER_OTHER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _REFERENCE_GMP As String
	
	Private _PRODUCER_WORK_TYPE As String
	
	Private _FK_PRODUCER As String
	
	Private _addr_ida As String
	
	Private _funccd As String
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rcvno As String
	
	Private _frgncd As String
	
	Private _frgnlctcd As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnREFERENCE_GMPChanging(value As String)
    End Sub
    Partial Private Sub OnREFERENCE_GMPChanged()
    End Sub
    Partial Private Sub OnPRODUCER_WORK_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCER_WORK_TYPEChanged()
    End Sub
    Partial Private Sub OnFK_PRODUCERChanging(value As String)
    End Sub
    Partial Private Sub OnFK_PRODUCERChanged()
    End Sub
    Partial Private Sub Onaddr_idaChanging(value As String)
    End Sub
    Partial Private Sub Onaddr_idaChanged()
    End Sub
    Partial Private Sub OnfunccdChanging(value As String)
    End Sub
    Partial Private Sub OnfunccdChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnfrgncdChanging(value As String)
    End Sub
    Partial Private Sub OnfrgncdChanged()
    End Sub
    Partial Private Sub OnfrgnlctcdChanging(value As String)
    End Sub
    Partial Private Sub OnfrgnlctcdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REFERENCE_GMP", DbType:="NVarChar(MAX)")>  _
	Public Property REFERENCE_GMP() As String
		Get
			Return Me._REFERENCE_GMP
		End Get
		Set
			If (String.Equals(Me._REFERENCE_GMP, value) = false) Then
				Me.OnREFERENCE_GMPChanging(value)
				Me.SendPropertyChanging
				Me._REFERENCE_GMP = value
				Me.SendPropertyChanged("REFERENCE_GMP")
				Me.OnREFERENCE_GMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCER_WORK_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCER_WORK_TYPE() As String
		Get
			Return Me._PRODUCER_WORK_TYPE
		End Get
		Set
			If (String.Equals(Me._PRODUCER_WORK_TYPE, value) = false) Then
				Me.OnPRODUCER_WORK_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCER_WORK_TYPE = value
				Me.SendPropertyChanged("PRODUCER_WORK_TYPE")
				Me.OnPRODUCER_WORK_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PRODUCER", DbType:="NVarChar(MAX)")>  _
	Public Property FK_PRODUCER() As String
		Get
			Return Me._FK_PRODUCER
		End Get
		Set
			If (String.Equals(Me._FK_PRODUCER, value) = false) Then
				Me.OnFK_PRODUCERChanging(value)
				Me.SendPropertyChanging
				Me._FK_PRODUCER = value
				Me.SendPropertyChanged("FK_PRODUCER")
				Me.OnFK_PRODUCERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_addr_ida", DbType:="NVarChar(MAX)")>  _
	Public Property addr_ida() As String
		Get
			Return Me._addr_ida
		End Get
		Set
			If (String.Equals(Me._addr_ida, value) = false) Then
				Me.Onaddr_idaChanging(value)
				Me.SendPropertyChanging
				Me._addr_ida = value
				Me.SendPropertyChanged("addr_ida")
				Me.Onaddr_idaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_funccd", DbType:="NVarChar(50)")>  _
	Public Property funccd() As String
		Get
			Return Me._funccd
		End Get
		Set
			If (String.Equals(Me._funccd, value) = false) Then
				Me.OnfunccdChanging(value)
				Me.SendPropertyChanging
				Me._funccd = value
				Me.SendPropertyChanged("funccd")
				Me.OnfunccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(MAX)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(MAX)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd", DbType:="NVarChar(MAX)")>  _
	Public Property frgncd() As String
		Get
			Return Me._frgncd
		End Get
		Set
			If (String.Equals(Me._frgncd, value) = false) Then
				Me.OnfrgncdChanging(value)
				Me.SendPropertyChanging
				Me._frgncd = value
				Me.SendPropertyChanged("frgncd")
				Me.OnfrgncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgnlctcd", DbType:="NVarChar(MAX)")>  _
	Public Property frgnlctcd() As String
		Get
			Return Me._frgnlctcd
		End Get
		Set
			If (String.Equals(Me._frgnlctcd, value) = false) Then
				Me.OnfrgnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._frgnlctcd = value
				Me.SendPropertyChanged("frgnlctcd")
				Me.OnfrgnlctcdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_PRODUCER_IN")>  _
Partial Public Class DRRGT_PRODUCER_IN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _lpvncd As String
	
	Private _lcntpcd As String
	
	Private _lcnno As String
	
	Private _phm15dgt As String
	
	Private _funccd As String
	
	Private _lcnsid As String
	
	Private _lcnscd As String
	
	Private _lctnmcd As String
	
	Private _lctcd As String
	
	Private _FK_LCN_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnlpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnlpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub Onphm15dgtChanging(value As String)
    End Sub
    Partial Private Sub Onphm15dgtChanged()
    End Sub
    Partial Private Sub OnfunccdChanging(value As String)
    End Sub
    Partial Private Sub OnfunccdChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As String)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As String)
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnlctnmcdChanging(value As String)
    End Sub
    Partial Private Sub OnlctnmcdChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As String)
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnFK_LCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_LCN_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lpvncd", DbType:="NVarChar(50)")>  _
	Public Property lpvncd() As String
		Get
			Return Me._lpvncd
		End Get
		Set
			If (String.Equals(Me._lpvncd, value) = false) Then
				Me.OnlpvncdChanging(value)
				Me.SendPropertyChanging
				Me._lpvncd = value
				Me.SendPropertyChanged("lpvncd")
				Me.OnlpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(50)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(50)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phm15dgt", DbType:="NVarChar(50)")>  _
	Public Property phm15dgt() As String
		Get
			Return Me._phm15dgt
		End Get
		Set
			If (String.Equals(Me._phm15dgt, value) = false) Then
				Me.Onphm15dgtChanging(value)
				Me.SendPropertyChanging
				Me._phm15dgt = value
				Me.SendPropertyChanged("phm15dgt")
				Me.Onphm15dgtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_funccd", DbType:="NVarChar(50)")>  _
	Public Property funccd() As String
		Get
			Return Me._funccd
		End Get
		Set
			If (String.Equals(Me._funccd, value) = false) Then
				Me.OnfunccdChanging(value)
				Me.SendPropertyChanging
				Me._funccd = value
				Me.SendPropertyChanged("funccd")
				Me.OnfunccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="NVarChar(50)")>  _
	Public Property lcnsid() As String
		Get
			Return Me._lcnsid
		End Get
		Set
			If (String.Equals(Me._lcnsid, value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="NVarChar(50)")>  _
	Public Property lcnscd() As String
		Get
			Return Me._lcnscd
		End Get
		Set
			If (String.Equals(Me._lcnscd, value) = false) Then
				Me.OnlcnscdChanging(value)
				Me.SendPropertyChanging
				Me._lcnscd = value
				Me.SendPropertyChanged("lcnscd")
				Me.OnlcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmcd", DbType:="NVarChar(50)")>  _
	Public Property lctnmcd() As String
		Get
			Return Me._lctnmcd
		End Get
		Set
			If (String.Equals(Me._lctnmcd, value) = false) Then
				Me.OnlctnmcdChanging(value)
				Me.SendPropertyChanging
				Me._lctnmcd = value
				Me.SendPropertyChanged("lctnmcd")
				Me.OnlctnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="NVarChar(50)")>  _
	Public Property lctcd() As String
		Get
			Return Me._lctcd
		End Get
		Set
			If (String.Equals(Me._lctcd, value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_LCN_IDA", DbType:="Int")>  _
	Public Property FK_LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_LCN_IDA
		End Get
		Set
			If (Me._FK_LCN_IDA.Equals(value) = false) Then
				Me.OnFK_LCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_LCN_IDA = value
				Me.SendPropertyChanged("FK_LCN_IDA")
				Me.OnFK_LCN_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_CONDITION")>  _
Partial Public Class DRRGT_CONDITION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _CONDITION1 As String
	
	Private _CONDITION2 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnCONDITION1Changing(value As String)
    End Sub
    Partial Private Sub OnCONDITION1Changed()
    End Sub
    Partial Private Sub OnCONDITION2Changing(value As String)
    End Sub
    Partial Private Sub OnCONDITION2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION1", DbType:="NVarChar(MAX)")>  _
	Public Property CONDITION1() As String
		Get
			Return Me._CONDITION1
		End Get
		Set
			If (String.Equals(Me._CONDITION1, value) = false) Then
				Me.OnCONDITION1Changing(value)
				Me.SendPropertyChanging
				Me._CONDITION1 = value
				Me.SendPropertyChanged("CONDITION1")
				Me.OnCONDITION1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION2", DbType:="NVarChar(MAX)")>  _
	Public Property CONDITION2() As String
		Get
			Return Me._CONDITION2
		End Get
		Set
			If (String.Equals(Me._CONDITION2, value) = false) Then
				Me.OnCONDITION2Changing(value)
				Me.SendPropertyChanging
				Me._CONDITION2 = value
				Me.SendPropertyChanged("CONDITION2")
				Me.OnCONDITION2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_REGISTRATION_COLOR")>  _
Partial Public Class DRUG_REGISTRATION_COLOR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _COLOR1 As String
	
	Private _COLOR2 As String
	
	Private _COLOR3 As String
	
	Private _COLOR4 As String
	
	Private _COLOR_NAME1 As String
	
	Private _COLOR_NAME2 As String
	
	Private _COLOR_NAME3 As String
	
	Private _COLOR_NAME4 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnCOLOR1Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR1Changed()
    End Sub
    Partial Private Sub OnCOLOR2Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR2Changed()
    End Sub
    Partial Private Sub OnCOLOR3Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR3Changed()
    End Sub
    Partial Private Sub OnCOLOR4Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR4Changed()
    End Sub
    Partial Private Sub OnCOLOR_NAME1Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR_NAME1Changed()
    End Sub
    Partial Private Sub OnCOLOR_NAME2Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR_NAME2Changed()
    End Sub
    Partial Private Sub OnCOLOR_NAME3Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR_NAME3Changed()
    End Sub
    Partial Private Sub OnCOLOR_NAME4Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR_NAME4Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR1", DbType:="NVarChar(50)")>  _
	Public Property COLOR1() As String
		Get
			Return Me._COLOR1
		End Get
		Set
			If (String.Equals(Me._COLOR1, value) = false) Then
				Me.OnCOLOR1Changing(value)
				Me.SendPropertyChanging
				Me._COLOR1 = value
				Me.SendPropertyChanged("COLOR1")
				Me.OnCOLOR1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR2", DbType:="NVarChar(50)")>  _
	Public Property COLOR2() As String
		Get
			Return Me._COLOR2
		End Get
		Set
			If (String.Equals(Me._COLOR2, value) = false) Then
				Me.OnCOLOR2Changing(value)
				Me.SendPropertyChanging
				Me._COLOR2 = value
				Me.SendPropertyChanged("COLOR2")
				Me.OnCOLOR2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR3", DbType:="NVarChar(50)")>  _
	Public Property COLOR3() As String
		Get
			Return Me._COLOR3
		End Get
		Set
			If (String.Equals(Me._COLOR3, value) = false) Then
				Me.OnCOLOR3Changing(value)
				Me.SendPropertyChanging
				Me._COLOR3 = value
				Me.SendPropertyChanged("COLOR3")
				Me.OnCOLOR3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR4", DbType:="NVarChar(50)")>  _
	Public Property COLOR4() As String
		Get
			Return Me._COLOR4
		End Get
		Set
			If (String.Equals(Me._COLOR4, value) = false) Then
				Me.OnCOLOR4Changing(value)
				Me.SendPropertyChanging
				Me._COLOR4 = value
				Me.SendPropertyChanged("COLOR4")
				Me.OnCOLOR4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR_NAME1", DbType:="NVarChar(50)")>  _
	Public Property COLOR_NAME1() As String
		Get
			Return Me._COLOR_NAME1
		End Get
		Set
			If (String.Equals(Me._COLOR_NAME1, value) = false) Then
				Me.OnCOLOR_NAME1Changing(value)
				Me.SendPropertyChanging
				Me._COLOR_NAME1 = value
				Me.SendPropertyChanged("COLOR_NAME1")
				Me.OnCOLOR_NAME1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR_NAME2", DbType:="NVarChar(50)")>  _
	Public Property COLOR_NAME2() As String
		Get
			Return Me._COLOR_NAME2
		End Get
		Set
			If (String.Equals(Me._COLOR_NAME2, value) = false) Then
				Me.OnCOLOR_NAME2Changing(value)
				Me.SendPropertyChanging
				Me._COLOR_NAME2 = value
				Me.SendPropertyChanged("COLOR_NAME2")
				Me.OnCOLOR_NAME2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR_NAME3", DbType:="NVarChar(50)")>  _
	Public Property COLOR_NAME3() As String
		Get
			Return Me._COLOR_NAME3
		End Get
		Set
			If (String.Equals(Me._COLOR_NAME3, value) = false) Then
				Me.OnCOLOR_NAME3Changing(value)
				Me.SendPropertyChanging
				Me._COLOR_NAME3 = value
				Me.SendPropertyChanged("COLOR_NAME3")
				Me.OnCOLOR_NAME3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR_NAME4", DbType:="NVarChar(50)")>  _
	Public Property COLOR_NAME4() As String
		Get
			Return Me._COLOR_NAME4
		End Get
		Set
			If (String.Equals(Me._COLOR_NAME4, value) = false) Then
				Me.OnCOLOR_NAME4Changing(value)
				Me.SendPropertyChanging
				Me._COLOR_NAME4 = value
				Me.SendPropertyChanged("COLOR_NAME4")
				Me.OnCOLOR_NAME4Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_PRODUCER")>  _
Partial Public Class DRRGT_PRODUCER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _REFERENCE_GMP As String
	
	Private _PRODUCER_WORK_TYPE As String
	
	Private _FK_PRODUCER As String
	
	Private _addr_ida As String
	
	Private _funccd As String
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rcvno As String
	
	Private _frgncd As String
	
	Private _frgnlctcd As String
	
	Private _rgtno As String
	
	Private _lcntpcd As String
	
	Private _lcnno As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnREFERENCE_GMPChanging(value As String)
    End Sub
    Partial Private Sub OnREFERENCE_GMPChanged()
    End Sub
    Partial Private Sub OnPRODUCER_WORK_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCER_WORK_TYPEChanged()
    End Sub
    Partial Private Sub OnFK_PRODUCERChanging(value As String)
    End Sub
    Partial Private Sub OnFK_PRODUCERChanged()
    End Sub
    Partial Private Sub Onaddr_idaChanging(value As String)
    End Sub
    Partial Private Sub Onaddr_idaChanged()
    End Sub
    Partial Private Sub OnfunccdChanging(value As String)
    End Sub
    Partial Private Sub OnfunccdChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnfrgncdChanging(value As String)
    End Sub
    Partial Private Sub OnfrgncdChanged()
    End Sub
    Partial Private Sub OnfrgnlctcdChanging(value As String)
    End Sub
    Partial Private Sub OnfrgnlctcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REFERENCE_GMP", DbType:="NVarChar(MAX)")>  _
	Public Property REFERENCE_GMP() As String
		Get
			Return Me._REFERENCE_GMP
		End Get
		Set
			If (String.Equals(Me._REFERENCE_GMP, value) = false) Then
				Me.OnREFERENCE_GMPChanging(value)
				Me.SendPropertyChanging
				Me._REFERENCE_GMP = value
				Me.SendPropertyChanged("REFERENCE_GMP")
				Me.OnREFERENCE_GMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCER_WORK_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCER_WORK_TYPE() As String
		Get
			Return Me._PRODUCER_WORK_TYPE
		End Get
		Set
			If (String.Equals(Me._PRODUCER_WORK_TYPE, value) = false) Then
				Me.OnPRODUCER_WORK_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCER_WORK_TYPE = value
				Me.SendPropertyChanged("PRODUCER_WORK_TYPE")
				Me.OnPRODUCER_WORK_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PRODUCER", DbType:="NVarChar(MAX)")>  _
	Public Property FK_PRODUCER() As String
		Get
			Return Me._FK_PRODUCER
		End Get
		Set
			If (String.Equals(Me._FK_PRODUCER, value) = false) Then
				Me.OnFK_PRODUCERChanging(value)
				Me.SendPropertyChanging
				Me._FK_PRODUCER = value
				Me.SendPropertyChanged("FK_PRODUCER")
				Me.OnFK_PRODUCERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_addr_ida", DbType:="NVarChar(MAX)")>  _
	Public Property addr_ida() As String
		Get
			Return Me._addr_ida
		End Get
		Set
			If (String.Equals(Me._addr_ida, value) = false) Then
				Me.Onaddr_idaChanging(value)
				Me.SendPropertyChanging
				Me._addr_ida = value
				Me.SendPropertyChanged("addr_ida")
				Me.Onaddr_idaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_funccd", DbType:="NVarChar(50)")>  _
	Public Property funccd() As String
		Get
			Return Me._funccd
		End Get
		Set
			If (String.Equals(Me._funccd, value) = false) Then
				Me.OnfunccdChanging(value)
				Me.SendPropertyChanging
				Me._funccd = value
				Me.SendPropertyChanged("funccd")
				Me.OnfunccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(MAX)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(MAX)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd", DbType:="NVarChar(MAX)")>  _
	Public Property frgncd() As String
		Get
			Return Me._frgncd
		End Get
		Set
			If (String.Equals(Me._frgncd, value) = false) Then
				Me.OnfrgncdChanging(value)
				Me.SendPropertyChanging
				Me._frgncd = value
				Me.SendPropertyChanged("frgncd")
				Me.OnfrgncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgnlctcd", DbType:="NVarChar(MAX)")>  _
	Public Property frgnlctcd() As String
		Get
			Return Me._frgnlctcd
		End Get
		Set
			If (String.Equals(Me._frgnlctcd, value) = false) Then
				Me.OnfrgnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._frgnlctcd = value
				Me.SendPropertyChanged("frgnlctcd")
				Me.OnfrgnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(MAX)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_REGISTRATION_PRODUCER_IN")>  _
Partial Public Class DRUG_REGISTRATION_PRODUCER_IN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _thanameplace As String
	
	Private _thaaddr As String
	
	Private _thasoi As String
	
	Private _tharoad As String
	
	Private _thamu As String
	
	Private _thathmblnm As String
	
	Private _thaamphrnm As String
	
	Private _thachngwtnm As String
	
	Private _tel As String
	
	Private _fax As String
	
	Private _TYPE_PRODUCER As String
	
	Private _thmblcd As String
	
	Private _amphrcd As String
	
	Private _chngwtcd As String
	
	Private _ZIPCODE As String
	
	Private _NATIONAL_IDA As String
	
	Private _NATIONAL_CODE As String
	
	Private _NAMEPLACE As String
	
	Private _REFERENCE_GMP As String
	
	Private _GMP_IDA As String
	
	Private _PRODUCER_WORK_TYPE As String
	
	Private _district As String
	
	Private _subdiv As String
	
	Private _province As String
	
	Private _cntcd As String
	
	Private _FK_PRODUCER As String
	
	Private _frgncd As String
	
	Private _addr_ida As String
	
	Private _frgnlctcd As String
	
	Private _OLD_TYPE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnthanameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnthanameplaceChanged()
    End Sub
    Partial Private Sub OnthaaddrChanging(value As String)
    End Sub
    Partial Private Sub OnthaaddrChanged()
    End Sub
    Partial Private Sub OnthasoiChanging(value As String)
    End Sub
    Partial Private Sub OnthasoiChanged()
    End Sub
    Partial Private Sub OntharoadChanging(value As String)
    End Sub
    Partial Private Sub OntharoadChanged()
    End Sub
    Partial Private Sub OnthamuChanging(value As String)
    End Sub
    Partial Private Sub OnthamuChanged()
    End Sub
    Partial Private Sub OnthathmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnthathmblnmChanged()
    End Sub
    Partial Private Sub OnthaamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnthaamphrnmChanged()
    End Sub
    Partial Private Sub OnthachngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnthachngwtnmChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub OnTYPE_PRODUCERChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_PRODUCERChanged()
    End Sub
    Partial Private Sub OnthmblcdChanging(value As String)
    End Sub
    Partial Private Sub OnthmblcdChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As String)
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As String)
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIPCODEChanged()
    End Sub
    Partial Private Sub OnNATIONAL_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnNATIONAL_IDAChanged()
    End Sub
    Partial Private Sub OnNATIONAL_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnNATIONAL_CODEChanged()
    End Sub
    Partial Private Sub OnNAMEPLACEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEPLACEChanged()
    End Sub
    Partial Private Sub OnREFERENCE_GMPChanging(value As String)
    End Sub
    Partial Private Sub OnREFERENCE_GMPChanged()
    End Sub
    Partial Private Sub OnGMP_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnGMP_IDAChanged()
    End Sub
    Partial Private Sub OnPRODUCER_WORK_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCER_WORK_TYPEChanged()
    End Sub
    Partial Private Sub OndistrictChanging(value As String)
    End Sub
    Partial Private Sub OndistrictChanged()
    End Sub
    Partial Private Sub OnsubdivChanging(value As String)
    End Sub
    Partial Private Sub OnsubdivChanged()
    End Sub
    Partial Private Sub OnprovinceChanging(value As String)
    End Sub
    Partial Private Sub OnprovinceChanged()
    End Sub
    Partial Private Sub OncntcdChanging(value As String)
    End Sub
    Partial Private Sub OncntcdChanged()
    End Sub
    Partial Private Sub OnFK_PRODUCERChanging(value As String)
    End Sub
    Partial Private Sub OnFK_PRODUCERChanged()
    End Sub
    Partial Private Sub OnfrgncdChanging(value As String)
    End Sub
    Partial Private Sub OnfrgncdChanged()
    End Sub
    Partial Private Sub Onaddr_idaChanging(value As String)
    End Sub
    Partial Private Sub Onaddr_idaChanged()
    End Sub
    Partial Private Sub OnfrgnlctcdChanging(value As String)
    End Sub
    Partial Private Sub OnfrgnlctcdChanged()
    End Sub
    Partial Private Sub OnOLD_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnOLD_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanameplace", DbType:="NVarChar(MAX)")>  _
	Public Property thanameplace() As String
		Get
			Return Me._thanameplace
		End Get
		Set
			If (String.Equals(Me._thanameplace, value) = false) Then
				Me.OnthanameplaceChanging(value)
				Me.SendPropertyChanging
				Me._thanameplace = value
				Me.SendPropertyChanged("thanameplace")
				Me.OnthanameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaaddr", DbType:="NVarChar(MAX)")>  _
	Public Property thaaddr() As String
		Get
			Return Me._thaaddr
		End Get
		Set
			If (String.Equals(Me._thaaddr, value) = false) Then
				Me.OnthaaddrChanging(value)
				Me.SendPropertyChanging
				Me._thaaddr = value
				Me.SendPropertyChanged("thaaddr")
				Me.OnthaaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thasoi", DbType:="NVarChar(MAX)")>  _
	Public Property thasoi() As String
		Get
			Return Me._thasoi
		End Get
		Set
			If (String.Equals(Me._thasoi, value) = false) Then
				Me.OnthasoiChanging(value)
				Me.SendPropertyChanging
				Me._thasoi = value
				Me.SendPropertyChanged("thasoi")
				Me.OnthasoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoad", DbType:="NVarChar(MAX)")>  _
	Public Property tharoad() As String
		Get
			Return Me._tharoad
		End Get
		Set
			If (String.Equals(Me._tharoad, value) = false) Then
				Me.OntharoadChanging(value)
				Me.SendPropertyChanging
				Me._tharoad = value
				Me.SendPropertyChanged("tharoad")
				Me.OntharoadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thamu", DbType:="NVarChar(MAX)")>  _
	Public Property thamu() As String
		Get
			Return Me._thamu
		End Get
		Set
			If (String.Equals(Me._thamu, value) = false) Then
				Me.OnthamuChanging(value)
				Me.SendPropertyChanging
				Me._thamu = value
				Me.SendPropertyChanged("thamu")
				Me.OnthamuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thathmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property thathmblnm() As String
		Get
			Return Me._thathmblnm
		End Get
		Set
			If (String.Equals(Me._thathmblnm, value) = false) Then
				Me.OnthathmblnmChanging(value)
				Me.SendPropertyChanging
				Me._thathmblnm = value
				Me.SendPropertyChanged("thathmblnm")
				Me.OnthathmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property thaamphrnm() As String
		Get
			Return Me._thaamphrnm
		End Get
		Set
			If (String.Equals(Me._thaamphrnm, value) = false) Then
				Me.OnthaamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._thaamphrnm = value
				Me.SendPropertyChanged("thaamphrnm")
				Me.OnthaamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thachngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property thachngwtnm() As String
		Get
			Return Me._thachngwtnm
		End Get
		Set
			If (String.Equals(Me._thachngwtnm, value) = false) Then
				Me.OnthachngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._thachngwtnm = value
				Me.SendPropertyChanged("thachngwtnm")
				Me.OnthachngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="NVarChar(MAX)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="NVarChar(MAX)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_PRODUCER", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_PRODUCER() As String
		Get
			Return Me._TYPE_PRODUCER
		End Get
		Set
			If (String.Equals(Me._TYPE_PRODUCER, value) = false) Then
				Me.OnTYPE_PRODUCERChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_PRODUCER = value
				Me.SendPropertyChanged("TYPE_PRODUCER")
				Me.OnTYPE_PRODUCERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd", DbType:="NVarChar(MAX)")>  _
	Public Property thmblcd() As String
		Get
			Return Me._thmblcd
		End Get
		Set
			If (String.Equals(Me._thmblcd, value) = false) Then
				Me.OnthmblcdChanging(value)
				Me.SendPropertyChanging
				Me._thmblcd = value
				Me.SendPropertyChanged("thmblcd")
				Me.OnthmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="NVarChar(MAX)")>  _
	Public Property amphrcd() As String
		Get
			Return Me._amphrcd
		End Get
		Set
			If (String.Equals(Me._amphrcd, value) = false) Then
				Me.OnamphrcdChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd = value
				Me.SendPropertyChanged("amphrcd")
				Me.OnamphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="NVarChar(MAX)")>  _
	Public Property chngwtcd() As String
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (String.Equals(Me._chngwtcd, value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property ZIPCODE() As String
		Get
			Return Me._ZIPCODE
		End Get
		Set
			If (String.Equals(Me._ZIPCODE, value) = false) Then
				Me.OnZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIPCODE = value
				Me.SendPropertyChanged("ZIPCODE")
				Me.OnZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATIONAL_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property NATIONAL_IDA() As String
		Get
			Return Me._NATIONAL_IDA
		End Get
		Set
			If (String.Equals(Me._NATIONAL_IDA, value) = false) Then
				Me.OnNATIONAL_IDAChanging(value)
				Me.SendPropertyChanging
				Me._NATIONAL_IDA = value
				Me.SendPropertyChanged("NATIONAL_IDA")
				Me.OnNATIONAL_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATIONAL_CODE", DbType:="NVarChar(50)")>  _
	Public Property NATIONAL_CODE() As String
		Get
			Return Me._NATIONAL_CODE
		End Get
		Set
			If (String.Equals(Me._NATIONAL_CODE, value) = false) Then
				Me.OnNATIONAL_CODEChanging(value)
				Me.SendPropertyChanging
				Me._NATIONAL_CODE = value
				Me.SendPropertyChanged("NATIONAL_CODE")
				Me.OnNATIONAL_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAMEPLACE", DbType:="NVarChar(MAX)")>  _
	Public Property NAMEPLACE() As String
		Get
			Return Me._NAMEPLACE
		End Get
		Set
			If (String.Equals(Me._NAMEPLACE, value) = false) Then
				Me.OnNAMEPLACEChanging(value)
				Me.SendPropertyChanging
				Me._NAMEPLACE = value
				Me.SendPropertyChanged("NAMEPLACE")
				Me.OnNAMEPLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REFERENCE_GMP", DbType:="NVarChar(MAX)")>  _
	Public Property REFERENCE_GMP() As String
		Get
			Return Me._REFERENCE_GMP
		End Get
		Set
			If (String.Equals(Me._REFERENCE_GMP, value) = false) Then
				Me.OnREFERENCE_GMPChanging(value)
				Me.SendPropertyChanging
				Me._REFERENCE_GMP = value
				Me.SendPropertyChanged("REFERENCE_GMP")
				Me.OnREFERENCE_GMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GMP_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property GMP_IDA() As String
		Get
			Return Me._GMP_IDA
		End Get
		Set
			If (String.Equals(Me._GMP_IDA, value) = false) Then
				Me.OnGMP_IDAChanging(value)
				Me.SendPropertyChanging
				Me._GMP_IDA = value
				Me.SendPropertyChanged("GMP_IDA")
				Me.OnGMP_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCER_WORK_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCER_WORK_TYPE() As String
		Get
			Return Me._PRODUCER_WORK_TYPE
		End Get
		Set
			If (String.Equals(Me._PRODUCER_WORK_TYPE, value) = false) Then
				Me.OnPRODUCER_WORK_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCER_WORK_TYPE = value
				Me.SendPropertyChanged("PRODUCER_WORK_TYPE")
				Me.OnPRODUCER_WORK_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_district", DbType:="NVarChar(MAX)")>  _
	Public Property district() As String
		Get
			Return Me._district
		End Get
		Set
			If (String.Equals(Me._district, value) = false) Then
				Me.OndistrictChanging(value)
				Me.SendPropertyChanging
				Me._district = value
				Me.SendPropertyChanged("district")
				Me.OndistrictChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_subdiv", DbType:="NVarChar(MAX)")>  _
	Public Property subdiv() As String
		Get
			Return Me._subdiv
		End Get
		Set
			If (String.Equals(Me._subdiv, value) = false) Then
				Me.OnsubdivChanging(value)
				Me.SendPropertyChanging
				Me._subdiv = value
				Me.SendPropertyChanged("subdiv")
				Me.OnsubdivChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_province", DbType:="NVarChar(MAX)")>  _
	Public Property province() As String
		Get
			Return Me._province
		End Get
		Set
			If (String.Equals(Me._province, value) = false) Then
				Me.OnprovinceChanging(value)
				Me.SendPropertyChanging
				Me._province = value
				Me.SendPropertyChanged("province")
				Me.OnprovinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cntcd", DbType:="NVarChar(MAX)")>  _
	Public Property cntcd() As String
		Get
			Return Me._cntcd
		End Get
		Set
			If (String.Equals(Me._cntcd, value) = false) Then
				Me.OncntcdChanging(value)
				Me.SendPropertyChanging
				Me._cntcd = value
				Me.SendPropertyChanged("cntcd")
				Me.OncntcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PRODUCER", DbType:="NVarChar(MAX)")>  _
	Public Property FK_PRODUCER() As String
		Get
			Return Me._FK_PRODUCER
		End Get
		Set
			If (String.Equals(Me._FK_PRODUCER, value) = false) Then
				Me.OnFK_PRODUCERChanging(value)
				Me.SendPropertyChanging
				Me._FK_PRODUCER = value
				Me.SendPropertyChanged("FK_PRODUCER")
				Me.OnFK_PRODUCERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd", DbType:="NVarChar(MAX)")>  _
	Public Property frgncd() As String
		Get
			Return Me._frgncd
		End Get
		Set
			If (String.Equals(Me._frgncd, value) = false) Then
				Me.OnfrgncdChanging(value)
				Me.SendPropertyChanging
				Me._frgncd = value
				Me.SendPropertyChanged("frgncd")
				Me.OnfrgncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_addr_ida", DbType:="NVarChar(MAX)")>  _
	Public Property addr_ida() As String
		Get
			Return Me._addr_ida
		End Get
		Set
			If (String.Equals(Me._addr_ida, value) = false) Then
				Me.Onaddr_idaChanging(value)
				Me.SendPropertyChanging
				Me._addr_ida = value
				Me.SendPropertyChanged("addr_ida")
				Me.Onaddr_idaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgnlctcd", DbType:="NVarChar(MAX)")>  _
	Public Property frgnlctcd() As String
		Get
			Return Me._frgnlctcd
		End Get
		Set
			If (String.Equals(Me._frgnlctcd, value) = false) Then
				Me.OnfrgnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._frgnlctcd = value
				Me.SendPropertyChanged("frgnlctcd")
				Me.OnfrgnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property OLD_TYPE() As String
		Get
			Return Me._OLD_TYPE
		End Get
		Set
			If (String.Equals(Me._OLD_TYPE, value) = false) Then
				Me.OnOLD_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._OLD_TYPE = value
				Me.SendPropertyChanged("OLD_TYPE")
				Me.OnOLD_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_REGISTRATION_PRODUCER")>  _
Partial Public Class DRUG_REGISTRATION_PRODUCER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _thanameplace As String
	
	Private _thaaddr As String
	
	Private _thasoi As String
	
	Private _tharoad As String
	
	Private _thamu As String
	
	Private _thathmblnm As String
	
	Private _thaamphrnm As String
	
	Private _thachngwtnm As String
	
	Private _tel As String
	
	Private _fax As String
	
	Private _TYPE_PRODUCER As String
	
	Private _thmblcd As String
	
	Private _amphrcd As String
	
	Private _chngwtcd As String
	
	Private _ZIPCODE As String
	
	Private _NATIONAL_IDA As String
	
	Private _NATIONAL_CODE As String
	
	Private _NAMEPLACE As String
	
	Private _REFERENCE_GMP As String
	
	Private _GMP_IDA As String
	
	Private _PRODUCER_WORK_TYPE As String
	
	Private _district As String
	
	Private _subdiv As String
	
	Private _province As String
	
	Private _cntcd As String
	
	Private _FK_PRODUCER As String
	
	Private _frgncd As String
	
	Private _addr_ida As String
	
	Private _frgnlctcd As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnthanameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnthanameplaceChanged()
    End Sub
    Partial Private Sub OnthaaddrChanging(value As String)
    End Sub
    Partial Private Sub OnthaaddrChanged()
    End Sub
    Partial Private Sub OnthasoiChanging(value As String)
    End Sub
    Partial Private Sub OnthasoiChanged()
    End Sub
    Partial Private Sub OntharoadChanging(value As String)
    End Sub
    Partial Private Sub OntharoadChanged()
    End Sub
    Partial Private Sub OnthamuChanging(value As String)
    End Sub
    Partial Private Sub OnthamuChanged()
    End Sub
    Partial Private Sub OnthathmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnthathmblnmChanged()
    End Sub
    Partial Private Sub OnthaamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnthaamphrnmChanged()
    End Sub
    Partial Private Sub OnthachngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnthachngwtnmChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub OnTYPE_PRODUCERChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_PRODUCERChanged()
    End Sub
    Partial Private Sub OnthmblcdChanging(value As String)
    End Sub
    Partial Private Sub OnthmblcdChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As String)
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As String)
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIPCODEChanged()
    End Sub
    Partial Private Sub OnNATIONAL_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnNATIONAL_IDAChanged()
    End Sub
    Partial Private Sub OnNATIONAL_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnNATIONAL_CODEChanged()
    End Sub
    Partial Private Sub OnNAMEPLACEChanging(value As String)
    End Sub
    Partial Private Sub OnNAMEPLACEChanged()
    End Sub
    Partial Private Sub OnREFERENCE_GMPChanging(value As String)
    End Sub
    Partial Private Sub OnREFERENCE_GMPChanged()
    End Sub
    Partial Private Sub OnGMP_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnGMP_IDAChanged()
    End Sub
    Partial Private Sub OnPRODUCER_WORK_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCER_WORK_TYPEChanged()
    End Sub
    Partial Private Sub OndistrictChanging(value As String)
    End Sub
    Partial Private Sub OndistrictChanged()
    End Sub
    Partial Private Sub OnsubdivChanging(value As String)
    End Sub
    Partial Private Sub OnsubdivChanged()
    End Sub
    Partial Private Sub OnprovinceChanging(value As String)
    End Sub
    Partial Private Sub OnprovinceChanged()
    End Sub
    Partial Private Sub OncntcdChanging(value As String)
    End Sub
    Partial Private Sub OncntcdChanged()
    End Sub
    Partial Private Sub OnFK_PRODUCERChanging(value As String)
    End Sub
    Partial Private Sub OnFK_PRODUCERChanged()
    End Sub
    Partial Private Sub OnfrgncdChanging(value As String)
    End Sub
    Partial Private Sub OnfrgncdChanged()
    End Sub
    Partial Private Sub Onaddr_idaChanging(value As String)
    End Sub
    Partial Private Sub Onaddr_idaChanged()
    End Sub
    Partial Private Sub OnfrgnlctcdChanging(value As String)
    End Sub
    Partial Private Sub OnfrgnlctcdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanameplace", DbType:="NVarChar(MAX)")>  _
	Public Property thanameplace() As String
		Get
			Return Me._thanameplace
		End Get
		Set
			If (String.Equals(Me._thanameplace, value) = false) Then
				Me.OnthanameplaceChanging(value)
				Me.SendPropertyChanging
				Me._thanameplace = value
				Me.SendPropertyChanged("thanameplace")
				Me.OnthanameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaaddr", DbType:="NVarChar(MAX)")>  _
	Public Property thaaddr() As String
		Get
			Return Me._thaaddr
		End Get
		Set
			If (String.Equals(Me._thaaddr, value) = false) Then
				Me.OnthaaddrChanging(value)
				Me.SendPropertyChanging
				Me._thaaddr = value
				Me.SendPropertyChanged("thaaddr")
				Me.OnthaaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thasoi", DbType:="NVarChar(MAX)")>  _
	Public Property thasoi() As String
		Get
			Return Me._thasoi
		End Get
		Set
			If (String.Equals(Me._thasoi, value) = false) Then
				Me.OnthasoiChanging(value)
				Me.SendPropertyChanging
				Me._thasoi = value
				Me.SendPropertyChanged("thasoi")
				Me.OnthasoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoad", DbType:="NVarChar(MAX)")>  _
	Public Property tharoad() As String
		Get
			Return Me._tharoad
		End Get
		Set
			If (String.Equals(Me._tharoad, value) = false) Then
				Me.OntharoadChanging(value)
				Me.SendPropertyChanging
				Me._tharoad = value
				Me.SendPropertyChanged("tharoad")
				Me.OntharoadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thamu", DbType:="NVarChar(MAX)")>  _
	Public Property thamu() As String
		Get
			Return Me._thamu
		End Get
		Set
			If (String.Equals(Me._thamu, value) = false) Then
				Me.OnthamuChanging(value)
				Me.SendPropertyChanging
				Me._thamu = value
				Me.SendPropertyChanged("thamu")
				Me.OnthamuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thathmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property thathmblnm() As String
		Get
			Return Me._thathmblnm
		End Get
		Set
			If (String.Equals(Me._thathmblnm, value) = false) Then
				Me.OnthathmblnmChanging(value)
				Me.SendPropertyChanging
				Me._thathmblnm = value
				Me.SendPropertyChanged("thathmblnm")
				Me.OnthathmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property thaamphrnm() As String
		Get
			Return Me._thaamphrnm
		End Get
		Set
			If (String.Equals(Me._thaamphrnm, value) = false) Then
				Me.OnthaamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._thaamphrnm = value
				Me.SendPropertyChanged("thaamphrnm")
				Me.OnthaamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thachngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property thachngwtnm() As String
		Get
			Return Me._thachngwtnm
		End Get
		Set
			If (String.Equals(Me._thachngwtnm, value) = false) Then
				Me.OnthachngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._thachngwtnm = value
				Me.SendPropertyChanged("thachngwtnm")
				Me.OnthachngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="NVarChar(MAX)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="NVarChar(MAX)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_PRODUCER", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_PRODUCER() As String
		Get
			Return Me._TYPE_PRODUCER
		End Get
		Set
			If (String.Equals(Me._TYPE_PRODUCER, value) = false) Then
				Me.OnTYPE_PRODUCERChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_PRODUCER = value
				Me.SendPropertyChanged("TYPE_PRODUCER")
				Me.OnTYPE_PRODUCERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd", DbType:="NVarChar(MAX)")>  _
	Public Property thmblcd() As String
		Get
			Return Me._thmblcd
		End Get
		Set
			If (String.Equals(Me._thmblcd, value) = false) Then
				Me.OnthmblcdChanging(value)
				Me.SendPropertyChanging
				Me._thmblcd = value
				Me.SendPropertyChanged("thmblcd")
				Me.OnthmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="NVarChar(MAX)")>  _
	Public Property amphrcd() As String
		Get
			Return Me._amphrcd
		End Get
		Set
			If (String.Equals(Me._amphrcd, value) = false) Then
				Me.OnamphrcdChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd = value
				Me.SendPropertyChanged("amphrcd")
				Me.OnamphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="NVarChar(MAX)")>  _
	Public Property chngwtcd() As String
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (String.Equals(Me._chngwtcd, value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property ZIPCODE() As String
		Get
			Return Me._ZIPCODE
		End Get
		Set
			If (String.Equals(Me._ZIPCODE, value) = false) Then
				Me.OnZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIPCODE = value
				Me.SendPropertyChanged("ZIPCODE")
				Me.OnZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATIONAL_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property NATIONAL_IDA() As String
		Get
			Return Me._NATIONAL_IDA
		End Get
		Set
			If (String.Equals(Me._NATIONAL_IDA, value) = false) Then
				Me.OnNATIONAL_IDAChanging(value)
				Me.SendPropertyChanging
				Me._NATIONAL_IDA = value
				Me.SendPropertyChanged("NATIONAL_IDA")
				Me.OnNATIONAL_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATIONAL_CODE", DbType:="NVarChar(50)")>  _
	Public Property NATIONAL_CODE() As String
		Get
			Return Me._NATIONAL_CODE
		End Get
		Set
			If (String.Equals(Me._NATIONAL_CODE, value) = false) Then
				Me.OnNATIONAL_CODEChanging(value)
				Me.SendPropertyChanging
				Me._NATIONAL_CODE = value
				Me.SendPropertyChanged("NATIONAL_CODE")
				Me.OnNATIONAL_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAMEPLACE", DbType:="NVarChar(MAX)")>  _
	Public Property NAMEPLACE() As String
		Get
			Return Me._NAMEPLACE
		End Get
		Set
			If (String.Equals(Me._NAMEPLACE, value) = false) Then
				Me.OnNAMEPLACEChanging(value)
				Me.SendPropertyChanging
				Me._NAMEPLACE = value
				Me.SendPropertyChanged("NAMEPLACE")
				Me.OnNAMEPLACEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REFERENCE_GMP", DbType:="NVarChar(MAX)")>  _
	Public Property REFERENCE_GMP() As String
		Get
			Return Me._REFERENCE_GMP
		End Get
		Set
			If (String.Equals(Me._REFERENCE_GMP, value) = false) Then
				Me.OnREFERENCE_GMPChanging(value)
				Me.SendPropertyChanging
				Me._REFERENCE_GMP = value
				Me.SendPropertyChanged("REFERENCE_GMP")
				Me.OnREFERENCE_GMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GMP_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property GMP_IDA() As String
		Get
			Return Me._GMP_IDA
		End Get
		Set
			If (String.Equals(Me._GMP_IDA, value) = false) Then
				Me.OnGMP_IDAChanging(value)
				Me.SendPropertyChanging
				Me._GMP_IDA = value
				Me.SendPropertyChanged("GMP_IDA")
				Me.OnGMP_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCER_WORK_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCER_WORK_TYPE() As String
		Get
			Return Me._PRODUCER_WORK_TYPE
		End Get
		Set
			If (String.Equals(Me._PRODUCER_WORK_TYPE, value) = false) Then
				Me.OnPRODUCER_WORK_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCER_WORK_TYPE = value
				Me.SendPropertyChanged("PRODUCER_WORK_TYPE")
				Me.OnPRODUCER_WORK_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_district", DbType:="NVarChar(MAX)")>  _
	Public Property district() As String
		Get
			Return Me._district
		End Get
		Set
			If (String.Equals(Me._district, value) = false) Then
				Me.OndistrictChanging(value)
				Me.SendPropertyChanging
				Me._district = value
				Me.SendPropertyChanged("district")
				Me.OndistrictChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_subdiv", DbType:="NVarChar(MAX)")>  _
	Public Property subdiv() As String
		Get
			Return Me._subdiv
		End Get
		Set
			If (String.Equals(Me._subdiv, value) = false) Then
				Me.OnsubdivChanging(value)
				Me.SendPropertyChanging
				Me._subdiv = value
				Me.SendPropertyChanged("subdiv")
				Me.OnsubdivChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_province", DbType:="NVarChar(MAX)")>  _
	Public Property province() As String
		Get
			Return Me._province
		End Get
		Set
			If (String.Equals(Me._province, value) = false) Then
				Me.OnprovinceChanging(value)
				Me.SendPropertyChanging
				Me._province = value
				Me.SendPropertyChanged("province")
				Me.OnprovinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cntcd", DbType:="NVarChar(MAX)")>  _
	Public Property cntcd() As String
		Get
			Return Me._cntcd
		End Get
		Set
			If (String.Equals(Me._cntcd, value) = false) Then
				Me.OncntcdChanging(value)
				Me.SendPropertyChanging
				Me._cntcd = value
				Me.SendPropertyChanged("cntcd")
				Me.OncntcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PRODUCER", DbType:="NVarChar(MAX)")>  _
	Public Property FK_PRODUCER() As String
		Get
			Return Me._FK_PRODUCER
		End Get
		Set
			If (String.Equals(Me._FK_PRODUCER, value) = false) Then
				Me.OnFK_PRODUCERChanging(value)
				Me.SendPropertyChanging
				Me._FK_PRODUCER = value
				Me.SendPropertyChanged("FK_PRODUCER")
				Me.OnFK_PRODUCERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd", DbType:="NVarChar(MAX)")>  _
	Public Property frgncd() As String
		Get
			Return Me._frgncd
		End Get
		Set
			If (String.Equals(Me._frgncd, value) = false) Then
				Me.OnfrgncdChanging(value)
				Me.SendPropertyChanging
				Me._frgncd = value
				Me.SendPropertyChanged("frgncd")
				Me.OnfrgncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_addr_ida", DbType:="NVarChar(MAX)")>  _
	Public Property addr_ida() As String
		Get
			Return Me._addr_ida
		End Get
		Set
			If (String.Equals(Me._addr_ida, value) = false) Then
				Me.Onaddr_idaChanging(value)
				Me.SendPropertyChanging
				Me._addr_ida = value
				Me.SendPropertyChanged("addr_ida")
				Me.Onaddr_idaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgnlctcd", DbType:="NVarChar(MAX)")>  _
	Public Property frgnlctcd() As String
		Get
			Return Me._frgnlctcd
		End Get
		Set
			If (String.Equals(Me._frgnlctcd, value) = false) Then
				Me.OnfrgnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._frgnlctcd = value
				Me.SendPropertyChanged("frgnlctcd")
				Me.OnfrgnlctcdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_REGISTRATION_DRUG_USE")>  _
Partial Public Class DRUG_REGISTRATION_DRUG_USE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _DRUG_USE As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnDRUG_USEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_USEChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_USE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_USE() As String
		Get
			Return Me._DRUG_USE
		End Get
		Set
			If (String.Equals(Me._DRUG_USE, value) = false) Then
				Me.OnDRUG_USEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_USE = value
				Me.SendPropertyChanged("DRUG_USE")
				Me.OnDRUG_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUG_PACKAGING")>  _
Partial Public Class MAS_DRUG_PACKAGING
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PACKAGING_CD As String
	
	Private _UOP_CODE As String
	
	Private _UOP_STATUS As String
	
	Private _PACKAGING_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPACKAGING_CDChanging(value As String)
    End Sub
    Partial Private Sub OnPACKAGING_CDChanged()
    End Sub
    Partial Private Sub OnUOP_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnUOP_CODEChanged()
    End Sub
    Partial Private Sub OnUOP_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnUOP_STATUSChanged()
    End Sub
    Partial Private Sub OnPACKAGING_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPACKAGING_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACKAGING_CD", DbType:="NVarChar(MAX)")>  _
	Public Property PACKAGING_CD() As String
		Get
			Return Me._PACKAGING_CD
		End Get
		Set
			If (String.Equals(Me._PACKAGING_CD, value) = false) Then
				Me.OnPACKAGING_CDChanging(value)
				Me.SendPropertyChanging
				Me._PACKAGING_CD = value
				Me.SendPropertyChanged("PACKAGING_CD")
				Me.OnPACKAGING_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UOP_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property UOP_CODE() As String
		Get
			Return Me._UOP_CODE
		End Get
		Set
			If (String.Equals(Me._UOP_CODE, value) = false) Then
				Me.OnUOP_CODEChanging(value)
				Me.SendPropertyChanging
				Me._UOP_CODE = value
				Me.SendPropertyChanged("UOP_CODE")
				Me.OnUOP_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UOP_STATUS", DbType:="NVarChar(MAX)")>  _
	Public Property UOP_STATUS() As String
		Get
			Return Me._UOP_STATUS
		End Get
		Set
			If (String.Equals(Me._UOP_STATUS, value) = false) Then
				Me.OnUOP_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._UOP_STATUS = value
				Me.SendPropertyChanged("UOP_STATUS")
				Me.OnUOP_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACKAGING_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PACKAGING_NAME() As String
		Get
			Return Me._PACKAGING_NAME
		End Get
		Set
			If (String.Equals(Me._PACKAGING_NAME, value) = false) Then
				Me.OnPACKAGING_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PACKAGING_NAME = value
				Me.SendPropertyChanged("PACKAGING_NAME")
				Me.OnPACKAGING_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_UNIT")>  _
Partial Public Class DRUG_UNIT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _unit_name As String
	
	Private _short_unit As String
	
	Private _sunitcd As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub Onunit_nameChanging(value As String)
    End Sub
    Partial Private Sub Onunit_nameChanged()
    End Sub
    Partial Private Sub Onshort_unitChanging(value As String)
    End Sub
    Partial Private Sub Onshort_unitChanged()
    End Sub
    Partial Private Sub OnsunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsunitcdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unit_name", DbType:="NVarChar(MAX)")>  _
	Public Property unit_name() As String
		Get
			Return Me._unit_name
		End Get
		Set
			If (String.Equals(Me._unit_name, value) = false) Then
				Me.Onunit_nameChanging(value)
				Me.SendPropertyChanging
				Me._unit_name = value
				Me.SendPropertyChanged("unit_name")
				Me.Onunit_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_short_unit", DbType:="NVarChar(MAX)")>  _
	Public Property short_unit() As String
		Get
			Return Me._short_unit
		End Get
		Set
			If (String.Equals(Me._short_unit, value) = false) Then
				Me.Onshort_unitChanging(value)
				Me.SendPropertyChanging
				Me._short_unit = value
				Me.SendPropertyChanged("short_unit")
				Me.Onshort_unitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitcd", DbType:="Int")>  _
	Public Property sunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sunitcd
		End Get
		Set
			If (Me._sunitcd.Equals(value) = false) Then
				Me.OnsunitcdChanging(value)
				Me.SendPropertyChanging
				Me._sunitcd = value
				Me.SendPropertyChanged("sunitcd")
				Me.OnsunitcdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_ATC_DETAIL")>  _
Partial Public Class DRRQT_ATC_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As Integer
	
	Private _ATC_IDA As String
	
	Private _ATC_CODE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnATC_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnATC_IDAChanged()
    End Sub
    Partial Private Sub OnATC_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnATC_CODEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int NOT NULL")>  _
	Public Property FK_IDA() As Integer
		Get
			Return Me._FK_IDA
		End Get
		Set
			If ((Me._FK_IDA = value)  _
						= false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATC_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property ATC_IDA() As String
		Get
			Return Me._ATC_IDA
		End Get
		Set
			If (String.Equals(Me._ATC_IDA, value) = false) Then
				Me.OnATC_IDAChanging(value)
				Me.SendPropertyChanging
				Me._ATC_IDA = value
				Me.SendPropertyChanged("ATC_IDA")
				Me.OnATC_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATC_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property ATC_CODE() As String
		Get
			Return Me._ATC_CODE
		End Get
		Set
			If (String.Equals(Me._ATC_CODE, value) = false) Then
				Me.OnATC_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ATC_CODE = value
				Me.SendPropertyChanged("ATC_CODE")
				Me.OnATC_CODEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_PROPERTIES_AND_DETAIL")>  _
Partial Public Class DRRQT_PROPERTIES_AND_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _ROWS As String
	
	Private _DRUG_PROPERTIES_AND_DETAIL As String
	
	Private _OTHER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnROWSChanging(value As String)
    End Sub
    Partial Private Sub OnROWSChanged()
    End Sub
    Partial Private Sub OnDRUG_PROPERTIES_AND_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_PROPERTIES_AND_DETAILChanged()
    End Sub
    Partial Private Sub OnOTHERChanging(value As String)
    End Sub
    Partial Private Sub OnOTHERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROWS", DbType:="NVarChar(50)")>  _
	Public Property ROWS() As String
		Get
			Return Me._ROWS
		End Get
		Set
			If (String.Equals(Me._ROWS, value) = false) Then
				Me.OnROWSChanging(value)
				Me.SendPropertyChanging
				Me._ROWS = value
				Me.SendPropertyChanged("ROWS")
				Me.OnROWSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_PROPERTIES_AND_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_PROPERTIES_AND_DETAIL() As String
		Get
			Return Me._DRUG_PROPERTIES_AND_DETAIL
		End Get
		Set
			If (String.Equals(Me._DRUG_PROPERTIES_AND_DETAIL, value) = false) Then
				Me.OnDRUG_PROPERTIES_AND_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_PROPERTIES_AND_DETAIL = value
				Me.SendPropertyChanged("DRUG_PROPERTIES_AND_DETAIL")
				Me.OnDRUG_PROPERTIES_AND_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER() As String
		Get
			Return Me._OTHER
		End Get
		Set
			If (String.Equals(Me._OTHER, value) = false) Then
				Me.OnOTHERChanging(value)
				Me.SendPropertyChanging
				Me._OTHER = value
				Me.SendPropertyChanged("OTHER")
				Me.OnOTHERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_CONDITION")>  _
Partial Public Class DRRQT_CONDITION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _CONDITION1 As String
	
	Private _CONDITION2 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnCONDITION1Changing(value As String)
    End Sub
    Partial Private Sub OnCONDITION1Changed()
    End Sub
    Partial Private Sub OnCONDITION2Changing(value As String)
    End Sub
    Partial Private Sub OnCONDITION2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION1", DbType:="NVarChar(MAX)")>  _
	Public Property CONDITION1() As String
		Get
			Return Me._CONDITION1
		End Get
		Set
			If (String.Equals(Me._CONDITION1, value) = false) Then
				Me.OnCONDITION1Changing(value)
				Me.SendPropertyChanging
				Me._CONDITION1 = value
				Me.SendPropertyChanged("CONDITION1")
				Me.OnCONDITION1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION2", DbType:="NVarChar(MAX)")>  _
	Public Property CONDITION2() As String
		Get
			Return Me._CONDITION2
		End Get
		Set
			If (String.Equals(Me._CONDITION2, value) = false) Then
				Me.OnCONDITION2Changing(value)
				Me.SendPropertyChanging
				Me._CONDITION2 = value
				Me.SendPropertyChanged("CONDITION2")
				Me.OnCONDITION2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_PRODUCER")>  _
Partial Public Class DRRQT_PRODUCER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _REFERENCE_GMP As String
	
	Private _PRODUCER_WORK_TYPE As String
	
	Private _FK_PRODUCER As String
	
	Private _addr_ida As String
	
	Private _funccd As String
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rcvno As String
	
	Private _frgncd As String
	
	Private _frgnlctcd As String
	
	Private _rgtno As String
	
	Private _lcntpcd As String
	
	Private _lcnno As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnREFERENCE_GMPChanging(value As String)
    End Sub
    Partial Private Sub OnREFERENCE_GMPChanged()
    End Sub
    Partial Private Sub OnPRODUCER_WORK_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCER_WORK_TYPEChanged()
    End Sub
    Partial Private Sub OnFK_PRODUCERChanging(value As String)
    End Sub
    Partial Private Sub OnFK_PRODUCERChanged()
    End Sub
    Partial Private Sub Onaddr_idaChanging(value As String)
    End Sub
    Partial Private Sub Onaddr_idaChanged()
    End Sub
    Partial Private Sub OnfunccdChanging(value As String)
    End Sub
    Partial Private Sub OnfunccdChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnfrgncdChanging(value As String)
    End Sub
    Partial Private Sub OnfrgncdChanged()
    End Sub
    Partial Private Sub OnfrgnlctcdChanging(value As String)
    End Sub
    Partial Private Sub OnfrgnlctcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REFERENCE_GMP", DbType:="NVarChar(MAX)")>  _
	Public Property REFERENCE_GMP() As String
		Get
			Return Me._REFERENCE_GMP
		End Get
		Set
			If (String.Equals(Me._REFERENCE_GMP, value) = false) Then
				Me.OnREFERENCE_GMPChanging(value)
				Me.SendPropertyChanging
				Me._REFERENCE_GMP = value
				Me.SendPropertyChanged("REFERENCE_GMP")
				Me.OnREFERENCE_GMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCER_WORK_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCER_WORK_TYPE() As String
		Get
			Return Me._PRODUCER_WORK_TYPE
		End Get
		Set
			If (String.Equals(Me._PRODUCER_WORK_TYPE, value) = false) Then
				Me.OnPRODUCER_WORK_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCER_WORK_TYPE = value
				Me.SendPropertyChanged("PRODUCER_WORK_TYPE")
				Me.OnPRODUCER_WORK_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PRODUCER", DbType:="NVarChar(MAX)")>  _
	Public Property FK_PRODUCER() As String
		Get
			Return Me._FK_PRODUCER
		End Get
		Set
			If (String.Equals(Me._FK_PRODUCER, value) = false) Then
				Me.OnFK_PRODUCERChanging(value)
				Me.SendPropertyChanging
				Me._FK_PRODUCER = value
				Me.SendPropertyChanged("FK_PRODUCER")
				Me.OnFK_PRODUCERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_addr_ida", DbType:="NVarChar(MAX)")>  _
	Public Property addr_ida() As String
		Get
			Return Me._addr_ida
		End Get
		Set
			If (String.Equals(Me._addr_ida, value) = false) Then
				Me.Onaddr_idaChanging(value)
				Me.SendPropertyChanging
				Me._addr_ida = value
				Me.SendPropertyChanged("addr_ida")
				Me.Onaddr_idaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_funccd", DbType:="NVarChar(50)")>  _
	Public Property funccd() As String
		Get
			Return Me._funccd
		End Get
		Set
			If (String.Equals(Me._funccd, value) = false) Then
				Me.OnfunccdChanging(value)
				Me.SendPropertyChanging
				Me._funccd = value
				Me.SendPropertyChanged("funccd")
				Me.OnfunccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(MAX)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(MAX)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd", DbType:="NVarChar(MAX)")>  _
	Public Property frgncd() As String
		Get
			Return Me._frgncd
		End Get
		Set
			If (String.Equals(Me._frgncd, value) = false) Then
				Me.OnfrgncdChanging(value)
				Me.SendPropertyChanging
				Me._frgncd = value
				Me.SendPropertyChanged("frgncd")
				Me.OnfrgncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgnlctcd", DbType:="NVarChar(MAX)")>  _
	Public Property frgnlctcd() As String
		Get
			Return Me._frgnlctcd
		End Get
		Set
			If (String.Equals(Me._frgnlctcd, value) = false) Then
				Me.OnfrgnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._frgnlctcd = value
				Me.SendPropertyChanged("frgnlctcd")
				Me.OnfrgnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(MAX)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_PROPERTIES")>  _
Partial Public Class DRRQT_PROPERTy
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _CHK_DRUG_PROPERTIES As String
	
	Private _DRUG_PROPERTIES As String
	
	Private _CHK_DRUG_PROPERTIES_OTHER As String
	
	Private _DRUG_PROPERTIES_OTHER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnCHK_DRUG_PROPERTIESChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_DRUG_PROPERTIESChanged()
    End Sub
    Partial Private Sub OnDRUG_PROPERTIESChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_PROPERTIESChanged()
    End Sub
    Partial Private Sub OnCHK_DRUG_PROPERTIES_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_DRUG_PROPERTIES_OTHERChanged()
    End Sub
    Partial Private Sub OnDRUG_PROPERTIES_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_PROPERTIES_OTHERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_DRUG_PROPERTIES", DbType:="NVarChar(50)")>  _
	Public Property CHK_DRUG_PROPERTIES() As String
		Get
			Return Me._CHK_DRUG_PROPERTIES
		End Get
		Set
			If (String.Equals(Me._CHK_DRUG_PROPERTIES, value) = false) Then
				Me.OnCHK_DRUG_PROPERTIESChanging(value)
				Me.SendPropertyChanging
				Me._CHK_DRUG_PROPERTIES = value
				Me.SendPropertyChanged("CHK_DRUG_PROPERTIES")
				Me.OnCHK_DRUG_PROPERTIESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_PROPERTIES", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_PROPERTIES() As String
		Get
			Return Me._DRUG_PROPERTIES
		End Get
		Set
			If (String.Equals(Me._DRUG_PROPERTIES, value) = false) Then
				Me.OnDRUG_PROPERTIESChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_PROPERTIES = value
				Me.SendPropertyChanged("DRUG_PROPERTIES")
				Me.OnDRUG_PROPERTIESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_DRUG_PROPERTIES_OTHER", DbType:="NVarChar(50)")>  _
	Public Property CHK_DRUG_PROPERTIES_OTHER() As String
		Get
			Return Me._CHK_DRUG_PROPERTIES_OTHER
		End Get
		Set
			If (String.Equals(Me._CHK_DRUG_PROPERTIES_OTHER, value) = false) Then
				Me.OnCHK_DRUG_PROPERTIES_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._CHK_DRUG_PROPERTIES_OTHER = value
				Me.SendPropertyChanged("CHK_DRUG_PROPERTIES_OTHER")
				Me.OnCHK_DRUG_PROPERTIES_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_PROPERTIES_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_PROPERTIES_OTHER() As String
		Get
			Return Me._DRUG_PROPERTIES_OTHER
		End Get
		Set
			If (String.Equals(Me._DRUG_PROPERTIES_OTHER, value) = false) Then
				Me.OnDRUG_PROPERTIES_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_PROPERTIES_OTHER = value
				Me.SendPropertyChanged("DRUG_PROPERTIES_OTHER")
				Me.OnDRUG_PROPERTIES_OTHERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_PRODUCER_OTHER")>  _
Partial Public Class DRRQT_PRODUCER_OTHER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _REFERENCE_GMP As String
	
	Private _PRODUCER_WORK_TYPE As String
	
	Private _FK_PRODUCER As String
	
	Private _addr_ida As String
	
	Private _funccd As String
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rcvno As String
	
	Private _frgncd As String
	
	Private _frgnlctcd As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnREFERENCE_GMPChanging(value As String)
    End Sub
    Partial Private Sub OnREFERENCE_GMPChanged()
    End Sub
    Partial Private Sub OnPRODUCER_WORK_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCER_WORK_TYPEChanged()
    End Sub
    Partial Private Sub OnFK_PRODUCERChanging(value As String)
    End Sub
    Partial Private Sub OnFK_PRODUCERChanged()
    End Sub
    Partial Private Sub Onaddr_idaChanging(value As String)
    End Sub
    Partial Private Sub Onaddr_idaChanged()
    End Sub
    Partial Private Sub OnfunccdChanging(value As String)
    End Sub
    Partial Private Sub OnfunccdChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnfrgncdChanging(value As String)
    End Sub
    Partial Private Sub OnfrgncdChanged()
    End Sub
    Partial Private Sub OnfrgnlctcdChanging(value As String)
    End Sub
    Partial Private Sub OnfrgnlctcdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REFERENCE_GMP", DbType:="NVarChar(MAX)")>  _
	Public Property REFERENCE_GMP() As String
		Get
			Return Me._REFERENCE_GMP
		End Get
		Set
			If (String.Equals(Me._REFERENCE_GMP, value) = false) Then
				Me.OnREFERENCE_GMPChanging(value)
				Me.SendPropertyChanging
				Me._REFERENCE_GMP = value
				Me.SendPropertyChanged("REFERENCE_GMP")
				Me.OnREFERENCE_GMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCER_WORK_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCER_WORK_TYPE() As String
		Get
			Return Me._PRODUCER_WORK_TYPE
		End Get
		Set
			If (String.Equals(Me._PRODUCER_WORK_TYPE, value) = false) Then
				Me.OnPRODUCER_WORK_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCER_WORK_TYPE = value
				Me.SendPropertyChanged("PRODUCER_WORK_TYPE")
				Me.OnPRODUCER_WORK_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_PRODUCER", DbType:="NVarChar(MAX)")>  _
	Public Property FK_PRODUCER() As String
		Get
			Return Me._FK_PRODUCER
		End Get
		Set
			If (String.Equals(Me._FK_PRODUCER, value) = false) Then
				Me.OnFK_PRODUCERChanging(value)
				Me.SendPropertyChanging
				Me._FK_PRODUCER = value
				Me.SendPropertyChanged("FK_PRODUCER")
				Me.OnFK_PRODUCERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_addr_ida", DbType:="NVarChar(MAX)")>  _
	Public Property addr_ida() As String
		Get
			Return Me._addr_ida
		End Get
		Set
			If (String.Equals(Me._addr_ida, value) = false) Then
				Me.Onaddr_idaChanging(value)
				Me.SendPropertyChanging
				Me._addr_ida = value
				Me.SendPropertyChanged("addr_ida")
				Me.Onaddr_idaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_funccd", DbType:="NVarChar(50)")>  _
	Public Property funccd() As String
		Get
			Return Me._funccd
		End Get
		Set
			If (String.Equals(Me._funccd, value) = false) Then
				Me.OnfunccdChanging(value)
				Me.SendPropertyChanging
				Me._funccd = value
				Me.SendPropertyChanged("funccd")
				Me.OnfunccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(MAX)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(MAX)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd", DbType:="NVarChar(MAX)")>  _
	Public Property frgncd() As String
		Get
			Return Me._frgncd
		End Get
		Set
			If (String.Equals(Me._frgncd, value) = false) Then
				Me.OnfrgncdChanging(value)
				Me.SendPropertyChanging
				Me._frgncd = value
				Me.SendPropertyChanged("frgncd")
				Me.OnfrgncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgnlctcd", DbType:="NVarChar(MAX)")>  _
	Public Property frgnlctcd() As String
		Get
			Return Me._frgnlctcd
		End Get
		Set
			If (String.Equals(Me._frgnlctcd, value) = false) Then
				Me.OnfrgnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._frgnlctcd = value
				Me.SendPropertyChanged("frgnlctcd")
				Me.OnfrgnlctcdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_DRUG_PER_UNIT")>  _
Partial Public Class DRRGT_DRUG_PER_UNIT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _drugperunit As String
	
	Private _QTY As System.Nullable(Of Double)
	
	Private _SUNITCD As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OndrugperunitChanging(value As String)
    End Sub
    Partial Private Sub OndrugperunitChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnSUNITCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUNITCDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drugperunit", DbType:="NVarChar(MAX)")>  _
	Public Property drugperunit() As String
		Get
			Return Me._drugperunit
		End Get
		Set
			If (String.Equals(Me._drugperunit, value) = false) Then
				Me.OndrugperunitChanging(value)
				Me.SendPropertyChanging
				Me._drugperunit = value
				Me.SendPropertyChanged("drugperunit")
				Me.OndrugperunitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="Float")>  _
	Public Property QTY() As System.Nullable(Of Double)
		Get
			Return Me._QTY
		End Get
		Set
			If (Me._QTY.Equals(value) = false) Then
				Me.OnQTYChanging(value)
				Me.SendPropertyChanging
				Me._QTY = value
				Me.SendPropertyChanged("QTY")
				Me.OnQTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD", DbType:="Int")>  _
	Public Property SUNITCD() As System.Nullable(Of Integer)
		Get
			Return Me._SUNITCD
		End Get
		Set
			If (Me._SUNITCD.Equals(value) = false) Then
				Me.OnSUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._SUNITCD = value
				Me.SendPropertyChanged("SUNITCD")
				Me.OnSUNITCDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_DRUG_PER_UNIT")>  _
Partial Public Class DRRQT_DRUG_PER_UNIT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _drugperunit As String
	
	Private _QTY As System.Nullable(Of Double)
	
	Private _SUNITCD As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OndrugperunitChanging(value As String)
    End Sub
    Partial Private Sub OndrugperunitChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnSUNITCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUNITCDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drugperunit", DbType:="NVarChar(MAX)")>  _
	Public Property drugperunit() As String
		Get
			Return Me._drugperunit
		End Get
		Set
			If (String.Equals(Me._drugperunit, value) = false) Then
				Me.OndrugperunitChanging(value)
				Me.SendPropertyChanging
				Me._drugperunit = value
				Me.SendPropertyChanged("drugperunit")
				Me.OndrugperunitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="Float")>  _
	Public Property QTY() As System.Nullable(Of Double)
		Get
			Return Me._QTY
		End Get
		Set
			If (Me._QTY.Equals(value) = false) Then
				Me.OnQTYChanging(value)
				Me.SendPropertyChanging
				Me._QTY = value
				Me.SendPropertyChanged("QTY")
				Me.OnQTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD", DbType:="Int")>  _
	Public Property SUNITCD() As System.Nullable(Of Integer)
		Get
			Return Me._SUNITCD
		End Get
		Set
			If (Me._SUNITCD.Equals(value) = false) Then
				Me.OnSUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._SUNITCD = value
				Me.SendPropertyChanged("SUNITCD")
				Me.OnSUNITCDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.lcnrequest")>  _
Partial Public Class lcnrequest
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _addr_thanm As String
	
	Private _BSN_THAIFULLNAME As String
	
	Private _IDENTIFY As String
	
	Private _RCVNO_DISPLAY As String
	
	Private _RCVDATE_DISPLAY As String
	
	Private _WRITE_AT As String
	
	Private _WRITE_DATE As String
	
	Private _SALE_MEDICIAN1 As String
	
	Private _SALE_MEDICIAN2 As String
	
	Private _SALE_MEDICIAN3 As String
	
	Private _SALE_MEDICIAN4 As String
	
	Private _LCNNO_CHANGE As String
	
	Private _OFFICER_NAME As String
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _thaaddr As String
	
	Private _engaddr As String
	
	Private _tharoom As String
	
	Private _thamu As String
	
	Private _thafloor As String
	
	Private _thasoi As String
	
	Private _thabuilding As String
	
	Private _engsoi As String
	
	Private _tharoad As String
	
	Private _engroad As String
	
	Private _zipcode As String
	
	Private _tel As String
	
	Private _fax As String
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _LOCATION_ADDRESS_IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _DOWN_ID As System.Nullable(Of Integer)
	
	Private _CITIZEN_ID As String
	
	Private _CITIZEN_ID_UPLOAD As String
	
	Private _XMLNAME As String
	
	Private _engmu As String
	
	Private _engfloor As String
	
	Private _engbuilding As String
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _lctcd As System.Nullable(Of Integer)
	
	Private _thanameplace As String
	
	Private _engnameplace As String
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _HOUSENO As String
	
	Private _Branch As String
	
	Private _LOCATION_TYPE_NORMAL As System.Nullable(Of Integer)
	
	Private _LOCATION_TYPE_KEEP As System.Nullable(Of Integer)
	
	Private _LOCATION_TYPE_OTHER As System.Nullable(Of Integer)
	
	Private _LOCATION_TYPE_ID As System.Nullable(Of Integer)
	
	Private _SYSTEM_NAME As String
	
	Private _thmblcd As System.Nullable(Of Short)
	
	Private _amphrcd As System.Nullable(Of Short)
	
	Private _chngwtcd As System.Nullable(Of Short)
	
	Private _thathmblnm As String
	
	Private _thaamphrnm As String
	
	Private _thachngwtnm As String
	
	Private _engthmblnm As String
	
	Private _engamphrnm As String
	
	Private _engchngwtnm As String
	
	Private _LOCATION_ADDRESS_IDENTIFY As String
	
	Private _REMARK As String
	
	Private _RQT_TYPE As System.Nullable(Of Integer)
	
	Private _CANCEL_REMARK As String
	
	Private _CANCEL_DATE As System.Nullable(Of Date)
	
	Private _RCV_MEETING As String
	
	Private _LCN_TYPE As System.Nullable(Of Integer)
	
	Private _CONSIDER_DATE As System.Nullable(Of Date)
	
	Private _app_date As System.Nullable(Of Date)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _RCVNO_MANUAL As String
	
	Private _cnccd As System.Nullable(Of Integer)
	
	Private _cnccscd As System.Nullable(Of Integer)
	
	Private _REQUEST_TYPE As System.Nullable(Of Integer)
	
	Private _lcntpcd As String
	
	Private _FK_STAFF_OFFER_IDA As System.Nullable(Of Integer)
	
	Private _lcntpcd_old As String
	
	Private _TEMPORARY_RCVNO As String
	
	Private _TEMPLATE_ID As System.Nullable(Of Integer)
	
	Private _rcvr_id As System.Nullable(Of Integer)
	
	Private _OLDYEAR As String
	
	Private _NEWYEAR As String
	
	Private _GPP As System.Nullable(Of Integer)
	
	Private _EXTEND As String
	
	Private _OFF_CITIZEN As String
	
	Private _ALLOW_CITIZEN As String
	
	Private _RESPON_CITIZEN As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub Onaddr_thanmChanging(value As String)
    End Sub
    Partial Private Sub Onaddr_thanmChanged()
    End Sub
    Partial Private Sub OnBSN_THAIFULLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THAIFULLNAMEChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanged()
    End Sub
    Partial Private Sub OnWRITE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_ATChanged()
    End Sub
    Partial Private Sub OnWRITE_DATEChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_DATEChanged()
    End Sub
    Partial Private Sub OnSALE_MEDICIAN1Changing(value As String)
    End Sub
    Partial Private Sub OnSALE_MEDICIAN1Changed()
    End Sub
    Partial Private Sub OnSALE_MEDICIAN2Changing(value As String)
    End Sub
    Partial Private Sub OnSALE_MEDICIAN2Changed()
    End Sub
    Partial Private Sub OnSALE_MEDICIAN3Changing(value As String)
    End Sub
    Partial Private Sub OnSALE_MEDICIAN3Changed()
    End Sub
    Partial Private Sub OnSALE_MEDICIAN4Changing(value As String)
    End Sub
    Partial Private Sub OnSALE_MEDICIAN4Changed()
    End Sub
    Partial Private Sub OnLCNNO_CHANGEChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNO_CHANGEChanged()
    End Sub
    Partial Private Sub OnOFFICER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnOFFICER_NAMEChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnthaaddrChanging(value As String)
    End Sub
    Partial Private Sub OnthaaddrChanged()
    End Sub
    Partial Private Sub OnengaddrChanging(value As String)
    End Sub
    Partial Private Sub OnengaddrChanged()
    End Sub
    Partial Private Sub OntharoomChanging(value As String)
    End Sub
    Partial Private Sub OntharoomChanged()
    End Sub
    Partial Private Sub OnthamuChanging(value As String)
    End Sub
    Partial Private Sub OnthamuChanged()
    End Sub
    Partial Private Sub OnthafloorChanging(value As String)
    End Sub
    Partial Private Sub OnthafloorChanged()
    End Sub
    Partial Private Sub OnthasoiChanging(value As String)
    End Sub
    Partial Private Sub OnthasoiChanged()
    End Sub
    Partial Private Sub OnthabuildingChanging(value As String)
    End Sub
    Partial Private Sub OnthabuildingChanged()
    End Sub
    Partial Private Sub OnengsoiChanging(value As String)
    End Sub
    Partial Private Sub OnengsoiChanged()
    End Sub
    Partial Private Sub OntharoadChanging(value As String)
    End Sub
    Partial Private Sub OntharoadChanged()
    End Sub
    Partial Private Sub OnengroadChanging(value As String)
    End Sub
    Partial Private Sub OnengroadChanged()
    End Sub
    Partial Private Sub OnzipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnzipcodeChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_IDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_IDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnDOWN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOWN_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnXMLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnXMLNAMEChanged()
    End Sub
    Partial Private Sub OnengmuChanging(value As String)
    End Sub
    Partial Private Sub OnengmuChanged()
    End Sub
    Partial Private Sub OnengfloorChanging(value As String)
    End Sub
    Partial Private Sub OnengfloorChanged()
    End Sub
    Partial Private Sub OnengbuildingChanging(value As String)
    End Sub
    Partial Private Sub OnengbuildingChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnthanameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnthanameplaceChanged()
    End Sub
    Partial Private Sub OnengnameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnengnameplaceChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnHOUSENOChanging(value As String)
    End Sub
    Partial Private Sub OnHOUSENOChanged()
    End Sub
    Partial Private Sub OnBranchChanging(value As String)
    End Sub
    Partial Private Sub OnBranchChanged()
    End Sub
    Partial Private Sub OnLOCATION_TYPE_NORMALChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_TYPE_NORMALChanged()
    End Sub
    Partial Private Sub OnLOCATION_TYPE_KEEPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_TYPE_KEEPChanged()
    End Sub
    Partial Private Sub OnLOCATION_TYPE_OTHERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_TYPE_OTHERChanged()
    End Sub
    Partial Private Sub OnLOCATION_TYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnSYSTEM_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSYSTEM_NAMEChanged()
    End Sub
    Partial Private Sub OnthmblcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnthmblcdChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnthathmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnthathmblnmChanged()
    End Sub
    Partial Private Sub OnthaamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnthaamphrnmChanged()
    End Sub
    Partial Private Sub OnthachngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnthachngwtnmChanged()
    End Sub
    Partial Private Sub OnengthmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnengthmblnmChanged()
    End Sub
    Partial Private Sub OnengamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnengamphrnmChanged()
    End Sub
    Partial Private Sub OnengchngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnengchngwtnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnRQT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRQT_TYPEChanged()
    End Sub
    Partial Private Sub OnCANCEL_REMARKChanging(value As String)
    End Sub
    Partial Private Sub OnCANCEL_REMARKChanged()
    End Sub
    Partial Private Sub OnCANCEL_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCANCEL_DATEChanged()
    End Sub
    Partial Private Sub OnRCV_MEETINGChanging(value As String)
    End Sub
    Partial Private Sub OnRCV_MEETINGChanged()
    End Sub
    Partial Private Sub OnLCN_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_TYPEChanged()
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanged()
    End Sub
    Partial Private Sub Onapp_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onapp_dateChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnRCVNO_MANUALChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_MANUALChanged()
    End Sub
    Partial Private Sub OncnccdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncnccdChanged()
    End Sub
    Partial Private Sub OncnccscdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncnccscdChanged()
    End Sub
    Partial Private Sub OnREQUEST_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREQUEST_TYPEChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanged()
    End Sub
    Partial Private Sub Onlcntpcd_oldChanging(value As String)
    End Sub
    Partial Private Sub Onlcntpcd_oldChanged()
    End Sub
    Partial Private Sub OnTEMPORARY_RCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnTEMPORARY_RCVNOChanged()
    End Sub
    Partial Private Sub OnTEMPLATE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTEMPLATE_IDChanged()
    End Sub
    Partial Private Sub Onrcvr_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrcvr_idChanged()
    End Sub
    Partial Private Sub OnOLDYEARChanging(value As String)
    End Sub
    Partial Private Sub OnOLDYEARChanged()
    End Sub
    Partial Private Sub OnNEWYEARChanging(value As String)
    End Sub
    Partial Private Sub OnNEWYEARChanged()
    End Sub
    Partial Private Sub OnGPPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGPPChanged()
    End Sub
    Partial Private Sub OnEXTENDChanging(value As String)
    End Sub
    Partial Private Sub OnEXTENDChanged()
    End Sub
    Partial Private Sub OnOFF_CITIZENChanging(value As String)
    End Sub
    Partial Private Sub OnOFF_CITIZENChanged()
    End Sub
    Partial Private Sub OnALLOW_CITIZENChanging(value As String)
    End Sub
    Partial Private Sub OnALLOW_CITIZENChanged()
    End Sub
    Partial Private Sub OnRESPON_CITIZENChanging(value As String)
    End Sub
    Partial Private Sub OnRESPON_CITIZENChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_addr_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property addr_thanm() As String
		Get
			Return Me._addr_thanm
		End Get
		Set
			If (String.Equals(Me._addr_thanm, value) = false) Then
				Me.Onaddr_thanmChanging(value)
				Me.SendPropertyChanging
				Me._addr_thanm = value
				Me.SendPropertyChanged("addr_thanm")
				Me.Onaddr_thanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THAIFULLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THAIFULLNAME() As String
		Get
			Return Me._BSN_THAIFULLNAME
		End Get
		Set
			If (String.Equals(Me._BSN_THAIFULLNAME, value) = false) Then
				Me.OnBSN_THAIFULLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THAIFULLNAME = value
				Me.SendPropertyChanged("BSN_THAIFULLNAME")
				Me.OnBSN_THAIFULLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_DISPLAY() As String
		Get
			Return Me._RCVNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVNO_DISPLAY, value) = false) Then
				Me.OnRCVNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_DISPLAY = value
				Me.SendPropertyChanged("RCVNO_DISPLAY")
				Me.OnRCVNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVDATE_DISPLAY() As String
		Get
			Return Me._RCVDATE_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVDATE_DISPLAY, value) = false) Then
				Me.OnRCVDATE_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE_DISPLAY = value
				Me.SendPropertyChanged("RCVDATE_DISPLAY")
				Me.OnRCVDATE_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_AT() As String
		Get
			Return Me._WRITE_AT
		End Get
		Set
			If (String.Equals(Me._WRITE_AT, value) = false) Then
				Me.OnWRITE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_AT = value
				Me.SendPropertyChanged("WRITE_AT")
				Me.OnWRITE_ATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_DATE", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_DATE() As String
		Get
			Return Me._WRITE_DATE
		End Get
		Set
			If (String.Equals(Me._WRITE_DATE, value) = false) Then
				Me.OnWRITE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_DATE = value
				Me.SendPropertyChanged("WRITE_DATE")
				Me.OnWRITE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_MEDICIAN1", DbType:="NVarChar(MAX)")>  _
	Public Property SALE_MEDICIAN1() As String
		Get
			Return Me._SALE_MEDICIAN1
		End Get
		Set
			If (String.Equals(Me._SALE_MEDICIAN1, value) = false) Then
				Me.OnSALE_MEDICIAN1Changing(value)
				Me.SendPropertyChanging
				Me._SALE_MEDICIAN1 = value
				Me.SendPropertyChanged("SALE_MEDICIAN1")
				Me.OnSALE_MEDICIAN1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_MEDICIAN2", DbType:="NVarChar(MAX)")>  _
	Public Property SALE_MEDICIAN2() As String
		Get
			Return Me._SALE_MEDICIAN2
		End Get
		Set
			If (String.Equals(Me._SALE_MEDICIAN2, value) = false) Then
				Me.OnSALE_MEDICIAN2Changing(value)
				Me.SendPropertyChanging
				Me._SALE_MEDICIAN2 = value
				Me.SendPropertyChanged("SALE_MEDICIAN2")
				Me.OnSALE_MEDICIAN2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_MEDICIAN3", DbType:="NVarChar(MAX)")>  _
	Public Property SALE_MEDICIAN3() As String
		Get
			Return Me._SALE_MEDICIAN3
		End Get
		Set
			If (String.Equals(Me._SALE_MEDICIAN3, value) = false) Then
				Me.OnSALE_MEDICIAN3Changing(value)
				Me.SendPropertyChanging
				Me._SALE_MEDICIAN3 = value
				Me.SendPropertyChanged("SALE_MEDICIAN3")
				Me.OnSALE_MEDICIAN3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_MEDICIAN4", DbType:="NVarChar(MAX)")>  _
	Public Property SALE_MEDICIAN4() As String
		Get
			Return Me._SALE_MEDICIAN4
		End Get
		Set
			If (String.Equals(Me._SALE_MEDICIAN4, value) = false) Then
				Me.OnSALE_MEDICIAN4Changing(value)
				Me.SendPropertyChanging
				Me._SALE_MEDICIAN4 = value
				Me.SendPropertyChanged("SALE_MEDICIAN4")
				Me.OnSALE_MEDICIAN4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO_CHANGE", DbType:="NVarChar(MAX)")>  _
	Public Property LCNNO_CHANGE() As String
		Get
			Return Me._LCNNO_CHANGE
		End Get
		Set
			If (String.Equals(Me._LCNNO_CHANGE, value) = false) Then
				Me.OnLCNNO_CHANGEChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO_CHANGE = value
				Me.SendPropertyChanged("LCNNO_CHANGE")
				Me.OnLCNNO_CHANGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFFICER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property OFFICER_NAME() As String
		Get
			Return Me._OFFICER_NAME
		End Get
		Set
			If (String.Equals(Me._OFFICER_NAME, value) = false) Then
				Me.OnOFFICER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._OFFICER_NAME = value
				Me.SendPropertyChanged("OFFICER_NAME")
				Me.OnOFFICER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaaddr", DbType:="NVarChar(MAX)")>  _
	Public Property thaaddr() As String
		Get
			Return Me._thaaddr
		End Get
		Set
			If (String.Equals(Me._thaaddr, value) = false) Then
				Me.OnthaaddrChanging(value)
				Me.SendPropertyChanging
				Me._thaaddr = value
				Me.SendPropertyChanged("thaaddr")
				Me.OnthaaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engaddr", DbType:="NVarChar(MAX)")>  _
	Public Property engaddr() As String
		Get
			Return Me._engaddr
		End Get
		Set
			If (String.Equals(Me._engaddr, value) = false) Then
				Me.OnengaddrChanging(value)
				Me.SendPropertyChanging
				Me._engaddr = value
				Me.SendPropertyChanged("engaddr")
				Me.OnengaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoom", DbType:="NVarChar(MAX)")>  _
	Public Property tharoom() As String
		Get
			Return Me._tharoom
		End Get
		Set
			If (String.Equals(Me._tharoom, value) = false) Then
				Me.OntharoomChanging(value)
				Me.SendPropertyChanging
				Me._tharoom = value
				Me.SendPropertyChanged("tharoom")
				Me.OntharoomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thamu", DbType:="NVarChar(MAX)")>  _
	Public Property thamu() As String
		Get
			Return Me._thamu
		End Get
		Set
			If (String.Equals(Me._thamu, value) = false) Then
				Me.OnthamuChanging(value)
				Me.SendPropertyChanging
				Me._thamu = value
				Me.SendPropertyChanged("thamu")
				Me.OnthamuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thafloor", DbType:="NVarChar(MAX)")>  _
	Public Property thafloor() As String
		Get
			Return Me._thafloor
		End Get
		Set
			If (String.Equals(Me._thafloor, value) = false) Then
				Me.OnthafloorChanging(value)
				Me.SendPropertyChanging
				Me._thafloor = value
				Me.SendPropertyChanged("thafloor")
				Me.OnthafloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thasoi", DbType:="NVarChar(MAX)")>  _
	Public Property thasoi() As String
		Get
			Return Me._thasoi
		End Get
		Set
			If (String.Equals(Me._thasoi, value) = false) Then
				Me.OnthasoiChanging(value)
				Me.SendPropertyChanging
				Me._thasoi = value
				Me.SendPropertyChanged("thasoi")
				Me.OnthasoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thabuilding", DbType:="NVarChar(MAX)")>  _
	Public Property thabuilding() As String
		Get
			Return Me._thabuilding
		End Get
		Set
			If (String.Equals(Me._thabuilding, value) = false) Then
				Me.OnthabuildingChanging(value)
				Me.SendPropertyChanging
				Me._thabuilding = value
				Me.SendPropertyChanged("thabuilding")
				Me.OnthabuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engsoi", DbType:="NVarChar(MAX)")>  _
	Public Property engsoi() As String
		Get
			Return Me._engsoi
		End Get
		Set
			If (String.Equals(Me._engsoi, value) = false) Then
				Me.OnengsoiChanging(value)
				Me.SendPropertyChanging
				Me._engsoi = value
				Me.SendPropertyChanged("engsoi")
				Me.OnengsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoad", DbType:="NVarChar(MAX)")>  _
	Public Property tharoad() As String
		Get
			Return Me._tharoad
		End Get
		Set
			If (String.Equals(Me._tharoad, value) = false) Then
				Me.OntharoadChanging(value)
				Me.SendPropertyChanging
				Me._tharoad = value
				Me.SendPropertyChanged("tharoad")
				Me.OntharoadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engroad", DbType:="NVarChar(MAX)")>  _
	Public Property engroad() As String
		Get
			Return Me._engroad
		End Get
		Set
			If (String.Equals(Me._engroad, value) = false) Then
				Me.OnengroadChanging(value)
				Me.SendPropertyChanging
				Me._engroad = value
				Me.SendPropertyChanged("engroad")
				Me.OnengroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_zipcode", DbType:="NVarChar(MAX)")>  _
	Public Property zipcode() As String
		Get
			Return Me._zipcode
		End Get
		Set
			If (String.Equals(Me._zipcode, value) = false) Then
				Me.OnzipcodeChanging(value)
				Me.SendPropertyChanging
				Me._zipcode = value
				Me.SendPropertyChanged("zipcode")
				Me.OnzipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="NVarChar(MAX)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="NVarChar(MAX)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_IDA", DbType:="Int NOT NULL")>  _
	Public Property LOCATION_ADDRESS_IDA() As Integer
		Get
			Return Me._LOCATION_ADDRESS_IDA
		End Get
		Set
			If ((Me._LOCATION_ADDRESS_IDA = value)  _
						= false) Then
				Me.OnLOCATION_ADDRESS_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_IDA = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_IDA")
				Me.OnLOCATION_ADDRESS_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOWN_ID", DbType:="Int")>  _
	Public Property DOWN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DOWN_ID
		End Get
		Set
			If (Me._DOWN_ID.Equals(value) = false) Then
				Me.OnDOWN_IDChanging(value)
				Me.SendPropertyChanging
				Me._DOWN_ID = value
				Me.SendPropertyChanged("DOWN_ID")
				Me.OnDOWN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_UPLOAD() As String
		Get
			Return Me._CITIZEN_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_UPLOAD, value) = false) Then
				Me.OnCITIZEN_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_ID_UPLOAD")
				Me.OnCITIZEN_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XMLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property XMLNAME() As String
		Get
			Return Me._XMLNAME
		End Get
		Set
			If (String.Equals(Me._XMLNAME, value) = false) Then
				Me.OnXMLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._XMLNAME = value
				Me.SendPropertyChanged("XMLNAME")
				Me.OnXMLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engmu", DbType:="NVarChar(MAX)")>  _
	Public Property engmu() As String
		Get
			Return Me._engmu
		End Get
		Set
			If (String.Equals(Me._engmu, value) = false) Then
				Me.OnengmuChanging(value)
				Me.SendPropertyChanging
				Me._engmu = value
				Me.SendPropertyChanged("engmu")
				Me.OnengmuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engfloor", DbType:="NVarChar(MAX)")>  _
	Public Property engfloor() As String
		Get
			Return Me._engfloor
		End Get
		Set
			If (String.Equals(Me._engfloor, value) = false) Then
				Me.OnengfloorChanging(value)
				Me.SendPropertyChanging
				Me._engfloor = value
				Me.SendPropertyChanged("engfloor")
				Me.OnengfloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engbuilding", DbType:="NVarChar(MAX)")>  _
	Public Property engbuilding() As String
		Get
			Return Me._engbuilding
		End Get
		Set
			If (String.Equals(Me._engbuilding, value) = false) Then
				Me.OnengbuildingChanging(value)
				Me.SendPropertyChanging
				Me._engbuilding = value
				Me.SendPropertyChanged("engbuilding")
				Me.OnengbuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="DateTime")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int")>  _
	Public Property lctcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctcd
		End Get
		Set
			If (Me._lctcd.Equals(value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanameplace", DbType:="NVarChar(MAX)")>  _
	Public Property thanameplace() As String
		Get
			Return Me._thanameplace
		End Get
		Set
			If (String.Equals(Me._thanameplace, value) = false) Then
				Me.OnthanameplaceChanging(value)
				Me.SendPropertyChanging
				Me._thanameplace = value
				Me.SendPropertyChanged("thanameplace")
				Me.OnthanameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engnameplace", DbType:="NVarChar(MAX)")>  _
	Public Property engnameplace() As String
		Get
			Return Me._engnameplace
		End Get
		Set
			If (String.Equals(Me._engnameplace, value) = false) Then
				Me.OnengnameplaceChanging(value)
				Me.SendPropertyChanging
				Me._engnameplace = value
				Me.SendPropertyChanged("engnameplace")
				Me.OnengnameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOUSENO", DbType:="NVarChar(MAX)")>  _
	Public Property HOUSENO() As String
		Get
			Return Me._HOUSENO
		End Get
		Set
			If (String.Equals(Me._HOUSENO, value) = false) Then
				Me.OnHOUSENOChanging(value)
				Me.SendPropertyChanging
				Me._HOUSENO = value
				Me.SendPropertyChanged("HOUSENO")
				Me.OnHOUSENOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Branch", DbType:="NVarChar(MAX)")>  _
	Public Property Branch() As String
		Get
			Return Me._Branch
		End Get
		Set
			If (String.Equals(Me._Branch, value) = false) Then
				Me.OnBranchChanging(value)
				Me.SendPropertyChanging
				Me._Branch = value
				Me.SendPropertyChanged("Branch")
				Me.OnBranchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_TYPE_NORMAL", DbType:="Int")>  _
	Public Property LOCATION_TYPE_NORMAL() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_TYPE_NORMAL
		End Get
		Set
			If (Me._LOCATION_TYPE_NORMAL.Equals(value) = false) Then
				Me.OnLOCATION_TYPE_NORMALChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_TYPE_NORMAL = value
				Me.SendPropertyChanged("LOCATION_TYPE_NORMAL")
				Me.OnLOCATION_TYPE_NORMALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_TYPE_KEEP", DbType:="Int")>  _
	Public Property LOCATION_TYPE_KEEP() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_TYPE_KEEP
		End Get
		Set
			If (Me._LOCATION_TYPE_KEEP.Equals(value) = false) Then
				Me.OnLOCATION_TYPE_KEEPChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_TYPE_KEEP = value
				Me.SendPropertyChanged("LOCATION_TYPE_KEEP")
				Me.OnLOCATION_TYPE_KEEPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_TYPE_OTHER", DbType:="Int")>  _
	Public Property LOCATION_TYPE_OTHER() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_TYPE_OTHER
		End Get
		Set
			If (Me._LOCATION_TYPE_OTHER.Equals(value) = false) Then
				Me.OnLOCATION_TYPE_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_TYPE_OTHER = value
				Me.SendPropertyChanged("LOCATION_TYPE_OTHER")
				Me.OnLOCATION_TYPE_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_TYPE_ID", DbType:="Int")>  _
	Public Property LOCATION_TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_TYPE_ID
		End Get
		Set
			If (Me._LOCATION_TYPE_ID.Equals(value) = false) Then
				Me.OnLOCATION_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_TYPE_ID = value
				Me.SendPropertyChanged("LOCATION_TYPE_ID")
				Me.OnLOCATION_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYSTEM_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SYSTEM_NAME() As String
		Get
			Return Me._SYSTEM_NAME
		End Get
		Set
			If (String.Equals(Me._SYSTEM_NAME, value) = false) Then
				Me.OnSYSTEM_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SYSTEM_NAME = value
				Me.SendPropertyChanged("SYSTEM_NAME")
				Me.OnSYSTEM_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd", DbType:="SmallInt")>  _
	Public Property thmblcd() As System.Nullable(Of Short)
		Get
			Return Me._thmblcd
		End Get
		Set
			If (Me._thmblcd.Equals(value) = false) Then
				Me.OnthmblcdChanging(value)
				Me.SendPropertyChanging
				Me._thmblcd = value
				Me.SendPropertyChanged("thmblcd")
				Me.OnthmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="SmallInt")>  _
	Public Property amphrcd() As System.Nullable(Of Short)
		Get
			Return Me._amphrcd
		End Get
		Set
			If (Me._amphrcd.Equals(value) = false) Then
				Me.OnamphrcdChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd = value
				Me.SendPropertyChanged("amphrcd")
				Me.OnamphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="SmallInt")>  _
	Public Property chngwtcd() As System.Nullable(Of Short)
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (Me._chngwtcd.Equals(value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thathmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property thathmblnm() As String
		Get
			Return Me._thathmblnm
		End Get
		Set
			If (String.Equals(Me._thathmblnm, value) = false) Then
				Me.OnthathmblnmChanging(value)
				Me.SendPropertyChanging
				Me._thathmblnm = value
				Me.SendPropertyChanged("thathmblnm")
				Me.OnthathmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property thaamphrnm() As String
		Get
			Return Me._thaamphrnm
		End Get
		Set
			If (String.Equals(Me._thaamphrnm, value) = false) Then
				Me.OnthaamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._thaamphrnm = value
				Me.SendPropertyChanged("thaamphrnm")
				Me.OnthaamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thachngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property thachngwtnm() As String
		Get
			Return Me._thachngwtnm
		End Get
		Set
			If (String.Equals(Me._thachngwtnm, value) = false) Then
				Me.OnthachngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._thachngwtnm = value
				Me.SendPropertyChanged("thachngwtnm")
				Me.OnthachngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engthmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property engthmblnm() As String
		Get
			Return Me._engthmblnm
		End Get
		Set
			If (String.Equals(Me._engthmblnm, value) = false) Then
				Me.OnengthmblnmChanging(value)
				Me.SendPropertyChanging
				Me._engthmblnm = value
				Me.SendPropertyChanged("engthmblnm")
				Me.OnengthmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property engamphrnm() As String
		Get
			Return Me._engamphrnm
		End Get
		Set
			If (String.Equals(Me._engamphrnm, value) = false) Then
				Me.OnengamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._engamphrnm = value
				Me.SendPropertyChanged("engamphrnm")
				Me.OnengamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engchngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property engchngwtnm() As String
		Get
			Return Me._engchngwtnm
		End Get
		Set
			If (String.Equals(Me._engchngwtnm, value) = false) Then
				Me.OnengchngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._engchngwtnm = value
				Me.SendPropertyChanged("engchngwtnm")
				Me.OnengchngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_IDENTIFY() As String
		Get
			Return Me._LOCATION_ADDRESS_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_IDENTIFY, value) = false) Then
				Me.OnLOCATION_ADDRESS_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_IDENTIFY = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_IDENTIFY")
				Me.OnLOCATION_ADDRESS_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RQT_TYPE", DbType:="Int")>  _
	Public Property RQT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._RQT_TYPE
		End Get
		Set
			If (Me._RQT_TYPE.Equals(value) = false) Then
				Me.OnRQT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._RQT_TYPE = value
				Me.SendPropertyChanged("RQT_TYPE")
				Me.OnRQT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CANCEL_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property CANCEL_REMARK() As String
		Get
			Return Me._CANCEL_REMARK
		End Get
		Set
			If (String.Equals(Me._CANCEL_REMARK, value) = false) Then
				Me.OnCANCEL_REMARKChanging(value)
				Me.SendPropertyChanging
				Me._CANCEL_REMARK = value
				Me.SendPropertyChanged("CANCEL_REMARK")
				Me.OnCANCEL_REMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CANCEL_DATE", DbType:="DateTime")>  _
	Public Property CANCEL_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CANCEL_DATE
		End Get
		Set
			If (Me._CANCEL_DATE.Equals(value) = false) Then
				Me.OnCANCEL_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CANCEL_DATE = value
				Me.SendPropertyChanged("CANCEL_DATE")
				Me.OnCANCEL_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCV_MEETING", DbType:="NVarChar(MAX)")>  _
	Public Property RCV_MEETING() As String
		Get
			Return Me._RCV_MEETING
		End Get
		Set
			If (String.Equals(Me._RCV_MEETING, value) = false) Then
				Me.OnRCV_MEETINGChanging(value)
				Me.SendPropertyChanging
				Me._RCV_MEETING = value
				Me.SendPropertyChanged("RCV_MEETING")
				Me.OnRCV_MEETINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_TYPE", DbType:="Int")>  _
	Public Property LCN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_TYPE
		End Get
		Set
			If (Me._LCN_TYPE.Equals(value) = false) Then
				Me.OnLCN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._LCN_TYPE = value
				Me.SendPropertyChanged("LCN_TYPE")
				Me.OnLCN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSIDER_DATE", DbType:="DateTime")>  _
	Public Property CONSIDER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONSIDER_DATE
		End Get
		Set
			If (Me._CONSIDER_DATE.Equals(value) = false) Then
				Me.OnCONSIDER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONSIDER_DATE = value
				Me.SendPropertyChanged("CONSIDER_DATE")
				Me.OnCONSIDER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_app_date", DbType:="DateTime")>  _
	Public Property app_date() As System.Nullable(Of Date)
		Get
			Return Me._app_date
		End Get
		Set
			If (Me._app_date.Equals(value) = false) Then
				Me.Onapp_dateChanging(value)
				Me.SendPropertyChanging
				Me._app_date = value
				Me.SendPropertyChanged("app_date")
				Me.Onapp_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_MANUAL", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_MANUAL() As String
		Get
			Return Me._RCVNO_MANUAL
		End Get
		Set
			If (String.Equals(Me._RCVNO_MANUAL, value) = false) Then
				Me.OnRCVNO_MANUALChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_MANUAL = value
				Me.SendPropertyChanged("RCVNO_MANUAL")
				Me.OnRCVNO_MANUALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccd", DbType:="Int")>  _
	Public Property cnccd() As System.Nullable(Of Integer)
		Get
			Return Me._cnccd
		End Get
		Set
			If (Me._cnccd.Equals(value) = false) Then
				Me.OncnccdChanging(value)
				Me.SendPropertyChanging
				Me._cnccd = value
				Me.SendPropertyChanged("cnccd")
				Me.OncnccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccscd", DbType:="Int")>  _
	Public Property cnccscd() As System.Nullable(Of Integer)
		Get
			Return Me._cnccscd
		End Get
		Set
			If (Me._cnccscd.Equals(value) = false) Then
				Me.OncnccscdChanging(value)
				Me.SendPropertyChanging
				Me._cnccscd = value
				Me.SendPropertyChanged("cnccscd")
				Me.OncnccscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_TYPE", DbType:="Int")>  _
	Public Property REQUEST_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._REQUEST_TYPE
		End Get
		Set
			If (Me._REQUEST_TYPE.Equals(value) = false) Then
				Me.OnREQUEST_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_TYPE = value
				Me.SendPropertyChanged("REQUEST_TYPE")
				Me.OnREQUEST_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_STAFF_OFFER_IDA", DbType:="Int")>  _
	Public Property FK_STAFF_OFFER_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_STAFF_OFFER_IDA
		End Get
		Set
			If (Me._FK_STAFF_OFFER_IDA.Equals(value) = false) Then
				Me.OnFK_STAFF_OFFER_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_STAFF_OFFER_IDA = value
				Me.SendPropertyChanged("FK_STAFF_OFFER_IDA")
				Me.OnFK_STAFF_OFFER_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd_old", DbType:="VarChar(4)")>  _
	Public Property lcntpcd_old() As String
		Get
			Return Me._lcntpcd_old
		End Get
		Set
			If (String.Equals(Me._lcntpcd_old, value) = false) Then
				Me.Onlcntpcd_oldChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd_old = value
				Me.SendPropertyChanged("lcntpcd_old")
				Me.Onlcntpcd_oldChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPORARY_RCVNO", DbType:="NVarChar(50)")>  _
	Public Property TEMPORARY_RCVNO() As String
		Get
			Return Me._TEMPORARY_RCVNO
		End Get
		Set
			If (String.Equals(Me._TEMPORARY_RCVNO, value) = false) Then
				Me.OnTEMPORARY_RCVNOChanging(value)
				Me.SendPropertyChanging
				Me._TEMPORARY_RCVNO = value
				Me.SendPropertyChanged("TEMPORARY_RCVNO")
				Me.OnTEMPORARY_RCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPLATE_ID", DbType:="Int")>  _
	Public Property TEMPLATE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TEMPLATE_ID
		End Get
		Set
			If (Me._TEMPLATE_ID.Equals(value) = false) Then
				Me.OnTEMPLATE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TEMPLATE_ID = value
				Me.SendPropertyChanged("TEMPLATE_ID")
				Me.OnTEMPLATE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvr_id", DbType:="Int")>  _
	Public Property rcvr_id() As System.Nullable(Of Integer)
		Get
			Return Me._rcvr_id
		End Get
		Set
			If (Me._rcvr_id.Equals(value) = false) Then
				Me.Onrcvr_idChanging(value)
				Me.SendPropertyChanging
				Me._rcvr_id = value
				Me.SendPropertyChanged("rcvr_id")
				Me.Onrcvr_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLDYEAR", DbType:="NChar(4)")>  _
	Public Property OLDYEAR() As String
		Get
			Return Me._OLDYEAR
		End Get
		Set
			If (String.Equals(Me._OLDYEAR, value) = false) Then
				Me.OnOLDYEARChanging(value)
				Me.SendPropertyChanging
				Me._OLDYEAR = value
				Me.SendPropertyChanged("OLDYEAR")
				Me.OnOLDYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEWYEAR", DbType:="NChar(4)")>  _
	Public Property NEWYEAR() As String
		Get
			Return Me._NEWYEAR
		End Get
		Set
			If (String.Equals(Me._NEWYEAR, value) = false) Then
				Me.OnNEWYEARChanging(value)
				Me.SendPropertyChanging
				Me._NEWYEAR = value
				Me.SendPropertyChanged("NEWYEAR")
				Me.OnNEWYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GPP", DbType:="Int")>  _
	Public Property GPP() As System.Nullable(Of Integer)
		Get
			Return Me._GPP
		End Get
		Set
			If (Me._GPP.Equals(value) = false) Then
				Me.OnGPPChanging(value)
				Me.SendPropertyChanging
				Me._GPP = value
				Me.SendPropertyChanged("GPP")
				Me.OnGPPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXTEND", DbType:="NVarChar(50)")>  _
	Public Property EXTEND() As String
		Get
			Return Me._EXTEND
		End Get
		Set
			If (String.Equals(Me._EXTEND, value) = false) Then
				Me.OnEXTENDChanging(value)
				Me.SendPropertyChanging
				Me._EXTEND = value
				Me.SendPropertyChanged("EXTEND")
				Me.OnEXTENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFF_CITIZEN", DbType:="NVarChar(MAX)")>  _
	Public Property OFF_CITIZEN() As String
		Get
			Return Me._OFF_CITIZEN
		End Get
		Set
			If (String.Equals(Me._OFF_CITIZEN, value) = false) Then
				Me.OnOFF_CITIZENChanging(value)
				Me.SendPropertyChanging
				Me._OFF_CITIZEN = value
				Me.SendPropertyChanged("OFF_CITIZEN")
				Me.OnOFF_CITIZENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLOW_CITIZEN", DbType:="NVarChar(MAX)")>  _
	Public Property ALLOW_CITIZEN() As String
		Get
			Return Me._ALLOW_CITIZEN
		End Get
		Set
			If (String.Equals(Me._ALLOW_CITIZEN, value) = false) Then
				Me.OnALLOW_CITIZENChanging(value)
				Me.SendPropertyChanging
				Me._ALLOW_CITIZEN = value
				Me.SendPropertyChanged("ALLOW_CITIZEN")
				Me.OnALLOW_CITIZENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESPON_CITIZEN", DbType:="NVarChar(MAX)")>  _
	Public Property RESPON_CITIZEN() As String
		Get
			Return Me._RESPON_CITIZEN
		End Get
		Set
			If (String.Equals(Me._RESPON_CITIZEN, value) = false) Then
				Me.OnRESPON_CITIZENChanging(value)
				Me.SendPropertyChanging
				Me._RESPON_CITIZEN = value
				Me.SendPropertyChanged("RESPON_CITIZEN")
				Me.OnRESPON_CITIZENChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_DTB")>  _
Partial Public Class DRRGT_DTB
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _FK_LCN_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnFK_LCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_LCN_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_LCN_IDA", DbType:="Int")>  _
	Public Property FK_LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_LCN_IDA
		End Get
		Set
			If (Me._FK_LCN_IDA.Equals(value) = false) Then
				Me.OnFK_LCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_LCN_IDA = value
				Me.SendPropertyChanged("FK_LCN_IDA")
				Me.OnFK_LCN_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_DTB")>  _
Partial Public Class DRRQT_DTB
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _FK_LCN_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnFK_LCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_LCN_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_LCN_IDA", DbType:="Int")>  _
	Public Property FK_LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_LCN_IDA
		End Get
		Set
			If (Me._FK_LCN_IDA.Equals(value) = false) Then
				Me.OnFK_LCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_LCN_IDA = value
				Me.SendPropertyChanged("FK_LCN_IDA")
				Me.OnFK_LCN_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_NAME_DRUG_EXPORT")>  _
Partial Public Class DRRGT_NAME_DRUG_EXPORT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _DRUG_NAME As String
	
	Private _NATIONAL_IDA As System.Nullable(Of Integer)
	
	Private _IS_ALL_NATIONAL As System.Nullable(Of Boolean)
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _ALPHA3 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnDRUG_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NAMEChanged()
    End Sub
    Partial Private Sub OnNATIONAL_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNATIONAL_IDAChanged()
    End Sub
    Partial Private Sub OnIS_ALL_NATIONALChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_ALL_NATIONALChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnALPHA3Changing(value As String)
    End Sub
    Partial Private Sub OnALPHA3Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NAME() As String
		Get
			Return Me._DRUG_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_NAME, value) = false) Then
				Me.OnDRUG_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NAME = value
				Me.SendPropertyChanged("DRUG_NAME")
				Me.OnDRUG_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATIONAL_IDA", DbType:="Int")>  _
	Public Property NATIONAL_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._NATIONAL_IDA
		End Get
		Set
			If (Me._NATIONAL_IDA.Equals(value) = false) Then
				Me.OnNATIONAL_IDAChanging(value)
				Me.SendPropertyChanging
				Me._NATIONAL_IDA = value
				Me.SendPropertyChanged("NATIONAL_IDA")
				Me.OnNATIONAL_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_ALL_NATIONAL", DbType:="Bit")>  _
	Public Property IS_ALL_NATIONAL() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_ALL_NATIONAL
		End Get
		Set
			If (Me._IS_ALL_NATIONAL.Equals(value) = false) Then
				Me.OnIS_ALL_NATIONALChanging(value)
				Me.SendPropertyChanging
				Me._IS_ALL_NATIONAL = value
				Me.SendPropertyChanged("IS_ALL_NATIONAL")
				Me.OnIS_ALL_NATIONALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALPHA3", DbType:="NVarChar(50)")>  _
	Public Property ALPHA3() As String
		Get
			Return Me._ALPHA3
		End Get
		Set
			If (String.Equals(Me._ALPHA3, value) = false) Then
				Me.OnALPHA3Changing(value)
				Me.SendPropertyChanging
				Me._ALPHA3 = value
				Me.SendPropertyChanged("ALPHA3")
				Me.OnALPHA3Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_NAME_DRUG_EXPORT")>  _
Partial Public Class DRRQT_NAME_DRUG_EXPORT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _DRUG_NAME As String
	
	Private _NATIONAL_IDA As System.Nullable(Of Integer)
	
	Private _IS_ALL_NATIONAL As System.Nullable(Of Boolean)
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _ALPHA3 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnDRUG_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NAMEChanged()
    End Sub
    Partial Private Sub OnNATIONAL_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNATIONAL_IDAChanged()
    End Sub
    Partial Private Sub OnIS_ALL_NATIONALChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_ALL_NATIONALChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnALPHA3Changing(value As String)
    End Sub
    Partial Private Sub OnALPHA3Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NAME() As String
		Get
			Return Me._DRUG_NAME
		End Get
		Set
			If (String.Equals(Me._DRUG_NAME, value) = false) Then
				Me.OnDRUG_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NAME = value
				Me.SendPropertyChanged("DRUG_NAME")
				Me.OnDRUG_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATIONAL_IDA", DbType:="Int")>  _
	Public Property NATIONAL_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._NATIONAL_IDA
		End Get
		Set
			If (Me._NATIONAL_IDA.Equals(value) = false) Then
				Me.OnNATIONAL_IDAChanging(value)
				Me.SendPropertyChanging
				Me._NATIONAL_IDA = value
				Me.SendPropertyChanged("NATIONAL_IDA")
				Me.OnNATIONAL_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_ALL_NATIONAL", DbType:="Bit")>  _
	Public Property IS_ALL_NATIONAL() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_ALL_NATIONAL
		End Get
		Set
			If (Me._IS_ALL_NATIONAL.Equals(value) = false) Then
				Me.OnIS_ALL_NATIONALChanging(value)
				Me.SendPropertyChanging
				Me._IS_ALL_NATIONAL = value
				Me.SendPropertyChanged("IS_ALL_NATIONAL")
				Me.OnIS_ALL_NATIONALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALPHA3", DbType:="NVarChar(50)")>  _
	Public Property ALPHA3() As String
		Get
			Return Me._ALPHA3
		End Get
		Set
			If (String.Equals(Me._ALPHA3, value) = false) Then
				Me.OnALPHA3Changing(value)
				Me.SendPropertyChanging
				Me._ALPHA3 = value
				Me.SendPropertyChanged("ALPHA3")
				Me.OnALPHA3Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_KEEP_DRUG")>  _
Partial Public Class DRRQT_KEEP_DRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _AGE_HOUR As System.Nullable(Of Double)
	
	Private _AGE_MONTH As System.Nullable(Of Integer)
	
	Private _AGE_DAY As System.Nullable(Of Double)
	
	Private _TEMPERATE1 As System.Nullable(Of Double)
	
	Private _TEMPERATE2 As System.Nullable(Of Double)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _KEEP_DESCRIPTION As String
	
	Private _DRUG_DETAIL As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnAGE_HOURChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAGE_HOURChanged()
    End Sub
    Partial Private Sub OnAGE_MONTHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAGE_MONTHChanged()
    End Sub
    Partial Private Sub OnAGE_DAYChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAGE_DAYChanged()
    End Sub
    Partial Private Sub OnTEMPERATE1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTEMPERATE1Changed()
    End Sub
    Partial Private Sub OnTEMPERATE2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTEMPERATE2Changed()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnKEEP_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnKEEP_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnDRUG_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_DETAILChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AGE_HOUR", DbType:="Float")>  _
	Public Property AGE_HOUR() As System.Nullable(Of Double)
		Get
			Return Me._AGE_HOUR
		End Get
		Set
			If (Me._AGE_HOUR.Equals(value) = false) Then
				Me.OnAGE_HOURChanging(value)
				Me.SendPropertyChanging
				Me._AGE_HOUR = value
				Me.SendPropertyChanged("AGE_HOUR")
				Me.OnAGE_HOURChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AGE_MONTH", DbType:="Int")>  _
	Public Property AGE_MONTH() As System.Nullable(Of Integer)
		Get
			Return Me._AGE_MONTH
		End Get
		Set
			If (Me._AGE_MONTH.Equals(value) = false) Then
				Me.OnAGE_MONTHChanging(value)
				Me.SendPropertyChanging
				Me._AGE_MONTH = value
				Me.SendPropertyChanged("AGE_MONTH")
				Me.OnAGE_MONTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AGE_DAY", DbType:="Float")>  _
	Public Property AGE_DAY() As System.Nullable(Of Double)
		Get
			Return Me._AGE_DAY
		End Get
		Set
			If (Me._AGE_DAY.Equals(value) = false) Then
				Me.OnAGE_DAYChanging(value)
				Me.SendPropertyChanging
				Me._AGE_DAY = value
				Me.SendPropertyChanged("AGE_DAY")
				Me.OnAGE_DAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPERATE1", DbType:="Float")>  _
	Public Property TEMPERATE1() As System.Nullable(Of Double)
		Get
			Return Me._TEMPERATE1
		End Get
		Set
			If (Me._TEMPERATE1.Equals(value) = false) Then
				Me.OnTEMPERATE1Changing(value)
				Me.SendPropertyChanging
				Me._TEMPERATE1 = value
				Me.SendPropertyChanged("TEMPERATE1")
				Me.OnTEMPERATE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPERATE2", DbType:="Float")>  _
	Public Property TEMPERATE2() As System.Nullable(Of Double)
		Get
			Return Me._TEMPERATE2
		End Get
		Set
			If (Me._TEMPERATE2.Equals(value) = false) Then
				Me.OnTEMPERATE2Changing(value)
				Me.SendPropertyChanging
				Me._TEMPERATE2 = value
				Me.SendPropertyChanged("TEMPERATE2")
				Me.OnTEMPERATE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEEP_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property KEEP_DESCRIPTION() As String
		Get
			Return Me._KEEP_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._KEEP_DESCRIPTION, value) = false) Then
				Me.OnKEEP_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._KEEP_DESCRIPTION = value
				Me.SendPropertyChanged("KEEP_DESCRIPTION")
				Me.OnKEEP_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_DETAIL() As String
		Get
			Return Me._DRUG_DETAIL
		End Get
		Set
			If (String.Equals(Me._DRUG_DETAIL, value) = false) Then
				Me.OnDRUG_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_DETAIL = value
				Me.SendPropertyChanged("DRUG_DETAIL")
				Me.OnDRUG_DETAILChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_REFER")>  _
Partial Public Class DRRQT_REFER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _FK_RGT_IDA As System.Nullable(Of Integer)
	
	Private _REF_TYPE As System.Nullable(Of Integer)
	
	Private _REQUEST_AT As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnFK_RGT_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_RGT_IDAChanged()
    End Sub
    Partial Private Sub OnREF_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREF_TYPEChanged()
    End Sub
    Partial Private Sub OnREQUEST_ATChanging(value As String)
    End Sub
    Partial Private Sub OnREQUEST_ATChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_RGT_IDA", DbType:="Int")>  _
	Public Property FK_RGT_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_RGT_IDA
		End Get
		Set
			If (Me._FK_RGT_IDA.Equals(value) = false) Then
				Me.OnFK_RGT_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_RGT_IDA = value
				Me.SendPropertyChanged("FK_RGT_IDA")
				Me.OnFK_RGT_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_TYPE", DbType:="Int")>  _
	Public Property REF_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._REF_TYPE
		End Get
		Set
			If (Me._REF_TYPE.Equals(value) = false) Then
				Me.OnREF_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._REF_TYPE = value
				Me.SendPropertyChanged("REF_TYPE")
				Me.OnREF_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_AT", DbType:="NVarChar(MAX)")>  _
	Public Property REQUEST_AT() As String
		Get
			Return Me._REQUEST_AT
		End Get
		Set
			If (String.Equals(Me._REQUEST_AT, value) = false) Then
				Me.OnREQUEST_ATChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_AT = value
				Me.SendPropertyChanged("REQUEST_AT")
				Me.OnREQUEST_ATChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_REFER")>  _
Partial Public Class DRRGT_REFER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _FK_RGT_IDA As System.Nullable(Of Integer)
	
	Private _REF_TYPE As System.Nullable(Of Integer)
	
	Private _REQUEST_AT As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnFK_RGT_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_RGT_IDAChanged()
    End Sub
    Partial Private Sub OnREF_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREF_TYPEChanged()
    End Sub
    Partial Private Sub OnREQUEST_ATChanging(value As String)
    End Sub
    Partial Private Sub OnREQUEST_ATChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_RGT_IDA", DbType:="Int")>  _
	Public Property FK_RGT_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_RGT_IDA
		End Get
		Set
			If (Me._FK_RGT_IDA.Equals(value) = false) Then
				Me.OnFK_RGT_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_RGT_IDA = value
				Me.SendPropertyChanged("FK_RGT_IDA")
				Me.OnFK_RGT_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_TYPE", DbType:="Int")>  _
	Public Property REF_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._REF_TYPE
		End Get
		Set
			If (Me._REF_TYPE.Equals(value) = false) Then
				Me.OnREF_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._REF_TYPE = value
				Me.SendPropertyChanged("REF_TYPE")
				Me.OnREF_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_AT", DbType:="NVarChar(MAX)")>  _
	Public Property REQUEST_AT() As String
		Get
			Return Me._REQUEST_AT
		End Get
		Set
			If (String.Equals(Me._REQUEST_AT, value) = false) Then
				Me.OnREQUEST_ATChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_AT = value
				Me.SendPropertyChanged("REQUEST_AT")
				Me.OnREQUEST_ATChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dramlsubtp")>  _
Partial Public Class dramlsubtp
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _amltpcd As System.Nullable(Of Short)
	
	Private _amlsubcd As System.Nullable(Of Short)
	
	Private _amlsubnm As String
	
	Private _amlsubnmeng As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnamltpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamltpcdChanged()
    End Sub
    Partial Private Sub OnamlsubcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamlsubcdChanged()
    End Sub
    Partial Private Sub OnamlsubnmChanging(value As String)
    End Sub
    Partial Private Sub OnamlsubnmChanged()
    End Sub
    Partial Private Sub OnamlsubnmengChanging(value As String)
    End Sub
    Partial Private Sub OnamlsubnmengChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amltpcd", DbType:="SmallInt")>  _
	Public Property amltpcd() As System.Nullable(Of Short)
		Get
			Return Me._amltpcd
		End Get
		Set
			If (Me._amltpcd.Equals(value) = false) Then
				Me.OnamltpcdChanging(value)
				Me.SendPropertyChanging
				Me._amltpcd = value
				Me.SendPropertyChanged("amltpcd")
				Me.OnamltpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amlsubcd", DbType:="SmallInt")>  _
	Public Property amlsubcd() As System.Nullable(Of Short)
		Get
			Return Me._amlsubcd
		End Get
		Set
			If (Me._amlsubcd.Equals(value) = false) Then
				Me.OnamlsubcdChanging(value)
				Me.SendPropertyChanging
				Me._amlsubcd = value
				Me.SendPropertyChanged("amlsubcd")
				Me.OnamlsubcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amlsubnm", DbType:="VarChar(150)")>  _
	Public Property amlsubnm() As String
		Get
			Return Me._amlsubnm
		End Get
		Set
			If (String.Equals(Me._amlsubnm, value) = false) Then
				Me.OnamlsubnmChanging(value)
				Me.SendPropertyChanging
				Me._amlsubnm = value
				Me.SendPropertyChanged("amlsubnm")
				Me.OnamlsubnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amlsubnmeng", DbType:="VarChar(150)")>  _
	Public Property amlsubnmeng() As String
		Get
			Return Me._amlsubnmeng
		End Get
		Set
			If (String.Equals(Me._amlsubnmeng, value) = false) Then
				Me.OnamlsubnmengChanging(value)
				Me.SendPropertyChanging
				Me._amlsubnmeng = value
				Me.SendPropertyChanged("amlsubnmeng")
				Me.OnamlsubnmengChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_NOTICE")>  _
Partial Public Class MAS_NOTICE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _SYSTEM_ID As System.Nullable(Of Integer)
	
	Private _NOTICE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSYSTEM_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSYSTEM_IDChanged()
    End Sub
    Partial Private Sub OnNOTICEChanging(value As String)
    End Sub
    Partial Private Sub OnNOTICEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYSTEM_ID", DbType:="Int")>  _
	Public Property SYSTEM_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SYSTEM_ID
		End Get
		Set
			If (Me._SYSTEM_ID.Equals(value) = false) Then
				Me.OnSYSTEM_IDChanging(value)
				Me.SendPropertyChanging
				Me._SYSTEM_ID = value
				Me.SendPropertyChanged("SYSTEM_ID")
				Me.OnSYSTEM_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NOTICE", DbType:="NVarChar(MAX)")>  _
	Public Property NOTICE() As String
		Get
			Return Me._NOTICE
		End Get
		Set
			If (String.Equals(Me._NOTICE, value) = false) Then
				Me.OnNOTICEChanging(value)
				Me.SendPropertyChanging
				Me._NOTICE = value
				Me.SendPropertyChanged("NOTICE")
				Me.OnNOTICEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drsunit")>  _
Partial Public Class drsunit
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _sunitcd As System.Nullable(Of Integer)
	
	Private _sunitthanm As String
	
	Private _sunitengnm As String
	
	Private _sunitnmsht As String
	
	Private _code_concept As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnsunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsunitcdChanged()
    End Sub
    Partial Private Sub OnsunitthanmChanging(value As String)
    End Sub
    Partial Private Sub OnsunitthanmChanged()
    End Sub
    Partial Private Sub OnsunitengnmChanging(value As String)
    End Sub
    Partial Private Sub OnsunitengnmChanged()
    End Sub
    Partial Private Sub OnsunitnmshtChanging(value As String)
    End Sub
    Partial Private Sub OnsunitnmshtChanged()
    End Sub
    Partial Private Sub Oncode_conceptChanging(value As String)
    End Sub
    Partial Private Sub Oncode_conceptChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitcd", DbType:="Int")>  _
	Public Property sunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sunitcd
		End Get
		Set
			If (Me._sunitcd.Equals(value) = false) Then
				Me.OnsunitcdChanging(value)
				Me.SendPropertyChanging
				Me._sunitcd = value
				Me.SendPropertyChanged("sunitcd")
				Me.OnsunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitthanm", DbType:="NVarChar(MAX)")>  _
	Public Property sunitthanm() As String
		Get
			Return Me._sunitthanm
		End Get
		Set
			If (String.Equals(Me._sunitthanm, value) = false) Then
				Me.OnsunitthanmChanging(value)
				Me.SendPropertyChanging
				Me._sunitthanm = value
				Me.SendPropertyChanged("sunitthanm")
				Me.OnsunitthanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitengnm", DbType:="NVarChar(MAX)")>  _
	Public Property sunitengnm() As String
		Get
			Return Me._sunitengnm
		End Get
		Set
			If (String.Equals(Me._sunitengnm, value) = false) Then
				Me.OnsunitengnmChanging(value)
				Me.SendPropertyChanging
				Me._sunitengnm = value
				Me.SendPropertyChanged("sunitengnm")
				Me.OnsunitengnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitnmsht", DbType:="NVarChar(MAX)")>  _
	Public Property sunitnmsht() As String
		Get
			Return Me._sunitnmsht
		End Get
		Set
			If (String.Equals(Me._sunitnmsht, value) = false) Then
				Me.OnsunitnmshtChanging(value)
				Me.SendPropertyChanging
				Me._sunitnmsht = value
				Me.SendPropertyChanged("sunitnmsht")
				Me.OnsunitnmshtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_code_concept", DbType:="NVarChar(MAX)")>  _
	Public Property code_concept() As String
		Get
			Return Me._code_concept
		End Get
		Set
			If (String.Equals(Me._code_concept, value) = false) Then
				Me.Oncode_conceptChanging(value)
				Me.SendPropertyChanging
				Me._code_concept = value
				Me.SendPropertyChanged("code_concept")
				Me.Oncode_conceptChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_PRODUCER_IN")>  _
Partial Public Class DRRQT_PRODUCER_IN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _lpvncd As String
	
	Private _lcntpcd As String
	
	Private _lcnno As String
	
	Private _phm15dgt As String
	
	Private _funccd As String
	
	Private _lcnsid As String
	
	Private _lcnscd As String
	
	Private _lctnmcd As String
	
	Private _lctcd As String
	
	Private _FK_LCN_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnlpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnlpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub Onphm15dgtChanging(value As String)
    End Sub
    Partial Private Sub Onphm15dgtChanged()
    End Sub
    Partial Private Sub OnfunccdChanging(value As String)
    End Sub
    Partial Private Sub OnfunccdChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As String)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As String)
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnlctnmcdChanging(value As String)
    End Sub
    Partial Private Sub OnlctnmcdChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As String)
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnFK_LCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_LCN_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lpvncd", DbType:="NVarChar(50)")>  _
	Public Property lpvncd() As String
		Get
			Return Me._lpvncd
		End Get
		Set
			If (String.Equals(Me._lpvncd, value) = false) Then
				Me.OnlpvncdChanging(value)
				Me.SendPropertyChanging
				Me._lpvncd = value
				Me.SendPropertyChanged("lpvncd")
				Me.OnlpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(50)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(50)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phm15dgt", DbType:="NVarChar(50)")>  _
	Public Property phm15dgt() As String
		Get
			Return Me._phm15dgt
		End Get
		Set
			If (String.Equals(Me._phm15dgt, value) = false) Then
				Me.Onphm15dgtChanging(value)
				Me.SendPropertyChanging
				Me._phm15dgt = value
				Me.SendPropertyChanged("phm15dgt")
				Me.Onphm15dgtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_funccd", DbType:="NVarChar(50)")>  _
	Public Property funccd() As String
		Get
			Return Me._funccd
		End Get
		Set
			If (String.Equals(Me._funccd, value) = false) Then
				Me.OnfunccdChanging(value)
				Me.SendPropertyChanging
				Me._funccd = value
				Me.SendPropertyChanged("funccd")
				Me.OnfunccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="NVarChar(50)")>  _
	Public Property lcnsid() As String
		Get
			Return Me._lcnsid
		End Get
		Set
			If (String.Equals(Me._lcnsid, value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="NVarChar(50)")>  _
	Public Property lcnscd() As String
		Get
			Return Me._lcnscd
		End Get
		Set
			If (String.Equals(Me._lcnscd, value) = false) Then
				Me.OnlcnscdChanging(value)
				Me.SendPropertyChanging
				Me._lcnscd = value
				Me.SendPropertyChanged("lcnscd")
				Me.OnlcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmcd", DbType:="NVarChar(50)")>  _
	Public Property lctnmcd() As String
		Get
			Return Me._lctnmcd
		End Get
		Set
			If (String.Equals(Me._lctnmcd, value) = false) Then
				Me.OnlctnmcdChanging(value)
				Me.SendPropertyChanging
				Me._lctnmcd = value
				Me.SendPropertyChanged("lctnmcd")
				Me.OnlctnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="NVarChar(50)")>  _
	Public Property lctcd() As String
		Get
			Return Me._lctcd
		End Get
		Set
			If (String.Equals(Me._lctcd, value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_LCN_IDA", DbType:="Int")>  _
	Public Property FK_LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_LCN_IDA
		End Get
		Set
			If (Me._FK_LCN_IDA.Equals(value) = false) Then
				Me.OnFK_LCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_LCN_IDA = value
				Me.SendPropertyChanged("FK_LCN_IDA")
				Me.OnFK_LCN_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.REGIST_FILE_ATTACH")>  _
Partial Public Class REGIST_FILE_ATTACH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _NAME_FAKE As String
	
	Private _NAME_REAL As String
	
	Private _TYPE As String
	
	Private _TRANSACTION_ID As System.Nullable(Of Integer)
	
	Private _DESCRIPTION As String
	
	Private _PROCESS_ID As String
	
	Private _FK_REGIST As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnNAME_FAKEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_FAKEChanged()
    End Sub
    Partial Private Sub OnNAME_REALChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_REALChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnTRANSACTION_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRANSACTION_IDChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnFK_REGISTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_REGISTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_FAKE", DbType:="VarChar(MAX)")>  _
	Public Property NAME_FAKE() As String
		Get
			Return Me._NAME_FAKE
		End Get
		Set
			If (String.Equals(Me._NAME_FAKE, value) = false) Then
				Me.OnNAME_FAKEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_FAKE = value
				Me.SendPropertyChanged("NAME_FAKE")
				Me.OnNAME_FAKEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_REAL", DbType:="VarChar(MAX)")>  _
	Public Property NAME_REAL() As String
		Get
			Return Me._NAME_REAL
		End Get
		Set
			If (String.Equals(Me._NAME_REAL, value) = false) Then
				Me.OnNAME_REALChanging(value)
				Me.SendPropertyChanging
				Me._NAME_REAL = value
				Me.SendPropertyChanged("NAME_REAL")
				Me.OnNAME_REALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="VarChar(MAX)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSACTION_ID", DbType:="Int")>  _
	Public Property TRANSACTION_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TRANSACTION_ID
		End Get
		Set
			If (Me._TRANSACTION_ID.Equals(value) = false) Then
				Me.OnTRANSACTION_IDChanging(value)
				Me.SendPropertyChanging
				Me._TRANSACTION_ID = value
				Me.SendPropertyChanged("TRANSACTION_ID")
				Me.OnTRANSACTION_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="VarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_REGIST", DbType:="Int")>  _
	Public Property FK_REGIST() As System.Nullable(Of Integer)
		Get
			Return Me._FK_REGIST
		End Get
		Set
			If (Me._FK_REGIST.Equals(value) = false) Then
				Me.OnFK_REGISTChanging(value)
				Me.SendPropertyChanging
				Me._FK_REGIST = value
				Me.SendPropertyChanged("FK_REGIST")
				Me.OnFK_REGISTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drramldrg")>  _
Partial Public Class drramldrg
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As System.Nullable(Of Integer)
	
	Private _amltpcd As System.Nullable(Of Short)
	
	Private _amlsubcd As System.Nullable(Of Short)
	
	Private _usetpcd As System.Nullable(Of Short)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnamltpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamltpcdChanged()
    End Sub
    Partial Private Sub OnamlsubcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamlsubcdChanged()
    End Sub
    Partial Private Sub OnusetpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnusetpcdChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="VarChar(3)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="Int")>  _
	Public Property rgtno() As System.Nullable(Of Integer)
		Get
			Return Me._rgtno
		End Get
		Set
			If (Me._rgtno.Equals(value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amltpcd", DbType:="SmallInt")>  _
	Public Property amltpcd() As System.Nullable(Of Short)
		Get
			Return Me._amltpcd
		End Get
		Set
			If (Me._amltpcd.Equals(value) = false) Then
				Me.OnamltpcdChanging(value)
				Me.SendPropertyChanging
				Me._amltpcd = value
				Me.SendPropertyChanged("amltpcd")
				Me.OnamltpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amlsubcd", DbType:="SmallInt")>  _
	Public Property amlsubcd() As System.Nullable(Of Short)
		Get
			Return Me._amlsubcd
		End Get
		Set
			If (Me._amlsubcd.Equals(value) = false) Then
				Me.OnamlsubcdChanging(value)
				Me.SendPropertyChanging
				Me._amlsubcd = value
				Me.SendPropertyChanged("amlsubcd")
				Me.OnamlsubcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usetpcd", DbType:="SmallInt")>  _
	Public Property usetpcd() As System.Nullable(Of Short)
		Get
			Return Me._usetpcd
		End Get
		Set
			If (Me._usetpcd.Equals(value) = false) Then
				Me.OnusetpcdChanging(value)
				Me.SendPropertyChanging
				Me._usetpcd = value
				Me.SendPropertyChanged("usetpcd")
				Me.OnusetpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LCN_EXTEND_LITE_PAY")>  _
Partial Public Class LCN_EXTEND_LITE_PAY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _lcntpcd As String
	
	Private _PAY_STAMP As System.Nullable(Of Integer)
	
	Private _PAY_L44_STAMP As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnPAY_STAMPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPAY_STAMPChanged()
    End Sub
    Partial Private Sub OnPAY_L44_STAMPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPAY_L44_STAMPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAY_STAMP", DbType:="Int")>  _
	Public Property PAY_STAMP() As System.Nullable(Of Integer)
		Get
			Return Me._PAY_STAMP
		End Get
		Set
			If (Me._PAY_STAMP.Equals(value) = false) Then
				Me.OnPAY_STAMPChanging(value)
				Me.SendPropertyChanging
				Me._PAY_STAMP = value
				Me.SendPropertyChanged("PAY_STAMP")
				Me.OnPAY_STAMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAY_L44_STAMP", DbType:="Int")>  _
	Public Property PAY_L44_STAMP() As System.Nullable(Of Integer)
		Get
			Return Me._PAY_L44_STAMP
		End Get
		Set
			If (Me._PAY_L44_STAMP.Equals(value) = false) Then
				Me.OnPAY_L44_STAMPChanging(value)
				Me.SendPropertyChanging
				Me._PAY_L44_STAMP = value
				Me.SendPropertyChanged("PAY_L44_STAMP")
				Me.OnPAY_L44_STAMPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drramluse")>  _
Partial Public Class drramluse
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As System.Nullable(Of Integer)
	
	Private _amltpcd As System.Nullable(Of Short)
	
	Private _amlsubcd As System.Nullable(Of Short)
	
	Private _usetpcd As System.Nullable(Of Short)
	
	Private _ampartcd As System.Nullable(Of Short)
	
	Private _stpdrgcd As System.Nullable(Of Integer)
	
	Private _stpdrg As String
	
	Private _nouse As String
	
	Private _packuse As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STOP_VALUE1 As String
	
	Private _STOP_UNIT1 As System.Nullable(Of Integer)
	
	Private _STOP_VALUE2 As String
	
	Private _STOP_UNIT2 As System.Nullable(Of Integer)
	
	Private _rcvno As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnamltpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamltpcdChanged()
    End Sub
    Partial Private Sub OnamlsubcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamlsubcdChanged()
    End Sub
    Partial Private Sub OnusetpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnusetpcdChanged()
    End Sub
    Partial Private Sub OnampartcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnampartcdChanged()
    End Sub
    Partial Private Sub OnstpdrgcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnstpdrgcdChanged()
    End Sub
    Partial Private Sub OnstpdrgChanging(value As String)
    End Sub
    Partial Private Sub OnstpdrgChanged()
    End Sub
    Partial Private Sub OnnouseChanging(value As String)
    End Sub
    Partial Private Sub OnnouseChanged()
    End Sub
    Partial Private Sub OnpackuseChanging(value As String)
    End Sub
    Partial Private Sub OnpackuseChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTOP_VALUE1Changing(value As String)
    End Sub
    Partial Private Sub OnSTOP_VALUE1Changed()
    End Sub
    Partial Private Sub OnSTOP_UNIT1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTOP_UNIT1Changed()
    End Sub
    Partial Private Sub OnSTOP_VALUE2Changing(value As String)
    End Sub
    Partial Private Sub OnSTOP_VALUE2Changed()
    End Sub
    Partial Private Sub OnSTOP_UNIT2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTOP_UNIT2Changed()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="VarChar(3)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="Int")>  _
	Public Property rgtno() As System.Nullable(Of Integer)
		Get
			Return Me._rgtno
		End Get
		Set
			If (Me._rgtno.Equals(value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amltpcd", DbType:="SmallInt")>  _
	Public Property amltpcd() As System.Nullable(Of Short)
		Get
			Return Me._amltpcd
		End Get
		Set
			If (Me._amltpcd.Equals(value) = false) Then
				Me.OnamltpcdChanging(value)
				Me.SendPropertyChanging
				Me._amltpcd = value
				Me.SendPropertyChanged("amltpcd")
				Me.OnamltpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amlsubcd", DbType:="SmallInt")>  _
	Public Property amlsubcd() As System.Nullable(Of Short)
		Get
			Return Me._amlsubcd
		End Get
		Set
			If (Me._amlsubcd.Equals(value) = false) Then
				Me.OnamlsubcdChanging(value)
				Me.SendPropertyChanging
				Me._amlsubcd = value
				Me.SendPropertyChanged("amlsubcd")
				Me.OnamlsubcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usetpcd", DbType:="SmallInt")>  _
	Public Property usetpcd() As System.Nullable(Of Short)
		Get
			Return Me._usetpcd
		End Get
		Set
			If (Me._usetpcd.Equals(value) = false) Then
				Me.OnusetpcdChanging(value)
				Me.SendPropertyChanging
				Me._usetpcd = value
				Me.SendPropertyChanged("usetpcd")
				Me.OnusetpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ampartcd", DbType:="SmallInt")>  _
	Public Property ampartcd() As System.Nullable(Of Short)
		Get
			Return Me._ampartcd
		End Get
		Set
			If (Me._ampartcd.Equals(value) = false) Then
				Me.OnampartcdChanging(value)
				Me.SendPropertyChanging
				Me._ampartcd = value
				Me.SendPropertyChanged("ampartcd")
				Me.OnampartcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stpdrgcd", DbType:="Int")>  _
	Public Property stpdrgcd() As System.Nullable(Of Integer)
		Get
			Return Me._stpdrgcd
		End Get
		Set
			If (Me._stpdrgcd.Equals(value) = false) Then
				Me.OnstpdrgcdChanging(value)
				Me.SendPropertyChanging
				Me._stpdrgcd = value
				Me.SendPropertyChanged("stpdrgcd")
				Me.OnstpdrgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stpdrg", DbType:="VarChar(250)")>  _
	Public Property stpdrg() As String
		Get
			Return Me._stpdrg
		End Get
		Set
			If (String.Equals(Me._stpdrg, value) = false) Then
				Me.OnstpdrgChanging(value)
				Me.SendPropertyChanging
				Me._stpdrg = value
				Me.SendPropertyChanged("stpdrg")
				Me.OnstpdrgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nouse", DbType:="VarChar(250)")>  _
	Public Property nouse() As String
		Get
			Return Me._nouse
		End Get
		Set
			If (String.Equals(Me._nouse, value) = false) Then
				Me.OnnouseChanging(value)
				Me.SendPropertyChanging
				Me._nouse = value
				Me.SendPropertyChanged("nouse")
				Me.OnnouseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_packuse", DbType:="VarChar(250)")>  _
	Public Property packuse() As String
		Get
			Return Me._packuse
		End Get
		Set
			If (String.Equals(Me._packuse, value) = false) Then
				Me.OnpackuseChanging(value)
				Me.SendPropertyChanging
				Me._packuse = value
				Me.SendPropertyChanged("packuse")
				Me.OnpackuseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STOP_VALUE1", DbType:="NVarChar(MAX)")>  _
	Public Property STOP_VALUE1() As String
		Get
			Return Me._STOP_VALUE1
		End Get
		Set
			If (String.Equals(Me._STOP_VALUE1, value) = false) Then
				Me.OnSTOP_VALUE1Changing(value)
				Me.SendPropertyChanging
				Me._STOP_VALUE1 = value
				Me.SendPropertyChanged("STOP_VALUE1")
				Me.OnSTOP_VALUE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STOP_UNIT1", DbType:="Int")>  _
	Public Property STOP_UNIT1() As System.Nullable(Of Integer)
		Get
			Return Me._STOP_UNIT1
		End Get
		Set
			If (Me._STOP_UNIT1.Equals(value) = false) Then
				Me.OnSTOP_UNIT1Changing(value)
				Me.SendPropertyChanging
				Me._STOP_UNIT1 = value
				Me.SendPropertyChanged("STOP_UNIT1")
				Me.OnSTOP_UNIT1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STOP_VALUE2", DbType:="NVarChar(MAX)")>  _
	Public Property STOP_VALUE2() As String
		Get
			Return Me._STOP_VALUE2
		End Get
		Set
			If (String.Equals(Me._STOP_VALUE2, value) = false) Then
				Me.OnSTOP_VALUE2Changing(value)
				Me.SendPropertyChanging
				Me._STOP_VALUE2 = value
				Me.SendPropertyChanged("STOP_VALUE2")
				Me.OnSTOP_VALUE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STOP_UNIT2", DbType:="Int")>  _
	Public Property STOP_UNIT2() As System.Nullable(Of Integer)
		Get
			Return Me._STOP_UNIT2
		End Get
		Set
			If (Me._STOP_UNIT2.Equals(value) = false) Then
				Me.OnSTOP_UNIT2Changing(value)
				Me.SendPropertyChanging
				Me._STOP_UNIT2 = value
				Me.SendPropertyChanged("STOP_UNIT2")
				Me.OnSTOP_UNIT2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dramluse")>  _
Partial Public Class dramluse
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As System.Nullable(Of Integer)
	
	Private _amltpcd As System.Nullable(Of Short)
	
	Private _amlsubcd As System.Nullable(Of Short)
	
	Private _usetpcd As System.Nullable(Of Short)
	
	Private _ampartcd As System.Nullable(Of Short)
	
	Private _stpdrgcd As System.Nullable(Of Integer)
	
	Private _stpdrg As String
	
	Private _nouse As String
	
	Private _packuse As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STOP_VALUE1 As String
	
	Private _STOP_UNIT1 As System.Nullable(Of Integer)
	
	Private _STOP_VALUE2 As String
	
	Private _STOP_UNIT2 As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnamltpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamltpcdChanged()
    End Sub
    Partial Private Sub OnamlsubcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamlsubcdChanged()
    End Sub
    Partial Private Sub OnusetpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnusetpcdChanged()
    End Sub
    Partial Private Sub OnampartcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnampartcdChanged()
    End Sub
    Partial Private Sub OnstpdrgcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnstpdrgcdChanged()
    End Sub
    Partial Private Sub OnstpdrgChanging(value As String)
    End Sub
    Partial Private Sub OnstpdrgChanged()
    End Sub
    Partial Private Sub OnnouseChanging(value As String)
    End Sub
    Partial Private Sub OnnouseChanged()
    End Sub
    Partial Private Sub OnpackuseChanging(value As String)
    End Sub
    Partial Private Sub OnpackuseChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTOP_VALUE1Changing(value As String)
    End Sub
    Partial Private Sub OnSTOP_VALUE1Changed()
    End Sub
    Partial Private Sub OnSTOP_UNIT1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTOP_UNIT1Changed()
    End Sub
    Partial Private Sub OnSTOP_VALUE2Changing(value As String)
    End Sub
    Partial Private Sub OnSTOP_VALUE2Changed()
    End Sub
    Partial Private Sub OnSTOP_UNIT2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTOP_UNIT2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="VarChar(3)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="Int")>  _
	Public Property rgtno() As System.Nullable(Of Integer)
		Get
			Return Me._rgtno
		End Get
		Set
			If (Me._rgtno.Equals(value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amltpcd", DbType:="SmallInt")>  _
	Public Property amltpcd() As System.Nullable(Of Short)
		Get
			Return Me._amltpcd
		End Get
		Set
			If (Me._amltpcd.Equals(value) = false) Then
				Me.OnamltpcdChanging(value)
				Me.SendPropertyChanging
				Me._amltpcd = value
				Me.SendPropertyChanged("amltpcd")
				Me.OnamltpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amlsubcd", DbType:="SmallInt")>  _
	Public Property amlsubcd() As System.Nullable(Of Short)
		Get
			Return Me._amlsubcd
		End Get
		Set
			If (Me._amlsubcd.Equals(value) = false) Then
				Me.OnamlsubcdChanging(value)
				Me.SendPropertyChanging
				Me._amlsubcd = value
				Me.SendPropertyChanged("amlsubcd")
				Me.OnamlsubcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usetpcd", DbType:="SmallInt")>  _
	Public Property usetpcd() As System.Nullable(Of Short)
		Get
			Return Me._usetpcd
		End Get
		Set
			If (Me._usetpcd.Equals(value) = false) Then
				Me.OnusetpcdChanging(value)
				Me.SendPropertyChanging
				Me._usetpcd = value
				Me.SendPropertyChanged("usetpcd")
				Me.OnusetpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ampartcd", DbType:="SmallInt")>  _
	Public Property ampartcd() As System.Nullable(Of Short)
		Get
			Return Me._ampartcd
		End Get
		Set
			If (Me._ampartcd.Equals(value) = false) Then
				Me.OnampartcdChanging(value)
				Me.SendPropertyChanging
				Me._ampartcd = value
				Me.SendPropertyChanged("ampartcd")
				Me.OnampartcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stpdrgcd", DbType:="Int")>  _
	Public Property stpdrgcd() As System.Nullable(Of Integer)
		Get
			Return Me._stpdrgcd
		End Get
		Set
			If (Me._stpdrgcd.Equals(value) = false) Then
				Me.OnstpdrgcdChanging(value)
				Me.SendPropertyChanging
				Me._stpdrgcd = value
				Me.SendPropertyChanged("stpdrgcd")
				Me.OnstpdrgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stpdrg", DbType:="VarChar(250)")>  _
	Public Property stpdrg() As String
		Get
			Return Me._stpdrg
		End Get
		Set
			If (String.Equals(Me._stpdrg, value) = false) Then
				Me.OnstpdrgChanging(value)
				Me.SendPropertyChanging
				Me._stpdrg = value
				Me.SendPropertyChanged("stpdrg")
				Me.OnstpdrgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nouse", DbType:="VarChar(250)")>  _
	Public Property nouse() As String
		Get
			Return Me._nouse
		End Get
		Set
			If (String.Equals(Me._nouse, value) = false) Then
				Me.OnnouseChanging(value)
				Me.SendPropertyChanging
				Me._nouse = value
				Me.SendPropertyChanged("nouse")
				Me.OnnouseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_packuse", DbType:="VarChar(250)")>  _
	Public Property packuse() As String
		Get
			Return Me._packuse
		End Get
		Set
			If (String.Equals(Me._packuse, value) = false) Then
				Me.OnpackuseChanging(value)
				Me.SendPropertyChanging
				Me._packuse = value
				Me.SendPropertyChanged("packuse")
				Me.OnpackuseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STOP_VALUE1", DbType:="NVarChar(MAX)")>  _
	Public Property STOP_VALUE1() As String
		Get
			Return Me._STOP_VALUE1
		End Get
		Set
			If (String.Equals(Me._STOP_VALUE1, value) = false) Then
				Me.OnSTOP_VALUE1Changing(value)
				Me.SendPropertyChanging
				Me._STOP_VALUE1 = value
				Me.SendPropertyChanged("STOP_VALUE1")
				Me.OnSTOP_VALUE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STOP_UNIT1", DbType:="Int")>  _
	Public Property STOP_UNIT1() As System.Nullable(Of Integer)
		Get
			Return Me._STOP_UNIT1
		End Get
		Set
			If (Me._STOP_UNIT1.Equals(value) = false) Then
				Me.OnSTOP_UNIT1Changing(value)
				Me.SendPropertyChanging
				Me._STOP_UNIT1 = value
				Me.SendPropertyChanged("STOP_UNIT1")
				Me.OnSTOP_UNIT1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STOP_VALUE2", DbType:="NVarChar(MAX)")>  _
	Public Property STOP_VALUE2() As String
		Get
			Return Me._STOP_VALUE2
		End Get
		Set
			If (String.Equals(Me._STOP_VALUE2, value) = false) Then
				Me.OnSTOP_VALUE2Changing(value)
				Me.SendPropertyChanging
				Me._STOP_VALUE2 = value
				Me.SendPropertyChanged("STOP_VALUE2")
				Me.OnSTOP_VALUE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STOP_UNIT2", DbType:="Int")>  _
	Public Property STOP_UNIT2() As System.Nullable(Of Integer)
		Get
			Return Me._STOP_UNIT2
		End Get
		Set
			If (Me._STOP_UNIT2.Equals(value) = false) Then
				Me.OnSTOP_UNIT2Changing(value)
				Me.SendPropertyChanging
				Me._STOP_UNIT2 = value
				Me.SendPropertyChanged("STOP_UNIT2")
				Me.OnSTOP_UNIT2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_DTL_TEXT")>  _
Partial Public Class DRRQT_DTL_TEXT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pcksize As String
	
	Private _useage As String
	
	Private _tphigh As String
	
	Private _keepdesc As String
	
	Private _dtl As String
	
	Private _U1_CODE As String
	
	Private _tplow As String
	
	Private _pvncd As System.Nullable(Of Integer)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _engdrgtpnm As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpcksizeChanging(value As String)
    End Sub
    Partial Private Sub OnpcksizeChanged()
    End Sub
    Partial Private Sub OnuseageChanging(value As String)
    End Sub
    Partial Private Sub OnuseageChanged()
    End Sub
    Partial Private Sub OntphighChanging(value As String)
    End Sub
    Partial Private Sub OntphighChanged()
    End Sub
    Partial Private Sub OnkeepdescChanging(value As String)
    End Sub
    Partial Private Sub OnkeepdescChanged()
    End Sub
    Partial Private Sub OndtlChanging(value As String)
    End Sub
    Partial Private Sub OndtlChanged()
    End Sub
    Partial Private Sub OnU1_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnU1_CODEChanged()
    End Sub
    Partial Private Sub OntplowChanging(value As String)
    End Sub
    Partial Private Sub OntplowChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnengdrgtpnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgtpnmChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pcksize", DbType:="NVarChar(MAX)")>  _
	Public Property pcksize() As String
		Get
			Return Me._pcksize
		End Get
		Set
			If (String.Equals(Me._pcksize, value) = false) Then
				Me.OnpcksizeChanging(value)
				Me.SendPropertyChanging
				Me._pcksize = value
				Me.SendPropertyChanged("pcksize")
				Me.OnpcksizeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_useage", DbType:="NVarChar(MAX)")>  _
	Public Property useage() As String
		Get
			Return Me._useage
		End Get
		Set
			If (String.Equals(Me._useage, value) = false) Then
				Me.OnuseageChanging(value)
				Me.SendPropertyChanging
				Me._useage = value
				Me.SendPropertyChanged("useage")
				Me.OnuseageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tphigh", DbType:="NVarChar(MAX)")>  _
	Public Property tphigh() As String
		Get
			Return Me._tphigh
		End Get
		Set
			If (String.Equals(Me._tphigh, value) = false) Then
				Me.OntphighChanging(value)
				Me.SendPropertyChanging
				Me._tphigh = value
				Me.SendPropertyChanged("tphigh")
				Me.OntphighChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_keepdesc", DbType:="NVarChar(MAX)")>  _
	Public Property keepdesc() As String
		Get
			Return Me._keepdesc
		End Get
		Set
			If (String.Equals(Me._keepdesc, value) = false) Then
				Me.OnkeepdescChanging(value)
				Me.SendPropertyChanging
				Me._keepdesc = value
				Me.SendPropertyChanged("keepdesc")
				Me.OnkeepdescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtl", DbType:="NVarChar(MAX)")>  _
	Public Property dtl() As String
		Get
			Return Me._dtl
		End Get
		Set
			If (String.Equals(Me._dtl, value) = false) Then
				Me.OndtlChanging(value)
				Me.SendPropertyChanging
				Me._dtl = value
				Me.SendPropertyChanged("dtl")
				Me.OndtlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_U1_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property U1_CODE() As String
		Get
			Return Me._U1_CODE
		End Get
		Set
			If (String.Equals(Me._U1_CODE, value) = false) Then
				Me.OnU1_CODEChanging(value)
				Me.SendPropertyChanging
				Me._U1_CODE = value
				Me.SendPropertyChanged("U1_CODE")
				Me.OnU1_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tplow", DbType:="NVarChar(MAX)")>  _
	Public Property tplow() As String
		Get
			Return Me._tplow
		End Get
		Set
			If (String.Equals(Me._tplow, value) = false) Then
				Me.OntplowChanging(value)
				Me.SendPropertyChanging
				Me._tplow = value
				Me.SendPropertyChanged("tplow")
				Me.OntplowChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(MAX)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgtpnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgtpnm() As String
		Get
			Return Me._engdrgtpnm
		End Get
		Set
			If (String.Equals(Me._engdrgtpnm, value) = false) Then
				Me.OnengdrgtpnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgtpnm = value
				Me.SendPropertyChanged("engdrgtpnm")
				Me.OnengdrgtpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_DTL_TEXT")>  _
Partial Public Class DRRGT_DTL_TEXT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pcksize As String
	
	Private _useage As String
	
	Private _tphigh As String
	
	Private _keepdesc As String
	
	Private _dtl As String
	
	Private _U1_CODE As String
	
	Private _tplow As String
	
	Private _pvncd As System.Nullable(Of Integer)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _engdrgtpnm As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpcksizeChanging(value As String)
    End Sub
    Partial Private Sub OnpcksizeChanged()
    End Sub
    Partial Private Sub OnuseageChanging(value As String)
    End Sub
    Partial Private Sub OnuseageChanged()
    End Sub
    Partial Private Sub OntphighChanging(value As String)
    End Sub
    Partial Private Sub OntphighChanged()
    End Sub
    Partial Private Sub OnkeepdescChanging(value As String)
    End Sub
    Partial Private Sub OnkeepdescChanged()
    End Sub
    Partial Private Sub OndtlChanging(value As String)
    End Sub
    Partial Private Sub OndtlChanged()
    End Sub
    Partial Private Sub OnU1_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnU1_CODEChanged()
    End Sub
    Partial Private Sub OntplowChanging(value As String)
    End Sub
    Partial Private Sub OntplowChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnengdrgtpnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgtpnmChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pcksize", DbType:="NVarChar(MAX)")>  _
	Public Property pcksize() As String
		Get
			Return Me._pcksize
		End Get
		Set
			If (String.Equals(Me._pcksize, value) = false) Then
				Me.OnpcksizeChanging(value)
				Me.SendPropertyChanging
				Me._pcksize = value
				Me.SendPropertyChanged("pcksize")
				Me.OnpcksizeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_useage", DbType:="NVarChar(MAX)")>  _
	Public Property useage() As String
		Get
			Return Me._useage
		End Get
		Set
			If (String.Equals(Me._useage, value) = false) Then
				Me.OnuseageChanging(value)
				Me.SendPropertyChanging
				Me._useage = value
				Me.SendPropertyChanged("useage")
				Me.OnuseageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tphigh", DbType:="NVarChar(MAX)")>  _
	Public Property tphigh() As String
		Get
			Return Me._tphigh
		End Get
		Set
			If (String.Equals(Me._tphigh, value) = false) Then
				Me.OntphighChanging(value)
				Me.SendPropertyChanging
				Me._tphigh = value
				Me.SendPropertyChanged("tphigh")
				Me.OntphighChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_keepdesc", DbType:="NVarChar(MAX)")>  _
	Public Property keepdesc() As String
		Get
			Return Me._keepdesc
		End Get
		Set
			If (String.Equals(Me._keepdesc, value) = false) Then
				Me.OnkeepdescChanging(value)
				Me.SendPropertyChanging
				Me._keepdesc = value
				Me.SendPropertyChanged("keepdesc")
				Me.OnkeepdescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtl", DbType:="NVarChar(MAX)")>  _
	Public Property dtl() As String
		Get
			Return Me._dtl
		End Get
		Set
			If (String.Equals(Me._dtl, value) = false) Then
				Me.OndtlChanging(value)
				Me.SendPropertyChanging
				Me._dtl = value
				Me.SendPropertyChanged("dtl")
				Me.OndtlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_U1_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property U1_CODE() As String
		Get
			Return Me._U1_CODE
		End Get
		Set
			If (String.Equals(Me._U1_CODE, value) = false) Then
				Me.OnU1_CODEChanging(value)
				Me.SendPropertyChanging
				Me._U1_CODE = value
				Me.SendPropertyChanged("U1_CODE")
				Me.OnU1_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tplow", DbType:="NVarChar(MAX)")>  _
	Public Property tplow() As String
		Get
			Return Me._tplow
		End Get
		Set
			If (String.Equals(Me._tplow, value) = false) Then
				Me.OntplowChanging(value)
				Me.SendPropertyChanging
				Me._tplow = value
				Me.SendPropertyChanged("tplow")
				Me.OntplowChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(MAX)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgtpnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgtpnm() As String
		Get
			Return Me._engdrgtpnm
		End Get
		Set
			If (String.Equals(Me._engdrgtpnm, value) = false) Then
				Me.OnengdrgtpnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgtpnm = value
				Me.SendPropertyChanged("engdrgtpnm")
				Me.OnengdrgtpnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_PHR_CANCEL")>  _
Partial Public Class DALCN_PHR_CANCEL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PHR_CTZO As String
	
	Private _LCN_IDA As System.Nullable(Of Integer)
	
	Private _DATE_ACTION As System.Nullable(Of Date)
	
	Private _PHR_FULL_NAME As String
	
	Private _PHR_TXT_NUM As String
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _PURPOSE As String
	
	Private _appdate As System.Nullable(Of Date)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _cnsdcd As System.Nullable(Of Integer)
	
	Private _cscd As System.Nullable(Of Integer)
	
	Private _STAFF_IDENTIFY As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPHR_CTZOChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_CTZOChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnDATE_ACTIONChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_ACTIONChanged()
    End Sub
    Partial Private Sub OnPHR_FULL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_FULL_NAMEChanged()
    End Sub
    Partial Private Sub OnPHR_TXT_NUMChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_TXT_NUMChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnPURPOSEChanging(value As String)
    End Sub
    Partial Private Sub OnPURPOSEChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OncnsdcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncnsdcdChanged()
    End Sub
    Partial Private Sub OncscdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncscdChanged()
    End Sub
    Partial Private Sub OnSTAFF_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_IDENTIFYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_CTZO", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_CTZO() As String
		Get
			Return Me._PHR_CTZO
		End Get
		Set
			If (String.Equals(Me._PHR_CTZO, value) = false) Then
				Me.OnPHR_CTZOChanging(value)
				Me.SendPropertyChanging
				Me._PHR_CTZO = value
				Me.SendPropertyChanged("PHR_CTZO")
				Me.OnPHR_CTZOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="Int")>  _
	Public Property LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (Me._LCN_IDA.Equals(value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ACTION", DbType:="DateTime")>  _
	Public Property DATE_ACTION() As System.Nullable(Of Date)
		Get
			Return Me._DATE_ACTION
		End Get
		Set
			If (Me._DATE_ACTION.Equals(value) = false) Then
				Me.OnDATE_ACTIONChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ACTION = value
				Me.SendPropertyChanged("DATE_ACTION")
				Me.OnDATE_ACTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_FULL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_FULL_NAME() As String
		Get
			Return Me._PHR_FULL_NAME
		End Get
		Set
			If (String.Equals(Me._PHR_FULL_NAME, value) = false) Then
				Me.OnPHR_FULL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PHR_FULL_NAME = value
				Me.SendPropertyChanged("PHR_FULL_NAME")
				Me.OnPHR_FULL_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_TXT_NUM", DbType:="NVarChar(50)")>  _
	Public Property PHR_TXT_NUM() As String
		Get
			Return Me._PHR_TXT_NUM
		End Get
		Set
			If (String.Equals(Me._PHR_TXT_NUM, value) = false) Then
				Me.OnPHR_TXT_NUMChanging(value)
				Me.SendPropertyChanging
				Me._PHR_TXT_NUM = value
				Me.SendPropertyChanged("PHR_TXT_NUM")
				Me.OnPHR_TXT_NUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="DateTime")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PURPOSE", DbType:="NVarChar(MAX)")>  _
	Public Property PURPOSE() As String
		Get
			Return Me._PURPOSE
		End Get
		Set
			If (String.Equals(Me._PURPOSE, value) = false) Then
				Me.OnPURPOSEChanging(value)
				Me.SendPropertyChanging
				Me._PURPOSE = value
				Me.SendPropertyChanged("PURPOSE")
				Me.OnPURPOSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="DateTime")>  _
	Public Property appdate() As System.Nullable(Of Date)
		Get
			Return Me._appdate
		End Get
		Set
			If (Me._appdate.Equals(value) = false) Then
				Me.OnappdateChanging(value)
				Me.SendPropertyChanging
				Me._appdate = value
				Me.SendPropertyChanged("appdate")
				Me.OnappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnsdcd", DbType:="Int")>  _
	Public Property cnsdcd() As System.Nullable(Of Integer)
		Get
			Return Me._cnsdcd
		End Get
		Set
			If (Me._cnsdcd.Equals(value) = false) Then
				Me.OncnsdcdChanging(value)
				Me.SendPropertyChanging
				Me._cnsdcd = value
				Me.SendPropertyChanged("cnsdcd")
				Me.OncnsdcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cscd", DbType:="Int")>  _
	Public Property cscd() As System.Nullable(Of Integer)
		Get
			Return Me._cscd
		End Get
		Set
			If (Me._cscd.Equals(value) = false) Then
				Me.OncscdChanging(value)
				Me.SendPropertyChanging
				Me._cscd = value
				Me.SendPropertyChanged("cscd")
				Me.OncscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_IDENTIFY() As String
		Get
			Return Me._STAFF_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._STAFF_IDENTIFY, value) = false) Then
				Me.OnSTAFF_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_IDENTIFY = value
				Me.SendPropertyChanged("STAFF_IDENTIFY")
				Me.OnSTAFF_IDENTIFYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_PHR_CANCEL_DETAIL")>  _
Partial Public Class DALCN_PHR_CANCEL_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _LCN_IDA As System.Nullable(Of Integer)
	
	Private _opentime As String
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _CANCEL_DATE As System.Nullable(Of Date)
	
	Private _pvncd As System.Nullable(Of Integer)
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _lcntpcd As String
	
	Private _lcnsid As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnopentimeChanging(value As String)
    End Sub
    Partial Private Sub OnopentimeChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnCANCEL_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCANCEL_DATEChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="Int")>  _
	Public Property LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (Me._LCN_IDA.Equals(value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opentime", DbType:="NVarChar(MAX)")>  _
	Public Property opentime() As String
		Get
			Return Me._opentime
		End Get
		Set
			If (String.Equals(Me._opentime, value) = false) Then
				Me.OnopentimeChanging(value)
				Me.SendPropertyChanging
				Me._opentime = value
				Me.SendPropertyChanged("opentime")
				Me.OnopentimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CANCEL_DATE", DbType:="DateTime")>  _
	Public Property CANCEL_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CANCEL_DATE
		End Get
		Set
			If (Me._CANCEL_DATE.Equals(value) = false) Then
				Me.OnCANCEL_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CANCEL_DATE = value
				Me.SendPropertyChanged("CANCEL_DATE")
				Me.OnCANCEL_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(50)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_REGISTRATION_KEEP_DRUG")>  _
Partial Public Class DRUG_REGISTRATION_KEEP_DRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _KEEP_DETAIL As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _AGE_HOUR As System.Nullable(Of Double)
	
	Private _AGE_MONTH As System.Nullable(Of Integer)
	
	Private _AGE_DAY As System.Nullable(Of Double)
	
	Private _TEMPERATE1 As System.Nullable(Of Double)
	
	Private _TEMPERATE2 As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnKEEP_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnKEEP_DETAILChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnAGE_HOURChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAGE_HOURChanged()
    End Sub
    Partial Private Sub OnAGE_MONTHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAGE_MONTHChanged()
    End Sub
    Partial Private Sub OnAGE_DAYChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAGE_DAYChanged()
    End Sub
    Partial Private Sub OnTEMPERATE1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTEMPERATE1Changed()
    End Sub
    Partial Private Sub OnTEMPERATE2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTEMPERATE2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEEP_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property KEEP_DETAIL() As String
		Get
			Return Me._KEEP_DETAIL
		End Get
		Set
			If (String.Equals(Me._KEEP_DETAIL, value) = false) Then
				Me.OnKEEP_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._KEEP_DETAIL = value
				Me.SendPropertyChanged("KEEP_DETAIL")
				Me.OnKEEP_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AGE_HOUR", DbType:="Float")>  _
	Public Property AGE_HOUR() As System.Nullable(Of Double)
		Get
			Return Me._AGE_HOUR
		End Get
		Set
			If (Me._AGE_HOUR.Equals(value) = false) Then
				Me.OnAGE_HOURChanging(value)
				Me.SendPropertyChanging
				Me._AGE_HOUR = value
				Me.SendPropertyChanged("AGE_HOUR")
				Me.OnAGE_HOURChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AGE_MONTH", DbType:="Int")>  _
	Public Property AGE_MONTH() As System.Nullable(Of Integer)
		Get
			Return Me._AGE_MONTH
		End Get
		Set
			If (Me._AGE_MONTH.Equals(value) = false) Then
				Me.OnAGE_MONTHChanging(value)
				Me.SendPropertyChanging
				Me._AGE_MONTH = value
				Me.SendPropertyChanged("AGE_MONTH")
				Me.OnAGE_MONTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AGE_DAY", DbType:="Float")>  _
	Public Property AGE_DAY() As System.Nullable(Of Double)
		Get
			Return Me._AGE_DAY
		End Get
		Set
			If (Me._AGE_DAY.Equals(value) = false) Then
				Me.OnAGE_DAYChanging(value)
				Me.SendPropertyChanging
				Me._AGE_DAY = value
				Me.SendPropertyChanged("AGE_DAY")
				Me.OnAGE_DAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPERATE1", DbType:="Float")>  _
	Public Property TEMPERATE1() As System.Nullable(Of Double)
		Get
			Return Me._TEMPERATE1
		End Get
		Set
			If (Me._TEMPERATE1.Equals(value) = false) Then
				Me.OnTEMPERATE1Changing(value)
				Me.SendPropertyChanging
				Me._TEMPERATE1 = value
				Me.SendPropertyChanged("TEMPERATE1")
				Me.OnTEMPERATE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPERATE2", DbType:="Float")>  _
	Public Property TEMPERATE2() As System.Nullable(Of Double)
		Get
			Return Me._TEMPERATE2
		End Get
		Set
			If (Me._TEMPERATE2.Equals(value) = false) Then
				Me.OnTEMPERATE2Changing(value)
				Me.SendPropertyChanging
				Me._TEMPERATE2 = value
				Me.SendPropertyChanged("TEMPERATE2")
				Me.OnTEMPERATE2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_PAY_STEP")>  _
Partial Public Class DRRQT_PAY_STEP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TYPE_REQUEST As System.Nullable(Of Integer)
	
	Private _PAY_STEP As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _DATE_CREATE As System.Nullable(Of Date)
	
	Private _AMOUNT_FULL As System.Nullable(Of Decimal)
	
	Private _AMOUNT_TO_PAY As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTYPE_REQUESTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_REQUESTChanged()
    End Sub
    Partial Private Sub OnPAY_STEPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPAY_STEPChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnDATE_CREATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_CREATEChanged()
    End Sub
    Partial Private Sub OnAMOUNT_FULLChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAMOUNT_FULLChanged()
    End Sub
    Partial Private Sub OnAMOUNT_TO_PAYChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAMOUNT_TO_PAYChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_REQUEST", DbType:="Int")>  _
	Public Property TYPE_REQUEST() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_REQUEST
		End Get
		Set
			If (Me._TYPE_REQUEST.Equals(value) = false) Then
				Me.OnTYPE_REQUESTChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_REQUEST = value
				Me.SendPropertyChanged("TYPE_REQUEST")
				Me.OnTYPE_REQUESTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAY_STEP", DbType:="Int")>  _
	Public Property PAY_STEP() As System.Nullable(Of Integer)
		Get
			Return Me._PAY_STEP
		End Get
		Set
			If (Me._PAY_STEP.Equals(value) = false) Then
				Me.OnPAY_STEPChanging(value)
				Me.SendPropertyChanging
				Me._PAY_STEP = value
				Me.SendPropertyChanged("PAY_STEP")
				Me.OnPAY_STEPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_CREATE", DbType:="DateTime")>  _
	Public Property DATE_CREATE() As System.Nullable(Of Date)
		Get
			Return Me._DATE_CREATE
		End Get
		Set
			If (Me._DATE_CREATE.Equals(value) = false) Then
				Me.OnDATE_CREATEChanging(value)
				Me.SendPropertyChanging
				Me._DATE_CREATE = value
				Me.SendPropertyChanged("DATE_CREATE")
				Me.OnDATE_CREATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT_FULL", DbType:="Money")>  _
	Public Property AMOUNT_FULL() As System.Nullable(Of Decimal)
		Get
			Return Me._AMOUNT_FULL
		End Get
		Set
			If (Me._AMOUNT_FULL.Equals(value) = false) Then
				Me.OnAMOUNT_FULLChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT_FULL = value
				Me.SendPropertyChanged("AMOUNT_FULL")
				Me.OnAMOUNT_FULLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT_TO_PAY", DbType:="Money")>  _
	Public Property AMOUNT_TO_PAY() As System.Nullable(Of Decimal)
		Get
			Return Me._AMOUNT_TO_PAY
		End Get
		Set
			If (Me._AMOUNT_TO_PAY.Equals(value) = false) Then
				Me.OnAMOUNT_TO_PAYChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT_TO_PAY = value
				Me.SendPropertyChanged("AMOUNT_TO_PAY")
				Me.OnAMOUNT_TO_PAYChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_REGISTRATION_PACKAGE_DETAIL")>  _
Partial Public Class DRUG_REGISTRATION_PACKAGE_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _MEDIUM_UNIT As System.Nullable(Of Integer)
	
	Private _SMALL_AMOUNT As System.Nullable(Of Double)
	
	Private _SMALL_UNIT As String
	
	Private _BIG_UNIT As System.Nullable(Of Integer)
	
	Private _MEDIUM_AMOUNT As System.Nullable(Of Double)
	
	Private _BARCODE As String
	
	Private _CHECK_PACKAGE As System.Nullable(Of Boolean)
	
	Private _PACKAGE_NAME As String
	
	Private _SUM As String
	
	Private _IM_QTY As String
	
	Private _IM_DETAIL As String
	
	Private _DATE_ADD As System.Nullable(Of Date)
	
	Private _order_id As String
	
	Private _BIG_AMOUNT As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnMEDIUM_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDIUM_UNITChanged()
    End Sub
    Partial Private Sub OnSMALL_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSMALL_AMOUNTChanged()
    End Sub
    Partial Private Sub OnSMALL_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnSMALL_UNITChanged()
    End Sub
    Partial Private Sub OnBIG_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBIG_UNITChanged()
    End Sub
    Partial Private Sub OnMEDIUM_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMEDIUM_AMOUNTChanged()
    End Sub
    Partial Private Sub OnBARCODEChanging(value As String)
    End Sub
    Partial Private Sub OnBARCODEChanged()
    End Sub
    Partial Private Sub OnCHECK_PACKAGEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCHECK_PACKAGEChanged()
    End Sub
    Partial Private Sub OnPACKAGE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPACKAGE_NAMEChanged()
    End Sub
    Partial Private Sub OnSUMChanging(value As String)
    End Sub
    Partial Private Sub OnSUMChanged()
    End Sub
    Partial Private Sub OnIM_QTYChanging(value As String)
    End Sub
    Partial Private Sub OnIM_QTYChanged()
    End Sub
    Partial Private Sub OnIM_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnIM_DETAILChanged()
    End Sub
    Partial Private Sub OnDATE_ADDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_ADDChanged()
    End Sub
    Partial Private Sub Onorder_idChanging(value As String)
    End Sub
    Partial Private Sub Onorder_idChanged()
    End Sub
    Partial Private Sub OnBIG_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBIG_AMOUNTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDIUM_UNIT", DbType:="Int")>  _
	Public Property MEDIUM_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._MEDIUM_UNIT
		End Get
		Set
			If (Me._MEDIUM_UNIT.Equals(value) = false) Then
				Me.OnMEDIUM_UNITChanging(value)
				Me.SendPropertyChanging
				Me._MEDIUM_UNIT = value
				Me.SendPropertyChanged("MEDIUM_UNIT")
				Me.OnMEDIUM_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_AMOUNT", DbType:="Float")>  _
	Public Property SMALL_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._SMALL_AMOUNT
		End Get
		Set
			If (Me._SMALL_AMOUNT.Equals(value) = false) Then
				Me.OnSMALL_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_AMOUNT = value
				Me.SendPropertyChanged("SMALL_AMOUNT")
				Me.OnSMALL_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_UNIT", DbType:="NVarChar(MAX)")>  _
	Public Property SMALL_UNIT() As String
		Get
			Return Me._SMALL_UNIT
		End Get
		Set
			If (String.Equals(Me._SMALL_UNIT, value) = false) Then
				Me.OnSMALL_UNITChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_UNIT = value
				Me.SendPropertyChanged("SMALL_UNIT")
				Me.OnSMALL_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIG_UNIT", DbType:="Int")>  _
	Public Property BIG_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._BIG_UNIT
		End Get
		Set
			If (Me._BIG_UNIT.Equals(value) = false) Then
				Me.OnBIG_UNITChanging(value)
				Me.SendPropertyChanging
				Me._BIG_UNIT = value
				Me.SendPropertyChanged("BIG_UNIT")
				Me.OnBIG_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDIUM_AMOUNT", DbType:="Float")>  _
	Public Property MEDIUM_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._MEDIUM_AMOUNT
		End Get
		Set
			If (Me._MEDIUM_AMOUNT.Equals(value) = false) Then
				Me.OnMEDIUM_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._MEDIUM_AMOUNT = value
				Me.SendPropertyChanged("MEDIUM_AMOUNT")
				Me.OnMEDIUM_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BARCODE", DbType:="NVarChar(MAX)")>  _
	Public Property BARCODE() As String
		Get
			Return Me._BARCODE
		End Get
		Set
			If (String.Equals(Me._BARCODE, value) = false) Then
				Me.OnBARCODEChanging(value)
				Me.SendPropertyChanging
				Me._BARCODE = value
				Me.SendPropertyChanged("BARCODE")
				Me.OnBARCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_PACKAGE", DbType:="Bit")>  _
	Public Property CHECK_PACKAGE() As System.Nullable(Of Boolean)
		Get
			Return Me._CHECK_PACKAGE
		End Get
		Set
			If (Me._CHECK_PACKAGE.Equals(value) = false) Then
				Me.OnCHECK_PACKAGEChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_PACKAGE = value
				Me.SendPropertyChanged("CHECK_PACKAGE")
				Me.OnCHECK_PACKAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACKAGE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PACKAGE_NAME() As String
		Get
			Return Me._PACKAGE_NAME
		End Get
		Set
			If (String.Equals(Me._PACKAGE_NAME, value) = false) Then
				Me.OnPACKAGE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PACKAGE_NAME = value
				Me.SendPropertyChanged("PACKAGE_NAME")
				Me.OnPACKAGE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUM", DbType:="NVarChar(MAX)")>  _
	Public Property SUM() As String
		Get
			Return Me._SUM
		End Get
		Set
			If (String.Equals(Me._SUM, value) = false) Then
				Me.OnSUMChanging(value)
				Me.SendPropertyChanging
				Me._SUM = value
				Me.SendPropertyChanged("SUM")
				Me.OnSUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IM_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property IM_QTY() As String
		Get
			Return Me._IM_QTY
		End Get
		Set
			If (String.Equals(Me._IM_QTY, value) = false) Then
				Me.OnIM_QTYChanging(value)
				Me.SendPropertyChanging
				Me._IM_QTY = value
				Me.SendPropertyChanged("IM_QTY")
				Me.OnIM_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IM_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property IM_DETAIL() As String
		Get
			Return Me._IM_DETAIL
		End Get
		Set
			If (String.Equals(Me._IM_DETAIL, value) = false) Then
				Me.OnIM_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._IM_DETAIL = value
				Me.SendPropertyChanged("IM_DETAIL")
				Me.OnIM_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ADD", DbType:="Date")>  _
	Public Property DATE_ADD() As System.Nullable(Of Date)
		Get
			Return Me._DATE_ADD
		End Get
		Set
			If (Me._DATE_ADD.Equals(value) = false) Then
				Me.OnDATE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ADD = value
				Me.SendPropertyChanged("DATE_ADD")
				Me.OnDATE_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_order_id", DbType:="NVarChar(MAX)")>  _
	Public Property order_id() As String
		Get
			Return Me._order_id
		End Get
		Set
			If (String.Equals(Me._order_id, value) = false) Then
				Me.Onorder_idChanging(value)
				Me.SendPropertyChanging
				Me._order_id = value
				Me.SendPropertyChanged("order_id")
				Me.Onorder_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIG_AMOUNT", DbType:="Float")>  _
	Public Property BIG_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._BIG_AMOUNT
		End Get
		Set
			If (Me._BIG_AMOUNT.Equals(value) = false) Then
				Me.OnBIG_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._BIG_AMOUNT = value
				Me.SendPropertyChanged("BIG_AMOUNT")
				Me.OnBIG_AMOUNTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TYPE_REQUEST_AMOUNT")>  _
Partial Public Class MAS_TYPE_REQUEST_AMOUNT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TYPE_REQUESTS_ID As String
	
	Private _AMOUNT As System.Nullable(Of Decimal)
	
	Private _IS_ACTIVE As System.Nullable(Of Boolean)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_IDChanged()
    End Sub
    Partial Private Sub OnAMOUNTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAMOUNTChanged()
    End Sub
    Partial Private Sub OnIS_ACTIVEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_ACTIVEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_REQUESTS_ID", DbType:="NVarChar(50)")>  _
	Public Property TYPE_REQUESTS_ID() As String
		Get
			Return Me._TYPE_REQUESTS_ID
		End Get
		Set
			If (String.Equals(Me._TYPE_REQUESTS_ID, value) = false) Then
				Me.OnTYPE_REQUESTS_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_REQUESTS_ID = value
				Me.SendPropertyChanged("TYPE_REQUESTS_ID")
				Me.OnTYPE_REQUESTS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT", DbType:="Money")>  _
	Public Property AMOUNT() As System.Nullable(Of Decimal)
		Get
			Return Me._AMOUNT
		End Get
		Set
			If (Me._AMOUNT.Equals(value) = false) Then
				Me.OnAMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT = value
				Me.SendPropertyChanged("AMOUNT")
				Me.OnAMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_ACTIVE", DbType:="Bit")>  _
	Public Property IS_ACTIVE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_ACTIVE
		End Get
		Set
			If (Me._IS_ACTIVE.Equals(value) = false) Then
				Me.OnIS_ACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._IS_ACTIVE = value
				Me.SendPropertyChanged("IS_ACTIVE")
				Me.OnIS_ACTIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACKING_LOG")>  _
Partial Public Class E_TRACKING_LOG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_TYPE As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _EDIT_DESCRIPTION As String
	
	Private _HEAD_STATUS As System.Nullable(Of Integer)
	
	Private _SUB_STATUS As System.Nullable(Of Integer)
	
	Private _CITIZEN_ID As String
	
	Private _PROCESS_NAME As String
	
	Private _SUB_IDA As System.Nullable(Of Integer)
	
	Private _URL As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_TYPEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnEDIT_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnEDIT_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnHEAD_STATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEAD_STATUSChanged()
    End Sub
    Partial Private Sub OnSUB_STATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUB_STATUSChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanged()
    End Sub
    Partial Private Sub OnSUB_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUB_IDAChanged()
    End Sub
    Partial Private Sub OnURLChanging(value As String)
    End Sub
    Partial Private Sub OnURLChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_TYPE", DbType:="Int")>  _
	Public Property STATUS_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_TYPE
		End Get
		Set
			If (Me._STATUS_TYPE.Equals(value) = false) Then
				Me.OnSTATUS_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_TYPE = value
				Me.SendPropertyChanged("STATUS_TYPE")
				Me.OnSTATUS_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property EDIT_DESCRIPTION() As String
		Get
			Return Me._EDIT_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._EDIT_DESCRIPTION, value) = false) Then
				Me.OnEDIT_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_DESCRIPTION = value
				Me.SendPropertyChanged("EDIT_DESCRIPTION")
				Me.OnEDIT_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_STATUS", DbType:="Int")>  _
	Public Property HEAD_STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_STATUS
		End Get
		Set
			If (Me._HEAD_STATUS.Equals(value) = false) Then
				Me.OnHEAD_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_STATUS = value
				Me.SendPropertyChanged("HEAD_STATUS")
				Me.OnHEAD_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_STATUS", DbType:="Int")>  _
	Public Property SUB_STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._SUB_STATUS
		End Get
		Set
			If (Me._SUB_STATUS.Equals(value) = false) Then
				Me.OnSUB_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._SUB_STATUS = value
				Me.SendPropertyChanged("SUB_STATUS")
				Me.OnSUB_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_NAME() As String
		Get
			Return Me._PROCESS_NAME
		End Get
		Set
			If (String.Equals(Me._PROCESS_NAME, value) = false) Then
				Me.OnPROCESS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_NAME = value
				Me.SendPropertyChanged("PROCESS_NAME")
				Me.OnPROCESS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_IDA", DbType:="Int")>  _
	Public Property SUB_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._SUB_IDA
		End Get
		Set
			If (Me._SUB_IDA.Equals(value) = false) Then
				Me.OnSUB_IDAChanging(value)
				Me.SendPropertyChanging
				Me._SUB_IDA = value
				Me.SendPropertyChanged("SUB_IDA")
				Me.OnSUB_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_URL", DbType:="NVarChar(MAX)")>  _
	Public Property URL() As String
		Get
			Return Me._URL
		End Get
		Set
			If (String.Equals(Me._URL, value) = false) Then
				Me.OnURLChanging(value)
				Me.SendPropertyChanging
				Me._URL = value
				Me.SendPropertyChanged("URL")
				Me.OnURLChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_EDIT_MIGRATE")>  _
Partial Public Class LOG_EDIT_MIGRATE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CITIZEN_ID As String
	
	Private _CREATEDATE As System.Nullable(Of Date)
	
	Private _ACTION_DESCRIPTION As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _URL As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnCREATEDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATEDATEChanged()
    End Sub
    Partial Private Sub OnACTION_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnACTION_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnURLChanging(value As String)
    End Sub
    Partial Private Sub OnURLChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATEDATE", DbType:="DateTime")>  _
	Public Property CREATEDATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATEDATE
		End Get
		Set
			If (Me._CREATEDATE.Equals(value) = false) Then
				Me.OnCREATEDATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATEDATE = value
				Me.SendPropertyChanged("CREATEDATE")
				Me.OnCREATEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTION_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property ACTION_DESCRIPTION() As String
		Get
			Return Me._ACTION_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._ACTION_DESCRIPTION, value) = false) Then
				Me.OnACTION_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._ACTION_DESCRIPTION = value
				Me.SendPropertyChanged("ACTION_DESCRIPTION")
				Me.OnACTION_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_URL", DbType:="NVarChar(MAX)")>  _
	Public Property URL() As String
		Get
			Return Me._URL
		End Get
		Set
			If (String.Equals(Me._URL, value) = false) Then
				Me.OnURLChanging(value)
				Me.SendPropertyChanging
				Me._URL = value
				Me.SendPropertyChanged("URL")
				Me.OnURLChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_PACKAGE_DETAIL")>  _
Partial Public Class DRRQT_PACKAGE_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _MEDIUM_UNIT As String
	
	Private _SMALL_AMOUNT As String
	
	Private _SMALL_UNIT As String
	
	Private _BIG_UNIT As String
	
	Private _MEDIUM_AMOUNT As String
	
	Private _BARCODE As String
	
	Private _CHECK_PACKAGE As String
	
	Private _PACKAGE_NAME As String
	
	Private _SUM As String
	
	Private _IM_QTY As String
	
	Private _IM_DETAIL As String
	
	Private _DATE_ADD As System.Nullable(Of Date)
	
	Private _order_id As String
	
	Private _BIG_AMOUNT As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnMEDIUM_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnMEDIUM_UNITChanged()
    End Sub
    Partial Private Sub OnSMALL_AMOUNTChanging(value As String)
    End Sub
    Partial Private Sub OnSMALL_AMOUNTChanged()
    End Sub
    Partial Private Sub OnSMALL_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnSMALL_UNITChanged()
    End Sub
    Partial Private Sub OnBIG_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnBIG_UNITChanged()
    End Sub
    Partial Private Sub OnMEDIUM_AMOUNTChanging(value As String)
    End Sub
    Partial Private Sub OnMEDIUM_AMOUNTChanged()
    End Sub
    Partial Private Sub OnBARCODEChanging(value As String)
    End Sub
    Partial Private Sub OnBARCODEChanged()
    End Sub
    Partial Private Sub OnCHECK_PACKAGEChanging(value As String)
    End Sub
    Partial Private Sub OnCHECK_PACKAGEChanged()
    End Sub
    Partial Private Sub OnPACKAGE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPACKAGE_NAMEChanged()
    End Sub
    Partial Private Sub OnSUMChanging(value As String)
    End Sub
    Partial Private Sub OnSUMChanged()
    End Sub
    Partial Private Sub OnIM_QTYChanging(value As String)
    End Sub
    Partial Private Sub OnIM_QTYChanged()
    End Sub
    Partial Private Sub OnIM_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnIM_DETAILChanged()
    End Sub
    Partial Private Sub OnDATE_ADDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_ADDChanged()
    End Sub
    Partial Private Sub Onorder_idChanging(value As String)
    End Sub
    Partial Private Sub Onorder_idChanged()
    End Sub
    Partial Private Sub OnBIG_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBIG_AMOUNTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDIUM_UNIT", DbType:="NVarChar(MAX)")>  _
	Public Property MEDIUM_UNIT() As String
		Get
			Return Me._MEDIUM_UNIT
		End Get
		Set
			If (String.Equals(Me._MEDIUM_UNIT, value) = false) Then
				Me.OnMEDIUM_UNITChanging(value)
				Me.SendPropertyChanging
				Me._MEDIUM_UNIT = value
				Me.SendPropertyChanged("MEDIUM_UNIT")
				Me.OnMEDIUM_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_AMOUNT", DbType:="NVarChar(MAX)")>  _
	Public Property SMALL_AMOUNT() As String
		Get
			Return Me._SMALL_AMOUNT
		End Get
		Set
			If (String.Equals(Me._SMALL_AMOUNT, value) = false) Then
				Me.OnSMALL_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_AMOUNT = value
				Me.SendPropertyChanged("SMALL_AMOUNT")
				Me.OnSMALL_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_UNIT", DbType:="NVarChar(MAX)")>  _
	Public Property SMALL_UNIT() As String
		Get
			Return Me._SMALL_UNIT
		End Get
		Set
			If (String.Equals(Me._SMALL_UNIT, value) = false) Then
				Me.OnSMALL_UNITChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_UNIT = value
				Me.SendPropertyChanged("SMALL_UNIT")
				Me.OnSMALL_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIG_UNIT", DbType:="NVarChar(MAX)")>  _
	Public Property BIG_UNIT() As String
		Get
			Return Me._BIG_UNIT
		End Get
		Set
			If (String.Equals(Me._BIG_UNIT, value) = false) Then
				Me.OnBIG_UNITChanging(value)
				Me.SendPropertyChanging
				Me._BIG_UNIT = value
				Me.SendPropertyChanged("BIG_UNIT")
				Me.OnBIG_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDIUM_AMOUNT", DbType:="NVarChar(MAX)")>  _
	Public Property MEDIUM_AMOUNT() As String
		Get
			Return Me._MEDIUM_AMOUNT
		End Get
		Set
			If (String.Equals(Me._MEDIUM_AMOUNT, value) = false) Then
				Me.OnMEDIUM_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._MEDIUM_AMOUNT = value
				Me.SendPropertyChanged("MEDIUM_AMOUNT")
				Me.OnMEDIUM_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BARCODE", DbType:="NVarChar(MAX)")>  _
	Public Property BARCODE() As String
		Get
			Return Me._BARCODE
		End Get
		Set
			If (String.Equals(Me._BARCODE, value) = false) Then
				Me.OnBARCODEChanging(value)
				Me.SendPropertyChanging
				Me._BARCODE = value
				Me.SendPropertyChanged("BARCODE")
				Me.OnBARCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_PACKAGE", DbType:="NVarChar(MAX)")>  _
	Public Property CHECK_PACKAGE() As String
		Get
			Return Me._CHECK_PACKAGE
		End Get
		Set
			If (String.Equals(Me._CHECK_PACKAGE, value) = false) Then
				Me.OnCHECK_PACKAGEChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_PACKAGE = value
				Me.SendPropertyChanged("CHECK_PACKAGE")
				Me.OnCHECK_PACKAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACKAGE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PACKAGE_NAME() As String
		Get
			Return Me._PACKAGE_NAME
		End Get
		Set
			If (String.Equals(Me._PACKAGE_NAME, value) = false) Then
				Me.OnPACKAGE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PACKAGE_NAME = value
				Me.SendPropertyChanged("PACKAGE_NAME")
				Me.OnPACKAGE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUM", DbType:="NVarChar(MAX)")>  _
	Public Property SUM() As String
		Get
			Return Me._SUM
		End Get
		Set
			If (String.Equals(Me._SUM, value) = false) Then
				Me.OnSUMChanging(value)
				Me.SendPropertyChanging
				Me._SUM = value
				Me.SendPropertyChanged("SUM")
				Me.OnSUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IM_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property IM_QTY() As String
		Get
			Return Me._IM_QTY
		End Get
		Set
			If (String.Equals(Me._IM_QTY, value) = false) Then
				Me.OnIM_QTYChanging(value)
				Me.SendPropertyChanging
				Me._IM_QTY = value
				Me.SendPropertyChanged("IM_QTY")
				Me.OnIM_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IM_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property IM_DETAIL() As String
		Get
			Return Me._IM_DETAIL
		End Get
		Set
			If (String.Equals(Me._IM_DETAIL, value) = false) Then
				Me.OnIM_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._IM_DETAIL = value
				Me.SendPropertyChanged("IM_DETAIL")
				Me.OnIM_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ADD", DbType:="Date")>  _
	Public Property DATE_ADD() As System.Nullable(Of Date)
		Get
			Return Me._DATE_ADD
		End Get
		Set
			If (Me._DATE_ADD.Equals(value) = false) Then
				Me.OnDATE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ADD = value
				Me.SendPropertyChanged("DATE_ADD")
				Me.OnDATE_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_order_id", DbType:="NVarChar(MAX)")>  _
	Public Property order_id() As String
		Get
			Return Me._order_id
		End Get
		Set
			If (String.Equals(Me._order_id, value) = false) Then
				Me.Onorder_idChanging(value)
				Me.SendPropertyChanging
				Me._order_id = value
				Me.SendPropertyChanged("order_id")
				Me.Onorder_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIG_AMOUNT", DbType:="Float")>  _
	Public Property BIG_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._BIG_AMOUNT
		End Get
		Set
			If (Me._BIG_AMOUNT.Equals(value) = false) Then
				Me.OnBIG_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._BIG_AMOUNT = value
				Me.SendPropertyChanged("BIG_AMOUNT")
				Me.OnBIG_AMOUNTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_PACKAGE_DETAIL")>  _
Partial Public Class DRRGT_PACKAGE_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _MEDIUM_UNIT As String
	
	Private _SMALL_AMOUNT As String
	
	Private _SMALL_UNIT As String
	
	Private _BIG_UNIT As String
	
	Private _MEDIUM_AMOUNT As String
	
	Private _BARCODE As String
	
	Private _CHECK_PACKAGE As String
	
	Private _PACKAGE_NAME As String
	
	Private _SUM As String
	
	Private _IM_QTY As String
	
	Private _IM_DETAIL As String
	
	Private _DATE_ADD As System.Nullable(Of Date)
	
	Private _order_id As String
	
	Private _BIG_AMOUNT As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnMEDIUM_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnMEDIUM_UNITChanged()
    End Sub
    Partial Private Sub OnSMALL_AMOUNTChanging(value As String)
    End Sub
    Partial Private Sub OnSMALL_AMOUNTChanged()
    End Sub
    Partial Private Sub OnSMALL_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnSMALL_UNITChanged()
    End Sub
    Partial Private Sub OnBIG_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnBIG_UNITChanged()
    End Sub
    Partial Private Sub OnMEDIUM_AMOUNTChanging(value As String)
    End Sub
    Partial Private Sub OnMEDIUM_AMOUNTChanged()
    End Sub
    Partial Private Sub OnBARCODEChanging(value As String)
    End Sub
    Partial Private Sub OnBARCODEChanged()
    End Sub
    Partial Private Sub OnCHECK_PACKAGEChanging(value As String)
    End Sub
    Partial Private Sub OnCHECK_PACKAGEChanged()
    End Sub
    Partial Private Sub OnPACKAGE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPACKAGE_NAMEChanged()
    End Sub
    Partial Private Sub OnSUMChanging(value As String)
    End Sub
    Partial Private Sub OnSUMChanged()
    End Sub
    Partial Private Sub OnIM_QTYChanging(value As String)
    End Sub
    Partial Private Sub OnIM_QTYChanged()
    End Sub
    Partial Private Sub OnIM_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnIM_DETAILChanged()
    End Sub
    Partial Private Sub OnDATE_ADDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_ADDChanged()
    End Sub
    Partial Private Sub Onorder_idChanging(value As String)
    End Sub
    Partial Private Sub Onorder_idChanged()
    End Sub
    Partial Private Sub OnBIG_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBIG_AMOUNTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDIUM_UNIT", DbType:="NVarChar(MAX)")>  _
	Public Property MEDIUM_UNIT() As String
		Get
			Return Me._MEDIUM_UNIT
		End Get
		Set
			If (String.Equals(Me._MEDIUM_UNIT, value) = false) Then
				Me.OnMEDIUM_UNITChanging(value)
				Me.SendPropertyChanging
				Me._MEDIUM_UNIT = value
				Me.SendPropertyChanged("MEDIUM_UNIT")
				Me.OnMEDIUM_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_AMOUNT", DbType:="NVarChar(MAX)")>  _
	Public Property SMALL_AMOUNT() As String
		Get
			Return Me._SMALL_AMOUNT
		End Get
		Set
			If (String.Equals(Me._SMALL_AMOUNT, value) = false) Then
				Me.OnSMALL_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_AMOUNT = value
				Me.SendPropertyChanged("SMALL_AMOUNT")
				Me.OnSMALL_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_UNIT", DbType:="NVarChar(MAX)")>  _
	Public Property SMALL_UNIT() As String
		Get
			Return Me._SMALL_UNIT
		End Get
		Set
			If (String.Equals(Me._SMALL_UNIT, value) = false) Then
				Me.OnSMALL_UNITChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_UNIT = value
				Me.SendPropertyChanged("SMALL_UNIT")
				Me.OnSMALL_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIG_UNIT", DbType:="NVarChar(MAX)")>  _
	Public Property BIG_UNIT() As String
		Get
			Return Me._BIG_UNIT
		End Get
		Set
			If (String.Equals(Me._BIG_UNIT, value) = false) Then
				Me.OnBIG_UNITChanging(value)
				Me.SendPropertyChanging
				Me._BIG_UNIT = value
				Me.SendPropertyChanged("BIG_UNIT")
				Me.OnBIG_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDIUM_AMOUNT", DbType:="NVarChar(MAX)")>  _
	Public Property MEDIUM_AMOUNT() As String
		Get
			Return Me._MEDIUM_AMOUNT
		End Get
		Set
			If (String.Equals(Me._MEDIUM_AMOUNT, value) = false) Then
				Me.OnMEDIUM_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._MEDIUM_AMOUNT = value
				Me.SendPropertyChanged("MEDIUM_AMOUNT")
				Me.OnMEDIUM_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BARCODE", DbType:="NVarChar(MAX)")>  _
	Public Property BARCODE() As String
		Get
			Return Me._BARCODE
		End Get
		Set
			If (String.Equals(Me._BARCODE, value) = false) Then
				Me.OnBARCODEChanging(value)
				Me.SendPropertyChanging
				Me._BARCODE = value
				Me.SendPropertyChanged("BARCODE")
				Me.OnBARCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_PACKAGE", DbType:="NVarChar(MAX)")>  _
	Public Property CHECK_PACKAGE() As String
		Get
			Return Me._CHECK_PACKAGE
		End Get
		Set
			If (String.Equals(Me._CHECK_PACKAGE, value) = false) Then
				Me.OnCHECK_PACKAGEChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_PACKAGE = value
				Me.SendPropertyChanged("CHECK_PACKAGE")
				Me.OnCHECK_PACKAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACKAGE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PACKAGE_NAME() As String
		Get
			Return Me._PACKAGE_NAME
		End Get
		Set
			If (String.Equals(Me._PACKAGE_NAME, value) = false) Then
				Me.OnPACKAGE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PACKAGE_NAME = value
				Me.SendPropertyChanged("PACKAGE_NAME")
				Me.OnPACKAGE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUM", DbType:="NVarChar(MAX)")>  _
	Public Property SUM() As String
		Get
			Return Me._SUM
		End Get
		Set
			If (String.Equals(Me._SUM, value) = false) Then
				Me.OnSUMChanging(value)
				Me.SendPropertyChanging
				Me._SUM = value
				Me.SendPropertyChanged("SUM")
				Me.OnSUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IM_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property IM_QTY() As String
		Get
			Return Me._IM_QTY
		End Get
		Set
			If (String.Equals(Me._IM_QTY, value) = false) Then
				Me.OnIM_QTYChanging(value)
				Me.SendPropertyChanging
				Me._IM_QTY = value
				Me.SendPropertyChanged("IM_QTY")
				Me.OnIM_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IM_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property IM_DETAIL() As String
		Get
			Return Me._IM_DETAIL
		End Get
		Set
			If (String.Equals(Me._IM_DETAIL, value) = false) Then
				Me.OnIM_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._IM_DETAIL = value
				Me.SendPropertyChanged("IM_DETAIL")
				Me.OnIM_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ADD", DbType:="Date")>  _
	Public Property DATE_ADD() As System.Nullable(Of Date)
		Get
			Return Me._DATE_ADD
		End Get
		Set
			If (Me._DATE_ADD.Equals(value) = false) Then
				Me.OnDATE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ADD = value
				Me.SendPropertyChanged("DATE_ADD")
				Me.OnDATE_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_order_id", DbType:="NVarChar(MAX)")>  _
	Public Property order_id() As String
		Get
			Return Me._order_id
		End Get
		Set
			If (String.Equals(Me._order_id, value) = false) Then
				Me.Onorder_idChanging(value)
				Me.SendPropertyChanging
				Me._order_id = value
				Me.SendPropertyChanged("order_id")
				Me.Onorder_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIG_AMOUNT", DbType:="Float")>  _
	Public Property BIG_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._BIG_AMOUNT
		End Get
		Set
			If (Me._BIG_AMOUNT.Equals(value) = false) Then
				Me.OnBIG_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._BIG_AMOUNT = value
				Me.SendPropertyChanged("BIG_AMOUNT")
				Me.OnBIG_AMOUNTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_COLOR")>  _
Partial Public Class DRRGT_COLOR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _COLOR1 As String
	
	Private _COLOR2 As String
	
	Private _COLOR3 As String
	
	Private _COLOR4 As String
	
	Private _COLOR_NAME1 As String
	
	Private _COLOR_NAME2 As String
	
	Private _COLOR_NAME3 As String
	
	Private _COLOR_NAME4 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnCOLOR1Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR1Changed()
    End Sub
    Partial Private Sub OnCOLOR2Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR2Changed()
    End Sub
    Partial Private Sub OnCOLOR3Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR3Changed()
    End Sub
    Partial Private Sub OnCOLOR4Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR4Changed()
    End Sub
    Partial Private Sub OnCOLOR_NAME1Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR_NAME1Changed()
    End Sub
    Partial Private Sub OnCOLOR_NAME2Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR_NAME2Changed()
    End Sub
    Partial Private Sub OnCOLOR_NAME3Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR_NAME3Changed()
    End Sub
    Partial Private Sub OnCOLOR_NAME4Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR_NAME4Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR1", DbType:="NVarChar(50)")>  _
	Public Property COLOR1() As String
		Get
			Return Me._COLOR1
		End Get
		Set
			If (String.Equals(Me._COLOR1, value) = false) Then
				Me.OnCOLOR1Changing(value)
				Me.SendPropertyChanging
				Me._COLOR1 = value
				Me.SendPropertyChanged("COLOR1")
				Me.OnCOLOR1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR2", DbType:="NVarChar(50)")>  _
	Public Property COLOR2() As String
		Get
			Return Me._COLOR2
		End Get
		Set
			If (String.Equals(Me._COLOR2, value) = false) Then
				Me.OnCOLOR2Changing(value)
				Me.SendPropertyChanging
				Me._COLOR2 = value
				Me.SendPropertyChanged("COLOR2")
				Me.OnCOLOR2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR3", DbType:="NVarChar(50)")>  _
	Public Property COLOR3() As String
		Get
			Return Me._COLOR3
		End Get
		Set
			If (String.Equals(Me._COLOR3, value) = false) Then
				Me.OnCOLOR3Changing(value)
				Me.SendPropertyChanging
				Me._COLOR3 = value
				Me.SendPropertyChanged("COLOR3")
				Me.OnCOLOR3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR4", DbType:="NVarChar(50)")>  _
	Public Property COLOR4() As String
		Get
			Return Me._COLOR4
		End Get
		Set
			If (String.Equals(Me._COLOR4, value) = false) Then
				Me.OnCOLOR4Changing(value)
				Me.SendPropertyChanging
				Me._COLOR4 = value
				Me.SendPropertyChanged("COLOR4")
				Me.OnCOLOR4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR_NAME1", DbType:="NVarChar(50)")>  _
	Public Property COLOR_NAME1() As String
		Get
			Return Me._COLOR_NAME1
		End Get
		Set
			If (String.Equals(Me._COLOR_NAME1, value) = false) Then
				Me.OnCOLOR_NAME1Changing(value)
				Me.SendPropertyChanging
				Me._COLOR_NAME1 = value
				Me.SendPropertyChanged("COLOR_NAME1")
				Me.OnCOLOR_NAME1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR_NAME2", DbType:="NVarChar(50)")>  _
	Public Property COLOR_NAME2() As String
		Get
			Return Me._COLOR_NAME2
		End Get
		Set
			If (String.Equals(Me._COLOR_NAME2, value) = false) Then
				Me.OnCOLOR_NAME2Changing(value)
				Me.SendPropertyChanging
				Me._COLOR_NAME2 = value
				Me.SendPropertyChanged("COLOR_NAME2")
				Me.OnCOLOR_NAME2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR_NAME3", DbType:="NVarChar(50)")>  _
	Public Property COLOR_NAME3() As String
		Get
			Return Me._COLOR_NAME3
		End Get
		Set
			If (String.Equals(Me._COLOR_NAME3, value) = false) Then
				Me.OnCOLOR_NAME3Changing(value)
				Me.SendPropertyChanging
				Me._COLOR_NAME3 = value
				Me.SendPropertyChanged("COLOR_NAME3")
				Me.OnCOLOR_NAME3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR_NAME4", DbType:="NVarChar(50)")>  _
	Public Property COLOR_NAME4() As String
		Get
			Return Me._COLOR_NAME4
		End Get
		Set
			If (String.Equals(Me._COLOR_NAME4, value) = false) Then
				Me.OnCOLOR_NAME4Changing(value)
				Me.SendPropertyChanging
				Me._COLOR_NAME4 = value
				Me.SendPropertyChanged("COLOR_NAME4")
				Me.OnCOLOR_NAME4Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_COLOR")>  _
Partial Public Class DRRQT_COLOR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _COLOR1 As String
	
	Private _COLOR2 As String
	
	Private _COLOR3 As String
	
	Private _COLOR4 As String
	
	Private _COLOR_NAME1 As String
	
	Private _COLOR_NAME2 As String
	
	Private _COLOR_NAME3 As String
	
	Private _COLOR_NAME4 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnCOLOR1Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR1Changed()
    End Sub
    Partial Private Sub OnCOLOR2Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR2Changed()
    End Sub
    Partial Private Sub OnCOLOR3Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR3Changed()
    End Sub
    Partial Private Sub OnCOLOR4Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR4Changed()
    End Sub
    Partial Private Sub OnCOLOR_NAME1Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR_NAME1Changed()
    End Sub
    Partial Private Sub OnCOLOR_NAME2Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR_NAME2Changed()
    End Sub
    Partial Private Sub OnCOLOR_NAME3Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR_NAME3Changed()
    End Sub
    Partial Private Sub OnCOLOR_NAME4Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR_NAME4Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR1", DbType:="NVarChar(50)")>  _
	Public Property COLOR1() As String
		Get
			Return Me._COLOR1
		End Get
		Set
			If (String.Equals(Me._COLOR1, value) = false) Then
				Me.OnCOLOR1Changing(value)
				Me.SendPropertyChanging
				Me._COLOR1 = value
				Me.SendPropertyChanged("COLOR1")
				Me.OnCOLOR1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR2", DbType:="NVarChar(50)")>  _
	Public Property COLOR2() As String
		Get
			Return Me._COLOR2
		End Get
		Set
			If (String.Equals(Me._COLOR2, value) = false) Then
				Me.OnCOLOR2Changing(value)
				Me.SendPropertyChanging
				Me._COLOR2 = value
				Me.SendPropertyChanged("COLOR2")
				Me.OnCOLOR2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR3", DbType:="NVarChar(50)")>  _
	Public Property COLOR3() As String
		Get
			Return Me._COLOR3
		End Get
		Set
			If (String.Equals(Me._COLOR3, value) = false) Then
				Me.OnCOLOR3Changing(value)
				Me.SendPropertyChanging
				Me._COLOR3 = value
				Me.SendPropertyChanged("COLOR3")
				Me.OnCOLOR3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR4", DbType:="NVarChar(50)")>  _
	Public Property COLOR4() As String
		Get
			Return Me._COLOR4
		End Get
		Set
			If (String.Equals(Me._COLOR4, value) = false) Then
				Me.OnCOLOR4Changing(value)
				Me.SendPropertyChanging
				Me._COLOR4 = value
				Me.SendPropertyChanged("COLOR4")
				Me.OnCOLOR4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR_NAME1", DbType:="NVarChar(50)")>  _
	Public Property COLOR_NAME1() As String
		Get
			Return Me._COLOR_NAME1
		End Get
		Set
			If (String.Equals(Me._COLOR_NAME1, value) = false) Then
				Me.OnCOLOR_NAME1Changing(value)
				Me.SendPropertyChanging
				Me._COLOR_NAME1 = value
				Me.SendPropertyChanged("COLOR_NAME1")
				Me.OnCOLOR_NAME1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR_NAME2", DbType:="NVarChar(50)")>  _
	Public Property COLOR_NAME2() As String
		Get
			Return Me._COLOR_NAME2
		End Get
		Set
			If (String.Equals(Me._COLOR_NAME2, value) = false) Then
				Me.OnCOLOR_NAME2Changing(value)
				Me.SendPropertyChanging
				Me._COLOR_NAME2 = value
				Me.SendPropertyChanged("COLOR_NAME2")
				Me.OnCOLOR_NAME2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR_NAME3", DbType:="NVarChar(50)")>  _
	Public Property COLOR_NAME3() As String
		Get
			Return Me._COLOR_NAME3
		End Get
		Set
			If (String.Equals(Me._COLOR_NAME3, value) = false) Then
				Me.OnCOLOR_NAME3Changing(value)
				Me.SendPropertyChanging
				Me._COLOR_NAME3 = value
				Me.SendPropertyChanged("COLOR_NAME3")
				Me.OnCOLOR_NAME3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR_NAME4", DbType:="NVarChar(50)")>  _
	Public Property COLOR_NAME4() As String
		Get
			Return Me._COLOR_NAME4
		End Get
		Set
			If (String.Equals(Me._COLOR_NAME4, value) = false) Then
				Me.OnCOLOR_NAME4Changing(value)
				Me.SendPropertyChanging
				Me._COLOR_NAME4 = value
				Me.SendPropertyChanged("COLOR_NAME4")
				Me.OnCOLOR_NAME4Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_BIO_UNIT")>  _
Partial Public Class MAS_BIO_UNIT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _BIO_UNIT As String
	
	Private _short_unit As String
	
	Private _sunitcd As System.Nullable(Of Integer)
	
	Private _BIO_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnBIO_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnBIO_UNITChanged()
    End Sub
    Partial Private Sub Onshort_unitChanging(value As String)
    End Sub
    Partial Private Sub Onshort_unitChanged()
    End Sub
    Partial Private Sub OnsunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsunitcdChanged()
    End Sub
    Partial Private Sub OnBIO_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBIO_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIO_UNIT", DbType:="NVarChar(MAX)")>  _
	Public Property BIO_UNIT() As String
		Get
			Return Me._BIO_UNIT
		End Get
		Set
			If (String.Equals(Me._BIO_UNIT, value) = false) Then
				Me.OnBIO_UNITChanging(value)
				Me.SendPropertyChanging
				Me._BIO_UNIT = value
				Me.SendPropertyChanged("BIO_UNIT")
				Me.OnBIO_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_short_unit", DbType:="NVarChar(MAX)")>  _
	Public Property short_unit() As String
		Get
			Return Me._short_unit
		End Get
		Set
			If (String.Equals(Me._short_unit, value) = false) Then
				Me.Onshort_unitChanging(value)
				Me.SendPropertyChanging
				Me._short_unit = value
				Me.SendPropertyChanged("short_unit")
				Me.Onshort_unitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitcd", DbType:="Int")>  _
	Public Property sunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sunitcd
		End Get
		Set
			If (Me._sunitcd.Equals(value) = false) Then
				Me.OnsunitcdChanging(value)
				Me.SendPropertyChanging
				Me._sunitcd = value
				Me.SendPropertyChanged("sunitcd")
				Me.OnsunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIO_ID", DbType:="Int")>  _
	Public Property BIO_ID() As System.Nullable(Of Integer)
		Get
			Return Me._BIO_ID
		End Get
		Set
			If (Me._BIO_ID.Equals(value) = false) Then
				Me.OnBIO_IDChanging(value)
				Me.SendPropertyChanging
				Me._BIO_ID = value
				Me.SendPropertyChanged("BIO_ID")
				Me.OnBIO_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_NO_USE")>  _
Partial Public Class DRRGT_NO_USE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _NO_USE_DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnNO_USE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnNO_USE_DESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_USE_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property NO_USE_DESCRIPTION() As String
		Get
			Return Me._NO_USE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._NO_USE_DESCRIPTION, value) = false) Then
				Me.OnNO_USE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._NO_USE_DESCRIPTION = value
				Me.SendPropertyChanged("NO_USE_DESCRIPTION")
				Me.OnNO_USE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_NO_USE")>  _
Partial Public Class DRRQT_NO_USE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _NO_USE_DESCRIPTION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnNO_USE_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnNO_USE_DESCRIPTIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NO_USE_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property NO_USE_DESCRIPTION() As String
		Get
			Return Me._NO_USE_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._NO_USE_DESCRIPTION, value) = false) Then
				Me.OnNO_USE_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._NO_USE_DESCRIPTION = value
				Me.SendPropertyChanged("NO_USE_DESCRIPTION")
				Me.OnNO_USE_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_REGISTRATION_ANIMAL")>  _
Partial Public Class DRUG_REGISTRATION_ANIMAL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As System.Nullable(Of Integer)
	
	Private _amltpcd As System.Nullable(Of Short)
	
	Private _amlsubcd As System.Nullable(Of Short)
	
	Private _usetpcd As System.Nullable(Of Short)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnamltpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamltpcdChanged()
    End Sub
    Partial Private Sub OnamlsubcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamlsubcdChanged()
    End Sub
    Partial Private Sub OnusetpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnusetpcdChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="VarChar(3)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="Int")>  _
	Public Property rgtno() As System.Nullable(Of Integer)
		Get
			Return Me._rgtno
		End Get
		Set
			If (Me._rgtno.Equals(value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amltpcd", DbType:="SmallInt")>  _
	Public Property amltpcd() As System.Nullable(Of Short)
		Get
			Return Me._amltpcd
		End Get
		Set
			If (Me._amltpcd.Equals(value) = false) Then
				Me.OnamltpcdChanging(value)
				Me.SendPropertyChanging
				Me._amltpcd = value
				Me.SendPropertyChanged("amltpcd")
				Me.OnamltpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amlsubcd", DbType:="SmallInt")>  _
	Public Property amlsubcd() As System.Nullable(Of Short)
		Get
			Return Me._amlsubcd
		End Get
		Set
			If (Me._amlsubcd.Equals(value) = false) Then
				Me.OnamlsubcdChanging(value)
				Me.SendPropertyChanging
				Me._amlsubcd = value
				Me.SendPropertyChanged("amlsubcd")
				Me.OnamlsubcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usetpcd", DbType:="SmallInt")>  _
	Public Property usetpcd() As System.Nullable(Of Short)
		Get
			Return Me._usetpcd
		End Get
		Set
			If (Me._usetpcd.Equals(value) = false) Then
				Me.OnusetpcdChanging(value)
				Me.SendPropertyChanging
				Me._usetpcd = value
				Me.SendPropertyChanged("usetpcd")
				Me.OnusetpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_REGISTRATION_ANIMAL_SUB")>  _
Partial Public Class DRUG_REGISTRATION_ANIMAL_SUB
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As System.Nullable(Of Integer)
	
	Private _amltpcd As System.Nullable(Of Short)
	
	Private _amlsubcd As System.Nullable(Of Short)
	
	Private _usetpcd As System.Nullable(Of Short)
	
	Private _ampartcd As System.Nullable(Of Short)
	
	Private _stpdrgcd As System.Nullable(Of Integer)
	
	Private _stpdrg As String
	
	Private _nouse As String
	
	Private _packuse As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STOP_VALUE1 As String
	
	Private _STOP_UNIT1 As System.Nullable(Of Integer)
	
	Private _STOP_VALUE2 As String
	
	Private _STOP_UNIT2 As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnamltpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamltpcdChanged()
    End Sub
    Partial Private Sub OnamlsubcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamlsubcdChanged()
    End Sub
    Partial Private Sub OnusetpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnusetpcdChanged()
    End Sub
    Partial Private Sub OnampartcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnampartcdChanged()
    End Sub
    Partial Private Sub OnstpdrgcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnstpdrgcdChanged()
    End Sub
    Partial Private Sub OnstpdrgChanging(value As String)
    End Sub
    Partial Private Sub OnstpdrgChanged()
    End Sub
    Partial Private Sub OnnouseChanging(value As String)
    End Sub
    Partial Private Sub OnnouseChanged()
    End Sub
    Partial Private Sub OnpackuseChanging(value As String)
    End Sub
    Partial Private Sub OnpackuseChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTOP_VALUE1Changing(value As String)
    End Sub
    Partial Private Sub OnSTOP_VALUE1Changed()
    End Sub
    Partial Private Sub OnSTOP_UNIT1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTOP_UNIT1Changed()
    End Sub
    Partial Private Sub OnSTOP_VALUE2Changing(value As String)
    End Sub
    Partial Private Sub OnSTOP_VALUE2Changed()
    End Sub
    Partial Private Sub OnSTOP_UNIT2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTOP_UNIT2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="VarChar(3)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="Int")>  _
	Public Property rgtno() As System.Nullable(Of Integer)
		Get
			Return Me._rgtno
		End Get
		Set
			If (Me._rgtno.Equals(value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amltpcd", DbType:="SmallInt")>  _
	Public Property amltpcd() As System.Nullable(Of Short)
		Get
			Return Me._amltpcd
		End Get
		Set
			If (Me._amltpcd.Equals(value) = false) Then
				Me.OnamltpcdChanging(value)
				Me.SendPropertyChanging
				Me._amltpcd = value
				Me.SendPropertyChanged("amltpcd")
				Me.OnamltpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amlsubcd", DbType:="SmallInt")>  _
	Public Property amlsubcd() As System.Nullable(Of Short)
		Get
			Return Me._amlsubcd
		End Get
		Set
			If (Me._amlsubcd.Equals(value) = false) Then
				Me.OnamlsubcdChanging(value)
				Me.SendPropertyChanging
				Me._amlsubcd = value
				Me.SendPropertyChanged("amlsubcd")
				Me.OnamlsubcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usetpcd", DbType:="SmallInt")>  _
	Public Property usetpcd() As System.Nullable(Of Short)
		Get
			Return Me._usetpcd
		End Get
		Set
			If (Me._usetpcd.Equals(value) = false) Then
				Me.OnusetpcdChanging(value)
				Me.SendPropertyChanging
				Me._usetpcd = value
				Me.SendPropertyChanged("usetpcd")
				Me.OnusetpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ampartcd", DbType:="SmallInt")>  _
	Public Property ampartcd() As System.Nullable(Of Short)
		Get
			Return Me._ampartcd
		End Get
		Set
			If (Me._ampartcd.Equals(value) = false) Then
				Me.OnampartcdChanging(value)
				Me.SendPropertyChanging
				Me._ampartcd = value
				Me.SendPropertyChanged("ampartcd")
				Me.OnampartcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stpdrgcd", DbType:="Int")>  _
	Public Property stpdrgcd() As System.Nullable(Of Integer)
		Get
			Return Me._stpdrgcd
		End Get
		Set
			If (Me._stpdrgcd.Equals(value) = false) Then
				Me.OnstpdrgcdChanging(value)
				Me.SendPropertyChanging
				Me._stpdrgcd = value
				Me.SendPropertyChanged("stpdrgcd")
				Me.OnstpdrgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stpdrg", DbType:="VarChar(250)")>  _
	Public Property stpdrg() As String
		Get
			Return Me._stpdrg
		End Get
		Set
			If (String.Equals(Me._stpdrg, value) = false) Then
				Me.OnstpdrgChanging(value)
				Me.SendPropertyChanging
				Me._stpdrg = value
				Me.SendPropertyChanged("stpdrg")
				Me.OnstpdrgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nouse", DbType:="VarChar(250)")>  _
	Public Property nouse() As String
		Get
			Return Me._nouse
		End Get
		Set
			If (String.Equals(Me._nouse, value) = false) Then
				Me.OnnouseChanging(value)
				Me.SendPropertyChanging
				Me._nouse = value
				Me.SendPropertyChanged("nouse")
				Me.OnnouseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_packuse", DbType:="VarChar(250)")>  _
	Public Property packuse() As String
		Get
			Return Me._packuse
		End Get
		Set
			If (String.Equals(Me._packuse, value) = false) Then
				Me.OnpackuseChanging(value)
				Me.SendPropertyChanging
				Me._packuse = value
				Me.SendPropertyChanged("packuse")
				Me.OnpackuseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STOP_VALUE1", DbType:="NVarChar(MAX)")>  _
	Public Property STOP_VALUE1() As String
		Get
			Return Me._STOP_VALUE1
		End Get
		Set
			If (String.Equals(Me._STOP_VALUE1, value) = false) Then
				Me.OnSTOP_VALUE1Changing(value)
				Me.SendPropertyChanging
				Me._STOP_VALUE1 = value
				Me.SendPropertyChanged("STOP_VALUE1")
				Me.OnSTOP_VALUE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STOP_UNIT1", DbType:="Int")>  _
	Public Property STOP_UNIT1() As System.Nullable(Of Integer)
		Get
			Return Me._STOP_UNIT1
		End Get
		Set
			If (Me._STOP_UNIT1.Equals(value) = false) Then
				Me.OnSTOP_UNIT1Changing(value)
				Me.SendPropertyChanging
				Me._STOP_UNIT1 = value
				Me.SendPropertyChanged("STOP_UNIT1")
				Me.OnSTOP_UNIT1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STOP_VALUE2", DbType:="NVarChar(MAX)")>  _
	Public Property STOP_VALUE2() As String
		Get
			Return Me._STOP_VALUE2
		End Get
		Set
			If (String.Equals(Me._STOP_VALUE2, value) = false) Then
				Me.OnSTOP_VALUE2Changing(value)
				Me.SendPropertyChanging
				Me._STOP_VALUE2 = value
				Me.SendPropertyChanged("STOP_VALUE2")
				Me.OnSTOP_VALUE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STOP_UNIT2", DbType:="Int")>  _
	Public Property STOP_UNIT2() As System.Nullable(Of Integer)
		Get
			Return Me._STOP_UNIT2
		End Get
		Set
			If (Me._STOP_UNIT2.Equals(value) = false) Then
				Me.OnSTOP_UNIT2Changing(value)
				Me.SendPropertyChanging
				Me._STOP_UNIT2 = value
				Me.SendPropertyChanged("STOP_UNIT2")
				Me.OnSTOP_UNIT2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACKING_HEAD_CURRENT_STATUS")>  _
Partial Public Class E_TRACKING_HEAD_CURRENT_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _HEAD_ID As System.Nullable(Of Integer)
	
	Private _START_DATE As System.Nullable(Of Date)
	
	Private _END_DATE As System.Nullable(Of Date)
	
	Private _rcvno As String
	
	Private _ctzid As String
	
	Private _rgttpcd As String
	
	Private _STATUS_INDEX As System.Nullable(Of Integer)
	
	Private _PRODUCT_TYPE As System.Nullable(Of Integer)
	
	Private _IS_EXTRA_STAGE As System.Nullable(Of Integer)
	
	Private _HEAD_STATUS_ID As System.Nullable(Of Integer)
	
	Private _SUB_PRODUCT_TYPE As System.Nullable(Of Integer)
	
	Private _drgtpcd As String
	
	Private _SUB_STATUS_ID As System.Nullable(Of Integer)
	
	Private _REF_NO As String
	
	Private _SUB_STATUS_DATE As System.Nullable(Of Date)
	
	Private _STAFF_CITIZEN As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnHEAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEAD_IDChanged()
    End Sub
    Partial Private Sub OnSTART_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTART_DATEChanged()
    End Sub
    Partial Private Sub OnEND_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEND_DATEChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnctzidChanging(value As String)
    End Sub
    Partial Private Sub OnctzidChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnSTATUS_INDEXChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_INDEXChanged()
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanged()
    End Sub
    Partial Private Sub OnIS_EXTRA_STAGEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIS_EXTRA_STAGEChanged()
    End Sub
    Partial Private Sub OnHEAD_STATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEAD_STATUS_IDChanged()
    End Sub
    Partial Private Sub OnSUB_PRODUCT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUB_PRODUCT_TYPEChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnSUB_STATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUB_STATUS_IDChanged()
    End Sub
    Partial Private Sub OnREF_NOChanging(value As String)
    End Sub
    Partial Private Sub OnREF_NOChanged()
    End Sub
    Partial Private Sub OnSUB_STATUS_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSUB_STATUS_DATEChanged()
    End Sub
    Partial Private Sub OnSTAFF_CITIZENChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_CITIZENChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_ID", DbType:="Int")>  _
	Public Property HEAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_ID
		End Get
		Set
			If (Me._HEAD_ID.Equals(value) = false) Then
				Me.OnHEAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_ID = value
				Me.SendPropertyChanged("HEAD_ID")
				Me.OnHEAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_START_DATE", DbType:="DateTime")>  _
	Public Property START_DATE() As System.Nullable(Of Date)
		Get
			Return Me._START_DATE
		End Get
		Set
			If (Me._START_DATE.Equals(value) = false) Then
				Me.OnSTART_DATEChanging(value)
				Me.SendPropertyChanging
				Me._START_DATE = value
				Me.SendPropertyChanged("START_DATE")
				Me.OnSTART_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_END_DATE", DbType:="DateTime")>  _
	Public Property END_DATE() As System.Nullable(Of Date)
		Get
			Return Me._END_DATE
		End Get
		Set
			If (Me._END_DATE.Equals(value) = false) Then
				Me.OnEND_DATEChanging(value)
				Me.SendPropertyChanging
				Me._END_DATE = value
				Me.SendPropertyChanged("END_DATE")
				Me.OnEND_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(MAX)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctzid", DbType:="NVarChar(MAX)")>  _
	Public Property ctzid() As String
		Get
			Return Me._ctzid
		End Get
		Set
			If (String.Equals(Me._ctzid, value) = false) Then
				Me.OnctzidChanging(value)
				Me.SendPropertyChanging
				Me._ctzid = value
				Me.SendPropertyChanged("ctzid")
				Me.OnctzidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_INDEX", DbType:="Int")>  _
	Public Property STATUS_INDEX() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_INDEX
		End Get
		Set
			If (Me._STATUS_INDEX.Equals(value) = false) Then
				Me.OnSTATUS_INDEXChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_INDEX = value
				Me.SendPropertyChanged("STATUS_INDEX")
				Me.OnSTATUS_INDEXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_TYPE", DbType:="Int")>  _
	Public Property PRODUCT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PRODUCT_TYPE
		End Get
		Set
			If (Me._PRODUCT_TYPE.Equals(value) = false) Then
				Me.OnPRODUCT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_TYPE = value
				Me.SendPropertyChanged("PRODUCT_TYPE")
				Me.OnPRODUCT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_EXTRA_STAGE", DbType:="Int")>  _
	Public Property IS_EXTRA_STAGE() As System.Nullable(Of Integer)
		Get
			Return Me._IS_EXTRA_STAGE
		End Get
		Set
			If (Me._IS_EXTRA_STAGE.Equals(value) = false) Then
				Me.OnIS_EXTRA_STAGEChanging(value)
				Me.SendPropertyChanging
				Me._IS_EXTRA_STAGE = value
				Me.SendPropertyChanged("IS_EXTRA_STAGE")
				Me.OnIS_EXTRA_STAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_STATUS_ID", DbType:="Int")>  _
	Public Property HEAD_STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_STATUS_ID
		End Get
		Set
			If (Me._HEAD_STATUS_ID.Equals(value) = false) Then
				Me.OnHEAD_STATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_STATUS_ID = value
				Me.SendPropertyChanged("HEAD_STATUS_ID")
				Me.OnHEAD_STATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_PRODUCT_TYPE", DbType:="Int")>  _
	Public Property SUB_PRODUCT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._SUB_PRODUCT_TYPE
		End Get
		Set
			If (Me._SUB_PRODUCT_TYPE.Equals(value) = false) Then
				Me.OnSUB_PRODUCT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._SUB_PRODUCT_TYPE = value
				Me.SendPropertyChanged("SUB_PRODUCT_TYPE")
				Me.OnSUB_PRODUCT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_STATUS_ID", DbType:="Int")>  _
	Public Property SUB_STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SUB_STATUS_ID
		End Get
		Set
			If (Me._SUB_STATUS_ID.Equals(value) = false) Then
				Me.OnSUB_STATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._SUB_STATUS_ID = value
				Me.SendPropertyChanged("SUB_STATUS_ID")
				Me.OnSUB_STATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_NO", DbType:="NVarChar(MAX)")>  _
	Public Property REF_NO() As String
		Get
			Return Me._REF_NO
		End Get
		Set
			If (String.Equals(Me._REF_NO, value) = false) Then
				Me.OnREF_NOChanging(value)
				Me.SendPropertyChanging
				Me._REF_NO = value
				Me.SendPropertyChanged("REF_NO")
				Me.OnREF_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_STATUS_DATE", DbType:="DateTime")>  _
	Public Property SUB_STATUS_DATE() As System.Nullable(Of Date)
		Get
			Return Me._SUB_STATUS_DATE
		End Get
		Set
			If (Me._SUB_STATUS_DATE.Equals(value) = false) Then
				Me.OnSUB_STATUS_DATEChanging(value)
				Me.SendPropertyChanging
				Me._SUB_STATUS_DATE = value
				Me.SendPropertyChanged("SUB_STATUS_DATE")
				Me.OnSUB_STATUS_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_CITIZEN", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_CITIZEN() As String
		Get
			Return Me._STAFF_CITIZEN
		End Get
		Set
			If (String.Equals(Me._STAFF_CITIZEN, value) = false) Then
				Me.OnSTAFF_CITIZENChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_CITIZEN = value
				Me.SendPropertyChanged("STAFF_CITIZEN")
				Me.OnSTAFF_CITIZENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACKING_STOP_TIME")>  _
Partial Public Class E_TRACKING_STOP_TIME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _START_DATE As System.Nullable(Of Date)
	
	Private _END_DATE As System.Nullable(Of Date)
	
	Private _PERIOD_COUNT As System.Nullable(Of Integer)
	
	Private _TYPE_PERIOD As System.Nullable(Of Integer)
	
	Private _EXPERT_TYPE_ID As System.Nullable(Of Integer)
	
	Private _EXPERT_COUNT As System.Nullable(Of Integer)
	
	Private _rcvno As String
	
	Private _lcntpcd As String
	
	Private _rgttpcd As String
	
	Private _CTZID As String
	
	Private _PRODUCT_TYPE As System.Nullable(Of Integer)
	
	Private _SMALL_TYPE As System.Nullable(Of Integer)
	
	Private _pvncd As System.Nullable(Of Integer)
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _PLUS_OR_MINUS As String
	
	Private _drgtpcd As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TYPE_P As System.Nullable(Of Integer)
	
	Private _FK_COMMENT As System.Nullable(Of Integer)
	
	Private _SUM_DAY As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTART_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTART_DATEChanged()
    End Sub
    Partial Private Sub OnEND_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEND_DATEChanged()
    End Sub
    Partial Private Sub OnPERIOD_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPERIOD_COUNTChanged()
    End Sub
    Partial Private Sub OnTYPE_PERIODChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_PERIODChanged()
    End Sub
    Partial Private Sub OnEXPERT_TYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEXPERT_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnEXPERT_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEXPERT_COUNTChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnCTZIDChanging(value As String)
    End Sub
    Partial Private Sub OnCTZIDChanged()
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanged()
    End Sub
    Partial Private Sub OnSMALL_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSMALL_TYPEChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnPLUS_OR_MINUSChanging(value As String)
    End Sub
    Partial Private Sub OnPLUS_OR_MINUSChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTYPE_PChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_PChanged()
    End Sub
    Partial Private Sub OnFK_COMMENTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_COMMENTChanged()
    End Sub
    Partial Private Sub OnSUM_DAYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUM_DAYChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_START_DATE", DbType:="DateTime")>  _
	Public Property START_DATE() As System.Nullable(Of Date)
		Get
			Return Me._START_DATE
		End Get
		Set
			If (Me._START_DATE.Equals(value) = false) Then
				Me.OnSTART_DATEChanging(value)
				Me.SendPropertyChanging
				Me._START_DATE = value
				Me.SendPropertyChanged("START_DATE")
				Me.OnSTART_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_END_DATE", DbType:="DateTime")>  _
	Public Property END_DATE() As System.Nullable(Of Date)
		Get
			Return Me._END_DATE
		End Get
		Set
			If (Me._END_DATE.Equals(value) = false) Then
				Me.OnEND_DATEChanging(value)
				Me.SendPropertyChanging
				Me._END_DATE = value
				Me.SendPropertyChanged("END_DATE")
				Me.OnEND_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERIOD_COUNT", DbType:="Int")>  _
	Public Property PERIOD_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._PERIOD_COUNT
		End Get
		Set
			If (Me._PERIOD_COUNT.Equals(value) = false) Then
				Me.OnPERIOD_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._PERIOD_COUNT = value
				Me.SendPropertyChanged("PERIOD_COUNT")
				Me.OnPERIOD_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_PERIOD", DbType:="Int")>  _
	Public Property TYPE_PERIOD() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_PERIOD
		End Get
		Set
			If (Me._TYPE_PERIOD.Equals(value) = false) Then
				Me.OnTYPE_PERIODChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_PERIOD = value
				Me.SendPropertyChanged("TYPE_PERIOD")
				Me.OnTYPE_PERIODChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPERT_TYPE_ID", DbType:="Int")>  _
	Public Property EXPERT_TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._EXPERT_TYPE_ID
		End Get
		Set
			If (Me._EXPERT_TYPE_ID.Equals(value) = false) Then
				Me.OnEXPERT_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._EXPERT_TYPE_ID = value
				Me.SendPropertyChanged("EXPERT_TYPE_ID")
				Me.OnEXPERT_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPERT_COUNT", DbType:="Int")>  _
	Public Property EXPERT_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._EXPERT_COUNT
		End Get
		Set
			If (Me._EXPERT_COUNT.Equals(value) = false) Then
				Me.OnEXPERT_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._EXPERT_COUNT = value
				Me.SendPropertyChanged("EXPERT_COUNT")
				Me.OnEXPERT_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(MAX)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CTZID", DbType:="NVarChar(50)")>  _
	Public Property CTZID() As String
		Get
			Return Me._CTZID
		End Get
		Set
			If (String.Equals(Me._CTZID, value) = false) Then
				Me.OnCTZIDChanging(value)
				Me.SendPropertyChanging
				Me._CTZID = value
				Me.SendPropertyChanged("CTZID")
				Me.OnCTZIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_TYPE", DbType:="Int")>  _
	Public Property PRODUCT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PRODUCT_TYPE
		End Get
		Set
			If (Me._PRODUCT_TYPE.Equals(value) = false) Then
				Me.OnPRODUCT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_TYPE = value
				Me.SendPropertyChanged("PRODUCT_TYPE")
				Me.OnPRODUCT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_TYPE", DbType:="Int")>  _
	Public Property SMALL_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._SMALL_TYPE
		End Get
		Set
			If (Me._SMALL_TYPE.Equals(value) = false) Then
				Me.OnSMALL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_TYPE = value
				Me.SendPropertyChanged("SMALL_TYPE")
				Me.OnSMALL_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLUS_OR_MINUS", DbType:="NVarChar(MAX)")>  _
	Public Property PLUS_OR_MINUS() As String
		Get
			Return Me._PLUS_OR_MINUS
		End Get
		Set
			If (String.Equals(Me._PLUS_OR_MINUS, value) = false) Then
				Me.OnPLUS_OR_MINUSChanging(value)
				Me.SendPropertyChanging
				Me._PLUS_OR_MINUS = value
				Me.SendPropertyChanged("PLUS_OR_MINUS")
				Me.OnPLUS_OR_MINUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_P", DbType:="Int")>  _
	Public Property TYPE_P() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_P
		End Get
		Set
			If (Me._TYPE_P.Equals(value) = false) Then
				Me.OnTYPE_PChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_P = value
				Me.SendPropertyChanged("TYPE_P")
				Me.OnTYPE_PChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_COMMENT", DbType:="Int")>  _
	Public Property FK_COMMENT() As System.Nullable(Of Integer)
		Get
			Return Me._FK_COMMENT
		End Get
		Set
			If (Me._FK_COMMENT.Equals(value) = false) Then
				Me.OnFK_COMMENTChanging(value)
				Me.SendPropertyChanging
				Me._FK_COMMENT = value
				Me.SendPropertyChanged("FK_COMMENT")
				Me.OnFK_COMMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUM_DAY", DbType:="Int")>  _
	Public Property SUM_DAY() As System.Nullable(Of Integer)
		Get
			Return Me._SUM_DAY
		End Get
		Set
			If (Me._SUM_DAY.Equals(value) = false) Then
				Me.OnSUM_DAYChanging(value)
				Me.SendPropertyChanging
				Me._SUM_DAY = value
				Me.SendPropertyChanged("SUM_DAY")
				Me.OnSUM_DAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_LABEL")>  _
Partial Public Class DRRGT_LABEL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _LABEL_DETAIL As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnLABEL_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnLABEL_DETAILChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABEL_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property LABEL_DETAIL() As String
		Get
			Return Me._LABEL_DETAIL
		End Get
		Set
			If (String.Equals(Me._LABEL_DETAIL, value) = false) Then
				Me.OnLABEL_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._LABEL_DETAIL = value
				Me.SendPropertyChanged("LABEL_DETAIL")
				Me.OnLABEL_DETAILChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_LABEL")>  _
Partial Public Class DRRQT_LABEL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _LABEL_DETAIL As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnLABEL_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnLABEL_DETAILChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LABEL_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property LABEL_DETAIL() As String
		Get
			Return Me._LABEL_DETAIL
		End Get
		Set
			If (String.Equals(Me._LABEL_DETAIL, value) = false) Then
				Me.OnLABEL_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._LABEL_DETAIL = value
				Me.SendPropertyChanged("LABEL_DETAIL")
				Me.OnLABEL_DETAILChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_EDIT_INDEX")>  _
Partial Public Class DRRGT_EDIT_INDEX
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TABLE_NAME As String
	
	Private _COUNT_EDIT As System.Nullable(Of Integer)
	
	Private _FK_DRRGT_IDA As System.Nullable(Of Integer)
	
	Private _FILE_NAME As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTABLE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTABLE_NAMEChanged()
    End Sub
    Partial Private Sub OnCOUNT_EDITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNT_EDITChanged()
    End Sub
    Partial Private Sub OnFK_DRRGT_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_DRRGT_IDAChanged()
    End Sub
    Partial Private Sub OnFILE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFILE_NAMEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TABLE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TABLE_NAME() As String
		Get
			Return Me._TABLE_NAME
		End Get
		Set
			If (String.Equals(Me._TABLE_NAME, value) = false) Then
				Me.OnTABLE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TABLE_NAME = value
				Me.SendPropertyChanged("TABLE_NAME")
				Me.OnTABLE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNT_EDIT", DbType:="Int")>  _
	Public Property COUNT_EDIT() As System.Nullable(Of Integer)
		Get
			Return Me._COUNT_EDIT
		End Get
		Set
			If (Me._COUNT_EDIT.Equals(value) = false) Then
				Me.OnCOUNT_EDITChanging(value)
				Me.SendPropertyChanging
				Me._COUNT_EDIT = value
				Me.SendPropertyChanged("COUNT_EDIT")
				Me.OnCOUNT_EDITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_DRRGT_IDA", DbType:="Int")>  _
	Public Property FK_DRRGT_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_DRRGT_IDA
		End Get
		Set
			If (Me._FK_DRRGT_IDA.Equals(value) = false) Then
				Me.OnFK_DRRGT_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_DRRGT_IDA = value
				Me.SendPropertyChanged("FK_DRRGT_IDA")
				Me.OnFK_DRRGT_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FILE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FILE_NAME() As String
		Get
			Return Me._FILE_NAME
		End Get
		Set
			If (String.Equals(Me._FILE_NAME, value) = false) Then
				Me.OnFILE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FILE_NAME = value
				Me.SendPropertyChanged("FILE_NAME")
				Me.OnFILE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_EDIT_REQUEST_COLOR")>  _
Partial Public Class DRRGT_EDIT_REQUEST_COLOR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _COLOR1 As String
	
	Private _COLOR2 As String
	
	Private _COLOR3 As String
	
	Private _COLOR4 As String
	
	Private _COLOR_NAME1 As String
	
	Private _COLOR_NAME2 As String
	
	Private _COLOR_NAME3 As String
	
	Private _COLOR_NAME4 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnCOLOR1Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR1Changed()
    End Sub
    Partial Private Sub OnCOLOR2Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR2Changed()
    End Sub
    Partial Private Sub OnCOLOR3Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR3Changed()
    End Sub
    Partial Private Sub OnCOLOR4Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR4Changed()
    End Sub
    Partial Private Sub OnCOLOR_NAME1Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR_NAME1Changed()
    End Sub
    Partial Private Sub OnCOLOR_NAME2Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR_NAME2Changed()
    End Sub
    Partial Private Sub OnCOLOR_NAME3Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR_NAME3Changed()
    End Sub
    Partial Private Sub OnCOLOR_NAME4Changing(value As String)
    End Sub
    Partial Private Sub OnCOLOR_NAME4Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR1", DbType:="NVarChar(50)")>  _
	Public Property COLOR1() As String
		Get
			Return Me._COLOR1
		End Get
		Set
			If (String.Equals(Me._COLOR1, value) = false) Then
				Me.OnCOLOR1Changing(value)
				Me.SendPropertyChanging
				Me._COLOR1 = value
				Me.SendPropertyChanged("COLOR1")
				Me.OnCOLOR1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR2", DbType:="NVarChar(50)")>  _
	Public Property COLOR2() As String
		Get
			Return Me._COLOR2
		End Get
		Set
			If (String.Equals(Me._COLOR2, value) = false) Then
				Me.OnCOLOR2Changing(value)
				Me.SendPropertyChanging
				Me._COLOR2 = value
				Me.SendPropertyChanged("COLOR2")
				Me.OnCOLOR2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR3", DbType:="NVarChar(50)")>  _
	Public Property COLOR3() As String
		Get
			Return Me._COLOR3
		End Get
		Set
			If (String.Equals(Me._COLOR3, value) = false) Then
				Me.OnCOLOR3Changing(value)
				Me.SendPropertyChanging
				Me._COLOR3 = value
				Me.SendPropertyChanged("COLOR3")
				Me.OnCOLOR3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR4", DbType:="NVarChar(50)")>  _
	Public Property COLOR4() As String
		Get
			Return Me._COLOR4
		End Get
		Set
			If (String.Equals(Me._COLOR4, value) = false) Then
				Me.OnCOLOR4Changing(value)
				Me.SendPropertyChanging
				Me._COLOR4 = value
				Me.SendPropertyChanged("COLOR4")
				Me.OnCOLOR4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR_NAME1", DbType:="NVarChar(50)")>  _
	Public Property COLOR_NAME1() As String
		Get
			Return Me._COLOR_NAME1
		End Get
		Set
			If (String.Equals(Me._COLOR_NAME1, value) = false) Then
				Me.OnCOLOR_NAME1Changing(value)
				Me.SendPropertyChanging
				Me._COLOR_NAME1 = value
				Me.SendPropertyChanged("COLOR_NAME1")
				Me.OnCOLOR_NAME1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR_NAME2", DbType:="NVarChar(50)")>  _
	Public Property COLOR_NAME2() As String
		Get
			Return Me._COLOR_NAME2
		End Get
		Set
			If (String.Equals(Me._COLOR_NAME2, value) = false) Then
				Me.OnCOLOR_NAME2Changing(value)
				Me.SendPropertyChanging
				Me._COLOR_NAME2 = value
				Me.SendPropertyChanged("COLOR_NAME2")
				Me.OnCOLOR_NAME2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR_NAME3", DbType:="NVarChar(50)")>  _
	Public Property COLOR_NAME3() As String
		Get
			Return Me._COLOR_NAME3
		End Get
		Set
			If (String.Equals(Me._COLOR_NAME3, value) = false) Then
				Me.OnCOLOR_NAME3Changing(value)
				Me.SendPropertyChanging
				Me._COLOR_NAME3 = value
				Me.SendPropertyChanged("COLOR_NAME3")
				Me.OnCOLOR_NAME3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COLOR_NAME4", DbType:="NVarChar(50)")>  _
	Public Property COLOR_NAME4() As String
		Get
			Return Me._COLOR_NAME4
		End Get
		Set
			If (String.Equals(Me._COLOR_NAME4, value) = false) Then
				Me.OnCOLOR_NAME4Changing(value)
				Me.SendPropertyChanging
				Me._COLOR_NAME4 = value
				Me.SendPropertyChanged("COLOR_NAME4")
				Me.OnCOLOR_NAME4Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_PROJECT_DRUG_LIST")>  _
Partial Public Class DRUG_PROJECT_DRUG_LIST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PID_IDA As System.Nullable(Of Integer)
	
	Private _PJ_IDA As System.Nullable(Of Integer)
	
	Private _tradenm As String
	
	Private _commonnm As String
	
	Private _othernm As String
	
	Private _drug_code As String
	
	Private _drug_format As String
	
	Private _strengh As String
	
	Private _Washout_Period As String
	
	Private _typecd As System.Nullable(Of Integer)
	
	Private _typenm As String
	
	Private _type_descript As String
	
	Private _sunit As System.Nullable(Of Double)
	
	Private _sunitnm As String
	
	Private _sunitcd As System.Nullable(Of Integer)
	
	Private _munit As System.Nullable(Of Double)
	
	Private _munitnm As String
	
	Private _munitcd As System.Nullable(Of Integer)
	
	Private _bunit As System.Nullable(Of Double)
	
	Private _bunitnm As String
	
	Private _bunitcd As System.Nullable(Of Integer)
	
	Private _packnm As String
	
	Private _pack_barcode As String
	
	Private _imp_amount As System.Nullable(Of Integer)
	
	Private _imp_sum As System.Nullable(Of Double)
	
	Private _DATE_ADD As System.Nullable(Of Date)
	
	Private _order_id As System.Nullable(Of Integer)
	
	Private _SUM As System.Nullable(Of Integer)
	
	Private _nym1_imp As System.Nullable(Of Integer)
	
	Private _quota_left As System.Nullable(Of Integer)
	
	Private _IM_DETAIL As String
	
	Private _is_used As System.Nullable(Of Boolean)
	
	Private _is_check As System.Nullable(Of Boolean)
	
	Private _is_lastest As System.Nullable(Of Boolean)
	
	Private _modified_from As System.Nullable(Of Integer)
	
	Private _modified_times As System.Nullable(Of Integer)
	
	Private _ciziten_submit As String
	
	Private _citizen_autho As String
	
	Private _create_date As System.Nullable(Of Date)
	
	Private _RCVNO As String
	
	Private _RCVNO_DISPLAY As String
	
	Private _RCVDATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPID_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPID_IDAChanged()
    End Sub
    Partial Private Sub OnPJ_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPJ_IDAChanged()
    End Sub
    Partial Private Sub OntradenmChanging(value As String)
    End Sub
    Partial Private Sub OntradenmChanged()
    End Sub
    Partial Private Sub OncommonnmChanging(value As String)
    End Sub
    Partial Private Sub OncommonnmChanged()
    End Sub
    Partial Private Sub OnothernmChanging(value As String)
    End Sub
    Partial Private Sub OnothernmChanged()
    End Sub
    Partial Private Sub Ondrug_codeChanging(value As String)
    End Sub
    Partial Private Sub Ondrug_codeChanged()
    End Sub
    Partial Private Sub Ondrug_formatChanging(value As String)
    End Sub
    Partial Private Sub Ondrug_formatChanged()
    End Sub
    Partial Private Sub OnstrenghChanging(value As String)
    End Sub
    Partial Private Sub OnstrenghChanged()
    End Sub
    Partial Private Sub OnWashout_PeriodChanging(value As String)
    End Sub
    Partial Private Sub OnWashout_PeriodChanged()
    End Sub
    Partial Private Sub OntypecdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntypecdChanged()
    End Sub
    Partial Private Sub OntypenmChanging(value As String)
    End Sub
    Partial Private Sub OntypenmChanged()
    End Sub
    Partial Private Sub Ontype_descriptChanging(value As String)
    End Sub
    Partial Private Sub Ontype_descriptChanged()
    End Sub
    Partial Private Sub OnsunitChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnsunitChanged()
    End Sub
    Partial Private Sub OnsunitnmChanging(value As String)
    End Sub
    Partial Private Sub OnsunitnmChanged()
    End Sub
    Partial Private Sub OnsunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsunitcdChanged()
    End Sub
    Partial Private Sub OnmunitChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnmunitChanged()
    End Sub
    Partial Private Sub OnmunitnmChanging(value As String)
    End Sub
    Partial Private Sub OnmunitnmChanged()
    End Sub
    Partial Private Sub OnmunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnmunitcdChanged()
    End Sub
    Partial Private Sub OnbunitChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnbunitChanged()
    End Sub
    Partial Private Sub OnbunitnmChanging(value As String)
    End Sub
    Partial Private Sub OnbunitnmChanged()
    End Sub
    Partial Private Sub OnbunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbunitcdChanged()
    End Sub
    Partial Private Sub OnpacknmChanging(value As String)
    End Sub
    Partial Private Sub OnpacknmChanged()
    End Sub
    Partial Private Sub Onpack_barcodeChanging(value As String)
    End Sub
    Partial Private Sub Onpack_barcodeChanged()
    End Sub
    Partial Private Sub Onimp_amountChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onimp_amountChanged()
    End Sub
    Partial Private Sub Onimp_sumChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Onimp_sumChanged()
    End Sub
    Partial Private Sub OnDATE_ADDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_ADDChanged()
    End Sub
    Partial Private Sub Onorder_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onorder_idChanged()
    End Sub
    Partial Private Sub OnSUMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUMChanged()
    End Sub
    Partial Private Sub Onnym1_impChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onnym1_impChanged()
    End Sub
    Partial Private Sub Onquota_leftChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onquota_leftChanged()
    End Sub
    Partial Private Sub OnIM_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnIM_DETAILChanged()
    End Sub
    Partial Private Sub Onis_usedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onis_usedChanged()
    End Sub
    Partial Private Sub Onis_checkChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onis_checkChanged()
    End Sub
    Partial Private Sub Onis_lastestChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onis_lastestChanged()
    End Sub
    Partial Private Sub Onmodified_fromChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onmodified_fromChanged()
    End Sub
    Partial Private Sub Onmodified_timesChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onmodified_timesChanged()
    End Sub
    Partial Private Sub Onciziten_submitChanging(value As String)
    End Sub
    Partial Private Sub Onciziten_submitChanged()
    End Sub
    Partial Private Sub Oncitizen_authoChanging(value As String)
    End Sub
    Partial Private Sub Oncitizen_authoChanged()
    End Sub
    Partial Private Sub Oncreate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreate_dateChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnRCVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCVDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PID_IDA", DbType:="Int")>  _
	Public Property PID_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._PID_IDA
		End Get
		Set
			If (Me._PID_IDA.Equals(value) = false) Then
				Me.OnPID_IDAChanging(value)
				Me.SendPropertyChanging
				Me._PID_IDA = value
				Me.SendPropertyChanged("PID_IDA")
				Me.OnPID_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PJ_IDA", DbType:="Int")>  _
	Public Property PJ_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._PJ_IDA
		End Get
		Set
			If (Me._PJ_IDA.Equals(value) = false) Then
				Me.OnPJ_IDAChanging(value)
				Me.SendPropertyChanging
				Me._PJ_IDA = value
				Me.SendPropertyChanged("PJ_IDA")
				Me.OnPJ_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tradenm", DbType:="NVarChar(MAX)")>  _
	Public Property tradenm() As String
		Get
			Return Me._tradenm
		End Get
		Set
			If (String.Equals(Me._tradenm, value) = false) Then
				Me.OntradenmChanging(value)
				Me.SendPropertyChanging
				Me._tradenm = value
				Me.SendPropertyChanged("tradenm")
				Me.OntradenmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_commonnm", DbType:="NVarChar(MAX)")>  _
	Public Property commonnm() As String
		Get
			Return Me._commonnm
		End Get
		Set
			If (String.Equals(Me._commonnm, value) = false) Then
				Me.OncommonnmChanging(value)
				Me.SendPropertyChanging
				Me._commonnm = value
				Me.SendPropertyChanged("commonnm")
				Me.OncommonnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_othernm", DbType:="NVarChar(MAX)")>  _
	Public Property othernm() As String
		Get
			Return Me._othernm
		End Get
		Set
			If (String.Equals(Me._othernm, value) = false) Then
				Me.OnothernmChanging(value)
				Me.SendPropertyChanging
				Me._othernm = value
				Me.SendPropertyChanged("othernm")
				Me.OnothernmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drug_code", DbType:="NVarChar(MAX)")>  _
	Public Property drug_code() As String
		Get
			Return Me._drug_code
		End Get
		Set
			If (String.Equals(Me._drug_code, value) = false) Then
				Me.Ondrug_codeChanging(value)
				Me.SendPropertyChanging
				Me._drug_code = value
				Me.SendPropertyChanged("drug_code")
				Me.Ondrug_codeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drug_format", DbType:="NVarChar(MAX)")>  _
	Public Property drug_format() As String
		Get
			Return Me._drug_format
		End Get
		Set
			If (String.Equals(Me._drug_format, value) = false) Then
				Me.Ondrug_formatChanging(value)
				Me.SendPropertyChanging
				Me._drug_format = value
				Me.SendPropertyChanged("drug_format")
				Me.Ondrug_formatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strengh", DbType:="NVarChar(MAX)")>  _
	Public Property strengh() As String
		Get
			Return Me._strengh
		End Get
		Set
			If (String.Equals(Me._strengh, value) = false) Then
				Me.OnstrenghChanging(value)
				Me.SendPropertyChanging
				Me._strengh = value
				Me.SendPropertyChanged("strengh")
				Me.OnstrenghChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Washout_Period", DbType:="NVarChar(MAX)")>  _
	Public Property Washout_Period() As String
		Get
			Return Me._Washout_Period
		End Get
		Set
			If (String.Equals(Me._Washout_Period, value) = false) Then
				Me.OnWashout_PeriodChanging(value)
				Me.SendPropertyChanging
				Me._Washout_Period = value
				Me.SendPropertyChanged("Washout_Period")
				Me.OnWashout_PeriodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_typecd", DbType:="Int")>  _
	Public Property typecd() As System.Nullable(Of Integer)
		Get
			Return Me._typecd
		End Get
		Set
			If (Me._typecd.Equals(value) = false) Then
				Me.OntypecdChanging(value)
				Me.SendPropertyChanging
				Me._typecd = value
				Me.SendPropertyChanged("typecd")
				Me.OntypecdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_typenm", DbType:="NVarChar(50)")>  _
	Public Property typenm() As String
		Get
			Return Me._typenm
		End Get
		Set
			If (String.Equals(Me._typenm, value) = false) Then
				Me.OntypenmChanging(value)
				Me.SendPropertyChanging
				Me._typenm = value
				Me.SendPropertyChanged("typenm")
				Me.OntypenmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type_descript", DbType:="NVarChar(MAX)")>  _
	Public Property type_descript() As String
		Get
			Return Me._type_descript
		End Get
		Set
			If (String.Equals(Me._type_descript, value) = false) Then
				Me.Ontype_descriptChanging(value)
				Me.SendPropertyChanging
				Me._type_descript = value
				Me.SendPropertyChanged("type_descript")
				Me.Ontype_descriptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunit", DbType:="Float")>  _
	Public Property sunit() As System.Nullable(Of Double)
		Get
			Return Me._sunit
		End Get
		Set
			If (Me._sunit.Equals(value) = false) Then
				Me.OnsunitChanging(value)
				Me.SendPropertyChanging
				Me._sunit = value
				Me.SendPropertyChanged("sunit")
				Me.OnsunitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitnm", DbType:="NVarChar(MAX)")>  _
	Public Property sunitnm() As String
		Get
			Return Me._sunitnm
		End Get
		Set
			If (String.Equals(Me._sunitnm, value) = false) Then
				Me.OnsunitnmChanging(value)
				Me.SendPropertyChanging
				Me._sunitnm = value
				Me.SendPropertyChanged("sunitnm")
				Me.OnsunitnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitcd", DbType:="Int")>  _
	Public Property sunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sunitcd
		End Get
		Set
			If (Me._sunitcd.Equals(value) = false) Then
				Me.OnsunitcdChanging(value)
				Me.SendPropertyChanging
				Me._sunitcd = value
				Me.SendPropertyChanged("sunitcd")
				Me.OnsunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_munit", DbType:="Float")>  _
	Public Property munit() As System.Nullable(Of Double)
		Get
			Return Me._munit
		End Get
		Set
			If (Me._munit.Equals(value) = false) Then
				Me.OnmunitChanging(value)
				Me.SendPropertyChanging
				Me._munit = value
				Me.SendPropertyChanged("munit")
				Me.OnmunitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_munitnm", DbType:="NVarChar(MAX)")>  _
	Public Property munitnm() As String
		Get
			Return Me._munitnm
		End Get
		Set
			If (String.Equals(Me._munitnm, value) = false) Then
				Me.OnmunitnmChanging(value)
				Me.SendPropertyChanging
				Me._munitnm = value
				Me.SendPropertyChanged("munitnm")
				Me.OnmunitnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_munitcd", DbType:="Int")>  _
	Public Property munitcd() As System.Nullable(Of Integer)
		Get
			Return Me._munitcd
		End Get
		Set
			If (Me._munitcd.Equals(value) = false) Then
				Me.OnmunitcdChanging(value)
				Me.SendPropertyChanging
				Me._munitcd = value
				Me.SendPropertyChanged("munitcd")
				Me.OnmunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bunit", DbType:="Float")>  _
	Public Property bunit() As System.Nullable(Of Double)
		Get
			Return Me._bunit
		End Get
		Set
			If (Me._bunit.Equals(value) = false) Then
				Me.OnbunitChanging(value)
				Me.SendPropertyChanging
				Me._bunit = value
				Me.SendPropertyChanged("bunit")
				Me.OnbunitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bunitnm", DbType:="NVarChar(MAX)")>  _
	Public Property bunitnm() As String
		Get
			Return Me._bunitnm
		End Get
		Set
			If (String.Equals(Me._bunitnm, value) = false) Then
				Me.OnbunitnmChanging(value)
				Me.SendPropertyChanging
				Me._bunitnm = value
				Me.SendPropertyChanged("bunitnm")
				Me.OnbunitnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bunitcd", DbType:="Int")>  _
	Public Property bunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._bunitcd
		End Get
		Set
			If (Me._bunitcd.Equals(value) = false) Then
				Me.OnbunitcdChanging(value)
				Me.SendPropertyChanging
				Me._bunitcd = value
				Me.SendPropertyChanged("bunitcd")
				Me.OnbunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_packnm", DbType:="NVarChar(MAX)")>  _
	Public Property packnm() As String
		Get
			Return Me._packnm
		End Get
		Set
			If (String.Equals(Me._packnm, value) = false) Then
				Me.OnpacknmChanging(value)
				Me.SendPropertyChanging
				Me._packnm = value
				Me.SendPropertyChanged("packnm")
				Me.OnpacknmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pack_barcode", DbType:="NVarChar(MAX)")>  _
	Public Property pack_barcode() As String
		Get
			Return Me._pack_barcode
		End Get
		Set
			If (String.Equals(Me._pack_barcode, value) = false) Then
				Me.Onpack_barcodeChanging(value)
				Me.SendPropertyChanging
				Me._pack_barcode = value
				Me.SendPropertyChanged("pack_barcode")
				Me.Onpack_barcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_imp_amount", DbType:="Int")>  _
	Public Property imp_amount() As System.Nullable(Of Integer)
		Get
			Return Me._imp_amount
		End Get
		Set
			If (Me._imp_amount.Equals(value) = false) Then
				Me.Onimp_amountChanging(value)
				Me.SendPropertyChanging
				Me._imp_amount = value
				Me.SendPropertyChanged("imp_amount")
				Me.Onimp_amountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_imp_sum", DbType:="Float")>  _
	Public Property imp_sum() As System.Nullable(Of Double)
		Get
			Return Me._imp_sum
		End Get
		Set
			If (Me._imp_sum.Equals(value) = false) Then
				Me.Onimp_sumChanging(value)
				Me.SendPropertyChanging
				Me._imp_sum = value
				Me.SendPropertyChanged("imp_sum")
				Me.Onimp_sumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ADD", DbType:="Date")>  _
	Public Property DATE_ADD() As System.Nullable(Of Date)
		Get
			Return Me._DATE_ADD
		End Get
		Set
			If (Me._DATE_ADD.Equals(value) = false) Then
				Me.OnDATE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ADD = value
				Me.SendPropertyChanged("DATE_ADD")
				Me.OnDATE_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_order_id", DbType:="Int")>  _
	Public Property order_id() As System.Nullable(Of Integer)
		Get
			Return Me._order_id
		End Get
		Set
			If (Me._order_id.Equals(value) = false) Then
				Me.Onorder_idChanging(value)
				Me.SendPropertyChanging
				Me._order_id = value
				Me.SendPropertyChanged("order_id")
				Me.Onorder_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUM", DbType:="Int")>  _
	Public Property SUM() As System.Nullable(Of Integer)
		Get
			Return Me._SUM
		End Get
		Set
			If (Me._SUM.Equals(value) = false) Then
				Me.OnSUMChanging(value)
				Me.SendPropertyChanging
				Me._SUM = value
				Me.SendPropertyChanged("SUM")
				Me.OnSUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nym1_imp", DbType:="Int")>  _
	Public Property nym1_imp() As System.Nullable(Of Integer)
		Get
			Return Me._nym1_imp
		End Get
		Set
			If (Me._nym1_imp.Equals(value) = false) Then
				Me.Onnym1_impChanging(value)
				Me.SendPropertyChanging
				Me._nym1_imp = value
				Me.SendPropertyChanged("nym1_imp")
				Me.Onnym1_impChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quota_left", DbType:="Int")>  _
	Public Property quota_left() As System.Nullable(Of Integer)
		Get
			Return Me._quota_left
		End Get
		Set
			If (Me._quota_left.Equals(value) = false) Then
				Me.Onquota_leftChanging(value)
				Me.SendPropertyChanging
				Me._quota_left = value
				Me.SendPropertyChanged("quota_left")
				Me.Onquota_leftChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IM_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property IM_DETAIL() As String
		Get
			Return Me._IM_DETAIL
		End Get
		Set
			If (String.Equals(Me._IM_DETAIL, value) = false) Then
				Me.OnIM_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._IM_DETAIL = value
				Me.SendPropertyChanged("IM_DETAIL")
				Me.OnIM_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_is_used", DbType:="Bit")>  _
	Public Property is_used() As System.Nullable(Of Boolean)
		Get
			Return Me._is_used
		End Get
		Set
			If (Me._is_used.Equals(value) = false) Then
				Me.Onis_usedChanging(value)
				Me.SendPropertyChanging
				Me._is_used = value
				Me.SendPropertyChanged("is_used")
				Me.Onis_usedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_is_check", DbType:="Bit")>  _
	Public Property is_check() As System.Nullable(Of Boolean)
		Get
			Return Me._is_check
		End Get
		Set
			If (Me._is_check.Equals(value) = false) Then
				Me.Onis_checkChanging(value)
				Me.SendPropertyChanging
				Me._is_check = value
				Me.SendPropertyChanged("is_check")
				Me.Onis_checkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_is_lastest", DbType:="Bit")>  _
	Public Property is_lastest() As System.Nullable(Of Boolean)
		Get
			Return Me._is_lastest
		End Get
		Set
			If (Me._is_lastest.Equals(value) = false) Then
				Me.Onis_lastestChanging(value)
				Me.SendPropertyChanging
				Me._is_lastest = value
				Me.SendPropertyChanged("is_lastest")
				Me.Onis_lastestChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modified_from", DbType:="Int")>  _
	Public Property modified_from() As System.Nullable(Of Integer)
		Get
			Return Me._modified_from
		End Get
		Set
			If (Me._modified_from.Equals(value) = false) Then
				Me.Onmodified_fromChanging(value)
				Me.SendPropertyChanging
				Me._modified_from = value
				Me.SendPropertyChanged("modified_from")
				Me.Onmodified_fromChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modified_times", DbType:="Int")>  _
	Public Property modified_times() As System.Nullable(Of Integer)
		Get
			Return Me._modified_times
		End Get
		Set
			If (Me._modified_times.Equals(value) = false) Then
				Me.Onmodified_timesChanging(value)
				Me.SendPropertyChanging
				Me._modified_times = value
				Me.SendPropertyChanged("modified_times")
				Me.Onmodified_timesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ciziten_submit", DbType:="NVarChar(MAX)")>  _
	Public Property ciziten_submit() As String
		Get
			Return Me._ciziten_submit
		End Get
		Set
			If (String.Equals(Me._ciziten_submit, value) = false) Then
				Me.Onciziten_submitChanging(value)
				Me.SendPropertyChanging
				Me._ciziten_submit = value
				Me.SendPropertyChanged("ciziten_submit")
				Me.Onciziten_submitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_citizen_autho", DbType:="NVarChar(MAX)")>  _
	Public Property citizen_autho() As String
		Get
			Return Me._citizen_autho
		End Get
		Set
			If (String.Equals(Me._citizen_autho, value) = false) Then
				Me.Oncitizen_authoChanging(value)
				Me.SendPropertyChanging
				Me._citizen_autho = value
				Me.SendPropertyChanged("citizen_autho")
				Me.Oncitizen_authoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_create_date", DbType:="DateTime")>  _
	Public Property create_date() As System.Nullable(Of Date)
		Get
			Return Me._create_date
		End Get
		Set
			If (Me._create_date.Equals(value) = false) Then
				Me.Oncreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._create_date = value
				Me.SendPropertyChanged("create_date")
				Me.Oncreate_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO() As String
		Get
			Return Me._RCVNO
		End Get
		Set
			If (String.Equals(Me._RCVNO, value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_DISPLAY() As String
		Get
			Return Me._RCVNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVNO_DISPLAY, value) = false) Then
				Me.OnRCVNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_DISPLAY = value
				Me.SendPropertyChanged("RCVNO_DISPLAY")
				Me.OnRCVNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE", DbType:="DateTime")>  _
	Public Property RCVDATE() As System.Nullable(Of Date)
		Get
			Return Me._RCVDATE
		End Get
		Set
			If (Me._RCVDATE.Equals(value) = false) Then
				Me.OnRCVDATEChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE = value
				Me.SendPropertyChanged("RCVDATE")
				Me.OnRCVDATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.XML_NAME")>  _
Partial Public Class XML_NAME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _PATH As String
	
	Private _XML_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnPATHChanging(value As String)
    End Sub
    Partial Private Sub OnPATHChanged()
    End Sub
    Partial Private Sub OnXML_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnXML_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PATH", DbType:="NVarChar(MAX)")>  _
	Public Property PATH() As String
		Get
			Return Me._PATH
		End Get
		Set
			If (String.Equals(Me._PATH, value) = false) Then
				Me.OnPATHChanging(value)
				Me.SendPropertyChanging
				Me._PATH = value
				Me.SendPropertyChanged("PATH")
				Me.OnPATHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property XML_NAME() As String
		Get
			Return Me._XML_NAME
		End Get
		Set
			If (String.Equals(Me._XML_NAME, value) = false) Then
				Me.OnXML_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._XML_NAME = value
				Me.SendPropertyChanged("XML_NAME")
				Me.OnXML_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_EDIT_REQUEST_CAS")>  _
Partial Public Class DRRGT_EDIT_REQUEST_CA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As String
	
	Private _ROWS As String
	
	Private _IOWA As String
	
	Private _QTY As String
	
	Private _SUNITCD As String
	
	Private _EQTO_IOWA As String
	
	Private _EQTO_QTY As String
	
	Private _EQTO_SUNITCD As String
	
	Private _BASE_FORM As String
	
	Private _AORI As String
	
	Private _FK_SET As System.Nullable(Of Integer)
	
	Private _CAS_TYPE As System.Nullable(Of Integer)
	
	Private _REMARK As String
	
	Private _sbioqty As System.Nullable(Of Decimal)
	
	Private _sbiosqno As System.Nullable(Of Decimal)
	
	Private _sbiounitcd As System.Nullable(Of Integer)
	
	Private _ebioqty As System.Nullable(Of Decimal)
	
	Private _ebiosqno As System.Nullable(Of Decimal)
	
	Private _ebiounitcd As System.Nullable(Of Integer)
	
	Private _mltplr As System.Nullable(Of Integer)
	
	Private _REF As String
	
	Private _IOWANM As String
	
	Private _IOWA_IDA As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnROWSChanging(value As String)
    End Sub
    Partial Private Sub OnROWSChanged()
    End Sub
    Partial Private Sub OnIOWAChanging(value As String)
    End Sub
    Partial Private Sub OnIOWAChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As String)
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnSUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnSUNITCDChanged()
    End Sub
    Partial Private Sub OnEQTO_IOWAChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_IOWAChanged()
    End Sub
    Partial Private Sub OnEQTO_QTYChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_QTYChanged()
    End Sub
    Partial Private Sub OnEQTO_SUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_SUNITCDChanged()
    End Sub
    Partial Private Sub OnBASE_FORMChanging(value As String)
    End Sub
    Partial Private Sub OnBASE_FORMChanged()
    End Sub
    Partial Private Sub OnAORIChanging(value As String)
    End Sub
    Partial Private Sub OnAORIChanged()
    End Sub
    Partial Private Sub OnFK_SETChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_SETChanged()
    End Sub
    Partial Private Sub OnCAS_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCAS_TYPEChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnsbioqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnsbioqtyChanged()
    End Sub
    Partial Private Sub OnsbiosqnoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnsbiosqnoChanged()
    End Sub
    Partial Private Sub OnsbiounitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsbiounitcdChanged()
    End Sub
    Partial Private Sub OnebioqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnebioqtyChanged()
    End Sub
    Partial Private Sub OnebiosqnoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnebiosqnoChanged()
    End Sub
    Partial Private Sub OnebiounitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnebiounitcdChanged()
    End Sub
    Partial Private Sub OnmltplrChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnmltplrChanged()
    End Sub
    Partial Private Sub OnREFChanging(value As String)
    End Sub
    Partial Private Sub OnREFChanged()
    End Sub
    Partial Private Sub OnIOWANMChanging(value As String)
    End Sub
    Partial Private Sub OnIOWANMChanged()
    End Sub
    Partial Private Sub OnIOWA_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnIOWA_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROWS", DbType:="NVarChar(MAX)")>  _
	Public Property ROWS() As String
		Get
			Return Me._ROWS
		End Get
		Set
			If (String.Equals(Me._ROWS, value) = false) Then
				Me.OnROWSChanging(value)
				Me.SendPropertyChanging
				Me._ROWS = value
				Me.SendPropertyChanged("ROWS")
				Me.OnROWSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property IOWA() As String
		Get
			Return Me._IOWA
		End Get
		Set
			If (String.Equals(Me._IOWA, value) = false) Then
				Me.OnIOWAChanging(value)
				Me.SendPropertyChanging
				Me._IOWA = value
				Me.SendPropertyChanged("IOWA")
				Me.OnIOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property QTY() As String
		Get
			Return Me._QTY
		End Get
		Set
			If (String.Equals(Me._QTY, value) = false) Then
				Me.OnQTYChanging(value)
				Me.SendPropertyChanging
				Me._QTY = value
				Me.SendPropertyChanged("QTY")
				Me.OnQTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property SUNITCD() As String
		Get
			Return Me._SUNITCD
		End Get
		Set
			If (String.Equals(Me._SUNITCD, value) = false) Then
				Me.OnSUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._SUNITCD = value
				Me.SendPropertyChanged("SUNITCD")
				Me.OnSUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_IOWA() As String
		Get
			Return Me._EQTO_IOWA
		End Get
		Set
			If (String.Equals(Me._EQTO_IOWA, value) = false) Then
				Me.OnEQTO_IOWAChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_IOWA = value
				Me.SendPropertyChanged("EQTO_IOWA")
				Me.OnEQTO_IOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_QTY() As String
		Get
			Return Me._EQTO_QTY
		End Get
		Set
			If (String.Equals(Me._EQTO_QTY, value) = false) Then
				Me.OnEQTO_QTYChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_QTY = value
				Me.SendPropertyChanged("EQTO_QTY")
				Me.OnEQTO_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_SUNITCD() As String
		Get
			Return Me._EQTO_SUNITCD
		End Get
		Set
			If (String.Equals(Me._EQTO_SUNITCD, value) = false) Then
				Me.OnEQTO_SUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_SUNITCD = value
				Me.SendPropertyChanged("EQTO_SUNITCD")
				Me.OnEQTO_SUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASE_FORM", DbType:="NVarChar(MAX)")>  _
	Public Property BASE_FORM() As String
		Get
			Return Me._BASE_FORM
		End Get
		Set
			If (String.Equals(Me._BASE_FORM, value) = false) Then
				Me.OnBASE_FORMChanging(value)
				Me.SendPropertyChanging
				Me._BASE_FORM = value
				Me.SendPropertyChanged("BASE_FORM")
				Me.OnBASE_FORMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AORI", DbType:="NVarChar(50)")>  _
	Public Property AORI() As String
		Get
			Return Me._AORI
		End Get
		Set
			If (String.Equals(Me._AORI, value) = false) Then
				Me.OnAORIChanging(value)
				Me.SendPropertyChanging
				Me._AORI = value
				Me.SendPropertyChanged("AORI")
				Me.OnAORIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SET", DbType:="Int")>  _
	Public Property FK_SET() As System.Nullable(Of Integer)
		Get
			Return Me._FK_SET
		End Get
		Set
			If (Me._FK_SET.Equals(value) = false) Then
				Me.OnFK_SETChanging(value)
				Me.SendPropertyChanging
				Me._FK_SET = value
				Me.SendPropertyChanged("FK_SET")
				Me.OnFK_SETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAS_TYPE", DbType:="Int")>  _
	Public Property CAS_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._CAS_TYPE
		End Get
		Set
			If (Me._CAS_TYPE.Equals(value) = false) Then
				Me.OnCAS_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CAS_TYPE = value
				Me.SendPropertyChanged("CAS_TYPE")
				Me.OnCAS_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbioqty", DbType:="Decimal(14,8)")>  _
	Public Property sbioqty() As System.Nullable(Of Decimal)
		Get
			Return Me._sbioqty
		End Get
		Set
			If (Me._sbioqty.Equals(value) = false) Then
				Me.OnsbioqtyChanging(value)
				Me.SendPropertyChanging
				Me._sbioqty = value
				Me.SendPropertyChanged("sbioqty")
				Me.OnsbioqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbiosqno", DbType:="Decimal(14,8)")>  _
	Public Property sbiosqno() As System.Nullable(Of Decimal)
		Get
			Return Me._sbiosqno
		End Get
		Set
			If (Me._sbiosqno.Equals(value) = false) Then
				Me.OnsbiosqnoChanging(value)
				Me.SendPropertyChanging
				Me._sbiosqno = value
				Me.SendPropertyChanged("sbiosqno")
				Me.OnsbiosqnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbiounitcd", DbType:="Int")>  _
	Public Property sbiounitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sbiounitcd
		End Get
		Set
			If (Me._sbiounitcd.Equals(value) = false) Then
				Me.OnsbiounitcdChanging(value)
				Me.SendPropertyChanging
				Me._sbiounitcd = value
				Me.SendPropertyChanged("sbiounitcd")
				Me.OnsbiounitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ebioqty", DbType:="Decimal(14,8)")>  _
	Public Property ebioqty() As System.Nullable(Of Decimal)
		Get
			Return Me._ebioqty
		End Get
		Set
			If (Me._ebioqty.Equals(value) = false) Then
				Me.OnebioqtyChanging(value)
				Me.SendPropertyChanging
				Me._ebioqty = value
				Me.SendPropertyChanged("ebioqty")
				Me.OnebioqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ebiosqno", DbType:="Decimal(14,8)")>  _
	Public Property ebiosqno() As System.Nullable(Of Decimal)
		Get
			Return Me._ebiosqno
		End Get
		Set
			If (Me._ebiosqno.Equals(value) = false) Then
				Me.OnebiosqnoChanging(value)
				Me.SendPropertyChanging
				Me._ebiosqno = value
				Me.SendPropertyChanged("ebiosqno")
				Me.OnebiosqnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ebiounitcd", DbType:="Int")>  _
	Public Property ebiounitcd() As System.Nullable(Of Integer)
		Get
			Return Me._ebiounitcd
		End Get
		Set
			If (Me._ebiounitcd.Equals(value) = false) Then
				Me.OnebiounitcdChanging(value)
				Me.SendPropertyChanging
				Me._ebiounitcd = value
				Me.SendPropertyChanged("ebiounitcd")
				Me.OnebiounitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mltplr", DbType:="Int")>  _
	Public Property mltplr() As System.Nullable(Of Integer)
		Get
			Return Me._mltplr
		End Get
		Set
			If (Me._mltplr.Equals(value) = false) Then
				Me.OnmltplrChanging(value)
				Me.SendPropertyChanging
				Me._mltplr = value
				Me.SendPropertyChanged("mltplr")
				Me.OnmltplrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF", DbType:="NVarChar(MAX)")>  _
	Public Property REF() As String
		Get
			Return Me._REF
		End Get
		Set
			If (String.Equals(Me._REF, value) = false) Then
				Me.OnREFChanging(value)
				Me.SendPropertyChanging
				Me._REF = value
				Me.SendPropertyChanged("REF")
				Me.OnREFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWANM", DbType:="NVarChar(MAX)")>  _
	Public Property IOWANM() As String
		Get
			Return Me._IOWANM
		End Get
		Set
			If (String.Equals(Me._IOWANM, value) = false) Then
				Me.OnIOWANMChanging(value)
				Me.SendPropertyChanging
				Me._IOWANM = value
				Me.SendPropertyChanged("IOWANM")
				Me.OnIOWANMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWA_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property IOWA_IDA() As String
		Get
			Return Me._IOWA_IDA
		End Get
		Set
			If (String.Equals(Me._IOWA_IDA, value) = false) Then
				Me.OnIOWA_IDAChanging(value)
				Me.SendPropertyChanging
				Me._IOWA_IDA = value
				Me.SendPropertyChanged("IOWA_IDA")
				Me.OnIOWA_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_APPOINTMENT")>  _
Partial Public Class DRRGT_APPOINTMENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TYPE_REQUESTS_ID As String
	
	Private _APPOINT_DATE As System.Nullable(Of Date)
	
	Private _APPOINT_DAY As System.Nullable(Of Integer)
	
	Private _REQUEST_DATE As System.Nullable(Of Date)
	
	Private _CITIZEN_AUTHORIZE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_IDChanged()
    End Sub
    Partial Private Sub OnAPPOINT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAPPOINT_DATEChanged()
    End Sub
    Partial Private Sub OnAPPOINT_DAYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAPPOINT_DAYChanged()
    End Sub
    Partial Private Sub OnREQUEST_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUEST_DATEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_REQUESTS_ID", DbType:="NVarChar(50)")>  _
	Public Property TYPE_REQUESTS_ID() As String
		Get
			Return Me._TYPE_REQUESTS_ID
		End Get
		Set
			If (String.Equals(Me._TYPE_REQUESTS_ID, value) = false) Then
				Me.OnTYPE_REQUESTS_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_REQUESTS_ID = value
				Me.SendPropertyChanged("TYPE_REQUESTS_ID")
				Me.OnTYPE_REQUESTS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPOINT_DATE", DbType:="DateTime")>  _
	Public Property APPOINT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._APPOINT_DATE
		End Get
		Set
			If (Me._APPOINT_DATE.Equals(value) = false) Then
				Me.OnAPPOINT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._APPOINT_DATE = value
				Me.SendPropertyChanged("APPOINT_DATE")
				Me.OnAPPOINT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPOINT_DAY", DbType:="Int")>  _
	Public Property APPOINT_DAY() As System.Nullable(Of Integer)
		Get
			Return Me._APPOINT_DAY
		End Get
		Set
			If (Me._APPOINT_DAY.Equals(value) = false) Then
				Me.OnAPPOINT_DAYChanging(value)
				Me.SendPropertyChanging
				Me._APPOINT_DAY = value
				Me.SendPropertyChanged("APPOINT_DAY")
				Me.OnAPPOINT_DAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_DATE
		End Get
		Set
			If (Me._REQUEST_DATE.Equals(value) = false) Then
				Me.OnREQUEST_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_DATE = value
				Me.SendPropertyChanged("REQUEST_DATE")
				Me.OnREQUEST_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_EDIT_REQUEST_PACKAGE_DETAIL")>  _
Partial Public Class DRRGT_EDIT_REQUEST_PACKAGE_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _MEDIUM_UNIT As System.Nullable(Of Integer)
	
	Private _SMALL_AMOUNT As System.Nullable(Of Double)
	
	Private _SMALL_UNIT As String
	
	Private _BIG_UNIT As System.Nullable(Of Integer)
	
	Private _MEDIUM_AMOUNT As System.Nullable(Of Double)
	
	Private _BARCODE As String
	
	Private _CHECK_PACKAGE As System.Nullable(Of Boolean)
	
	Private _PACKAGE_NAME As String
	
	Private _SUM As String
	
	Private _IM_QTY As String
	
	Private _IM_DETAIL As String
	
	Private _DATE_ADD As System.Nullable(Of Date)
	
	Private _order_id As String
	
	Private _BIG_AMOUNT As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnMEDIUM_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDIUM_UNITChanged()
    End Sub
    Partial Private Sub OnSMALL_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSMALL_AMOUNTChanged()
    End Sub
    Partial Private Sub OnSMALL_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnSMALL_UNITChanged()
    End Sub
    Partial Private Sub OnBIG_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBIG_UNITChanged()
    End Sub
    Partial Private Sub OnMEDIUM_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMEDIUM_AMOUNTChanged()
    End Sub
    Partial Private Sub OnBARCODEChanging(value As String)
    End Sub
    Partial Private Sub OnBARCODEChanged()
    End Sub
    Partial Private Sub OnCHECK_PACKAGEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCHECK_PACKAGEChanged()
    End Sub
    Partial Private Sub OnPACKAGE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPACKAGE_NAMEChanged()
    End Sub
    Partial Private Sub OnSUMChanging(value As String)
    End Sub
    Partial Private Sub OnSUMChanged()
    End Sub
    Partial Private Sub OnIM_QTYChanging(value As String)
    End Sub
    Partial Private Sub OnIM_QTYChanged()
    End Sub
    Partial Private Sub OnIM_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnIM_DETAILChanged()
    End Sub
    Partial Private Sub OnDATE_ADDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_ADDChanged()
    End Sub
    Partial Private Sub Onorder_idChanging(value As String)
    End Sub
    Partial Private Sub Onorder_idChanged()
    End Sub
    Partial Private Sub OnBIG_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBIG_AMOUNTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDIUM_UNIT", DbType:="Int")>  _
	Public Property MEDIUM_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._MEDIUM_UNIT
		End Get
		Set
			If (Me._MEDIUM_UNIT.Equals(value) = false) Then
				Me.OnMEDIUM_UNITChanging(value)
				Me.SendPropertyChanging
				Me._MEDIUM_UNIT = value
				Me.SendPropertyChanged("MEDIUM_UNIT")
				Me.OnMEDIUM_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_AMOUNT", DbType:="Float")>  _
	Public Property SMALL_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._SMALL_AMOUNT
		End Get
		Set
			If (Me._SMALL_AMOUNT.Equals(value) = false) Then
				Me.OnSMALL_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_AMOUNT = value
				Me.SendPropertyChanged("SMALL_AMOUNT")
				Me.OnSMALL_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_UNIT", DbType:="NVarChar(MAX)")>  _
	Public Property SMALL_UNIT() As String
		Get
			Return Me._SMALL_UNIT
		End Get
		Set
			If (String.Equals(Me._SMALL_UNIT, value) = false) Then
				Me.OnSMALL_UNITChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_UNIT = value
				Me.SendPropertyChanged("SMALL_UNIT")
				Me.OnSMALL_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIG_UNIT", DbType:="Int")>  _
	Public Property BIG_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._BIG_UNIT
		End Get
		Set
			If (Me._BIG_UNIT.Equals(value) = false) Then
				Me.OnBIG_UNITChanging(value)
				Me.SendPropertyChanging
				Me._BIG_UNIT = value
				Me.SendPropertyChanged("BIG_UNIT")
				Me.OnBIG_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDIUM_AMOUNT", DbType:="Float")>  _
	Public Property MEDIUM_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._MEDIUM_AMOUNT
		End Get
		Set
			If (Me._MEDIUM_AMOUNT.Equals(value) = false) Then
				Me.OnMEDIUM_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._MEDIUM_AMOUNT = value
				Me.SendPropertyChanged("MEDIUM_AMOUNT")
				Me.OnMEDIUM_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BARCODE", DbType:="NVarChar(MAX)")>  _
	Public Property BARCODE() As String
		Get
			Return Me._BARCODE
		End Get
		Set
			If (String.Equals(Me._BARCODE, value) = false) Then
				Me.OnBARCODEChanging(value)
				Me.SendPropertyChanging
				Me._BARCODE = value
				Me.SendPropertyChanged("BARCODE")
				Me.OnBARCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_PACKAGE", DbType:="Bit")>  _
	Public Property CHECK_PACKAGE() As System.Nullable(Of Boolean)
		Get
			Return Me._CHECK_PACKAGE
		End Get
		Set
			If (Me._CHECK_PACKAGE.Equals(value) = false) Then
				Me.OnCHECK_PACKAGEChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_PACKAGE = value
				Me.SendPropertyChanged("CHECK_PACKAGE")
				Me.OnCHECK_PACKAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACKAGE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PACKAGE_NAME() As String
		Get
			Return Me._PACKAGE_NAME
		End Get
		Set
			If (String.Equals(Me._PACKAGE_NAME, value) = false) Then
				Me.OnPACKAGE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PACKAGE_NAME = value
				Me.SendPropertyChanged("PACKAGE_NAME")
				Me.OnPACKAGE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUM", DbType:="NVarChar(MAX)")>  _
	Public Property SUM() As String
		Get
			Return Me._SUM
		End Get
		Set
			If (String.Equals(Me._SUM, value) = false) Then
				Me.OnSUMChanging(value)
				Me.SendPropertyChanging
				Me._SUM = value
				Me.SendPropertyChanged("SUM")
				Me.OnSUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IM_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property IM_QTY() As String
		Get
			Return Me._IM_QTY
		End Get
		Set
			If (String.Equals(Me._IM_QTY, value) = false) Then
				Me.OnIM_QTYChanging(value)
				Me.SendPropertyChanging
				Me._IM_QTY = value
				Me.SendPropertyChanged("IM_QTY")
				Me.OnIM_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IM_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property IM_DETAIL() As String
		Get
			Return Me._IM_DETAIL
		End Get
		Set
			If (String.Equals(Me._IM_DETAIL, value) = false) Then
				Me.OnIM_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._IM_DETAIL = value
				Me.SendPropertyChanged("IM_DETAIL")
				Me.OnIM_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ADD", DbType:="Date")>  _
	Public Property DATE_ADD() As System.Nullable(Of Date)
		Get
			Return Me._DATE_ADD
		End Get
		Set
			If (Me._DATE_ADD.Equals(value) = false) Then
				Me.OnDATE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ADD = value
				Me.SendPropertyChanged("DATE_ADD")
				Me.OnDATE_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_order_id", DbType:="NVarChar(MAX)")>  _
	Public Property order_id() As String
		Get
			Return Me._order_id
		End Get
		Set
			If (String.Equals(Me._order_id, value) = false) Then
				Me.Onorder_idChanging(value)
				Me.SendPropertyChanging
				Me._order_id = value
				Me.SendPropertyChanged("order_id")
				Me.Onorder_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIG_AMOUNT", DbType:="Float")>  _
	Public Property BIG_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._BIG_AMOUNT
		End Get
		Set
			If (Me._BIG_AMOUNT.Equals(value) = false) Then
				Me.OnBIG_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._BIG_AMOUNT = value
				Me.SendPropertyChanged("BIG_AMOUNT")
				Me.OnBIG_AMOUNTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_DRUG_SHAPE")>  _
Partial Public Class MAS_DRUG_SHAPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _SHAPE_IDA As System.Nullable(Of Integer)
	
	Private _SHAPE_NAME As String
	
	Private _ACTIVE As String
	
	Private _SEQ As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSHAPE_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSHAPE_IDAChanged()
    End Sub
    Partial Private Sub OnSHAPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSHAPE_NAMEChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As String)
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHAPE_IDA", DbType:="Int")>  _
	Public Property SHAPE_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._SHAPE_IDA
		End Get
		Set
			If (Me._SHAPE_IDA.Equals(value) = false) Then
				Me.OnSHAPE_IDAChanging(value)
				Me.SendPropertyChanging
				Me._SHAPE_IDA = value
				Me.SendPropertyChanged("SHAPE_IDA")
				Me.OnSHAPE_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHAPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SHAPE_NAME() As String
		Get
			Return Me._SHAPE_NAME
		End Get
		Set
			If (String.Equals(Me._SHAPE_NAME, value) = false) Then
				Me.OnSHAPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SHAPE_NAME = value
				Me.SendPropertyChanged("SHAPE_NAME")
				Me.OnSHAPE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="NVarChar(50)")>  _
	Public Property ACTIVE() As String
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (String.Equals(Me._ACTIVE, value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dactg")>  _
Partial Public Class dactg
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ctgcd As System.Nullable(Of Integer)
	
	Private _ctgthanm As String
	
	Private _ctgengnm As String
	
	Private _sort As System.Nullable(Of Integer)
	
	Private _status As String
	
	Private _code_concept As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnctgcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnctgcdChanged()
    End Sub
    Partial Private Sub OnctgthanmChanging(value As String)
    End Sub
    Partial Private Sub OnctgthanmChanged()
    End Sub
    Partial Private Sub OnctgengnmChanging(value As String)
    End Sub
    Partial Private Sub OnctgengnmChanged()
    End Sub
    Partial Private Sub OnsortChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsortChanged()
    End Sub
    Partial Private Sub OnstatusChanging(value As String)
    End Sub
    Partial Private Sub OnstatusChanged()
    End Sub
    Partial Private Sub Oncode_conceptChanging(value As String)
    End Sub
    Partial Private Sub Oncode_conceptChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctgcd", DbType:="Int")>  _
	Public Property ctgcd() As System.Nullable(Of Integer)
		Get
			Return Me._ctgcd
		End Get
		Set
			If (Me._ctgcd.Equals(value) = false) Then
				Me.OnctgcdChanging(value)
				Me.SendPropertyChanging
				Me._ctgcd = value
				Me.SendPropertyChanged("ctgcd")
				Me.OnctgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctgthanm", DbType:="NVarChar(MAX)")>  _
	Public Property ctgthanm() As String
		Get
			Return Me._ctgthanm
		End Get
		Set
			If (String.Equals(Me._ctgthanm, value) = false) Then
				Me.OnctgthanmChanging(value)
				Me.SendPropertyChanging
				Me._ctgthanm = value
				Me.SendPropertyChanged("ctgthanm")
				Me.OnctgthanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctgengnm", DbType:="NVarChar(MAX)")>  _
	Public Property ctgengnm() As String
		Get
			Return Me._ctgengnm
		End Get
		Set
			If (String.Equals(Me._ctgengnm, value) = false) Then
				Me.OnctgengnmChanging(value)
				Me.SendPropertyChanging
				Me._ctgengnm = value
				Me.SendPropertyChanged("ctgengnm")
				Me.OnctgengnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sort", DbType:="Int")>  _
	Public Property sort() As System.Nullable(Of Integer)
		Get
			Return Me._sort
		End Get
		Set
			If (Me._sort.Equals(value) = false) Then
				Me.OnsortChanging(value)
				Me.SendPropertyChanging
				Me._sort = value
				Me.SendPropertyChanged("sort")
				Me.OnsortChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="NVarChar(50)")>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me.OnstatusChanging(value)
				Me.SendPropertyChanging
				Me._status = value
				Me.SendPropertyChanged("status")
				Me.OnstatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_code_concept", DbType:="NVarChar(50)")>  _
	Public Property code_concept() As String
		Get
			Return Me._code_concept
		End Get
		Set
			If (String.Equals(Me._code_concept, value) = false) Then
				Me.Oncode_conceptChanging(value)
				Me.SendPropertyChanging
				Me._code_concept = value
				Me.SendPropertyChanged("code_concept")
				Me.Oncode_conceptChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drclass")>  _
Partial Public Class drclass
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _classcd As System.Nullable(Of Short)
	
	Private _thaclassnm As String
	
	Private _engclassnm As String
	
	Private _code_concept As String
	
	Private _status As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnclasscdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnclasscdChanged()
    End Sub
    Partial Private Sub OnthaclassnmChanging(value As String)
    End Sub
    Partial Private Sub OnthaclassnmChanged()
    End Sub
    Partial Private Sub OnengclassnmChanging(value As String)
    End Sub
    Partial Private Sub OnengclassnmChanged()
    End Sub
    Partial Private Sub Oncode_conceptChanging(value As String)
    End Sub
    Partial Private Sub Oncode_conceptChanged()
    End Sub
    Partial Private Sub OnstatusChanging(value As String)
    End Sub
    Partial Private Sub OnstatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_classcd", DbType:="SmallInt")>  _
	Public Property classcd() As System.Nullable(Of Short)
		Get
			Return Me._classcd
		End Get
		Set
			If (Me._classcd.Equals(value) = false) Then
				Me.OnclasscdChanging(value)
				Me.SendPropertyChanging
				Me._classcd = value
				Me.SendPropertyChanged("classcd")
				Me.OnclasscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaclassnm", DbType:="NVarChar(MAX)")>  _
	Public Property thaclassnm() As String
		Get
			Return Me._thaclassnm
		End Get
		Set
			If (String.Equals(Me._thaclassnm, value) = false) Then
				Me.OnthaclassnmChanging(value)
				Me.SendPropertyChanging
				Me._thaclassnm = value
				Me.SendPropertyChanged("thaclassnm")
				Me.OnthaclassnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engclassnm", DbType:="NVarChar(MAX)")>  _
	Public Property engclassnm() As String
		Get
			Return Me._engclassnm
		End Get
		Set
			If (String.Equals(Me._engclassnm, value) = false) Then
				Me.OnengclassnmChanging(value)
				Me.SendPropertyChanging
				Me._engclassnm = value
				Me.SendPropertyChanged("engclassnm")
				Me.OnengclassnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_code_concept", DbType:="NVarChar(MAX)")>  _
	Public Property code_concept() As String
		Get
			Return Me._code_concept
		End Get
		Set
			If (String.Equals(Me._code_concept, value) = false) Then
				Me.Oncode_conceptChanging(value)
				Me.SendPropertyChanging
				Me._code_concept = value
				Me.SendPropertyChanged("code_concept")
				Me.Oncode_conceptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="NVarChar(50)")>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me.OnstatusChanging(value)
				Me.SendPropertyChanging
				Me._status = value
				Me.SendPropertyChanged("status")
				Me.OnstatusChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drdosage")>  _
Partial Public Class drdosage
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _dsgcd As System.Nullable(Of Short)
	
	Private _thadsgnm As String
	
	Private _engdsgnm As String
	
	Private _code_concept As String
	
	Private _status As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OndsgcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OndsgcdChanged()
    End Sub
    Partial Private Sub OnthadsgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadsgnmChanged()
    End Sub
    Partial Private Sub OnengdsgnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdsgnmChanged()
    End Sub
    Partial Private Sub Oncode_conceptChanging(value As String)
    End Sub
    Partial Private Sub Oncode_conceptChanged()
    End Sub
    Partial Private Sub OnstatusChanging(value As String)
    End Sub
    Partial Private Sub OnstatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsgcd", DbType:="SmallInt")>  _
	Public Property dsgcd() As System.Nullable(Of Short)
		Get
			Return Me._dsgcd
		End Get
		Set
			If (Me._dsgcd.Equals(value) = false) Then
				Me.OndsgcdChanging(value)
				Me.SendPropertyChanging
				Me._dsgcd = value
				Me.SendPropertyChanged("dsgcd")
				Me.OndsgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadsgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadsgnm() As String
		Get
			Return Me._thadsgnm
		End Get
		Set
			If (String.Equals(Me._thadsgnm, value) = false) Then
				Me.OnthadsgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadsgnm = value
				Me.SendPropertyChanged("thadsgnm")
				Me.OnthadsgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdsgnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdsgnm() As String
		Get
			Return Me._engdsgnm
		End Get
		Set
			If (String.Equals(Me._engdsgnm, value) = false) Then
				Me.OnengdsgnmChanging(value)
				Me.SendPropertyChanging
				Me._engdsgnm = value
				Me.SendPropertyChanged("engdsgnm")
				Me.OnengdsgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_code_concept", DbType:="NVarChar(MAX)")>  _
	Public Property code_concept() As String
		Get
			Return Me._code_concept
		End Get
		Set
			If (String.Equals(Me._code_concept, value) = false) Then
				Me.Oncode_conceptChanging(value)
				Me.SendPropertyChanging
				Me._code_concept = value
				Me.SendPropertyChanged("code_concept")
				Me.Oncode_conceptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="NVarChar(50)")>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me.OnstatusChanging(value)
				Me.SendPropertyChanging
				Me._status = value
				Me.SendPropertyChanged("status")
				Me.OnstatusChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drkdofdrg")>  _
Partial Public Class drkdofdrg
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _kindcd As System.Nullable(Of Short)
	
	Private _thakindnm As String
	
	Private _engkindnm As String
	
	Private _code_concept As String
	
	Private _status As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnkindcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnkindcdChanged()
    End Sub
    Partial Private Sub OnthakindnmChanging(value As String)
    End Sub
    Partial Private Sub OnthakindnmChanged()
    End Sub
    Partial Private Sub OnengkindnmChanging(value As String)
    End Sub
    Partial Private Sub OnengkindnmChanged()
    End Sub
    Partial Private Sub Oncode_conceptChanging(value As String)
    End Sub
    Partial Private Sub Oncode_conceptChanged()
    End Sub
    Partial Private Sub OnstatusChanging(value As String)
    End Sub
    Partial Private Sub OnstatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_kindcd", DbType:="SmallInt")>  _
	Public Property kindcd() As System.Nullable(Of Short)
		Get
			Return Me._kindcd
		End Get
		Set
			If (Me._kindcd.Equals(value) = false) Then
				Me.OnkindcdChanging(value)
				Me.SendPropertyChanging
				Me._kindcd = value
				Me.SendPropertyChanged("kindcd")
				Me.OnkindcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thakindnm", DbType:="NVarChar(MAX)")>  _
	Public Property thakindnm() As String
		Get
			Return Me._thakindnm
		End Get
		Set
			If (String.Equals(Me._thakindnm, value) = false) Then
				Me.OnthakindnmChanging(value)
				Me.SendPropertyChanging
				Me._thakindnm = value
				Me.SendPropertyChanged("thakindnm")
				Me.OnthakindnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engkindnm", DbType:="NVarChar(MAX)")>  _
	Public Property engkindnm() As String
		Get
			Return Me._engkindnm
		End Get
		Set
			If (String.Equals(Me._engkindnm, value) = false) Then
				Me.OnengkindnmChanging(value)
				Me.SendPropertyChanging
				Me._engkindnm = value
				Me.SendPropertyChanged("engkindnm")
				Me.OnengkindnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_code_concept", DbType:="NVarChar(MAX)")>  _
	Public Property code_concept() As String
		Get
			Return Me._code_concept
		End Get
		Set
			If (String.Equals(Me._code_concept, value) = false) Then
				Me.Oncode_conceptChanging(value)
				Me.SendPropertyChanging
				Me._code_concept = value
				Me.SendPropertyChanged("code_concept")
				Me.Oncode_conceptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="NVarChar(50)")>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me.OnstatusChanging(value)
				Me.SendPropertyChanging
				Me._status = value
				Me.SendPropertyChanged("status")
				Me.OnstatusChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_KEEP_DRUG")>  _
Partial Public Class DRRGT_KEEP_DRUG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _AGE_HOUR As System.Nullable(Of Double)
	
	Private _AGE_MONTH As System.Nullable(Of Integer)
	
	Private _AGE_DAY As System.Nullable(Of Double)
	
	Private _TEMPERATE1 As System.Nullable(Of Double)
	
	Private _TEMPERATE2 As System.Nullable(Of Double)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _KEEP_DESCRIPTION As String
	
	Private _DRUG_DETAIL As String
	
	Private _ROWS As System.Nullable(Of Integer)
	
	Private _REMARK As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnAGE_HOURChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAGE_HOURChanged()
    End Sub
    Partial Private Sub OnAGE_MONTHChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAGE_MONTHChanged()
    End Sub
    Partial Private Sub OnAGE_DAYChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAGE_DAYChanged()
    End Sub
    Partial Private Sub OnTEMPERATE1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTEMPERATE1Changed()
    End Sub
    Partial Private Sub OnTEMPERATE2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTEMPERATE2Changed()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnKEEP_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnKEEP_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnDRUG_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_DETAILChanged()
    End Sub
    Partial Private Sub OnROWSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnROWSChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AGE_HOUR", DbType:="Float")>  _
	Public Property AGE_HOUR() As System.Nullable(Of Double)
		Get
			Return Me._AGE_HOUR
		End Get
		Set
			If (Me._AGE_HOUR.Equals(value) = false) Then
				Me.OnAGE_HOURChanging(value)
				Me.SendPropertyChanging
				Me._AGE_HOUR = value
				Me.SendPropertyChanged("AGE_HOUR")
				Me.OnAGE_HOURChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AGE_MONTH", DbType:="Int")>  _
	Public Property AGE_MONTH() As System.Nullable(Of Integer)
		Get
			Return Me._AGE_MONTH
		End Get
		Set
			If (Me._AGE_MONTH.Equals(value) = false) Then
				Me.OnAGE_MONTHChanging(value)
				Me.SendPropertyChanging
				Me._AGE_MONTH = value
				Me.SendPropertyChanged("AGE_MONTH")
				Me.OnAGE_MONTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AGE_DAY", DbType:="Float")>  _
	Public Property AGE_DAY() As System.Nullable(Of Double)
		Get
			Return Me._AGE_DAY
		End Get
		Set
			If (Me._AGE_DAY.Equals(value) = false) Then
				Me.OnAGE_DAYChanging(value)
				Me.SendPropertyChanging
				Me._AGE_DAY = value
				Me.SendPropertyChanged("AGE_DAY")
				Me.OnAGE_DAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPERATE1", DbType:="Float")>  _
	Public Property TEMPERATE1() As System.Nullable(Of Double)
		Get
			Return Me._TEMPERATE1
		End Get
		Set
			If (Me._TEMPERATE1.Equals(value) = false) Then
				Me.OnTEMPERATE1Changing(value)
				Me.SendPropertyChanging
				Me._TEMPERATE1 = value
				Me.SendPropertyChanged("TEMPERATE1")
				Me.OnTEMPERATE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPERATE2", DbType:="Float")>  _
	Public Property TEMPERATE2() As System.Nullable(Of Double)
		Get
			Return Me._TEMPERATE2
		End Get
		Set
			If (Me._TEMPERATE2.Equals(value) = false) Then
				Me.OnTEMPERATE2Changing(value)
				Me.SendPropertyChanging
				Me._TEMPERATE2 = value
				Me.SendPropertyChanged("TEMPERATE2")
				Me.OnTEMPERATE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEEP_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property KEEP_DESCRIPTION() As String
		Get
			Return Me._KEEP_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._KEEP_DESCRIPTION, value) = false) Then
				Me.OnKEEP_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._KEEP_DESCRIPTION = value
				Me.SendPropertyChanged("KEEP_DESCRIPTION")
				Me.OnKEEP_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_DETAIL() As String
		Get
			Return Me._DRUG_DETAIL
		End Get
		Set
			If (String.Equals(Me._DRUG_DETAIL, value) = false) Then
				Me.OnDRUG_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_DETAIL = value
				Me.SendPropertyChanged("DRUG_DETAIL")
				Me.OnDRUG_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROWS", DbType:="Int")>  _
	Public Property ROWS() As System.Nullable(Of Integer)
		Get
			Return Me._ROWS
		End Get
		Set
			If (Me._ROWS.Equals(value) = false) Then
				Me.OnROWSChanging(value)
				Me.SendPropertyChanging
				Me._ROWS = value
				Me.SendPropertyChanged("ROWS")
				Me.OnROWSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_SUBSTITUTE")>  _
Partial Public Class DRRGT_SUBSTITUTE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _CTZNO As String
	
	Private _REMARK As String
	
	Private _IDENTIFY As String
	
	Private _PROCESS_ID As String
	
	Private _CHK_LCN_SUBTYPE As String
	
	Private _TABEAN_TYPE As String
	
	Private _rcvno As String
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _pvnabbr As String
	
	Private _lpvncd As String
	
	Private _lcntpcd As String
	
	Private _lcnno As String
	
	Private _lcnsid As String
	
	Private _lcnscd As String
	
	Private _appdate As System.Nullable(Of Date)
	
	Private _rgtno As String
	
	Private _STAFF_RCV_IDENTIFY As String
	
	Private _PURPOSE As String
	
	Private _TYPE_REQUEST_ID As String
	
	Private _CONSIDER_DATE As System.Nullable(Of Date)
	
	Private _FK_LCN_IDA As System.Nullable(Of Integer)
	
	Private _TEMPLATE_ID As String
	
	Private _PREFIXCD As String
	
	Private _POSITION_NAME1 As String
	
	Private _POSITION_NAME2 As String
	
	Private _STAFF_SIGN_IDA As String
	
	Private _STAFF_SIGN_IDEN As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnCTZNOChanging(value As String)
    End Sub
    Partial Private Sub OnCTZNOChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnCHK_LCN_SUBTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_LCN_SUBTYPEChanged()
    End Sub
    Partial Private Sub OnTABEAN_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTABEAN_TYPEChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnpvnabbrChanging(value As String)
    End Sub
    Partial Private Sub OnpvnabbrChanged()
    End Sub
    Partial Private Sub OnlpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnlpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As String)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As String)
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnSTAFF_RCV_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_RCV_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnPURPOSEChanging(value As String)
    End Sub
    Partial Private Sub OnPURPOSEChanged()
    End Sub
    Partial Private Sub OnTYPE_REQUEST_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_REQUEST_IDChanged()
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanged()
    End Sub
    Partial Private Sub OnFK_LCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_LCN_IDAChanged()
    End Sub
    Partial Private Sub OnTEMPLATE_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTEMPLATE_IDChanged()
    End Sub
    Partial Private Sub OnPREFIXCDChanging(value As String)
    End Sub
    Partial Private Sub OnPREFIXCDChanged()
    End Sub
    Partial Private Sub OnPOSITION_NAME1Changing(value As String)
    End Sub
    Partial Private Sub OnPOSITION_NAME1Changed()
    End Sub
    Partial Private Sub OnPOSITION_NAME2Changing(value As String)
    End Sub
    Partial Private Sub OnPOSITION_NAME2Changed()
    End Sub
    Partial Private Sub OnSTAFF_SIGN_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_SIGN_IDAChanged()
    End Sub
    Partial Private Sub OnSTAFF_SIGN_IDENChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_SIGN_IDENChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CTZNO", DbType:="NVarChar(MAX)")>  _
	Public Property CTZNO() As String
		Get
			Return Me._CTZNO
		End Get
		Set
			If (String.Equals(Me._CTZNO, value) = false) Then
				Me.OnCTZNOChanging(value)
				Me.SendPropertyChanging
				Me._CTZNO = value
				Me.SendPropertyChanged("CTZNO")
				Me.OnCTZNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_LCN_SUBTYPE", DbType:="NVarChar(50)")>  _
	Public Property CHK_LCN_SUBTYPE() As String
		Get
			Return Me._CHK_LCN_SUBTYPE
		End Get
		Set
			If (String.Equals(Me._CHK_LCN_SUBTYPE, value) = false) Then
				Me.OnCHK_LCN_SUBTYPEChanging(value)
				Me.SendPropertyChanging
				Me._CHK_LCN_SUBTYPE = value
				Me.SendPropertyChanged("CHK_LCN_SUBTYPE")
				Me.OnCHK_LCN_SUBTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TABEAN_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TABEAN_TYPE() As String
		Get
			Return Me._TABEAN_TYPE
		End Get
		Set
			If (String.Equals(Me._TABEAN_TYPE, value) = false) Then
				Me.OnTABEAN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._TABEAN_TYPE = value
				Me.SendPropertyChanged("TABEAN_TYPE")
				Me.OnTABEAN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(MAX)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="Date")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(MAX)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnabbr", DbType:="NVarChar(MAX)")>  _
	Public Property pvnabbr() As String
		Get
			Return Me._pvnabbr
		End Get
		Set
			If (String.Equals(Me._pvnabbr, value) = false) Then
				Me.OnpvnabbrChanging(value)
				Me.SendPropertyChanging
				Me._pvnabbr = value
				Me.SendPropertyChanged("pvnabbr")
				Me.OnpvnabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lpvncd", DbType:="NVarChar(MAX)")>  _
	Public Property lpvncd() As String
		Get
			Return Me._lpvncd
		End Get
		Set
			If (String.Equals(Me._lpvncd, value) = false) Then
				Me.OnlpvncdChanging(value)
				Me.SendPropertyChanging
				Me._lpvncd = value
				Me.SendPropertyChanged("lpvncd")
				Me.OnlpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid() As String
		Get
			Return Me._lcnsid
		End Get
		Set
			If (String.Equals(Me._lcnsid, value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="NVarChar(MAX)")>  _
	Public Property lcnscd() As String
		Get
			Return Me._lcnscd
		End Get
		Set
			If (String.Equals(Me._lcnscd, value) = false) Then
				Me.OnlcnscdChanging(value)
				Me.SendPropertyChanging
				Me._lcnscd = value
				Me.SendPropertyChanged("lcnscd")
				Me.OnlcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="Date")>  _
	Public Property appdate() As System.Nullable(Of Date)
		Get
			Return Me._appdate
		End Get
		Set
			If (Me._appdate.Equals(value) = false) Then
				Me.OnappdateChanging(value)
				Me.SendPropertyChanging
				Me._appdate = value
				Me.SendPropertyChanged("appdate")
				Me.OnappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(MAX)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_RCV_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_RCV_IDENTIFY() As String
		Get
			Return Me._STAFF_RCV_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._STAFF_RCV_IDENTIFY, value) = false) Then
				Me.OnSTAFF_RCV_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_RCV_IDENTIFY = value
				Me.SendPropertyChanged("STAFF_RCV_IDENTIFY")
				Me.OnSTAFF_RCV_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PURPOSE", DbType:="NVarChar(MAX)")>  _
	Public Property PURPOSE() As String
		Get
			Return Me._PURPOSE
		End Get
		Set
			If (String.Equals(Me._PURPOSE, value) = false) Then
				Me.OnPURPOSEChanging(value)
				Me.SendPropertyChanging
				Me._PURPOSE = value
				Me.SendPropertyChanged("PURPOSE")
				Me.OnPURPOSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_REQUEST_ID", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_REQUEST_ID() As String
		Get
			Return Me._TYPE_REQUEST_ID
		End Get
		Set
			If (String.Equals(Me._TYPE_REQUEST_ID, value) = false) Then
				Me.OnTYPE_REQUEST_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_REQUEST_ID = value
				Me.SendPropertyChanged("TYPE_REQUEST_ID")
				Me.OnTYPE_REQUEST_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSIDER_DATE", DbType:="DateTime")>  _
	Public Property CONSIDER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONSIDER_DATE
		End Get
		Set
			If (Me._CONSIDER_DATE.Equals(value) = false) Then
				Me.OnCONSIDER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONSIDER_DATE = value
				Me.SendPropertyChanged("CONSIDER_DATE")
				Me.OnCONSIDER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_LCN_IDA", DbType:="Int")>  _
	Public Property FK_LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_LCN_IDA
		End Get
		Set
			If (Me._FK_LCN_IDA.Equals(value) = false) Then
				Me.OnFK_LCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_LCN_IDA = value
				Me.SendPropertyChanged("FK_LCN_IDA")
				Me.OnFK_LCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPLATE_ID", DbType:="NVarChar(50)")>  _
	Public Property TEMPLATE_ID() As String
		Get
			Return Me._TEMPLATE_ID
		End Get
		Set
			If (String.Equals(Me._TEMPLATE_ID, value) = false) Then
				Me.OnTEMPLATE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TEMPLATE_ID = value
				Me.SendPropertyChanged("TEMPLATE_ID")
				Me.OnTEMPLATE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREFIXCD", DbType:="NVarChar(50)")>  _
	Public Property PREFIXCD() As String
		Get
			Return Me._PREFIXCD
		End Get
		Set
			If (String.Equals(Me._PREFIXCD, value) = false) Then
				Me.OnPREFIXCDChanging(value)
				Me.SendPropertyChanging
				Me._PREFIXCD = value
				Me.SendPropertyChanged("PREFIXCD")
				Me.OnPREFIXCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_NAME1", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_NAME1() As String
		Get
			Return Me._POSITION_NAME1
		End Get
		Set
			If (String.Equals(Me._POSITION_NAME1, value) = false) Then
				Me.OnPOSITION_NAME1Changing(value)
				Me.SendPropertyChanging
				Me._POSITION_NAME1 = value
				Me.SendPropertyChanged("POSITION_NAME1")
				Me.OnPOSITION_NAME1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_NAME2", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_NAME2() As String
		Get
			Return Me._POSITION_NAME2
		End Get
		Set
			If (String.Equals(Me._POSITION_NAME2, value) = false) Then
				Me.OnPOSITION_NAME2Changing(value)
				Me.SendPropertyChanging
				Me._POSITION_NAME2 = value
				Me.SendPropertyChanged("POSITION_NAME2")
				Me.OnPOSITION_NAME2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_SIGN_IDA", DbType:="NVarChar(50)")>  _
	Public Property STAFF_SIGN_IDA() As String
		Get
			Return Me._STAFF_SIGN_IDA
		End Get
		Set
			If (String.Equals(Me._STAFF_SIGN_IDA, value) = false) Then
				Me.OnSTAFF_SIGN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_SIGN_IDA = value
				Me.SendPropertyChanged("STAFF_SIGN_IDA")
				Me.OnSTAFF_SIGN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_SIGN_IDEN", DbType:="NVarChar(50)")>  _
	Public Property STAFF_SIGN_IDEN() As String
		Get
			Return Me._STAFF_SIGN_IDEN
		End Get
		Set
			If (String.Equals(Me._STAFF_SIGN_IDEN, value) = false) Then
				Me.OnSTAFF_SIGN_IDENChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_SIGN_IDEN = value
				Me.SendPropertyChanged("STAFF_SIGN_IDEN")
				Me.OnSTAFF_SIGN_IDENChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_STAFF_POSITION")>  _
Partial Public Class MAS_STAFF_POSITION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _POSITION_NAME As String
	
	Private _POSITION_NAME_ENG As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPOSITION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_NAMEChanged()
    End Sub
    Partial Private Sub OnPOSITION_NAME_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_NAME_ENGChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_NAME() As String
		Get
			Return Me._POSITION_NAME
		End Get
		Set
			If (String.Equals(Me._POSITION_NAME, value) = false) Then
				Me.OnPOSITION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_NAME = value
				Me.SendPropertyChanged("POSITION_NAME")
				Me.OnPOSITION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_NAME_ENG", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_NAME_ENG() As String
		Get
			Return Me._POSITION_NAME_ENG
		End Get
		Set
			If (String.Equals(Me._POSITION_NAME_ENG, value) = false) Then
				Me.OnPOSITION_NAME_ENGChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_NAME_ENG = value
				Me.SendPropertyChanged("POSITION_NAME_ENG")
				Me.OnPOSITION_NAME_ENGChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_SUBSTITUTE_TEMPLATE")>  _
Partial Public Class MAS_SUBSTITUTE_TEMPLATE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ROWS As System.Nullable(Of Integer)
	
	Private _NAME_TEMPLATE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnROWSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnROWSChanged()
    End Sub
    Partial Private Sub OnNAME_TEMPLATEChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_TEMPLATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROWS", DbType:="Int")>  _
	Public Property ROWS() As System.Nullable(Of Integer)
		Get
			Return Me._ROWS
		End Get
		Set
			If (Me._ROWS.Equals(value) = false) Then
				Me.OnROWSChanging(value)
				Me.SendPropertyChanging
				Me._ROWS = value
				Me.SendPropertyChanged("ROWS")
				Me.OnROWSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_TEMPLATE", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_TEMPLATE() As String
		Get
			Return Me._NAME_TEMPLATE
		End Get
		Set
			If (String.Equals(Me._NAME_TEMPLATE, value) = false) Then
				Me.OnNAME_TEMPLATEChanging(value)
				Me.SendPropertyChanging
				Me._NAME_TEMPLATE = value
				Me.SendPropertyChanged("NAME_TEMPLATE")
				Me.OnNAME_TEMPLATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_REGISTRATION")>  _
Partial Public Class DRUG_REGISTRATION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _LCNNO As String
	
	Private _RCVNO As String
	
	Private _RCVNO_DISPLAY As String
	
	Private _RCVDATE As System.Nullable(Of Date)
	
	Private _REGIS_NO As String
	
	Private _DALCNTYPE_CD As String
	
	Private _STATUS_ID As String
	
	Private _GROUP_TYPE As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _LCNSID As System.Nullable(Of Integer)
	
	Private _LCNTPCD As String
	
	Private _PVNCD As String
	
	Private _DRUG_NAME_THAI As String
	
	Private _DRUG_NAME_OTHER As String
	
	Private _DRUG_GROUP As String
	
	Private _DRUG_TYPE As String
	
	Private _DRUG_NEW As String
	
	Private _DRUG_PACKING As String
	
	Private _PHARMACEUTICALS As String
	
	Private _CHK_DOSAGE_FORMS As String
	
	Private _DOSAGE_FORMS_OTHER As String
	
	Private _DRUG_STYLE As String
	
	Private _DRUG_ADDRESS As String
	
	Private _DRUG_EQ_TO As String
	
	Private _DRUG_BASE_FROM As String
	
	Private _DRUG_VOLUME As String
	
	Private _DRUG_COLOR As String
	
	Private _ANIMAL_CHK_DUCK As String
	
	Private _ANIMAL_TXT_DUCK As String
	
	Private _ANIMAL_CHK_CHICKEN As String
	
	Private _ANIMAL_TXT_CHICKEN As String
	
	Private _ANIMAL_CHK_TURKEY As String
	
	Private _ANIMAL_TXT_TURKEY As String
	
	Private _ANIMAL_CHK_GOAT As String
	
	Private _ANIMAL_TXT_GOAT As String
	
	Private _ANIMAL_CHK_HOG As String
	
	Private _ANIMAL_TXT_HOG As String
	
	Private _ANIMAL_CHK_SHEEP As String
	
	Private _ANIMAL_TXT_SHEEP As String
	
	Private _ANIMAL_CHK_HORSE As String
	
	Private _ANIMAL_TXT_HORSE As String
	
	Private _ANIMAL_CHK_CAT As String
	
	Private _ANIMAL_TXT_CAT As String
	
	Private _ANIMAL_CHK_DOG As String
	
	Private _ANIMAL_TXT_DOG As String
	
	Private _ANIMAL_CHK_FISH As String
	
	Private _ANIMAL_TXT_FISH As String
	
	Private _ANIMAL_CHK_COW As String
	
	Private _ANIMAL_TXT_COW As String
	
	Private _ANIMAL_CHK_SHRIMP As String
	
	Private _ANIMAL_TXT_SHRIMP As String
	
	Private _ANIMAL_CHK_OTHER As String
	
	Private _ANIMAL_TXT_OTHER As String
	
	Private _ANIMAL_CHK_BUFFALO As String
	
	Private _ANIMAL_TXT_BUFFALO As String
	
	Private _ANIMAL_CHK_USAGE As String
	
	Private _ANIMAL_TXT_USAGE As String
	
	Private _ANIMAL_CHK_TERM_DRUG As String
	
	Private _ANIMAL_TXT_TERM_DRUG As String
	
	Private _ctgcd As String
	
	Private _kindcd As String
	
	Private _FK_DOSAGE_FORM As String
	
	Private _DRUG_NATURE As String
	
	Private _CHK_DRUG_TYPE1 As String
	
	Private _CHK_DRUG_TYPE2 As String
	
	Private _CHK_DRUG_TYPE3 As String
	
	Private _DRUG_STR As String
	
	Private _DRUG_USE As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _CITIZEN_ID_UPLOAD As String
	
	Private _CITIZEN_ID_AUTHORIZE As String
	
	Private _PROCESS_ID As String
	
	Private _lcnscd As String
	
	Private _GENERIC_NAME As String
	
	Private _UNIT_NORMAL As String
	
	Private _UNIT_BIO As String
	
	Private _DRUG_CONTOURS As String
	
	Private _DRUG_TYPE_IN_LAW As String
	
	Private _STORAGE_CODITIONS As String
	
	Private _PACKAGE_DETAIL As String
	
	Private _RCVNO_OLD As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnRCVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCVDATEChanged()
    End Sub
    Partial Private Sub OnREGIS_NOChanging(value As String)
    End Sub
    Partial Private Sub OnREGIS_NOChanged()
    End Sub
    Partial Private Sub OnDALCNTYPE_CDChanging(value As String)
    End Sub
    Partial Private Sub OnDALCNTYPE_CDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnGROUP_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_TYPEChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnLCNSIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCNSIDChanged()
    End Sub
    Partial Private Sub OnLCNTPCDChanging(value As String)
    End Sub
    Partial Private Sub OnLCNTPCDChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As String)
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnDRUG_NAME_THAIChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NAME_THAIChanged()
    End Sub
    Partial Private Sub OnDRUG_NAME_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NAME_OTHERChanged()
    End Sub
    Partial Private Sub OnDRUG_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_GROUPChanged()
    End Sub
    Partial Private Sub OnDRUG_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_TYPEChanged()
    End Sub
    Partial Private Sub OnDRUG_NEWChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NEWChanged()
    End Sub
    Partial Private Sub OnDRUG_PACKINGChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_PACKINGChanged()
    End Sub
    Partial Private Sub OnPHARMACEUTICALSChanging(value As String)
    End Sub
    Partial Private Sub OnPHARMACEUTICALSChanged()
    End Sub
    Partial Private Sub OnCHK_DOSAGE_FORMSChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_DOSAGE_FORMSChanged()
    End Sub
    Partial Private Sub OnDOSAGE_FORMS_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnDOSAGE_FORMS_OTHERChanged()
    End Sub
    Partial Private Sub OnDRUG_STYLEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_STYLEChanged()
    End Sub
    Partial Private Sub OnDRUG_ADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_ADDRESSChanged()
    End Sub
    Partial Private Sub OnDRUG_EQ_TOChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_EQ_TOChanged()
    End Sub
    Partial Private Sub OnDRUG_BASE_FROMChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_BASE_FROMChanged()
    End Sub
    Partial Private Sub OnDRUG_VOLUMEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_VOLUMEChanged()
    End Sub
    Partial Private Sub OnDRUG_COLORChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_COLORChanged()
    End Sub
    Partial Private Sub OnANIMAL_CHK_DUCKChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_CHK_DUCKChanged()
    End Sub
    Partial Private Sub OnANIMAL_TXT_DUCKChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_TXT_DUCKChanged()
    End Sub
    Partial Private Sub OnANIMAL_CHK_CHICKENChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_CHK_CHICKENChanged()
    End Sub
    Partial Private Sub OnANIMAL_TXT_CHICKENChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_TXT_CHICKENChanged()
    End Sub
    Partial Private Sub OnANIMAL_CHK_TURKEYChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_CHK_TURKEYChanged()
    End Sub
    Partial Private Sub OnANIMAL_TXT_TURKEYChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_TXT_TURKEYChanged()
    End Sub
    Partial Private Sub OnANIMAL_CHK_GOATChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_CHK_GOATChanged()
    End Sub
    Partial Private Sub OnANIMAL_TXT_GOATChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_TXT_GOATChanged()
    End Sub
    Partial Private Sub OnANIMAL_CHK_HOGChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_CHK_HOGChanged()
    End Sub
    Partial Private Sub OnANIMAL_TXT_HOGChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_TXT_HOGChanged()
    End Sub
    Partial Private Sub OnANIMAL_CHK_SHEEPChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_CHK_SHEEPChanged()
    End Sub
    Partial Private Sub OnANIMAL_TXT_SHEEPChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_TXT_SHEEPChanged()
    End Sub
    Partial Private Sub OnANIMAL_CHK_HORSEChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_CHK_HORSEChanged()
    End Sub
    Partial Private Sub OnANIMAL_TXT_HORSEChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_TXT_HORSEChanged()
    End Sub
    Partial Private Sub OnANIMAL_CHK_CATChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_CHK_CATChanged()
    End Sub
    Partial Private Sub OnANIMAL_TXT_CATChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_TXT_CATChanged()
    End Sub
    Partial Private Sub OnANIMAL_CHK_DOGChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_CHK_DOGChanged()
    End Sub
    Partial Private Sub OnANIMAL_TXT_DOGChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_TXT_DOGChanged()
    End Sub
    Partial Private Sub OnANIMAL_CHK_FISHChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_CHK_FISHChanged()
    End Sub
    Partial Private Sub OnANIMAL_TXT_FISHChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_TXT_FISHChanged()
    End Sub
    Partial Private Sub OnANIMAL_CHK_COWChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_CHK_COWChanged()
    End Sub
    Partial Private Sub OnANIMAL_TXT_COWChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_TXT_COWChanged()
    End Sub
    Partial Private Sub OnANIMAL_CHK_SHRIMPChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_CHK_SHRIMPChanged()
    End Sub
    Partial Private Sub OnANIMAL_TXT_SHRIMPChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_TXT_SHRIMPChanged()
    End Sub
    Partial Private Sub OnANIMAL_CHK_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_CHK_OTHERChanged()
    End Sub
    Partial Private Sub OnANIMAL_TXT_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_TXT_OTHERChanged()
    End Sub
    Partial Private Sub OnANIMAL_CHK_BUFFALOChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_CHK_BUFFALOChanged()
    End Sub
    Partial Private Sub OnANIMAL_TXT_BUFFALOChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_TXT_BUFFALOChanged()
    End Sub
    Partial Private Sub OnANIMAL_CHK_USAGEChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_CHK_USAGEChanged()
    End Sub
    Partial Private Sub OnANIMAL_TXT_USAGEChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_TXT_USAGEChanged()
    End Sub
    Partial Private Sub OnANIMAL_CHK_TERM_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_CHK_TERM_DRUGChanged()
    End Sub
    Partial Private Sub OnANIMAL_TXT_TERM_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnANIMAL_TXT_TERM_DRUGChanged()
    End Sub
    Partial Private Sub OnctgcdChanging(value As String)
    End Sub
    Partial Private Sub OnctgcdChanged()
    End Sub
    Partial Private Sub OnkindcdChanging(value As String)
    End Sub
    Partial Private Sub OnkindcdChanged()
    End Sub
    Partial Private Sub OnFK_DOSAGE_FORMChanging(value As String)
    End Sub
    Partial Private Sub OnFK_DOSAGE_FORMChanged()
    End Sub
    Partial Private Sub OnDRUG_NATUREChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NATUREChanged()
    End Sub
    Partial Private Sub OnCHK_DRUG_TYPE1Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_DRUG_TYPE1Changed()
    End Sub
    Partial Private Sub OnCHK_DRUG_TYPE2Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_DRUG_TYPE2Changed()
    End Sub
    Partial Private Sub OnCHK_DRUG_TYPE3Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_DRUG_TYPE3Changed()
    End Sub
    Partial Private Sub OnDRUG_STRChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_STRChanged()
    End Sub
    Partial Private Sub OnDRUG_USEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_USEChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As String)
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnGENERIC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGENERIC_NAMEChanged()
    End Sub
    Partial Private Sub OnUNIT_NORMALChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_NORMALChanged()
    End Sub
    Partial Private Sub OnUNIT_BIOChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_BIOChanged()
    End Sub
    Partial Private Sub OnDRUG_CONTOURSChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_CONTOURSChanged()
    End Sub
    Partial Private Sub OnDRUG_TYPE_IN_LAWChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_TYPE_IN_LAWChanged()
    End Sub
    Partial Private Sub OnSTORAGE_CODITIONSChanging(value As String)
    End Sub
    Partial Private Sub OnSTORAGE_CODITIONSChanged()
    End Sub
    Partial Private Sub OnPACKAGE_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnPACKAGE_DETAILChanged()
    End Sub
    Partial Private Sub OnRCVNO_OLDChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_OLDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="NVarChar(MAX)")>  _
	Public Property LCNNO() As String
		Get
			Return Me._LCNNO
		End Get
		Set
			If (String.Equals(Me._LCNNO, value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO() As String
		Get
			Return Me._RCVNO
		End Get
		Set
			If (String.Equals(Me._RCVNO, value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_DISPLAY() As String
		Get
			Return Me._RCVNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVNO_DISPLAY, value) = false) Then
				Me.OnRCVNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_DISPLAY = value
				Me.SendPropertyChanged("RCVNO_DISPLAY")
				Me.OnRCVNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE", DbType:="DateTime")>  _
	Public Property RCVDATE() As System.Nullable(Of Date)
		Get
			Return Me._RCVDATE
		End Get
		Set
			If (Me._RCVDATE.Equals(value) = false) Then
				Me.OnRCVDATEChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE = value
				Me.SendPropertyChanged("RCVDATE")
				Me.OnRCVDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGIS_NO", DbType:="NVarChar(MAX)")>  _
	Public Property REGIS_NO() As String
		Get
			Return Me._REGIS_NO
		End Get
		Set
			If (String.Equals(Me._REGIS_NO, value) = false) Then
				Me.OnREGIS_NOChanging(value)
				Me.SendPropertyChanging
				Me._REGIS_NO = value
				Me.SendPropertyChanged("REGIS_NO")
				Me.OnREGIS_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DALCNTYPE_CD", DbType:="NVarChar(MAX)")>  _
	Public Property DALCNTYPE_CD() As String
		Get
			Return Me._DALCNTYPE_CD
		End Get
		Set
			If (String.Equals(Me._DALCNTYPE_CD, value) = false) Then
				Me.OnDALCNTYPE_CDChanging(value)
				Me.SendPropertyChanging
				Me._DALCNTYPE_CD = value
				Me.SendPropertyChanged("DALCNTYPE_CD")
				Me.OnDALCNTYPE_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS_ID() As String
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (String.Equals(Me._STATUS_ID, value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_TYPE", DbType:="Int")>  _
	Public Property GROUP_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_TYPE
		End Get
		Set
			If (Me._GROUP_TYPE.Equals(value) = false) Then
				Me.OnGROUP_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_TYPE = value
				Me.SendPropertyChanged("GROUP_TYPE")
				Me.OnGROUP_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNSID", DbType:="Int")>  _
	Public Property LCNSID() As System.Nullable(Of Integer)
		Get
			Return Me._LCNSID
		End Get
		Set
			If (Me._LCNSID.Equals(value) = false) Then
				Me.OnLCNSIDChanging(value)
				Me.SendPropertyChanging
				Me._LCNSID = value
				Me.SendPropertyChanged("LCNSID")
				Me.OnLCNSIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNTPCD", DbType:="NVarChar(MAX)")>  _
	Public Property LCNTPCD() As String
		Get
			Return Me._LCNTPCD
		End Get
		Set
			If (String.Equals(Me._LCNTPCD, value) = false) Then
				Me.OnLCNTPCDChanging(value)
				Me.SendPropertyChanging
				Me._LCNTPCD = value
				Me.SendPropertyChanged("LCNTPCD")
				Me.OnLCNTPCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="NVarChar(MAX)")>  _
	Public Property PVNCD() As String
		Get
			Return Me._PVNCD
		End Get
		Set
			If (String.Equals(Me._PVNCD, value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NAME_THAI", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NAME_THAI() As String
		Get
			Return Me._DRUG_NAME_THAI
		End Get
		Set
			If (String.Equals(Me._DRUG_NAME_THAI, value) = false) Then
				Me.OnDRUG_NAME_THAIChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NAME_THAI = value
				Me.SendPropertyChanged("DRUG_NAME_THAI")
				Me.OnDRUG_NAME_THAIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NAME_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NAME_OTHER() As String
		Get
			Return Me._DRUG_NAME_OTHER
		End Get
		Set
			If (String.Equals(Me._DRUG_NAME_OTHER, value) = false) Then
				Me.OnDRUG_NAME_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NAME_OTHER = value
				Me.SendPropertyChanged("DRUG_NAME_OTHER")
				Me.OnDRUG_NAME_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_GROUP", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_GROUP() As String
		Get
			Return Me._DRUG_GROUP
		End Get
		Set
			If (String.Equals(Me._DRUG_GROUP, value) = false) Then
				Me.OnDRUG_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_GROUP = value
				Me.SendPropertyChanged("DRUG_GROUP")
				Me.OnDRUG_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_TYPE() As String
		Get
			Return Me._DRUG_TYPE
		End Get
		Set
			If (String.Equals(Me._DRUG_TYPE, value) = false) Then
				Me.OnDRUG_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_TYPE = value
				Me.SendPropertyChanged("DRUG_TYPE")
				Me.OnDRUG_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NEW", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NEW() As String
		Get
			Return Me._DRUG_NEW
		End Get
		Set
			If (String.Equals(Me._DRUG_NEW, value) = false) Then
				Me.OnDRUG_NEWChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NEW = value
				Me.SendPropertyChanged("DRUG_NEW")
				Me.OnDRUG_NEWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_PACKING", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_PACKING() As String
		Get
			Return Me._DRUG_PACKING
		End Get
		Set
			If (String.Equals(Me._DRUG_PACKING, value) = false) Then
				Me.OnDRUG_PACKINGChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_PACKING = value
				Me.SendPropertyChanged("DRUG_PACKING")
				Me.OnDRUG_PACKINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHARMACEUTICALS", DbType:="NVarChar(MAX)")>  _
	Public Property PHARMACEUTICALS() As String
		Get
			Return Me._PHARMACEUTICALS
		End Get
		Set
			If (String.Equals(Me._PHARMACEUTICALS, value) = false) Then
				Me.OnPHARMACEUTICALSChanging(value)
				Me.SendPropertyChanging
				Me._PHARMACEUTICALS = value
				Me.SendPropertyChanged("PHARMACEUTICALS")
				Me.OnPHARMACEUTICALSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_DOSAGE_FORMS", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_DOSAGE_FORMS() As String
		Get
			Return Me._CHK_DOSAGE_FORMS
		End Get
		Set
			If (String.Equals(Me._CHK_DOSAGE_FORMS, value) = false) Then
				Me.OnCHK_DOSAGE_FORMSChanging(value)
				Me.SendPropertyChanging
				Me._CHK_DOSAGE_FORMS = value
				Me.SendPropertyChanged("CHK_DOSAGE_FORMS")
				Me.OnCHK_DOSAGE_FORMSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOSAGE_FORMS_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property DOSAGE_FORMS_OTHER() As String
		Get
			Return Me._DOSAGE_FORMS_OTHER
		End Get
		Set
			If (String.Equals(Me._DOSAGE_FORMS_OTHER, value) = false) Then
				Me.OnDOSAGE_FORMS_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._DOSAGE_FORMS_OTHER = value
				Me.SendPropertyChanged("DOSAGE_FORMS_OTHER")
				Me.OnDOSAGE_FORMS_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_STYLE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_STYLE() As String
		Get
			Return Me._DRUG_STYLE
		End Get
		Set
			If (String.Equals(Me._DRUG_STYLE, value) = false) Then
				Me.OnDRUG_STYLEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_STYLE = value
				Me.SendPropertyChanged("DRUG_STYLE")
				Me.OnDRUG_STYLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_ADDRESS", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_ADDRESS() As String
		Get
			Return Me._DRUG_ADDRESS
		End Get
		Set
			If (String.Equals(Me._DRUG_ADDRESS, value) = false) Then
				Me.OnDRUG_ADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_ADDRESS = value
				Me.SendPropertyChanged("DRUG_ADDRESS")
				Me.OnDRUG_ADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_EQ_TO", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_EQ_TO() As String
		Get
			Return Me._DRUG_EQ_TO
		End Get
		Set
			If (String.Equals(Me._DRUG_EQ_TO, value) = false) Then
				Me.OnDRUG_EQ_TOChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_EQ_TO = value
				Me.SendPropertyChanged("DRUG_EQ_TO")
				Me.OnDRUG_EQ_TOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_BASE_FROM", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_BASE_FROM() As String
		Get
			Return Me._DRUG_BASE_FROM
		End Get
		Set
			If (String.Equals(Me._DRUG_BASE_FROM, value) = false) Then
				Me.OnDRUG_BASE_FROMChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_BASE_FROM = value
				Me.SendPropertyChanged("DRUG_BASE_FROM")
				Me.OnDRUG_BASE_FROMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_VOLUME", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_VOLUME() As String
		Get
			Return Me._DRUG_VOLUME
		End Get
		Set
			If (String.Equals(Me._DRUG_VOLUME, value) = false) Then
				Me.OnDRUG_VOLUMEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_VOLUME = value
				Me.SendPropertyChanged("DRUG_VOLUME")
				Me.OnDRUG_VOLUMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_COLOR", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_COLOR() As String
		Get
			Return Me._DRUG_COLOR
		End Get
		Set
			If (String.Equals(Me._DRUG_COLOR, value) = false) Then
				Me.OnDRUG_COLORChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_COLOR = value
				Me.SendPropertyChanged("DRUG_COLOR")
				Me.OnDRUG_COLORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_CHK_DUCK", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_CHK_DUCK() As String
		Get
			Return Me._ANIMAL_CHK_DUCK
		End Get
		Set
			If (String.Equals(Me._ANIMAL_CHK_DUCK, value) = false) Then
				Me.OnANIMAL_CHK_DUCKChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_CHK_DUCK = value
				Me.SendPropertyChanged("ANIMAL_CHK_DUCK")
				Me.OnANIMAL_CHK_DUCKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_TXT_DUCK", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_TXT_DUCK() As String
		Get
			Return Me._ANIMAL_TXT_DUCK
		End Get
		Set
			If (String.Equals(Me._ANIMAL_TXT_DUCK, value) = false) Then
				Me.OnANIMAL_TXT_DUCKChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_TXT_DUCK = value
				Me.SendPropertyChanged("ANIMAL_TXT_DUCK")
				Me.OnANIMAL_TXT_DUCKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_CHK_CHICKEN", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_CHK_CHICKEN() As String
		Get
			Return Me._ANIMAL_CHK_CHICKEN
		End Get
		Set
			If (String.Equals(Me._ANIMAL_CHK_CHICKEN, value) = false) Then
				Me.OnANIMAL_CHK_CHICKENChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_CHK_CHICKEN = value
				Me.SendPropertyChanged("ANIMAL_CHK_CHICKEN")
				Me.OnANIMAL_CHK_CHICKENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_TXT_CHICKEN", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_TXT_CHICKEN() As String
		Get
			Return Me._ANIMAL_TXT_CHICKEN
		End Get
		Set
			If (String.Equals(Me._ANIMAL_TXT_CHICKEN, value) = false) Then
				Me.OnANIMAL_TXT_CHICKENChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_TXT_CHICKEN = value
				Me.SendPropertyChanged("ANIMAL_TXT_CHICKEN")
				Me.OnANIMAL_TXT_CHICKENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_CHK_TURKEY", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_CHK_TURKEY() As String
		Get
			Return Me._ANIMAL_CHK_TURKEY
		End Get
		Set
			If (String.Equals(Me._ANIMAL_CHK_TURKEY, value) = false) Then
				Me.OnANIMAL_CHK_TURKEYChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_CHK_TURKEY = value
				Me.SendPropertyChanged("ANIMAL_CHK_TURKEY")
				Me.OnANIMAL_CHK_TURKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_TXT_TURKEY", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_TXT_TURKEY() As String
		Get
			Return Me._ANIMAL_TXT_TURKEY
		End Get
		Set
			If (String.Equals(Me._ANIMAL_TXT_TURKEY, value) = false) Then
				Me.OnANIMAL_TXT_TURKEYChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_TXT_TURKEY = value
				Me.SendPropertyChanged("ANIMAL_TXT_TURKEY")
				Me.OnANIMAL_TXT_TURKEYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_CHK_GOAT", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_CHK_GOAT() As String
		Get
			Return Me._ANIMAL_CHK_GOAT
		End Get
		Set
			If (String.Equals(Me._ANIMAL_CHK_GOAT, value) = false) Then
				Me.OnANIMAL_CHK_GOATChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_CHK_GOAT = value
				Me.SendPropertyChanged("ANIMAL_CHK_GOAT")
				Me.OnANIMAL_CHK_GOATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_TXT_GOAT", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_TXT_GOAT() As String
		Get
			Return Me._ANIMAL_TXT_GOAT
		End Get
		Set
			If (String.Equals(Me._ANIMAL_TXT_GOAT, value) = false) Then
				Me.OnANIMAL_TXT_GOATChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_TXT_GOAT = value
				Me.SendPropertyChanged("ANIMAL_TXT_GOAT")
				Me.OnANIMAL_TXT_GOATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_CHK_HOG", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_CHK_HOG() As String
		Get
			Return Me._ANIMAL_CHK_HOG
		End Get
		Set
			If (String.Equals(Me._ANIMAL_CHK_HOG, value) = false) Then
				Me.OnANIMAL_CHK_HOGChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_CHK_HOG = value
				Me.SendPropertyChanged("ANIMAL_CHK_HOG")
				Me.OnANIMAL_CHK_HOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_TXT_HOG", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_TXT_HOG() As String
		Get
			Return Me._ANIMAL_TXT_HOG
		End Get
		Set
			If (String.Equals(Me._ANIMAL_TXT_HOG, value) = false) Then
				Me.OnANIMAL_TXT_HOGChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_TXT_HOG = value
				Me.SendPropertyChanged("ANIMAL_TXT_HOG")
				Me.OnANIMAL_TXT_HOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_CHK_SHEEP", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_CHK_SHEEP() As String
		Get
			Return Me._ANIMAL_CHK_SHEEP
		End Get
		Set
			If (String.Equals(Me._ANIMAL_CHK_SHEEP, value) = false) Then
				Me.OnANIMAL_CHK_SHEEPChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_CHK_SHEEP = value
				Me.SendPropertyChanged("ANIMAL_CHK_SHEEP")
				Me.OnANIMAL_CHK_SHEEPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_TXT_SHEEP", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_TXT_SHEEP() As String
		Get
			Return Me._ANIMAL_TXT_SHEEP
		End Get
		Set
			If (String.Equals(Me._ANIMAL_TXT_SHEEP, value) = false) Then
				Me.OnANIMAL_TXT_SHEEPChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_TXT_SHEEP = value
				Me.SendPropertyChanged("ANIMAL_TXT_SHEEP")
				Me.OnANIMAL_TXT_SHEEPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_CHK_HORSE", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_CHK_HORSE() As String
		Get
			Return Me._ANIMAL_CHK_HORSE
		End Get
		Set
			If (String.Equals(Me._ANIMAL_CHK_HORSE, value) = false) Then
				Me.OnANIMAL_CHK_HORSEChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_CHK_HORSE = value
				Me.SendPropertyChanged("ANIMAL_CHK_HORSE")
				Me.OnANIMAL_CHK_HORSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_TXT_HORSE", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_TXT_HORSE() As String
		Get
			Return Me._ANIMAL_TXT_HORSE
		End Get
		Set
			If (String.Equals(Me._ANIMAL_TXT_HORSE, value) = false) Then
				Me.OnANIMAL_TXT_HORSEChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_TXT_HORSE = value
				Me.SendPropertyChanged("ANIMAL_TXT_HORSE")
				Me.OnANIMAL_TXT_HORSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_CHK_CAT", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_CHK_CAT() As String
		Get
			Return Me._ANIMAL_CHK_CAT
		End Get
		Set
			If (String.Equals(Me._ANIMAL_CHK_CAT, value) = false) Then
				Me.OnANIMAL_CHK_CATChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_CHK_CAT = value
				Me.SendPropertyChanged("ANIMAL_CHK_CAT")
				Me.OnANIMAL_CHK_CATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_TXT_CAT", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_TXT_CAT() As String
		Get
			Return Me._ANIMAL_TXT_CAT
		End Get
		Set
			If (String.Equals(Me._ANIMAL_TXT_CAT, value) = false) Then
				Me.OnANIMAL_TXT_CATChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_TXT_CAT = value
				Me.SendPropertyChanged("ANIMAL_TXT_CAT")
				Me.OnANIMAL_TXT_CATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_CHK_DOG", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_CHK_DOG() As String
		Get
			Return Me._ANIMAL_CHK_DOG
		End Get
		Set
			If (String.Equals(Me._ANIMAL_CHK_DOG, value) = false) Then
				Me.OnANIMAL_CHK_DOGChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_CHK_DOG = value
				Me.SendPropertyChanged("ANIMAL_CHK_DOG")
				Me.OnANIMAL_CHK_DOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_TXT_DOG", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_TXT_DOG() As String
		Get
			Return Me._ANIMAL_TXT_DOG
		End Get
		Set
			If (String.Equals(Me._ANIMAL_TXT_DOG, value) = false) Then
				Me.OnANIMAL_TXT_DOGChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_TXT_DOG = value
				Me.SendPropertyChanged("ANIMAL_TXT_DOG")
				Me.OnANIMAL_TXT_DOGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_CHK_FISH", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_CHK_FISH() As String
		Get
			Return Me._ANIMAL_CHK_FISH
		End Get
		Set
			If (String.Equals(Me._ANIMAL_CHK_FISH, value) = false) Then
				Me.OnANIMAL_CHK_FISHChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_CHK_FISH = value
				Me.SendPropertyChanged("ANIMAL_CHK_FISH")
				Me.OnANIMAL_CHK_FISHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_TXT_FISH", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_TXT_FISH() As String
		Get
			Return Me._ANIMAL_TXT_FISH
		End Get
		Set
			If (String.Equals(Me._ANIMAL_TXT_FISH, value) = false) Then
				Me.OnANIMAL_TXT_FISHChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_TXT_FISH = value
				Me.SendPropertyChanged("ANIMAL_TXT_FISH")
				Me.OnANIMAL_TXT_FISHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_CHK_COW", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_CHK_COW() As String
		Get
			Return Me._ANIMAL_CHK_COW
		End Get
		Set
			If (String.Equals(Me._ANIMAL_CHK_COW, value) = false) Then
				Me.OnANIMAL_CHK_COWChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_CHK_COW = value
				Me.SendPropertyChanged("ANIMAL_CHK_COW")
				Me.OnANIMAL_CHK_COWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_TXT_COW", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_TXT_COW() As String
		Get
			Return Me._ANIMAL_TXT_COW
		End Get
		Set
			If (String.Equals(Me._ANIMAL_TXT_COW, value) = false) Then
				Me.OnANIMAL_TXT_COWChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_TXT_COW = value
				Me.SendPropertyChanged("ANIMAL_TXT_COW")
				Me.OnANIMAL_TXT_COWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_CHK_SHRIMP", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_CHK_SHRIMP() As String
		Get
			Return Me._ANIMAL_CHK_SHRIMP
		End Get
		Set
			If (String.Equals(Me._ANIMAL_CHK_SHRIMP, value) = false) Then
				Me.OnANIMAL_CHK_SHRIMPChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_CHK_SHRIMP = value
				Me.SendPropertyChanged("ANIMAL_CHK_SHRIMP")
				Me.OnANIMAL_CHK_SHRIMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_TXT_SHRIMP", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_TXT_SHRIMP() As String
		Get
			Return Me._ANIMAL_TXT_SHRIMP
		End Get
		Set
			If (String.Equals(Me._ANIMAL_TXT_SHRIMP, value) = false) Then
				Me.OnANIMAL_TXT_SHRIMPChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_TXT_SHRIMP = value
				Me.SendPropertyChanged("ANIMAL_TXT_SHRIMP")
				Me.OnANIMAL_TXT_SHRIMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_CHK_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_CHK_OTHER() As String
		Get
			Return Me._ANIMAL_CHK_OTHER
		End Get
		Set
			If (String.Equals(Me._ANIMAL_CHK_OTHER, value) = false) Then
				Me.OnANIMAL_CHK_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_CHK_OTHER = value
				Me.SendPropertyChanged("ANIMAL_CHK_OTHER")
				Me.OnANIMAL_CHK_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_TXT_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_TXT_OTHER() As String
		Get
			Return Me._ANIMAL_TXT_OTHER
		End Get
		Set
			If (String.Equals(Me._ANIMAL_TXT_OTHER, value) = false) Then
				Me.OnANIMAL_TXT_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_TXT_OTHER = value
				Me.SendPropertyChanged("ANIMAL_TXT_OTHER")
				Me.OnANIMAL_TXT_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_CHK_BUFFALO", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_CHK_BUFFALO() As String
		Get
			Return Me._ANIMAL_CHK_BUFFALO
		End Get
		Set
			If (String.Equals(Me._ANIMAL_CHK_BUFFALO, value) = false) Then
				Me.OnANIMAL_CHK_BUFFALOChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_CHK_BUFFALO = value
				Me.SendPropertyChanged("ANIMAL_CHK_BUFFALO")
				Me.OnANIMAL_CHK_BUFFALOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_TXT_BUFFALO", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_TXT_BUFFALO() As String
		Get
			Return Me._ANIMAL_TXT_BUFFALO
		End Get
		Set
			If (String.Equals(Me._ANIMAL_TXT_BUFFALO, value) = false) Then
				Me.OnANIMAL_TXT_BUFFALOChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_TXT_BUFFALO = value
				Me.SendPropertyChanged("ANIMAL_TXT_BUFFALO")
				Me.OnANIMAL_TXT_BUFFALOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_CHK_USAGE", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_CHK_USAGE() As String
		Get
			Return Me._ANIMAL_CHK_USAGE
		End Get
		Set
			If (String.Equals(Me._ANIMAL_CHK_USAGE, value) = false) Then
				Me.OnANIMAL_CHK_USAGEChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_CHK_USAGE = value
				Me.SendPropertyChanged("ANIMAL_CHK_USAGE")
				Me.OnANIMAL_CHK_USAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_TXT_USAGE", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_TXT_USAGE() As String
		Get
			Return Me._ANIMAL_TXT_USAGE
		End Get
		Set
			If (String.Equals(Me._ANIMAL_TXT_USAGE, value) = false) Then
				Me.OnANIMAL_TXT_USAGEChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_TXT_USAGE = value
				Me.SendPropertyChanged("ANIMAL_TXT_USAGE")
				Me.OnANIMAL_TXT_USAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_CHK_TERM_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_CHK_TERM_DRUG() As String
		Get
			Return Me._ANIMAL_CHK_TERM_DRUG
		End Get
		Set
			If (String.Equals(Me._ANIMAL_CHK_TERM_DRUG, value) = false) Then
				Me.OnANIMAL_CHK_TERM_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_CHK_TERM_DRUG = value
				Me.SendPropertyChanged("ANIMAL_CHK_TERM_DRUG")
				Me.OnANIMAL_CHK_TERM_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANIMAL_TXT_TERM_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property ANIMAL_TXT_TERM_DRUG() As String
		Get
			Return Me._ANIMAL_TXT_TERM_DRUG
		End Get
		Set
			If (String.Equals(Me._ANIMAL_TXT_TERM_DRUG, value) = false) Then
				Me.OnANIMAL_TXT_TERM_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._ANIMAL_TXT_TERM_DRUG = value
				Me.SendPropertyChanged("ANIMAL_TXT_TERM_DRUG")
				Me.OnANIMAL_TXT_TERM_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctgcd", DbType:="NVarChar(MAX)")>  _
	Public Property ctgcd() As String
		Get
			Return Me._ctgcd
		End Get
		Set
			If (String.Equals(Me._ctgcd, value) = false) Then
				Me.OnctgcdChanging(value)
				Me.SendPropertyChanging
				Me._ctgcd = value
				Me.SendPropertyChanged("ctgcd")
				Me.OnctgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_kindcd", DbType:="NVarChar(MAX)")>  _
	Public Property kindcd() As String
		Get
			Return Me._kindcd
		End Get
		Set
			If (String.Equals(Me._kindcd, value) = false) Then
				Me.OnkindcdChanging(value)
				Me.SendPropertyChanging
				Me._kindcd = value
				Me.SendPropertyChanged("kindcd")
				Me.OnkindcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_DOSAGE_FORM", DbType:="NVarChar(MAX)")>  _
	Public Property FK_DOSAGE_FORM() As String
		Get
			Return Me._FK_DOSAGE_FORM
		End Get
		Set
			If (String.Equals(Me._FK_DOSAGE_FORM, value) = false) Then
				Me.OnFK_DOSAGE_FORMChanging(value)
				Me.SendPropertyChanging
				Me._FK_DOSAGE_FORM = value
				Me.SendPropertyChanged("FK_DOSAGE_FORM")
				Me.OnFK_DOSAGE_FORMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NATURE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NATURE() As String
		Get
			Return Me._DRUG_NATURE
		End Get
		Set
			If (String.Equals(Me._DRUG_NATURE, value) = false) Then
				Me.OnDRUG_NATUREChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NATURE = value
				Me.SendPropertyChanged("DRUG_NATURE")
				Me.OnDRUG_NATUREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_DRUG_TYPE1", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_DRUG_TYPE1() As String
		Get
			Return Me._CHK_DRUG_TYPE1
		End Get
		Set
			If (String.Equals(Me._CHK_DRUG_TYPE1, value) = false) Then
				Me.OnCHK_DRUG_TYPE1Changing(value)
				Me.SendPropertyChanging
				Me._CHK_DRUG_TYPE1 = value
				Me.SendPropertyChanged("CHK_DRUG_TYPE1")
				Me.OnCHK_DRUG_TYPE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_DRUG_TYPE2", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_DRUG_TYPE2() As String
		Get
			Return Me._CHK_DRUG_TYPE2
		End Get
		Set
			If (String.Equals(Me._CHK_DRUG_TYPE2, value) = false) Then
				Me.OnCHK_DRUG_TYPE2Changing(value)
				Me.SendPropertyChanging
				Me._CHK_DRUG_TYPE2 = value
				Me.SendPropertyChanged("CHK_DRUG_TYPE2")
				Me.OnCHK_DRUG_TYPE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_DRUG_TYPE3", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_DRUG_TYPE3() As String
		Get
			Return Me._CHK_DRUG_TYPE3
		End Get
		Set
			If (String.Equals(Me._CHK_DRUG_TYPE3, value) = false) Then
				Me.OnCHK_DRUG_TYPE3Changing(value)
				Me.SendPropertyChanging
				Me._CHK_DRUG_TYPE3 = value
				Me.SendPropertyChanged("CHK_DRUG_TYPE3")
				Me.OnCHK_DRUG_TYPE3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_STR", DbType:="NVarChar(50)")>  _
	Public Property DRUG_STR() As String
		Get
			Return Me._DRUG_STR
		End Get
		Set
			If (String.Equals(Me._DRUG_STR, value) = false) Then
				Me.OnDRUG_STRChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_STR = value
				Me.SendPropertyChanged("DRUG_STR")
				Me.OnDRUG_STRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_USE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_USE() As String
		Get
			Return Me._DRUG_USE
		End Get
		Set
			If (String.Equals(Me._DRUG_USE, value) = false) Then
				Me.OnDRUG_USEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_USE = value
				Me.SendPropertyChanged("DRUG_USE")
				Me.OnDRUG_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(MAX)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_UPLOAD() As String
		Get
			Return Me._CITIZEN_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_UPLOAD, value) = false) Then
				Me.OnCITIZEN_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_ID_UPLOAD")
				Me.OnCITIZEN_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_AUTHORIZE", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_ID_AUTHORIZE")
				Me.OnCITIZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="NVarChar(MAX)")>  _
	Public Property lcnscd() As String
		Get
			Return Me._lcnscd
		End Get
		Set
			If (String.Equals(Me._lcnscd, value) = false) Then
				Me.OnlcnscdChanging(value)
				Me.SendPropertyChanging
				Me._lcnscd = value
				Me.SendPropertyChanged("lcnscd")
				Me.OnlcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENERIC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property GENERIC_NAME() As String
		Get
			Return Me._GENERIC_NAME
		End Get
		Set
			If (String.Equals(Me._GENERIC_NAME, value) = false) Then
				Me.OnGENERIC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._GENERIC_NAME = value
				Me.SendPropertyChanged("GENERIC_NAME")
				Me.OnGENERIC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_NORMAL", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_NORMAL() As String
		Get
			Return Me._UNIT_NORMAL
		End Get
		Set
			If (String.Equals(Me._UNIT_NORMAL, value) = false) Then
				Me.OnUNIT_NORMALChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_NORMAL = value
				Me.SendPropertyChanged("UNIT_NORMAL")
				Me.OnUNIT_NORMALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_BIO", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_BIO() As String
		Get
			Return Me._UNIT_BIO
		End Get
		Set
			If (String.Equals(Me._UNIT_BIO, value) = false) Then
				Me.OnUNIT_BIOChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_BIO = value
				Me.SendPropertyChanged("UNIT_BIO")
				Me.OnUNIT_BIOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_CONTOURS", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_CONTOURS() As String
		Get
			Return Me._DRUG_CONTOURS
		End Get
		Set
			If (String.Equals(Me._DRUG_CONTOURS, value) = false) Then
				Me.OnDRUG_CONTOURSChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_CONTOURS = value
				Me.SendPropertyChanged("DRUG_CONTOURS")
				Me.OnDRUG_CONTOURSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_TYPE_IN_LAW", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_TYPE_IN_LAW() As String
		Get
			Return Me._DRUG_TYPE_IN_LAW
		End Get
		Set
			If (String.Equals(Me._DRUG_TYPE_IN_LAW, value) = false) Then
				Me.OnDRUG_TYPE_IN_LAWChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_TYPE_IN_LAW = value
				Me.SendPropertyChanged("DRUG_TYPE_IN_LAW")
				Me.OnDRUG_TYPE_IN_LAWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STORAGE_CODITIONS", DbType:="NVarChar(MAX)")>  _
	Public Property STORAGE_CODITIONS() As String
		Get
			Return Me._STORAGE_CODITIONS
		End Get
		Set
			If (String.Equals(Me._STORAGE_CODITIONS, value) = false) Then
				Me.OnSTORAGE_CODITIONSChanging(value)
				Me.SendPropertyChanging
				Me._STORAGE_CODITIONS = value
				Me.SendPropertyChanged("STORAGE_CODITIONS")
				Me.OnSTORAGE_CODITIONSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACKAGE_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property PACKAGE_DETAIL() As String
		Get
			Return Me._PACKAGE_DETAIL
		End Get
		Set
			If (String.Equals(Me._PACKAGE_DETAIL, value) = false) Then
				Me.OnPACKAGE_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._PACKAGE_DETAIL = value
				Me.SendPropertyChanged("PACKAGE_DETAIL")
				Me.OnPACKAGE_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_OLD", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_OLD() As String
		Get
			Return Me._RCVNO_OLD
		End Get
		Set
			If (String.Equals(Me._RCVNO_OLD, value) = false) Then
				Me.OnRCVNO_OLDChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_OLD = value
				Me.SendPropertyChanged("RCVNO_OLD")
				Me.OnRCVNO_OLDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_PI")>  _
Partial Public Class DRRGT_PI
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As String
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _PI_Th_Name_Medicinal_Product As String
	
	Private _PI_Th_Active_Ingradient_Strenght As String
	
	Private _PI_Th_Product_Desc As String
	
	Private _PI_Th_Pharmacody_Pharmacoki As String
	
	Private _PI_Th_Pharmdynamic As String
	
	Private _PI_Th_Pharmacokinetic As String
	
	Private _PI_Th_Indication As String
	
	Private _PI_Th_Recommend_Dose As String
	
	Private _PI_Th_Administration As String
	
	Private _PI_Th_Contraindication As String
	
	Private _PI_Th_Warning_Precaution As String
	
	Private _PI_Th_Interaction As String
	
	Private _PI_Th_Pregnancy_Lactation As String
	
	Private _PI_Th_Undesirable_Effect As String
	
	Private _PI_Th_Overdose As String
	
	Private _PI_Th_Storage_Condition As String
	
	Private _PI_Th_Dose_From_Packaging As String
	
	Private _PI_Th_MA_Holder As String
	
	Private _PI_Th_MA_Number As String
	
	Private _PI_Th_Date_Approve As String
	
	Private _PI_Th_Date_Revision As String
	
	Private _PI_Eng_Name_Medicinal_Product As String
	
	Private _PI_Eng_Active_Ingradient_Strenght As String
	
	Private _PI_Eng_Product_Desc As String
	
	Private _PI_Eng_Pharmacody_Pharmacoki As String
	
	Private _PI_Eng_Pharmdynamic As String
	
	Private _PI_Eng_Pharmacokinetic As String
	
	Private _PI_Eng_Indication As String
	
	Private _PI_Eng_Recommend_Dose As String
	
	Private _PI_Eng_Administration As String
	
	Private _PI_Eng_Contraindication As String
	
	Private _PI_Eng_Warning_Precaution As String
	
	Private _PI_Eng_Interaction As String
	
	Private _PI_Eng_Pregnancy_Lactation As String
	
	Private _PI_Eng_Undesirable_Effect As String
	
	Private _PI_Eng_Overdose As String
	
	Private _PI_Eng_Storage_Condition As String
	
	Private _PI_Eng_Dose_From_Packaging As String
	
	Private _PI_Eng_MA_Holder As String
	
	Private _PI_Eng_MA_Number As String
	
	Private _PI_Eng_Date_Approve As String
	
	Private _PI_Eng_Date_Revision As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _STATUS_ID As String
	
	Private _CTZNO As String
	
	Private _IDENTIFY As String
	
	Private _PROCESS_ID As String
	
	Private _STATUS_ID_RGT As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnPI_Th_Name_Medicinal_ProductChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Name_Medicinal_ProductChanged()
    End Sub
    Partial Private Sub OnPI_Th_Active_Ingradient_StrenghtChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Active_Ingradient_StrenghtChanged()
    End Sub
    Partial Private Sub OnPI_Th_Product_DescChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Product_DescChanged()
    End Sub
    Partial Private Sub OnPI_Th_Pharmacody_PharmacokiChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Pharmacody_PharmacokiChanged()
    End Sub
    Partial Private Sub OnPI_Th_PharmdynamicChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_PharmdynamicChanged()
    End Sub
    Partial Private Sub OnPI_Th_PharmacokineticChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_PharmacokineticChanged()
    End Sub
    Partial Private Sub OnPI_Th_IndicationChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_IndicationChanged()
    End Sub
    Partial Private Sub OnPI_Th_Recommend_DoseChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Recommend_DoseChanged()
    End Sub
    Partial Private Sub OnPI_Th_AdministrationChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_AdministrationChanged()
    End Sub
    Partial Private Sub OnPI_Th_ContraindicationChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_ContraindicationChanged()
    End Sub
    Partial Private Sub OnPI_Th_Warning_PrecautionChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Warning_PrecautionChanged()
    End Sub
    Partial Private Sub OnPI_Th_InteractionChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_InteractionChanged()
    End Sub
    Partial Private Sub OnPI_Th_Pregnancy_LactationChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Pregnancy_LactationChanged()
    End Sub
    Partial Private Sub OnPI_Th_Undesirable_EffectChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Undesirable_EffectChanged()
    End Sub
    Partial Private Sub OnPI_Th_OverdoseChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_OverdoseChanged()
    End Sub
    Partial Private Sub OnPI_Th_Storage_ConditionChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Storage_ConditionChanged()
    End Sub
    Partial Private Sub OnPI_Th_Dose_From_PackagingChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Dose_From_PackagingChanged()
    End Sub
    Partial Private Sub OnPI_Th_MA_HolderChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_MA_HolderChanged()
    End Sub
    Partial Private Sub OnPI_Th_MA_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_MA_NumberChanged()
    End Sub
    Partial Private Sub OnPI_Th_Date_ApproveChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Date_ApproveChanged()
    End Sub
    Partial Private Sub OnPI_Th_Date_RevisionChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Th_Date_RevisionChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Name_Medicinal_ProductChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Name_Medicinal_ProductChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Active_Ingradient_StrenghtChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Active_Ingradient_StrenghtChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Product_DescChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Product_DescChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Pharmacody_PharmacokiChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Pharmacody_PharmacokiChanged()
    End Sub
    Partial Private Sub OnPI_Eng_PharmdynamicChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_PharmdynamicChanged()
    End Sub
    Partial Private Sub OnPI_Eng_PharmacokineticChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_PharmacokineticChanged()
    End Sub
    Partial Private Sub OnPI_Eng_IndicationChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_IndicationChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Recommend_DoseChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Recommend_DoseChanged()
    End Sub
    Partial Private Sub OnPI_Eng_AdministrationChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_AdministrationChanged()
    End Sub
    Partial Private Sub OnPI_Eng_ContraindicationChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_ContraindicationChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Warning_PrecautionChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Warning_PrecautionChanged()
    End Sub
    Partial Private Sub OnPI_Eng_InteractionChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_InteractionChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Pregnancy_LactationChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Pregnancy_LactationChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Undesirable_EffectChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Undesirable_EffectChanged()
    End Sub
    Partial Private Sub OnPI_Eng_OverdoseChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_OverdoseChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Storage_ConditionChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Storage_ConditionChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Dose_From_PackagingChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Dose_From_PackagingChanged()
    End Sub
    Partial Private Sub OnPI_Eng_MA_HolderChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_MA_HolderChanged()
    End Sub
    Partial Private Sub OnPI_Eng_MA_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_MA_NumberChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Date_ApproveChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Date_ApproveChanged()
    End Sub
    Partial Private Sub OnPI_Eng_Date_RevisionChanging(value As String)
    End Sub
    Partial Private Sub OnPI_Eng_Date_RevisionChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnCTZNOChanging(value As String)
    End Sub
    Partial Private Sub OnCTZNOChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_ID_RGTChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_ID_RGTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Name_Medicinal_Product", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Name_Medicinal_Product() As String
		Get
			Return Me._PI_Th_Name_Medicinal_Product
		End Get
		Set
			If (String.Equals(Me._PI_Th_Name_Medicinal_Product, value) = false) Then
				Me.OnPI_Th_Name_Medicinal_ProductChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Name_Medicinal_Product = value
				Me.SendPropertyChanged("PI_Th_Name_Medicinal_Product")
				Me.OnPI_Th_Name_Medicinal_ProductChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Active_Ingradient_Strenght", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Active_Ingradient_Strenght() As String
		Get
			Return Me._PI_Th_Active_Ingradient_Strenght
		End Get
		Set
			If (String.Equals(Me._PI_Th_Active_Ingradient_Strenght, value) = false) Then
				Me.OnPI_Th_Active_Ingradient_StrenghtChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Active_Ingradient_Strenght = value
				Me.SendPropertyChanged("PI_Th_Active_Ingradient_Strenght")
				Me.OnPI_Th_Active_Ingradient_StrenghtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Product_Desc", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Product_Desc() As String
		Get
			Return Me._PI_Th_Product_Desc
		End Get
		Set
			If (String.Equals(Me._PI_Th_Product_Desc, value) = false) Then
				Me.OnPI_Th_Product_DescChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Product_Desc = value
				Me.SendPropertyChanged("PI_Th_Product_Desc")
				Me.OnPI_Th_Product_DescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Pharmacody_Pharmacoki", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Pharmacody_Pharmacoki() As String
		Get
			Return Me._PI_Th_Pharmacody_Pharmacoki
		End Get
		Set
			If (String.Equals(Me._PI_Th_Pharmacody_Pharmacoki, value) = false) Then
				Me.OnPI_Th_Pharmacody_PharmacokiChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Pharmacody_Pharmacoki = value
				Me.SendPropertyChanged("PI_Th_Pharmacody_Pharmacoki")
				Me.OnPI_Th_Pharmacody_PharmacokiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Pharmdynamic", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Pharmdynamic() As String
		Get
			Return Me._PI_Th_Pharmdynamic
		End Get
		Set
			If (String.Equals(Me._PI_Th_Pharmdynamic, value) = false) Then
				Me.OnPI_Th_PharmdynamicChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Pharmdynamic = value
				Me.SendPropertyChanged("PI_Th_Pharmdynamic")
				Me.OnPI_Th_PharmdynamicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Pharmacokinetic", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Pharmacokinetic() As String
		Get
			Return Me._PI_Th_Pharmacokinetic
		End Get
		Set
			If (String.Equals(Me._PI_Th_Pharmacokinetic, value) = false) Then
				Me.OnPI_Th_PharmacokineticChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Pharmacokinetic = value
				Me.SendPropertyChanged("PI_Th_Pharmacokinetic")
				Me.OnPI_Th_PharmacokineticChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Indication", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Indication() As String
		Get
			Return Me._PI_Th_Indication
		End Get
		Set
			If (String.Equals(Me._PI_Th_Indication, value) = false) Then
				Me.OnPI_Th_IndicationChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Indication = value
				Me.SendPropertyChanged("PI_Th_Indication")
				Me.OnPI_Th_IndicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Recommend_Dose", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Recommend_Dose() As String
		Get
			Return Me._PI_Th_Recommend_Dose
		End Get
		Set
			If (String.Equals(Me._PI_Th_Recommend_Dose, value) = false) Then
				Me.OnPI_Th_Recommend_DoseChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Recommend_Dose = value
				Me.SendPropertyChanged("PI_Th_Recommend_Dose")
				Me.OnPI_Th_Recommend_DoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Administration", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Administration() As String
		Get
			Return Me._PI_Th_Administration
		End Get
		Set
			If (String.Equals(Me._PI_Th_Administration, value) = false) Then
				Me.OnPI_Th_AdministrationChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Administration = value
				Me.SendPropertyChanged("PI_Th_Administration")
				Me.OnPI_Th_AdministrationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Contraindication", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Contraindication() As String
		Get
			Return Me._PI_Th_Contraindication
		End Get
		Set
			If (String.Equals(Me._PI_Th_Contraindication, value) = false) Then
				Me.OnPI_Th_ContraindicationChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Contraindication = value
				Me.SendPropertyChanged("PI_Th_Contraindication")
				Me.OnPI_Th_ContraindicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Warning_Precaution", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Warning_Precaution() As String
		Get
			Return Me._PI_Th_Warning_Precaution
		End Get
		Set
			If (String.Equals(Me._PI_Th_Warning_Precaution, value) = false) Then
				Me.OnPI_Th_Warning_PrecautionChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Warning_Precaution = value
				Me.SendPropertyChanged("PI_Th_Warning_Precaution")
				Me.OnPI_Th_Warning_PrecautionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Interaction", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Interaction() As String
		Get
			Return Me._PI_Th_Interaction
		End Get
		Set
			If (String.Equals(Me._PI_Th_Interaction, value) = false) Then
				Me.OnPI_Th_InteractionChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Interaction = value
				Me.SendPropertyChanged("PI_Th_Interaction")
				Me.OnPI_Th_InteractionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Pregnancy_Lactation", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Pregnancy_Lactation() As String
		Get
			Return Me._PI_Th_Pregnancy_Lactation
		End Get
		Set
			If (String.Equals(Me._PI_Th_Pregnancy_Lactation, value) = false) Then
				Me.OnPI_Th_Pregnancy_LactationChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Pregnancy_Lactation = value
				Me.SendPropertyChanged("PI_Th_Pregnancy_Lactation")
				Me.OnPI_Th_Pregnancy_LactationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Undesirable_Effect", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Undesirable_Effect() As String
		Get
			Return Me._PI_Th_Undesirable_Effect
		End Get
		Set
			If (String.Equals(Me._PI_Th_Undesirable_Effect, value) = false) Then
				Me.OnPI_Th_Undesirable_EffectChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Undesirable_Effect = value
				Me.SendPropertyChanged("PI_Th_Undesirable_Effect")
				Me.OnPI_Th_Undesirable_EffectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Overdose", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Overdose() As String
		Get
			Return Me._PI_Th_Overdose
		End Get
		Set
			If (String.Equals(Me._PI_Th_Overdose, value) = false) Then
				Me.OnPI_Th_OverdoseChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Overdose = value
				Me.SendPropertyChanged("PI_Th_Overdose")
				Me.OnPI_Th_OverdoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Storage_Condition", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Storage_Condition() As String
		Get
			Return Me._PI_Th_Storage_Condition
		End Get
		Set
			If (String.Equals(Me._PI_Th_Storage_Condition, value) = false) Then
				Me.OnPI_Th_Storage_ConditionChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Storage_Condition = value
				Me.SendPropertyChanged("PI_Th_Storage_Condition")
				Me.OnPI_Th_Storage_ConditionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Dose_From_Packaging", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Dose_From_Packaging() As String
		Get
			Return Me._PI_Th_Dose_From_Packaging
		End Get
		Set
			If (String.Equals(Me._PI_Th_Dose_From_Packaging, value) = false) Then
				Me.OnPI_Th_Dose_From_PackagingChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Dose_From_Packaging = value
				Me.SendPropertyChanged("PI_Th_Dose_From_Packaging")
				Me.OnPI_Th_Dose_From_PackagingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_MA_Holder", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_MA_Holder() As String
		Get
			Return Me._PI_Th_MA_Holder
		End Get
		Set
			If (String.Equals(Me._PI_Th_MA_Holder, value) = false) Then
				Me.OnPI_Th_MA_HolderChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_MA_Holder = value
				Me.SendPropertyChanged("PI_Th_MA_Holder")
				Me.OnPI_Th_MA_HolderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_MA_Number", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_MA_Number() As String
		Get
			Return Me._PI_Th_MA_Number
		End Get
		Set
			If (String.Equals(Me._PI_Th_MA_Number, value) = false) Then
				Me.OnPI_Th_MA_NumberChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_MA_Number = value
				Me.SendPropertyChanged("PI_Th_MA_Number")
				Me.OnPI_Th_MA_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Date_Approve", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Date_Approve() As String
		Get
			Return Me._PI_Th_Date_Approve
		End Get
		Set
			If (String.Equals(Me._PI_Th_Date_Approve, value) = false) Then
				Me.OnPI_Th_Date_ApproveChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Date_Approve = value
				Me.SendPropertyChanged("PI_Th_Date_Approve")
				Me.OnPI_Th_Date_ApproveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Th_Date_Revision", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Th_Date_Revision() As String
		Get
			Return Me._PI_Th_Date_Revision
		End Get
		Set
			If (String.Equals(Me._PI_Th_Date_Revision, value) = false) Then
				Me.OnPI_Th_Date_RevisionChanging(value)
				Me.SendPropertyChanging
				Me._PI_Th_Date_Revision = value
				Me.SendPropertyChanged("PI_Th_Date_Revision")
				Me.OnPI_Th_Date_RevisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Name_Medicinal_Product", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Name_Medicinal_Product() As String
		Get
			Return Me._PI_Eng_Name_Medicinal_Product
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Name_Medicinal_Product, value) = false) Then
				Me.OnPI_Eng_Name_Medicinal_ProductChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Name_Medicinal_Product = value
				Me.SendPropertyChanged("PI_Eng_Name_Medicinal_Product")
				Me.OnPI_Eng_Name_Medicinal_ProductChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Active_Ingradient_Strenght", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Active_Ingradient_Strenght() As String
		Get
			Return Me._PI_Eng_Active_Ingradient_Strenght
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Active_Ingradient_Strenght, value) = false) Then
				Me.OnPI_Eng_Active_Ingradient_StrenghtChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Active_Ingradient_Strenght = value
				Me.SendPropertyChanged("PI_Eng_Active_Ingradient_Strenght")
				Me.OnPI_Eng_Active_Ingradient_StrenghtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Product_Desc", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Product_Desc() As String
		Get
			Return Me._PI_Eng_Product_Desc
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Product_Desc, value) = false) Then
				Me.OnPI_Eng_Product_DescChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Product_Desc = value
				Me.SendPropertyChanged("PI_Eng_Product_Desc")
				Me.OnPI_Eng_Product_DescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Pharmacody_Pharmacoki", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Pharmacody_Pharmacoki() As String
		Get
			Return Me._PI_Eng_Pharmacody_Pharmacoki
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Pharmacody_Pharmacoki, value) = false) Then
				Me.OnPI_Eng_Pharmacody_PharmacokiChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Pharmacody_Pharmacoki = value
				Me.SendPropertyChanged("PI_Eng_Pharmacody_Pharmacoki")
				Me.OnPI_Eng_Pharmacody_PharmacokiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Pharmdynamic", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Pharmdynamic() As String
		Get
			Return Me._PI_Eng_Pharmdynamic
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Pharmdynamic, value) = false) Then
				Me.OnPI_Eng_PharmdynamicChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Pharmdynamic = value
				Me.SendPropertyChanged("PI_Eng_Pharmdynamic")
				Me.OnPI_Eng_PharmdynamicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Pharmacokinetic", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Pharmacokinetic() As String
		Get
			Return Me._PI_Eng_Pharmacokinetic
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Pharmacokinetic, value) = false) Then
				Me.OnPI_Eng_PharmacokineticChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Pharmacokinetic = value
				Me.SendPropertyChanged("PI_Eng_Pharmacokinetic")
				Me.OnPI_Eng_PharmacokineticChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Indication", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Indication() As String
		Get
			Return Me._PI_Eng_Indication
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Indication, value) = false) Then
				Me.OnPI_Eng_IndicationChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Indication = value
				Me.SendPropertyChanged("PI_Eng_Indication")
				Me.OnPI_Eng_IndicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Recommend_Dose", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Recommend_Dose() As String
		Get
			Return Me._PI_Eng_Recommend_Dose
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Recommend_Dose, value) = false) Then
				Me.OnPI_Eng_Recommend_DoseChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Recommend_Dose = value
				Me.SendPropertyChanged("PI_Eng_Recommend_Dose")
				Me.OnPI_Eng_Recommend_DoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Administration", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Administration() As String
		Get
			Return Me._PI_Eng_Administration
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Administration, value) = false) Then
				Me.OnPI_Eng_AdministrationChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Administration = value
				Me.SendPropertyChanged("PI_Eng_Administration")
				Me.OnPI_Eng_AdministrationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Contraindication", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Contraindication() As String
		Get
			Return Me._PI_Eng_Contraindication
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Contraindication, value) = false) Then
				Me.OnPI_Eng_ContraindicationChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Contraindication = value
				Me.SendPropertyChanged("PI_Eng_Contraindication")
				Me.OnPI_Eng_ContraindicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Warning_Precaution", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Warning_Precaution() As String
		Get
			Return Me._PI_Eng_Warning_Precaution
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Warning_Precaution, value) = false) Then
				Me.OnPI_Eng_Warning_PrecautionChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Warning_Precaution = value
				Me.SendPropertyChanged("PI_Eng_Warning_Precaution")
				Me.OnPI_Eng_Warning_PrecautionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Interaction", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Interaction() As String
		Get
			Return Me._PI_Eng_Interaction
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Interaction, value) = false) Then
				Me.OnPI_Eng_InteractionChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Interaction = value
				Me.SendPropertyChanged("PI_Eng_Interaction")
				Me.OnPI_Eng_InteractionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Pregnancy_Lactation", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Pregnancy_Lactation() As String
		Get
			Return Me._PI_Eng_Pregnancy_Lactation
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Pregnancy_Lactation, value) = false) Then
				Me.OnPI_Eng_Pregnancy_LactationChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Pregnancy_Lactation = value
				Me.SendPropertyChanged("PI_Eng_Pregnancy_Lactation")
				Me.OnPI_Eng_Pregnancy_LactationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Undesirable_Effect", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Undesirable_Effect() As String
		Get
			Return Me._PI_Eng_Undesirable_Effect
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Undesirable_Effect, value) = false) Then
				Me.OnPI_Eng_Undesirable_EffectChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Undesirable_Effect = value
				Me.SendPropertyChanged("PI_Eng_Undesirable_Effect")
				Me.OnPI_Eng_Undesirable_EffectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Overdose", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Overdose() As String
		Get
			Return Me._PI_Eng_Overdose
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Overdose, value) = false) Then
				Me.OnPI_Eng_OverdoseChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Overdose = value
				Me.SendPropertyChanged("PI_Eng_Overdose")
				Me.OnPI_Eng_OverdoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Storage_Condition", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Storage_Condition() As String
		Get
			Return Me._PI_Eng_Storage_Condition
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Storage_Condition, value) = false) Then
				Me.OnPI_Eng_Storage_ConditionChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Storage_Condition = value
				Me.SendPropertyChanged("PI_Eng_Storage_Condition")
				Me.OnPI_Eng_Storage_ConditionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Dose_From_Packaging", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Dose_From_Packaging() As String
		Get
			Return Me._PI_Eng_Dose_From_Packaging
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Dose_From_Packaging, value) = false) Then
				Me.OnPI_Eng_Dose_From_PackagingChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Dose_From_Packaging = value
				Me.SendPropertyChanged("PI_Eng_Dose_From_Packaging")
				Me.OnPI_Eng_Dose_From_PackagingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_MA_Holder", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_MA_Holder() As String
		Get
			Return Me._PI_Eng_MA_Holder
		End Get
		Set
			If (String.Equals(Me._PI_Eng_MA_Holder, value) = false) Then
				Me.OnPI_Eng_MA_HolderChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_MA_Holder = value
				Me.SendPropertyChanged("PI_Eng_MA_Holder")
				Me.OnPI_Eng_MA_HolderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_MA_Number", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_MA_Number() As String
		Get
			Return Me._PI_Eng_MA_Number
		End Get
		Set
			If (String.Equals(Me._PI_Eng_MA_Number, value) = false) Then
				Me.OnPI_Eng_MA_NumberChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_MA_Number = value
				Me.SendPropertyChanged("PI_Eng_MA_Number")
				Me.OnPI_Eng_MA_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Date_Approve", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Date_Approve() As String
		Get
			Return Me._PI_Eng_Date_Approve
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Date_Approve, value) = false) Then
				Me.OnPI_Eng_Date_ApproveChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Date_Approve = value
				Me.SendPropertyChanged("PI_Eng_Date_Approve")
				Me.OnPI_Eng_Date_ApproveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PI_Eng_Date_Revision", DbType:="NVarChar(MAX)")>  _
	Public Property PI_Eng_Date_Revision() As String
		Get
			Return Me._PI_Eng_Date_Revision
		End Get
		Set
			If (String.Equals(Me._PI_Eng_Date_Revision, value) = false) Then
				Me.OnPI_Eng_Date_RevisionChanging(value)
				Me.SendPropertyChanging
				Me._PI_Eng_Date_Revision = value
				Me.SendPropertyChanged("PI_Eng_Date_Revision")
				Me.OnPI_Eng_Date_RevisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="NVarChar(50)")>  _
	Public Property STATUS_ID() As String
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (String.Equals(Me._STATUS_ID, value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CTZNO", DbType:="NVarChar(MAX)")>  _
	Public Property CTZNO() As String
		Get
			Return Me._CTZNO
		End Get
		Set
			If (String.Equals(Me._CTZNO, value) = false) Then
				Me.OnCTZNOChanging(value)
				Me.SendPropertyChanging
				Me._CTZNO = value
				Me.SendPropertyChanged("CTZNO")
				Me.OnCTZNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID_RGT", DbType:="NVarChar(50)")>  _
	Public Property STATUS_ID_RGT() As String
		Get
			Return Me._STATUS_ID_RGT
		End Get
		Set
			If (String.Equals(Me._STATUS_ID_RGT, value) = false) Then
				Me.OnSTATUS_ID_RGTChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID_RGT = value
				Me.SendPropertyChanged("STATUS_ID_RGT")
				Me.OnSTATUS_ID_RGTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_PIL")>  _
Partial Public Class DRRGT_PIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _PIL_Th_Name_Medicinal_Product As String
	
	Private _PIL_Th_Product_Desc As String
	
	Private _PIL_Th_Active_Ingradient_Strenght As String
	
	Private _PIL_Th_Generic_Name As String
	
	Private _PIL_Th_Used_For As String
	
	Private _PIL_Th_When_Not_Take As String
	
	Private _PIL_Th_Avoid_For_Take As String
	
	Private _PIL_Th_How_to_Take As String
	
	Private _PIL_Th_When_Miss_Dose As String
	
	Private _PIL_Th_Overdose As String
	
	Private _PIL_Th_During_Take As String
	
	Private _PIL_Th_When_Meet_Doctor_Urgent As String
	
	Private _PIL_Th_When_Meet_Doctor As String
	
	Private _PIL_Th_How_to_Storage As String
	
	Private _PIL_Th_MA_Holder As String
	
	Private _PIL_Th_MA_Number As String
	
	Private _PIL_Th_Date_Approve As String
	
	Private _PIL_Th_Date_Revision As String
	
	Private _PIL_Eng_Name_Medicinal_Product As String
	
	Private _PIL_Eng_Product_Desc As String
	
	Private _PIL_Eng_Active_Ingradient_Strenght As String
	
	Private _PIL_Eng_Generic_Name As String
	
	Private _PIL_Eng_Used_For As String
	
	Private _PIL_Eng_When_Not_Take As String
	
	Private _PIL_Eng_Avoid_For_Take As String
	
	Private _PIL_Eng_How_to_Take As String
	
	Private _PIL_Eng_When_Miss_Dose As String
	
	Private _PIL_Eng_Overdose As String
	
	Private _PIL_Eng_During_Take As String
	
	Private _PIL_Eng_When_Meet_Doctor_Urgent As String
	
	Private _PIL_Eng_When_Meet_Doctor As String
	
	Private _PIL_Eng_How_to_Storage As String
	
	Private _PIL_Eng_MA_Holder As String
	
	Private _PIL_Eng_MA_Number As String
	
	Private _PIL_Eng_Date_Approve As String
	
	Private _PIL_Eng_Date_Revision As String
	
	Private _STATUS_ID As String
	
	Private _CTZNO As String
	
	Private _IDENTIFY As String
	
	Private _PROCESS_ID As String
	
	Private _STATUS_ID_RGT As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnPIL_Th_Name_Medicinal_ProductChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_Name_Medicinal_ProductChanged()
    End Sub
    Partial Private Sub OnPIL_Th_Product_DescChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_Product_DescChanged()
    End Sub
    Partial Private Sub OnPIL_Th_Active_Ingradient_StrenghtChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_Active_Ingradient_StrenghtChanged()
    End Sub
    Partial Private Sub OnPIL_Th_Generic_NameChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_Generic_NameChanged()
    End Sub
    Partial Private Sub OnPIL_Th_Used_ForChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_Used_ForChanged()
    End Sub
    Partial Private Sub OnPIL_Th_When_Not_TakeChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_When_Not_TakeChanged()
    End Sub
    Partial Private Sub OnPIL_Th_Avoid_For_TakeChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_Avoid_For_TakeChanged()
    End Sub
    Partial Private Sub OnPIL_Th_How_to_TakeChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_How_to_TakeChanged()
    End Sub
    Partial Private Sub OnPIL_Th_When_Miss_DoseChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_When_Miss_DoseChanged()
    End Sub
    Partial Private Sub OnPIL_Th_OverdoseChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_OverdoseChanged()
    End Sub
    Partial Private Sub OnPIL_Th_During_TakeChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_During_TakeChanged()
    End Sub
    Partial Private Sub OnPIL_Th_When_Meet_Doctor_UrgentChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_When_Meet_Doctor_UrgentChanged()
    End Sub
    Partial Private Sub OnPIL_Th_When_Meet_DoctorChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_When_Meet_DoctorChanged()
    End Sub
    Partial Private Sub OnPIL_Th_How_to_StorageChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_How_to_StorageChanged()
    End Sub
    Partial Private Sub OnPIL_Th_MA_HolderChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_MA_HolderChanged()
    End Sub
    Partial Private Sub OnPIL_Th_MA_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_MA_NumberChanged()
    End Sub
    Partial Private Sub OnPIL_Th_Date_ApproveChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_Date_ApproveChanged()
    End Sub
    Partial Private Sub OnPIL_Th_Date_RevisionChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Th_Date_RevisionChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_Name_Medicinal_ProductChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_Name_Medicinal_ProductChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_Product_DescChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_Product_DescChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_Active_Ingradient_StrenghtChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_Active_Ingradient_StrenghtChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_Generic_NameChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_Generic_NameChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_Used_ForChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_Used_ForChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_When_Not_TakeChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_When_Not_TakeChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_Avoid_For_TakeChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_Avoid_For_TakeChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_How_to_TakeChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_How_to_TakeChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_When_Miss_DoseChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_When_Miss_DoseChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_OverdoseChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_OverdoseChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_During_TakeChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_During_TakeChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_When_Meet_Doctor_UrgentChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_When_Meet_Doctor_UrgentChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_When_Meet_DoctorChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_When_Meet_DoctorChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_How_to_StorageChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_How_to_StorageChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_MA_HolderChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_MA_HolderChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_MA_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_MA_NumberChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_Date_ApproveChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_Date_ApproveChanged()
    End Sub
    Partial Private Sub OnPIL_Eng_Date_RevisionChanging(value As String)
    End Sub
    Partial Private Sub OnPIL_Eng_Date_RevisionChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnCTZNOChanging(value As String)
    End Sub
    Partial Private Sub OnCTZNOChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_ID_RGTChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_ID_RGTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Name_Medicinal_Product", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Name_Medicinal_Product() As String
		Get
			Return Me._PIL_Th_Name_Medicinal_Product
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Name_Medicinal_Product, value) = false) Then
				Me.OnPIL_Th_Name_Medicinal_ProductChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Name_Medicinal_Product = value
				Me.SendPropertyChanged("PIL_Th_Name_Medicinal_Product")
				Me.OnPIL_Th_Name_Medicinal_ProductChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Product_Desc", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Product_Desc() As String
		Get
			Return Me._PIL_Th_Product_Desc
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Product_Desc, value) = false) Then
				Me.OnPIL_Th_Product_DescChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Product_Desc = value
				Me.SendPropertyChanged("PIL_Th_Product_Desc")
				Me.OnPIL_Th_Product_DescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Active_Ingradient_Strenght", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Active_Ingradient_Strenght() As String
		Get
			Return Me._PIL_Th_Active_Ingradient_Strenght
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Active_Ingradient_Strenght, value) = false) Then
				Me.OnPIL_Th_Active_Ingradient_StrenghtChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Active_Ingradient_Strenght = value
				Me.SendPropertyChanged("PIL_Th_Active_Ingradient_Strenght")
				Me.OnPIL_Th_Active_Ingradient_StrenghtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Generic_Name", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Generic_Name() As String
		Get
			Return Me._PIL_Th_Generic_Name
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Generic_Name, value) = false) Then
				Me.OnPIL_Th_Generic_NameChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Generic_Name = value
				Me.SendPropertyChanged("PIL_Th_Generic_Name")
				Me.OnPIL_Th_Generic_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Used_For", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Used_For() As String
		Get
			Return Me._PIL_Th_Used_For
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Used_For, value) = false) Then
				Me.OnPIL_Th_Used_ForChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Used_For = value
				Me.SendPropertyChanged("PIL_Th_Used_For")
				Me.OnPIL_Th_Used_ForChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_When_Not_Take", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_When_Not_Take() As String
		Get
			Return Me._PIL_Th_When_Not_Take
		End Get
		Set
			If (String.Equals(Me._PIL_Th_When_Not_Take, value) = false) Then
				Me.OnPIL_Th_When_Not_TakeChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_When_Not_Take = value
				Me.SendPropertyChanged("PIL_Th_When_Not_Take")
				Me.OnPIL_Th_When_Not_TakeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Avoid_For_Take", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Avoid_For_Take() As String
		Get
			Return Me._PIL_Th_Avoid_For_Take
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Avoid_For_Take, value) = false) Then
				Me.OnPIL_Th_Avoid_For_TakeChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Avoid_For_Take = value
				Me.SendPropertyChanged("PIL_Th_Avoid_For_Take")
				Me.OnPIL_Th_Avoid_For_TakeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_How_to_Take", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_How_to_Take() As String
		Get
			Return Me._PIL_Th_How_to_Take
		End Get
		Set
			If (String.Equals(Me._PIL_Th_How_to_Take, value) = false) Then
				Me.OnPIL_Th_How_to_TakeChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_How_to_Take = value
				Me.SendPropertyChanged("PIL_Th_How_to_Take")
				Me.OnPIL_Th_How_to_TakeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_When_Miss_Dose", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_When_Miss_Dose() As String
		Get
			Return Me._PIL_Th_When_Miss_Dose
		End Get
		Set
			If (String.Equals(Me._PIL_Th_When_Miss_Dose, value) = false) Then
				Me.OnPIL_Th_When_Miss_DoseChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_When_Miss_Dose = value
				Me.SendPropertyChanged("PIL_Th_When_Miss_Dose")
				Me.OnPIL_Th_When_Miss_DoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Overdose", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Overdose() As String
		Get
			Return Me._PIL_Th_Overdose
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Overdose, value) = false) Then
				Me.OnPIL_Th_OverdoseChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Overdose = value
				Me.SendPropertyChanged("PIL_Th_Overdose")
				Me.OnPIL_Th_OverdoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_During_Take", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_During_Take() As String
		Get
			Return Me._PIL_Th_During_Take
		End Get
		Set
			If (String.Equals(Me._PIL_Th_During_Take, value) = false) Then
				Me.OnPIL_Th_During_TakeChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_During_Take = value
				Me.SendPropertyChanged("PIL_Th_During_Take")
				Me.OnPIL_Th_During_TakeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_When_Meet_Doctor_Urgent", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_When_Meet_Doctor_Urgent() As String
		Get
			Return Me._PIL_Th_When_Meet_Doctor_Urgent
		End Get
		Set
			If (String.Equals(Me._PIL_Th_When_Meet_Doctor_Urgent, value) = false) Then
				Me.OnPIL_Th_When_Meet_Doctor_UrgentChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_When_Meet_Doctor_Urgent = value
				Me.SendPropertyChanged("PIL_Th_When_Meet_Doctor_Urgent")
				Me.OnPIL_Th_When_Meet_Doctor_UrgentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_When_Meet_Doctor", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_When_Meet_Doctor() As String
		Get
			Return Me._PIL_Th_When_Meet_Doctor
		End Get
		Set
			If (String.Equals(Me._PIL_Th_When_Meet_Doctor, value) = false) Then
				Me.OnPIL_Th_When_Meet_DoctorChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_When_Meet_Doctor = value
				Me.SendPropertyChanged("PIL_Th_When_Meet_Doctor")
				Me.OnPIL_Th_When_Meet_DoctorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_How_to_Storage", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_How_to_Storage() As String
		Get
			Return Me._PIL_Th_How_to_Storage
		End Get
		Set
			If (String.Equals(Me._PIL_Th_How_to_Storage, value) = false) Then
				Me.OnPIL_Th_How_to_StorageChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_How_to_Storage = value
				Me.SendPropertyChanged("PIL_Th_How_to_Storage")
				Me.OnPIL_Th_How_to_StorageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_MA_Holder", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_MA_Holder() As String
		Get
			Return Me._PIL_Th_MA_Holder
		End Get
		Set
			If (String.Equals(Me._PIL_Th_MA_Holder, value) = false) Then
				Me.OnPIL_Th_MA_HolderChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_MA_Holder = value
				Me.SendPropertyChanged("PIL_Th_MA_Holder")
				Me.OnPIL_Th_MA_HolderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_MA_Number", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_MA_Number() As String
		Get
			Return Me._PIL_Th_MA_Number
		End Get
		Set
			If (String.Equals(Me._PIL_Th_MA_Number, value) = false) Then
				Me.OnPIL_Th_MA_NumberChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_MA_Number = value
				Me.SendPropertyChanged("PIL_Th_MA_Number")
				Me.OnPIL_Th_MA_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Date_Approve", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Date_Approve() As String
		Get
			Return Me._PIL_Th_Date_Approve
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Date_Approve, value) = false) Then
				Me.OnPIL_Th_Date_ApproveChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Date_Approve = value
				Me.SendPropertyChanged("PIL_Th_Date_Approve")
				Me.OnPIL_Th_Date_ApproveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Th_Date_Revision", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Th_Date_Revision() As String
		Get
			Return Me._PIL_Th_Date_Revision
		End Get
		Set
			If (String.Equals(Me._PIL_Th_Date_Revision, value) = false) Then
				Me.OnPIL_Th_Date_RevisionChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Th_Date_Revision = value
				Me.SendPropertyChanged("PIL_Th_Date_Revision")
				Me.OnPIL_Th_Date_RevisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Name_Medicinal_Product", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Name_Medicinal_Product() As String
		Get
			Return Me._PIL_Eng_Name_Medicinal_Product
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Name_Medicinal_Product, value) = false) Then
				Me.OnPIL_Eng_Name_Medicinal_ProductChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Name_Medicinal_Product = value
				Me.SendPropertyChanged("PIL_Eng_Name_Medicinal_Product")
				Me.OnPIL_Eng_Name_Medicinal_ProductChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Product_Desc", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Product_Desc() As String
		Get
			Return Me._PIL_Eng_Product_Desc
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Product_Desc, value) = false) Then
				Me.OnPIL_Eng_Product_DescChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Product_Desc = value
				Me.SendPropertyChanged("PIL_Eng_Product_Desc")
				Me.OnPIL_Eng_Product_DescChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Active_Ingradient_Strenght", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Active_Ingradient_Strenght() As String
		Get
			Return Me._PIL_Eng_Active_Ingradient_Strenght
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Active_Ingradient_Strenght, value) = false) Then
				Me.OnPIL_Eng_Active_Ingradient_StrenghtChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Active_Ingradient_Strenght = value
				Me.SendPropertyChanged("PIL_Eng_Active_Ingradient_Strenght")
				Me.OnPIL_Eng_Active_Ingradient_StrenghtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Generic_Name", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Generic_Name() As String
		Get
			Return Me._PIL_Eng_Generic_Name
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Generic_Name, value) = false) Then
				Me.OnPIL_Eng_Generic_NameChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Generic_Name = value
				Me.SendPropertyChanged("PIL_Eng_Generic_Name")
				Me.OnPIL_Eng_Generic_NameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Used_For", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Used_For() As String
		Get
			Return Me._PIL_Eng_Used_For
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Used_For, value) = false) Then
				Me.OnPIL_Eng_Used_ForChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Used_For = value
				Me.SendPropertyChanged("PIL_Eng_Used_For")
				Me.OnPIL_Eng_Used_ForChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_When_Not_Take", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_When_Not_Take() As String
		Get
			Return Me._PIL_Eng_When_Not_Take
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_When_Not_Take, value) = false) Then
				Me.OnPIL_Eng_When_Not_TakeChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_When_Not_Take = value
				Me.SendPropertyChanged("PIL_Eng_When_Not_Take")
				Me.OnPIL_Eng_When_Not_TakeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Avoid_For_Take", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Avoid_For_Take() As String
		Get
			Return Me._PIL_Eng_Avoid_For_Take
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Avoid_For_Take, value) = false) Then
				Me.OnPIL_Eng_Avoid_For_TakeChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Avoid_For_Take = value
				Me.SendPropertyChanged("PIL_Eng_Avoid_For_Take")
				Me.OnPIL_Eng_Avoid_For_TakeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_How_to_Take", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_How_to_Take() As String
		Get
			Return Me._PIL_Eng_How_to_Take
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_How_to_Take, value) = false) Then
				Me.OnPIL_Eng_How_to_TakeChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_How_to_Take = value
				Me.SendPropertyChanged("PIL_Eng_How_to_Take")
				Me.OnPIL_Eng_How_to_TakeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_When_Miss_Dose", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_When_Miss_Dose() As String
		Get
			Return Me._PIL_Eng_When_Miss_Dose
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_When_Miss_Dose, value) = false) Then
				Me.OnPIL_Eng_When_Miss_DoseChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_When_Miss_Dose = value
				Me.SendPropertyChanged("PIL_Eng_When_Miss_Dose")
				Me.OnPIL_Eng_When_Miss_DoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Overdose", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Overdose() As String
		Get
			Return Me._PIL_Eng_Overdose
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Overdose, value) = false) Then
				Me.OnPIL_Eng_OverdoseChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Overdose = value
				Me.SendPropertyChanged("PIL_Eng_Overdose")
				Me.OnPIL_Eng_OverdoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_During_Take", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_During_Take() As String
		Get
			Return Me._PIL_Eng_During_Take
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_During_Take, value) = false) Then
				Me.OnPIL_Eng_During_TakeChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_During_Take = value
				Me.SendPropertyChanged("PIL_Eng_During_Take")
				Me.OnPIL_Eng_During_TakeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_When_Meet_Doctor_Urgent", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_When_Meet_Doctor_Urgent() As String
		Get
			Return Me._PIL_Eng_When_Meet_Doctor_Urgent
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_When_Meet_Doctor_Urgent, value) = false) Then
				Me.OnPIL_Eng_When_Meet_Doctor_UrgentChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_When_Meet_Doctor_Urgent = value
				Me.SendPropertyChanged("PIL_Eng_When_Meet_Doctor_Urgent")
				Me.OnPIL_Eng_When_Meet_Doctor_UrgentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_When_Meet_Doctor", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_When_Meet_Doctor() As String
		Get
			Return Me._PIL_Eng_When_Meet_Doctor
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_When_Meet_Doctor, value) = false) Then
				Me.OnPIL_Eng_When_Meet_DoctorChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_When_Meet_Doctor = value
				Me.SendPropertyChanged("PIL_Eng_When_Meet_Doctor")
				Me.OnPIL_Eng_When_Meet_DoctorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_How_to_Storage", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_How_to_Storage() As String
		Get
			Return Me._PIL_Eng_How_to_Storage
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_How_to_Storage, value) = false) Then
				Me.OnPIL_Eng_How_to_StorageChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_How_to_Storage = value
				Me.SendPropertyChanged("PIL_Eng_How_to_Storage")
				Me.OnPIL_Eng_How_to_StorageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_MA_Holder", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_MA_Holder() As String
		Get
			Return Me._PIL_Eng_MA_Holder
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_MA_Holder, value) = false) Then
				Me.OnPIL_Eng_MA_HolderChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_MA_Holder = value
				Me.SendPropertyChanged("PIL_Eng_MA_Holder")
				Me.OnPIL_Eng_MA_HolderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_MA_Number", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_MA_Number() As String
		Get
			Return Me._PIL_Eng_MA_Number
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_MA_Number, value) = false) Then
				Me.OnPIL_Eng_MA_NumberChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_MA_Number = value
				Me.SendPropertyChanged("PIL_Eng_MA_Number")
				Me.OnPIL_Eng_MA_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Date_Approve", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Date_Approve() As String
		Get
			Return Me._PIL_Eng_Date_Approve
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Date_Approve, value) = false) Then
				Me.OnPIL_Eng_Date_ApproveChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Date_Approve = value
				Me.SendPropertyChanged("PIL_Eng_Date_Approve")
				Me.OnPIL_Eng_Date_ApproveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIL_Eng_Date_Revision", DbType:="NVarChar(MAX)")>  _
	Public Property PIL_Eng_Date_Revision() As String
		Get
			Return Me._PIL_Eng_Date_Revision
		End Get
		Set
			If (String.Equals(Me._PIL_Eng_Date_Revision, value) = false) Then
				Me.OnPIL_Eng_Date_RevisionChanging(value)
				Me.SendPropertyChanging
				Me._PIL_Eng_Date_Revision = value
				Me.SendPropertyChanged("PIL_Eng_Date_Revision")
				Me.OnPIL_Eng_Date_RevisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="NVarChar(50)")>  _
	Public Property STATUS_ID() As String
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (String.Equals(Me._STATUS_ID, value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CTZNO", DbType:="NVarChar(MAX)")>  _
	Public Property CTZNO() As String
		Get
			Return Me._CTZNO
		End Get
		Set
			If (String.Equals(Me._CTZNO, value) = false) Then
				Me.OnCTZNOChanging(value)
				Me.SendPropertyChanging
				Me._CTZNO = value
				Me.SendPropertyChanged("CTZNO")
				Me.OnCTZNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID_RGT", DbType:="NVarChar(50)")>  _
	Public Property STATUS_ID_RGT() As String
		Get
			Return Me._STATUS_ID_RGT
		End Get
		Set
			If (String.Equals(Me._STATUS_ID_RGT, value) = false) Then
				Me.OnSTATUS_ID_RGTChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID_RGT = value
				Me.SendPropertyChanged("STATUS_ID_RGT")
				Me.OnSTATUS_ID_RGTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_SPC")>  _
Partial Public Class DRRGT_SPC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _SPC_Th_Name_Medicinal_Product As String
	
	Private _SPC_Th_Qualitative_Quantitative_Comp As String
	
	Private _SPC_Th_Pharm_Form As String
	
	Private _SPC_Th_Clinical_Particular As String
	
	Private _SPC_Th_Therapeutic_Indication As String
	
	Private _SPC_Th_Posology_Administration As String
	
	Private _SPC_Th_Contraindication As String
	
	Private _SPC_Th_Special_Warning As String
	
	Private _SPC_Th_Interaction As String
	
	Private _SPC_Th_Pregnancy_Lactation As String
	
	Private _SPC_Th_Ability_Drive_Machine As String
	
	Private _SPC_Th_Undesirable_Effect As String
	
	Private _SPC_Th_Overdose As String
	
	Private _SPC_Th_Pharmaco_Properties As String
	
	Private _SPC_Th_Pharmdynamic As String
	
	Private _SPC_Th_Pharmacokinetic As String
	
	Private _SPC_Th_Preclinical_Safety_Data As String
	
	Private _SPC_Th_Pharmaceutical_Particulars As String
	
	Private _SPC_Th_Excipients As String
	
	Private _SPC_Th_Incompatability As String
	
	Private _SPC_Th_Shelf_Life As String
	
	Private _SPC_Th_Special_Storage As String
	
	Private _SPC_Th_Container As String
	
	Private _SPC_Th_MA_Holder As String
	
	Private _SPC_Th_MA_Number As String
	
	Private _SPC_Th_Date_Approve As String
	
	Private _SPC_Th_Date_Revision As String
	
	Private _SPC_Eng_Name_Medicinal_Product As String
	
	Private _SPC_Eng_Qualitative_Quantitative_Comp As String
	
	Private _SPC_Eng_Pharm_Form As String
	
	Private _SPC_Eng_Clinical_Particular As String
	
	Private _SPC_Eng_Therapeutic_Indication As String
	
	Private _SPC_Eng_Posology_Administration As String
	
	Private _SPC_Eng_Contraindication As String
	
	Private _SPC_Eng_Special_Warning As String
	
	Private _SPC_Eng_Interaction As String
	
	Private _SPC_Eng_Pregnancy_Lactation As String
	
	Private _SPC_Eng_Ability_Drive_Machine As String
	
	Private _SPC_Eng_Undesirable_Effect As String
	
	Private _SPC_Eng_Overdose As String
	
	Private _SPC_Eng_Pharmaco_Properties As String
	
	Private _SPC_Eng_Pharmdynamic As String
	
	Private _SPC_Eng_Pharmacokinetic As String
	
	Private _SPC_Eng_Preclinical_Safety_Data As String
	
	Private _SPC_Eng_Pharmaceutical_Particulars As String
	
	Private _SPC_Eng_Excipients As String
	
	Private _SPC_Eng_Incompatability As String
	
	Private _SPC_Eng_Shelf_Life As String
	
	Private _SPC_Eng_Special_Storage As String
	
	Private _SPC_Eng_Container As String
	
	Private _SPC_Eng_MA_Holder As String
	
	Private _SPC_Eng_MA_Number As String
	
	Private _SPC_Eng_Date_Approve As String
	
	Private _SPC_Eng_Date_Revision As String
	
	Private _STATUS_ID As String
	
	Private _CTZNO As String
	
	Private _IDENTIFY As String
	
	Private _PROCESS_ID As String
	
	Private _STATUS_ID_RGT As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Name_Medicinal_ProductChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Name_Medicinal_ProductChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Qualitative_Quantitative_CompChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Qualitative_Quantitative_CompChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Pharm_FormChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Pharm_FormChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Clinical_ParticularChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Clinical_ParticularChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Therapeutic_IndicationChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Therapeutic_IndicationChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Posology_AdministrationChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Posology_AdministrationChanged()
    End Sub
    Partial Private Sub OnSPC_Th_ContraindicationChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_ContraindicationChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Special_WarningChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Special_WarningChanged()
    End Sub
    Partial Private Sub OnSPC_Th_InteractionChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_InteractionChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Pregnancy_LactationChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Pregnancy_LactationChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Ability_Drive_MachineChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Ability_Drive_MachineChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Undesirable_EffectChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Undesirable_EffectChanged()
    End Sub
    Partial Private Sub OnSPC_Th_OverdoseChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_OverdoseChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Pharmaco_PropertiesChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Pharmaco_PropertiesChanged()
    End Sub
    Partial Private Sub OnSPC_Th_PharmdynamicChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_PharmdynamicChanged()
    End Sub
    Partial Private Sub OnSPC_Th_PharmacokineticChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_PharmacokineticChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Preclinical_Safety_DataChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Preclinical_Safety_DataChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Pharmaceutical_ParticularsChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Pharmaceutical_ParticularsChanged()
    End Sub
    Partial Private Sub OnSPC_Th_ExcipientsChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_ExcipientsChanged()
    End Sub
    Partial Private Sub OnSPC_Th_IncompatabilityChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_IncompatabilityChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Shelf_LifeChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Shelf_LifeChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Special_StorageChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Special_StorageChanged()
    End Sub
    Partial Private Sub OnSPC_Th_ContainerChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_ContainerChanged()
    End Sub
    Partial Private Sub OnSPC_Th_MA_HolderChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_MA_HolderChanged()
    End Sub
    Partial Private Sub OnSPC_Th_MA_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_MA_NumberChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Date_ApproveChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Date_ApproveChanged()
    End Sub
    Partial Private Sub OnSPC_Th_Date_RevisionChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Th_Date_RevisionChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Name_Medicinal_ProductChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Name_Medicinal_ProductChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Qualitative_Quantitative_CompChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Qualitative_Quantitative_CompChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Pharm_FormChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Pharm_FormChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Clinical_ParticularChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Clinical_ParticularChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Therapeutic_IndicationChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Therapeutic_IndicationChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Posology_AdministrationChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Posology_AdministrationChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_ContraindicationChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_ContraindicationChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Special_WarningChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Special_WarningChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_InteractionChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_InteractionChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Pregnancy_LactationChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Pregnancy_LactationChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Ability_Drive_MachineChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Ability_Drive_MachineChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Undesirable_EffectChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Undesirable_EffectChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_OverdoseChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_OverdoseChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Pharmaco_PropertiesChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Pharmaco_PropertiesChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_PharmdynamicChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_PharmdynamicChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_PharmacokineticChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_PharmacokineticChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Preclinical_Safety_DataChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Preclinical_Safety_DataChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Pharmaceutical_ParticularsChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Pharmaceutical_ParticularsChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_ExcipientsChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_ExcipientsChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_IncompatabilityChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_IncompatabilityChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Shelf_LifeChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Shelf_LifeChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Special_StorageChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Special_StorageChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_ContainerChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_ContainerChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_MA_HolderChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_MA_HolderChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_MA_NumberChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_MA_NumberChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Date_ApproveChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Date_ApproveChanged()
    End Sub
    Partial Private Sub OnSPC_Eng_Date_RevisionChanging(value As String)
    End Sub
    Partial Private Sub OnSPC_Eng_Date_RevisionChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnCTZNOChanging(value As String)
    End Sub
    Partial Private Sub OnCTZNOChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_ID_RGTChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_ID_RGTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Name_Medicinal_Product", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Name_Medicinal_Product() As String
		Get
			Return Me._SPC_Th_Name_Medicinal_Product
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Name_Medicinal_Product, value) = false) Then
				Me.OnSPC_Th_Name_Medicinal_ProductChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Name_Medicinal_Product = value
				Me.SendPropertyChanged("SPC_Th_Name_Medicinal_Product")
				Me.OnSPC_Th_Name_Medicinal_ProductChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Qualitative_Quantitative_Comp", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Qualitative_Quantitative_Comp() As String
		Get
			Return Me._SPC_Th_Qualitative_Quantitative_Comp
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Qualitative_Quantitative_Comp, value) = false) Then
				Me.OnSPC_Th_Qualitative_Quantitative_CompChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Qualitative_Quantitative_Comp = value
				Me.SendPropertyChanged("SPC_Th_Qualitative_Quantitative_Comp")
				Me.OnSPC_Th_Qualitative_Quantitative_CompChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Pharm_Form", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Pharm_Form() As String
		Get
			Return Me._SPC_Th_Pharm_Form
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Pharm_Form, value) = false) Then
				Me.OnSPC_Th_Pharm_FormChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Pharm_Form = value
				Me.SendPropertyChanged("SPC_Th_Pharm_Form")
				Me.OnSPC_Th_Pharm_FormChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Clinical_Particular", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Clinical_Particular() As String
		Get
			Return Me._SPC_Th_Clinical_Particular
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Clinical_Particular, value) = false) Then
				Me.OnSPC_Th_Clinical_ParticularChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Clinical_Particular = value
				Me.SendPropertyChanged("SPC_Th_Clinical_Particular")
				Me.OnSPC_Th_Clinical_ParticularChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Therapeutic_Indication", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Therapeutic_Indication() As String
		Get
			Return Me._SPC_Th_Therapeutic_Indication
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Therapeutic_Indication, value) = false) Then
				Me.OnSPC_Th_Therapeutic_IndicationChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Therapeutic_Indication = value
				Me.SendPropertyChanged("SPC_Th_Therapeutic_Indication")
				Me.OnSPC_Th_Therapeutic_IndicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Posology_Administration", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Posology_Administration() As String
		Get
			Return Me._SPC_Th_Posology_Administration
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Posology_Administration, value) = false) Then
				Me.OnSPC_Th_Posology_AdministrationChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Posology_Administration = value
				Me.SendPropertyChanged("SPC_Th_Posology_Administration")
				Me.OnSPC_Th_Posology_AdministrationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Contraindication", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Contraindication() As String
		Get
			Return Me._SPC_Th_Contraindication
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Contraindication, value) = false) Then
				Me.OnSPC_Th_ContraindicationChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Contraindication = value
				Me.SendPropertyChanged("SPC_Th_Contraindication")
				Me.OnSPC_Th_ContraindicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Special_Warning", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Special_Warning() As String
		Get
			Return Me._SPC_Th_Special_Warning
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Special_Warning, value) = false) Then
				Me.OnSPC_Th_Special_WarningChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Special_Warning = value
				Me.SendPropertyChanged("SPC_Th_Special_Warning")
				Me.OnSPC_Th_Special_WarningChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Interaction", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Interaction() As String
		Get
			Return Me._SPC_Th_Interaction
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Interaction, value) = false) Then
				Me.OnSPC_Th_InteractionChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Interaction = value
				Me.SendPropertyChanged("SPC_Th_Interaction")
				Me.OnSPC_Th_InteractionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Pregnancy_Lactation", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Pregnancy_Lactation() As String
		Get
			Return Me._SPC_Th_Pregnancy_Lactation
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Pregnancy_Lactation, value) = false) Then
				Me.OnSPC_Th_Pregnancy_LactationChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Pregnancy_Lactation = value
				Me.SendPropertyChanged("SPC_Th_Pregnancy_Lactation")
				Me.OnSPC_Th_Pregnancy_LactationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Ability_Drive_Machine", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Ability_Drive_Machine() As String
		Get
			Return Me._SPC_Th_Ability_Drive_Machine
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Ability_Drive_Machine, value) = false) Then
				Me.OnSPC_Th_Ability_Drive_MachineChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Ability_Drive_Machine = value
				Me.SendPropertyChanged("SPC_Th_Ability_Drive_Machine")
				Me.OnSPC_Th_Ability_Drive_MachineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Undesirable_Effect", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Undesirable_Effect() As String
		Get
			Return Me._SPC_Th_Undesirable_Effect
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Undesirable_Effect, value) = false) Then
				Me.OnSPC_Th_Undesirable_EffectChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Undesirable_Effect = value
				Me.SendPropertyChanged("SPC_Th_Undesirable_Effect")
				Me.OnSPC_Th_Undesirable_EffectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Overdose", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Overdose() As String
		Get
			Return Me._SPC_Th_Overdose
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Overdose, value) = false) Then
				Me.OnSPC_Th_OverdoseChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Overdose = value
				Me.SendPropertyChanged("SPC_Th_Overdose")
				Me.OnSPC_Th_OverdoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Pharmaco_Properties", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Pharmaco_Properties() As String
		Get
			Return Me._SPC_Th_Pharmaco_Properties
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Pharmaco_Properties, value) = false) Then
				Me.OnSPC_Th_Pharmaco_PropertiesChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Pharmaco_Properties = value
				Me.SendPropertyChanged("SPC_Th_Pharmaco_Properties")
				Me.OnSPC_Th_Pharmaco_PropertiesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Pharmdynamic", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Pharmdynamic() As String
		Get
			Return Me._SPC_Th_Pharmdynamic
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Pharmdynamic, value) = false) Then
				Me.OnSPC_Th_PharmdynamicChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Pharmdynamic = value
				Me.SendPropertyChanged("SPC_Th_Pharmdynamic")
				Me.OnSPC_Th_PharmdynamicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Pharmacokinetic", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Pharmacokinetic() As String
		Get
			Return Me._SPC_Th_Pharmacokinetic
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Pharmacokinetic, value) = false) Then
				Me.OnSPC_Th_PharmacokineticChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Pharmacokinetic = value
				Me.SendPropertyChanged("SPC_Th_Pharmacokinetic")
				Me.OnSPC_Th_PharmacokineticChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Preclinical_Safety_Data", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Preclinical_Safety_Data() As String
		Get
			Return Me._SPC_Th_Preclinical_Safety_Data
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Preclinical_Safety_Data, value) = false) Then
				Me.OnSPC_Th_Preclinical_Safety_DataChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Preclinical_Safety_Data = value
				Me.SendPropertyChanged("SPC_Th_Preclinical_Safety_Data")
				Me.OnSPC_Th_Preclinical_Safety_DataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Pharmaceutical_Particulars", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Pharmaceutical_Particulars() As String
		Get
			Return Me._SPC_Th_Pharmaceutical_Particulars
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Pharmaceutical_Particulars, value) = false) Then
				Me.OnSPC_Th_Pharmaceutical_ParticularsChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Pharmaceutical_Particulars = value
				Me.SendPropertyChanged("SPC_Th_Pharmaceutical_Particulars")
				Me.OnSPC_Th_Pharmaceutical_ParticularsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Excipients", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Excipients() As String
		Get
			Return Me._SPC_Th_Excipients
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Excipients, value) = false) Then
				Me.OnSPC_Th_ExcipientsChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Excipients = value
				Me.SendPropertyChanged("SPC_Th_Excipients")
				Me.OnSPC_Th_ExcipientsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Incompatability", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Incompatability() As String
		Get
			Return Me._SPC_Th_Incompatability
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Incompatability, value) = false) Then
				Me.OnSPC_Th_IncompatabilityChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Incompatability = value
				Me.SendPropertyChanged("SPC_Th_Incompatability")
				Me.OnSPC_Th_IncompatabilityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Shelf_Life", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Shelf_Life() As String
		Get
			Return Me._SPC_Th_Shelf_Life
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Shelf_Life, value) = false) Then
				Me.OnSPC_Th_Shelf_LifeChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Shelf_Life = value
				Me.SendPropertyChanged("SPC_Th_Shelf_Life")
				Me.OnSPC_Th_Shelf_LifeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Special_Storage", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Special_Storage() As String
		Get
			Return Me._SPC_Th_Special_Storage
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Special_Storage, value) = false) Then
				Me.OnSPC_Th_Special_StorageChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Special_Storage = value
				Me.SendPropertyChanged("SPC_Th_Special_Storage")
				Me.OnSPC_Th_Special_StorageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Container", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Container() As String
		Get
			Return Me._SPC_Th_Container
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Container, value) = false) Then
				Me.OnSPC_Th_ContainerChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Container = value
				Me.SendPropertyChanged("SPC_Th_Container")
				Me.OnSPC_Th_ContainerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_MA_Holder", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_MA_Holder() As String
		Get
			Return Me._SPC_Th_MA_Holder
		End Get
		Set
			If (String.Equals(Me._SPC_Th_MA_Holder, value) = false) Then
				Me.OnSPC_Th_MA_HolderChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_MA_Holder = value
				Me.SendPropertyChanged("SPC_Th_MA_Holder")
				Me.OnSPC_Th_MA_HolderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_MA_Number", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_MA_Number() As String
		Get
			Return Me._SPC_Th_MA_Number
		End Get
		Set
			If (String.Equals(Me._SPC_Th_MA_Number, value) = false) Then
				Me.OnSPC_Th_MA_NumberChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_MA_Number = value
				Me.SendPropertyChanged("SPC_Th_MA_Number")
				Me.OnSPC_Th_MA_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Date_Approve", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Date_Approve() As String
		Get
			Return Me._SPC_Th_Date_Approve
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Date_Approve, value) = false) Then
				Me.OnSPC_Th_Date_ApproveChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Date_Approve = value
				Me.SendPropertyChanged("SPC_Th_Date_Approve")
				Me.OnSPC_Th_Date_ApproveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Th_Date_Revision", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Th_Date_Revision() As String
		Get
			Return Me._SPC_Th_Date_Revision
		End Get
		Set
			If (String.Equals(Me._SPC_Th_Date_Revision, value) = false) Then
				Me.OnSPC_Th_Date_RevisionChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Th_Date_Revision = value
				Me.SendPropertyChanged("SPC_Th_Date_Revision")
				Me.OnSPC_Th_Date_RevisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Name_Medicinal_Product", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Name_Medicinal_Product() As String
		Get
			Return Me._SPC_Eng_Name_Medicinal_Product
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Name_Medicinal_Product, value) = false) Then
				Me.OnSPC_Eng_Name_Medicinal_ProductChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Name_Medicinal_Product = value
				Me.SendPropertyChanged("SPC_Eng_Name_Medicinal_Product")
				Me.OnSPC_Eng_Name_Medicinal_ProductChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Qualitative_Quantitative_Comp", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Qualitative_Quantitative_Comp() As String
		Get
			Return Me._SPC_Eng_Qualitative_Quantitative_Comp
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Qualitative_Quantitative_Comp, value) = false) Then
				Me.OnSPC_Eng_Qualitative_Quantitative_CompChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Qualitative_Quantitative_Comp = value
				Me.SendPropertyChanged("SPC_Eng_Qualitative_Quantitative_Comp")
				Me.OnSPC_Eng_Qualitative_Quantitative_CompChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Pharm_Form", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Pharm_Form() As String
		Get
			Return Me._SPC_Eng_Pharm_Form
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Pharm_Form, value) = false) Then
				Me.OnSPC_Eng_Pharm_FormChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Pharm_Form = value
				Me.SendPropertyChanged("SPC_Eng_Pharm_Form")
				Me.OnSPC_Eng_Pharm_FormChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Clinical_Particular", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Clinical_Particular() As String
		Get
			Return Me._SPC_Eng_Clinical_Particular
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Clinical_Particular, value) = false) Then
				Me.OnSPC_Eng_Clinical_ParticularChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Clinical_Particular = value
				Me.SendPropertyChanged("SPC_Eng_Clinical_Particular")
				Me.OnSPC_Eng_Clinical_ParticularChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Therapeutic_Indication", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Therapeutic_Indication() As String
		Get
			Return Me._SPC_Eng_Therapeutic_Indication
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Therapeutic_Indication, value) = false) Then
				Me.OnSPC_Eng_Therapeutic_IndicationChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Therapeutic_Indication = value
				Me.SendPropertyChanged("SPC_Eng_Therapeutic_Indication")
				Me.OnSPC_Eng_Therapeutic_IndicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Posology_Administration", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Posology_Administration() As String
		Get
			Return Me._SPC_Eng_Posology_Administration
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Posology_Administration, value) = false) Then
				Me.OnSPC_Eng_Posology_AdministrationChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Posology_Administration = value
				Me.SendPropertyChanged("SPC_Eng_Posology_Administration")
				Me.OnSPC_Eng_Posology_AdministrationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Contraindication", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Contraindication() As String
		Get
			Return Me._SPC_Eng_Contraindication
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Contraindication, value) = false) Then
				Me.OnSPC_Eng_ContraindicationChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Contraindication = value
				Me.SendPropertyChanged("SPC_Eng_Contraindication")
				Me.OnSPC_Eng_ContraindicationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Special_Warning", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Special_Warning() As String
		Get
			Return Me._SPC_Eng_Special_Warning
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Special_Warning, value) = false) Then
				Me.OnSPC_Eng_Special_WarningChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Special_Warning = value
				Me.SendPropertyChanged("SPC_Eng_Special_Warning")
				Me.OnSPC_Eng_Special_WarningChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Interaction", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Interaction() As String
		Get
			Return Me._SPC_Eng_Interaction
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Interaction, value) = false) Then
				Me.OnSPC_Eng_InteractionChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Interaction = value
				Me.SendPropertyChanged("SPC_Eng_Interaction")
				Me.OnSPC_Eng_InteractionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Pregnancy_Lactation", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Pregnancy_Lactation() As String
		Get
			Return Me._SPC_Eng_Pregnancy_Lactation
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Pregnancy_Lactation, value) = false) Then
				Me.OnSPC_Eng_Pregnancy_LactationChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Pregnancy_Lactation = value
				Me.SendPropertyChanged("SPC_Eng_Pregnancy_Lactation")
				Me.OnSPC_Eng_Pregnancy_LactationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Ability_Drive_Machine", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Ability_Drive_Machine() As String
		Get
			Return Me._SPC_Eng_Ability_Drive_Machine
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Ability_Drive_Machine, value) = false) Then
				Me.OnSPC_Eng_Ability_Drive_MachineChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Ability_Drive_Machine = value
				Me.SendPropertyChanged("SPC_Eng_Ability_Drive_Machine")
				Me.OnSPC_Eng_Ability_Drive_MachineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Undesirable_Effect", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Undesirable_Effect() As String
		Get
			Return Me._SPC_Eng_Undesirable_Effect
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Undesirable_Effect, value) = false) Then
				Me.OnSPC_Eng_Undesirable_EffectChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Undesirable_Effect = value
				Me.SendPropertyChanged("SPC_Eng_Undesirable_Effect")
				Me.OnSPC_Eng_Undesirable_EffectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Overdose", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Overdose() As String
		Get
			Return Me._SPC_Eng_Overdose
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Overdose, value) = false) Then
				Me.OnSPC_Eng_OverdoseChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Overdose = value
				Me.SendPropertyChanged("SPC_Eng_Overdose")
				Me.OnSPC_Eng_OverdoseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Pharmaco_Properties", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Pharmaco_Properties() As String
		Get
			Return Me._SPC_Eng_Pharmaco_Properties
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Pharmaco_Properties, value) = false) Then
				Me.OnSPC_Eng_Pharmaco_PropertiesChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Pharmaco_Properties = value
				Me.SendPropertyChanged("SPC_Eng_Pharmaco_Properties")
				Me.OnSPC_Eng_Pharmaco_PropertiesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Pharmdynamic", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Pharmdynamic() As String
		Get
			Return Me._SPC_Eng_Pharmdynamic
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Pharmdynamic, value) = false) Then
				Me.OnSPC_Eng_PharmdynamicChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Pharmdynamic = value
				Me.SendPropertyChanged("SPC_Eng_Pharmdynamic")
				Me.OnSPC_Eng_PharmdynamicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Pharmacokinetic", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Pharmacokinetic() As String
		Get
			Return Me._SPC_Eng_Pharmacokinetic
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Pharmacokinetic, value) = false) Then
				Me.OnSPC_Eng_PharmacokineticChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Pharmacokinetic = value
				Me.SendPropertyChanged("SPC_Eng_Pharmacokinetic")
				Me.OnSPC_Eng_PharmacokineticChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Preclinical_Safety_Data", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Preclinical_Safety_Data() As String
		Get
			Return Me._SPC_Eng_Preclinical_Safety_Data
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Preclinical_Safety_Data, value) = false) Then
				Me.OnSPC_Eng_Preclinical_Safety_DataChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Preclinical_Safety_Data = value
				Me.SendPropertyChanged("SPC_Eng_Preclinical_Safety_Data")
				Me.OnSPC_Eng_Preclinical_Safety_DataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Pharmaceutical_Particulars", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Pharmaceutical_Particulars() As String
		Get
			Return Me._SPC_Eng_Pharmaceutical_Particulars
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Pharmaceutical_Particulars, value) = false) Then
				Me.OnSPC_Eng_Pharmaceutical_ParticularsChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Pharmaceutical_Particulars = value
				Me.SendPropertyChanged("SPC_Eng_Pharmaceutical_Particulars")
				Me.OnSPC_Eng_Pharmaceutical_ParticularsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Excipients", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Excipients() As String
		Get
			Return Me._SPC_Eng_Excipients
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Excipients, value) = false) Then
				Me.OnSPC_Eng_ExcipientsChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Excipients = value
				Me.SendPropertyChanged("SPC_Eng_Excipients")
				Me.OnSPC_Eng_ExcipientsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Incompatability", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Incompatability() As String
		Get
			Return Me._SPC_Eng_Incompatability
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Incompatability, value) = false) Then
				Me.OnSPC_Eng_IncompatabilityChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Incompatability = value
				Me.SendPropertyChanged("SPC_Eng_Incompatability")
				Me.OnSPC_Eng_IncompatabilityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Shelf_Life", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Shelf_Life() As String
		Get
			Return Me._SPC_Eng_Shelf_Life
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Shelf_Life, value) = false) Then
				Me.OnSPC_Eng_Shelf_LifeChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Shelf_Life = value
				Me.SendPropertyChanged("SPC_Eng_Shelf_Life")
				Me.OnSPC_Eng_Shelf_LifeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Special_Storage", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Special_Storage() As String
		Get
			Return Me._SPC_Eng_Special_Storage
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Special_Storage, value) = false) Then
				Me.OnSPC_Eng_Special_StorageChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Special_Storage = value
				Me.SendPropertyChanged("SPC_Eng_Special_Storage")
				Me.OnSPC_Eng_Special_StorageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Container", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Container() As String
		Get
			Return Me._SPC_Eng_Container
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Container, value) = false) Then
				Me.OnSPC_Eng_ContainerChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Container = value
				Me.SendPropertyChanged("SPC_Eng_Container")
				Me.OnSPC_Eng_ContainerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_MA_Holder", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_MA_Holder() As String
		Get
			Return Me._SPC_Eng_MA_Holder
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_MA_Holder, value) = false) Then
				Me.OnSPC_Eng_MA_HolderChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_MA_Holder = value
				Me.SendPropertyChanged("SPC_Eng_MA_Holder")
				Me.OnSPC_Eng_MA_HolderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_MA_Number", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_MA_Number() As String
		Get
			Return Me._SPC_Eng_MA_Number
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_MA_Number, value) = false) Then
				Me.OnSPC_Eng_MA_NumberChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_MA_Number = value
				Me.SendPropertyChanged("SPC_Eng_MA_Number")
				Me.OnSPC_Eng_MA_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Date_Approve", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Date_Approve() As String
		Get
			Return Me._SPC_Eng_Date_Approve
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Date_Approve, value) = false) Then
				Me.OnSPC_Eng_Date_ApproveChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Date_Approve = value
				Me.SendPropertyChanged("SPC_Eng_Date_Approve")
				Me.OnSPC_Eng_Date_ApproveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPC_Eng_Date_Revision", DbType:="NVarChar(MAX)")>  _
	Public Property SPC_Eng_Date_Revision() As String
		Get
			Return Me._SPC_Eng_Date_Revision
		End Get
		Set
			If (String.Equals(Me._SPC_Eng_Date_Revision, value) = false) Then
				Me.OnSPC_Eng_Date_RevisionChanging(value)
				Me.SendPropertyChanging
				Me._SPC_Eng_Date_Revision = value
				Me.SendPropertyChanged("SPC_Eng_Date_Revision")
				Me.OnSPC_Eng_Date_RevisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="NVarChar(50)")>  _
	Public Property STATUS_ID() As String
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (String.Equals(Me._STATUS_ID, value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CTZNO", DbType:="NVarChar(MAX)")>  _
	Public Property CTZNO() As String
		Get
			Return Me._CTZNO
		End Get
		Set
			If (String.Equals(Me._CTZNO, value) = false) Then
				Me.OnCTZNOChanging(value)
				Me.SendPropertyChanging
				Me._CTZNO = value
				Me.SendPropertyChanged("CTZNO")
				Me.OnCTZNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID_RGT", DbType:="NVarChar(50)")>  _
	Public Property STATUS_ID_RGT() As String
		Get
			Return Me._STATUS_ID_RGT
		End Get
		Set
			If (String.Equals(Me._STATUS_ID_RGT, value) = false) Then
				Me.OnSTATUS_ID_RGTChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID_RGT = value
				Me.SendPropertyChanged("STATUS_ID_RGT")
				Me.OnSTATUS_ID_RGTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drfrgnaddr")>  _
Partial Public Class drfrgnaddr
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _frgncd As System.Nullable(Of Integer)
	
	Private _frgnlctcd As System.Nullable(Of Integer)
	
	Private _addr As String
	
	Private _soi As String
	
	Private _mu As String
	
	Private _road As String
	
	Private _district As String
	
	Private _subdiv As String
	
	Private _province As String
	
	Private _cntcd As String
	
	Private _zipcode As String
	
	Private _tel As String
	
	Private _fax As String
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _REFERENCE_GMP As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnfrgncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfrgncdChanged()
    End Sub
    Partial Private Sub OnfrgnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfrgnlctcdChanged()
    End Sub
    Partial Private Sub OnaddrChanging(value As String)
    End Sub
    Partial Private Sub OnaddrChanged()
    End Sub
    Partial Private Sub OnsoiChanging(value As String)
    End Sub
    Partial Private Sub OnsoiChanged()
    End Sub
    Partial Private Sub OnmuChanging(value As String)
    End Sub
    Partial Private Sub OnmuChanged()
    End Sub
    Partial Private Sub OnroadChanging(value As String)
    End Sub
    Partial Private Sub OnroadChanged()
    End Sub
    Partial Private Sub OndistrictChanging(value As String)
    End Sub
    Partial Private Sub OndistrictChanged()
    End Sub
    Partial Private Sub OnsubdivChanging(value As String)
    End Sub
    Partial Private Sub OnsubdivChanged()
    End Sub
    Partial Private Sub OnprovinceChanging(value As String)
    End Sub
    Partial Private Sub OnprovinceChanged()
    End Sub
    Partial Private Sub OncntcdChanging(value As String)
    End Sub
    Partial Private Sub OncntcdChanged()
    End Sub
    Partial Private Sub OnzipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnzipcodeChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnREFERENCE_GMPChanging(value As String)
    End Sub
    Partial Private Sub OnREFERENCE_GMPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd", DbType:="Int")>  _
	Public Property frgncd() As System.Nullable(Of Integer)
		Get
			Return Me._frgncd
		End Get
		Set
			If (Me._frgncd.Equals(value) = false) Then
				Me.OnfrgncdChanging(value)
				Me.SendPropertyChanging
				Me._frgncd = value
				Me.SendPropertyChanged("frgncd")
				Me.OnfrgncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgnlctcd", DbType:="Int")>  _
	Public Property frgnlctcd() As System.Nullable(Of Integer)
		Get
			Return Me._frgnlctcd
		End Get
		Set
			If (Me._frgnlctcd.Equals(value) = false) Then
				Me.OnfrgnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._frgnlctcd = value
				Me.SendPropertyChanged("frgnlctcd")
				Me.OnfrgnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_addr", DbType:="NVarChar(MAX)")>  _
	Public Property addr() As String
		Get
			Return Me._addr
		End Get
		Set
			If (String.Equals(Me._addr, value) = false) Then
				Me.OnaddrChanging(value)
				Me.SendPropertyChanging
				Me._addr = value
				Me.SendPropertyChanged("addr")
				Me.OnaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_soi", DbType:="NVarChar(MAX)")>  _
	Public Property soi() As String
		Get
			Return Me._soi
		End Get
		Set
			If (String.Equals(Me._soi, value) = false) Then
				Me.OnsoiChanging(value)
				Me.SendPropertyChanging
				Me._soi = value
				Me.SendPropertyChanged("soi")
				Me.OnsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mu", DbType:="NVarChar(MAX)")>  _
	Public Property mu() As String
		Get
			Return Me._mu
		End Get
		Set
			If (String.Equals(Me._mu, value) = false) Then
				Me.OnmuChanging(value)
				Me.SendPropertyChanging
				Me._mu = value
				Me.SendPropertyChanged("mu")
				Me.OnmuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_road", DbType:="NVarChar(MAX)")>  _
	Public Property road() As String
		Get
			Return Me._road
		End Get
		Set
			If (String.Equals(Me._road, value) = false) Then
				Me.OnroadChanging(value)
				Me.SendPropertyChanging
				Me._road = value
				Me.SendPropertyChanged("road")
				Me.OnroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_district", DbType:="NVarChar(MAX)")>  _
	Public Property district() As String
		Get
			Return Me._district
		End Get
		Set
			If (String.Equals(Me._district, value) = false) Then
				Me.OndistrictChanging(value)
				Me.SendPropertyChanging
				Me._district = value
				Me.SendPropertyChanged("district")
				Me.OndistrictChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_subdiv", DbType:="NVarChar(MAX)")>  _
	Public Property subdiv() As String
		Get
			Return Me._subdiv
		End Get
		Set
			If (String.Equals(Me._subdiv, value) = false) Then
				Me.OnsubdivChanging(value)
				Me.SendPropertyChanging
				Me._subdiv = value
				Me.SendPropertyChanged("subdiv")
				Me.OnsubdivChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_province", DbType:="NVarChar(MAX)")>  _
	Public Property province() As String
		Get
			Return Me._province
		End Get
		Set
			If (String.Equals(Me._province, value) = false) Then
				Me.OnprovinceChanging(value)
				Me.SendPropertyChanging
				Me._province = value
				Me.SendPropertyChanged("province")
				Me.OnprovinceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cntcd", DbType:="NVarChar(MAX)")>  _
	Public Property cntcd() As String
		Get
			Return Me._cntcd
		End Get
		Set
			If (String.Equals(Me._cntcd, value) = false) Then
				Me.OncntcdChanging(value)
				Me.SendPropertyChanging
				Me._cntcd = value
				Me.SendPropertyChanged("cntcd")
				Me.OncntcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_zipcode", DbType:="NVarChar(MAX)")>  _
	Public Property zipcode() As String
		Get
			Return Me._zipcode
		End Get
		Set
			If (String.Equals(Me._zipcode, value) = false) Then
				Me.OnzipcodeChanging(value)
				Me.SendPropertyChanging
				Me._zipcode = value
				Me.SendPropertyChanged("zipcode")
				Me.OnzipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="NVarChar(MAX)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="NVarChar(MAX)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REFERENCE_GMP", DbType:="NVarChar(MAX)")>  _
	Public Property REFERENCE_GMP() As String
		Get
			Return Me._REFERENCE_GMP
		End Get
		Set
			If (String.Equals(Me._REFERENCE_GMP, value) = false) Then
				Me.OnREFERENCE_GMPChanging(value)
				Me.SendPropertyChanging
				Me._REFERENCE_GMP = value
				Me.SendPropertyChanged("REFERENCE_GMP")
				Me.OnREFERENCE_GMPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.syspdcfrgn")>  _
Partial Public Class syspdcfrgn
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _frgncd As Integer
	
	Private _prefixcd As System.Nullable(Of Short)
	
	Private _engfrgnnm As String
	
	Private _thafrgnnm As String
	
	Private _suffixcd As System.Nullable(Of Short)
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnfrgncdChanging(value As Integer)
    End Sub
    Partial Private Sub OnfrgncdChanged()
    End Sub
    Partial Private Sub OnprefixcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnprefixcdChanged()
    End Sub
    Partial Private Sub OnengfrgnnmChanging(value As String)
    End Sub
    Partial Private Sub OnengfrgnnmChanged()
    End Sub
    Partial Private Sub OnthafrgnnmChanging(value As String)
    End Sub
    Partial Private Sub OnthafrgnnmChanged()
    End Sub
    Partial Private Sub OnsuffixcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnsuffixcdChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd", DbType:="Int NOT NULL")>  _
	Public Property frgncd() As Integer
		Get
			Return Me._frgncd
		End Get
		Set
			If ((Me._frgncd = value)  _
						= false) Then
				Me.OnfrgncdChanging(value)
				Me.SendPropertyChanging
				Me._frgncd = value
				Me.SendPropertyChanged("frgncd")
				Me.OnfrgncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prefixcd", DbType:="SmallInt")>  _
	Public Property prefixcd() As System.Nullable(Of Short)
		Get
			Return Me._prefixcd
		End Get
		Set
			If (Me._prefixcd.Equals(value) = false) Then
				Me.OnprefixcdChanging(value)
				Me.SendPropertyChanging
				Me._prefixcd = value
				Me.SendPropertyChanged("prefixcd")
				Me.OnprefixcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engfrgnnm", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property engfrgnnm() As String
		Get
			Return Me._engfrgnnm
		End Get
		Set
			If (String.Equals(Me._engfrgnnm, value) = false) Then
				Me.OnengfrgnnmChanging(value)
				Me.SendPropertyChanging
				Me._engfrgnnm = value
				Me.SendPropertyChanged("engfrgnnm")
				Me.OnengfrgnnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thafrgnnm", DbType:="NVarChar(MAX)")>  _
	Public Property thafrgnnm() As String
		Get
			Return Me._thafrgnnm
		End Get
		Set
			If (String.Equals(Me._thafrgnnm, value) = false) Then
				Me.OnthafrgnnmChanging(value)
				Me.SendPropertyChanging
				Me._thafrgnnm = value
				Me.SendPropertyChanged("thafrgnnm")
				Me.OnthafrgnnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suffixcd", DbType:="SmallInt")>  _
	Public Property suffixcd() As System.Nullable(Of Short)
		Get
			Return Me._suffixcd
		End Get
		Set
			If (Me._suffixcd.Equals(value) = false) Then
				Me.OnsuffixcdChanging(value)
				Me.SendPropertyChanging
				Me._suffixcd = value
				Me.SendPropertyChanged("suffixcd")
				Me.OnsuffixcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_EACH")>  _
Partial Public Class DRRGT_EACH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _EACH_AMOUNT As System.Nullable(Of Double)
	
	Private _sunitcd As System.Nullable(Of Integer)
	
	Private _EACH_TXT As String
	
	Private _FK_SET As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnEACH_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnEACH_AMOUNTChanged()
    End Sub
    Partial Private Sub OnsunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsunitcdChanged()
    End Sub
    Partial Private Sub OnEACH_TXTChanging(value As String)
    End Sub
    Partial Private Sub OnEACH_TXTChanged()
    End Sub
    Partial Private Sub OnFK_SETChanging(value As String)
    End Sub
    Partial Private Sub OnFK_SETChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EACH_AMOUNT", DbType:="Float")>  _
	Public Property EACH_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._EACH_AMOUNT
		End Get
		Set
			If (Me._EACH_AMOUNT.Equals(value) = false) Then
				Me.OnEACH_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._EACH_AMOUNT = value
				Me.SendPropertyChanged("EACH_AMOUNT")
				Me.OnEACH_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitcd", DbType:="Int")>  _
	Public Property sunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sunitcd
		End Get
		Set
			If (Me._sunitcd.Equals(value) = false) Then
				Me.OnsunitcdChanging(value)
				Me.SendPropertyChanging
				Me._sunitcd = value
				Me.SendPropertyChanged("sunitcd")
				Me.OnsunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EACH_TXT", DbType:="NVarChar(MAX)")>  _
	Public Property EACH_TXT() As String
		Get
			Return Me._EACH_TXT
		End Get
		Set
			If (String.Equals(Me._EACH_TXT, value) = false) Then
				Me.OnEACH_TXTChanging(value)
				Me.SendPropertyChanging
				Me._EACH_TXT = value
				Me.SendPropertyChanged("EACH_TXT")
				Me.OnEACH_TXTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SET", DbType:="NVarChar(50)")>  _
	Public Property FK_SET() As String
		Get
			Return Me._FK_SET
		End Get
		Set
			If (String.Equals(Me._FK_SET, value) = false) Then
				Me.OnFK_SETChanging(value)
				Me.SendPropertyChanging
				Me._FK_SET = value
				Me.SendPropertyChanged("FK_SET")
				Me.OnFK_SETChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_EACH")>  _
Partial Public Class DRRQT_EACH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _EACH_AMOUNT As System.Nullable(Of Double)
	
	Private _sunitcd As System.Nullable(Of Integer)
	
	Private _EACH_TXT As String
	
	Private _FK_SET As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnEACH_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnEACH_AMOUNTChanged()
    End Sub
    Partial Private Sub OnsunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsunitcdChanged()
    End Sub
    Partial Private Sub OnEACH_TXTChanging(value As String)
    End Sub
    Partial Private Sub OnEACH_TXTChanged()
    End Sub
    Partial Private Sub OnFK_SETChanging(value As String)
    End Sub
    Partial Private Sub OnFK_SETChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EACH_AMOUNT", DbType:="Float")>  _
	Public Property EACH_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._EACH_AMOUNT
		End Get
		Set
			If (Me._EACH_AMOUNT.Equals(value) = false) Then
				Me.OnEACH_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._EACH_AMOUNT = value
				Me.SendPropertyChanged("EACH_AMOUNT")
				Me.OnEACH_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitcd", DbType:="Int")>  _
	Public Property sunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sunitcd
		End Get
		Set
			If (Me._sunitcd.Equals(value) = false) Then
				Me.OnsunitcdChanging(value)
				Me.SendPropertyChanging
				Me._sunitcd = value
				Me.SendPropertyChanged("sunitcd")
				Me.OnsunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EACH_TXT", DbType:="NVarChar(MAX)")>  _
	Public Property EACH_TXT() As String
		Get
			Return Me._EACH_TXT
		End Get
		Set
			If (String.Equals(Me._EACH_TXT, value) = false) Then
				Me.OnEACH_TXTChanging(value)
				Me.SendPropertyChanging
				Me._EACH_TXT = value
				Me.SendPropertyChanged("EACH_TXT")
				Me.OnEACH_TXTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SET", DbType:="NVarChar(50)")>  _
	Public Property FK_SET() As String
		Get
			Return Me._FK_SET
		End Get
		Set
			If (String.Equals(Me._FK_SET, value) = false) Then
				Me.OnFK_SETChanging(value)
				Me.SendPropertyChanging
				Me._FK_SET = value
				Me.SendPropertyChanged("FK_SET")
				Me.OnFK_SETChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_APPOINTMENT")>  _
Partial Public Class DRRQT_APPOINTMENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TYPE_REQUESTS_ID As String
	
	Private _APPOINT_DATE As System.Nullable(Of Date)
	
	Private _APPOINT_DAY As System.Nullable(Of Integer)
	
	Private _REQUEST_DATE As System.Nullable(Of Date)
	
	Private _CITIZEN_AUTHORIZE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_IDChanged()
    End Sub
    Partial Private Sub OnAPPOINT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAPPOINT_DATEChanged()
    End Sub
    Partial Private Sub OnAPPOINT_DAYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAPPOINT_DAYChanged()
    End Sub
    Partial Private Sub OnREQUEST_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUEST_DATEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_REQUESTS_ID", DbType:="NVarChar(50)")>  _
	Public Property TYPE_REQUESTS_ID() As String
		Get
			Return Me._TYPE_REQUESTS_ID
		End Get
		Set
			If (String.Equals(Me._TYPE_REQUESTS_ID, value) = false) Then
				Me.OnTYPE_REQUESTS_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_REQUESTS_ID = value
				Me.SendPropertyChanged("TYPE_REQUESTS_ID")
				Me.OnTYPE_REQUESTS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPOINT_DATE", DbType:="DateTime")>  _
	Public Property APPOINT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._APPOINT_DATE
		End Get
		Set
			If (Me._APPOINT_DATE.Equals(value) = false) Then
				Me.OnAPPOINT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._APPOINT_DATE = value
				Me.SendPropertyChanged("APPOINT_DATE")
				Me.OnAPPOINT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPOINT_DAY", DbType:="Int")>  _
	Public Property APPOINT_DAY() As System.Nullable(Of Integer)
		Get
			Return Me._APPOINT_DAY
		End Get
		Set
			If (Me._APPOINT_DAY.Equals(value) = false) Then
				Me.OnAPPOINT_DAYChanging(value)
				Me.SendPropertyChanging
				Me._APPOINT_DAY = value
				Me.SendPropertyChanged("APPOINT_DAY")
				Me.OnAPPOINT_DAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_DATE
		End Get
		Set
			If (Me._REQUEST_DATE.Equals(value) = false) Then
				Me.OnREQUEST_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_DATE = value
				Me.SendPropertyChanged("REQUEST_DATE")
				Me.OnREQUEST_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_DH_ERROR")>  _
Partial Public Class LOG_DH_ERROR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _EX_MESSAGE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnEX_MESSAGEChanging(value As String)
    End Sub
    Partial Private Sub OnEX_MESSAGEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EX_MESSAGE", DbType:="NVarChar(MAX)")>  _
	Public Property EX_MESSAGE() As String
		Get
			Return Me._EX_MESSAGE
		End Get
		Set
			If (String.Equals(Me._EX_MESSAGE, value) = false) Then
				Me.OnEX_MESSAGEChanging(value)
				Me.SendPropertyChanging
				Me._EX_MESSAGE = value
				Me.SendPropertyChanged("EX_MESSAGE")
				Me.OnEX_MESSAGEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_EDIT_TABEAN")>  _
Partial Public Class LOG_EDIT_TABEAN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _CITIZEN_ID As String
	
	Private _CREATEDATE As System.Nullable(Of Date)
	
	Private _ACTION_DESCRIPTION As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _URL As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnCREATEDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATEDATEChanged()
    End Sub
    Partial Private Sub OnACTION_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnACTION_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnURLChanging(value As String)
    End Sub
    Partial Private Sub OnURLChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATEDATE", DbType:="DateTime")>  _
	Public Property CREATEDATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATEDATE
		End Get
		Set
			If (Me._CREATEDATE.Equals(value) = false) Then
				Me.OnCREATEDATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATEDATE = value
				Me.SendPropertyChanged("CREATEDATE")
				Me.OnCREATEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTION_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property ACTION_DESCRIPTION() As String
		Get
			Return Me._ACTION_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._ACTION_DESCRIPTION, value) = false) Then
				Me.OnACTION_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._ACTION_DESCRIPTION = value
				Me.SendPropertyChanged("ACTION_DESCRIPTION")
				Me.OnACTION_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_URL", DbType:="NVarChar(MAX)")>  _
	Public Property URL() As String
		Get
			Return Me._URL
		End Get
		Set
			If (String.Equals(Me._URL, value) = false) Then
				Me.OnURLChanging(value)
				Me.SendPropertyChanging
				Me._URL = value
				Me.SendPropertyChanged("URL")
				Me.OnURLChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_EQTO")>  _
Partial Public Class DRRGT_EQTO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As String
	
	Private _ROWS As String
	
	Private _IOWA As String
	
	Private _QTY As String
	
	Private _MULTIPLY As String
	
	Private _STR_VALUE As String
	
	Private _SUNITCD As String
	
	Private _aori As String
	
	Private _FK_DRRQT_IDA As String
	
	Private _FK_SET As System.Nullable(Of Integer)
	
	Private _QTY_END As String
	
	Private _SUNITCD_END As String
	
	Private _REMARK As String
	
	Private _REF As String
	
	Private _CONDITION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnROWSChanging(value As String)
    End Sub
    Partial Private Sub OnROWSChanged()
    End Sub
    Partial Private Sub OnIOWAChanging(value As String)
    End Sub
    Partial Private Sub OnIOWAChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As String)
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnMULTIPLYChanging(value As String)
    End Sub
    Partial Private Sub OnMULTIPLYChanged()
    End Sub
    Partial Private Sub OnSTR_VALUEChanging(value As String)
    End Sub
    Partial Private Sub OnSTR_VALUEChanged()
    End Sub
    Partial Private Sub OnSUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnSUNITCDChanged()
    End Sub
    Partial Private Sub OnaoriChanging(value As String)
    End Sub
    Partial Private Sub OnaoriChanged()
    End Sub
    Partial Private Sub OnFK_DRRQT_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_DRRQT_IDAChanged()
    End Sub
    Partial Private Sub OnFK_SETChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_SETChanged()
    End Sub
    Partial Private Sub OnQTY_ENDChanging(value As String)
    End Sub
    Partial Private Sub OnQTY_ENDChanged()
    End Sub
    Partial Private Sub OnSUNITCD_ENDChanging(value As String)
    End Sub
    Partial Private Sub OnSUNITCD_ENDChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnREFChanging(value As String)
    End Sub
    Partial Private Sub OnREFChanged()
    End Sub
    Partial Private Sub OnCONDITIONChanging(value As String)
    End Sub
    Partial Private Sub OnCONDITIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROWS", DbType:="NVarChar(MAX)")>  _
	Public Property ROWS() As String
		Get
			Return Me._ROWS
		End Get
		Set
			If (String.Equals(Me._ROWS, value) = false) Then
				Me.OnROWSChanging(value)
				Me.SendPropertyChanging
				Me._ROWS = value
				Me.SendPropertyChanged("ROWS")
				Me.OnROWSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property IOWA() As String
		Get
			Return Me._IOWA
		End Get
		Set
			If (String.Equals(Me._IOWA, value) = false) Then
				Me.OnIOWAChanging(value)
				Me.SendPropertyChanging
				Me._IOWA = value
				Me.SendPropertyChanged("IOWA")
				Me.OnIOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property QTY() As String
		Get
			Return Me._QTY
		End Get
		Set
			If (String.Equals(Me._QTY, value) = false) Then
				Me.OnQTYChanging(value)
				Me.SendPropertyChanging
				Me._QTY = value
				Me.SendPropertyChanged("QTY")
				Me.OnQTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MULTIPLY", DbType:="NVarChar(50)")>  _
	Public Property MULTIPLY() As String
		Get
			Return Me._MULTIPLY
		End Get
		Set
			If (String.Equals(Me._MULTIPLY, value) = false) Then
				Me.OnMULTIPLYChanging(value)
				Me.SendPropertyChanging
				Me._MULTIPLY = value
				Me.SendPropertyChanged("MULTIPLY")
				Me.OnMULTIPLYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STR_VALUE", DbType:="NVarChar(50)")>  _
	Public Property STR_VALUE() As String
		Get
			Return Me._STR_VALUE
		End Get
		Set
			If (String.Equals(Me._STR_VALUE, value) = false) Then
				Me.OnSTR_VALUEChanging(value)
				Me.SendPropertyChanging
				Me._STR_VALUE = value
				Me.SendPropertyChanged("STR_VALUE")
				Me.OnSTR_VALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property SUNITCD() As String
		Get
			Return Me._SUNITCD
		End Get
		Set
			If (String.Equals(Me._SUNITCD, value) = false) Then
				Me.OnSUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._SUNITCD = value
				Me.SendPropertyChanged("SUNITCD")
				Me.OnSUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aori", DbType:="NVarChar(50)")>  _
	Public Property aori() As String
		Get
			Return Me._aori
		End Get
		Set
			If (String.Equals(Me._aori, value) = false) Then
				Me.OnaoriChanging(value)
				Me.SendPropertyChanging
				Me._aori = value
				Me.SendPropertyChanged("aori")
				Me.OnaoriChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_DRRQT_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_DRRQT_IDA() As String
		Get
			Return Me._FK_DRRQT_IDA
		End Get
		Set
			If (String.Equals(Me._FK_DRRQT_IDA, value) = false) Then
				Me.OnFK_DRRQT_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_DRRQT_IDA = value
				Me.SendPropertyChanged("FK_DRRQT_IDA")
				Me.OnFK_DRRQT_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SET", DbType:="Int")>  _
	Public Property FK_SET() As System.Nullable(Of Integer)
		Get
			Return Me._FK_SET
		End Get
		Set
			If (Me._FK_SET.Equals(value) = false) Then
				Me.OnFK_SETChanging(value)
				Me.SendPropertyChanging
				Me._FK_SET = value
				Me.SendPropertyChanged("FK_SET")
				Me.OnFK_SETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY_END", DbType:="NVarChar(MAX)")>  _
	Public Property QTY_END() As String
		Get
			Return Me._QTY_END
		End Get
		Set
			If (String.Equals(Me._QTY_END, value) = false) Then
				Me.OnQTY_ENDChanging(value)
				Me.SendPropertyChanging
				Me._QTY_END = value
				Me.SendPropertyChanged("QTY_END")
				Me.OnQTY_ENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD_END", DbType:="NVarChar(MAX)")>  _
	Public Property SUNITCD_END() As String
		Get
			Return Me._SUNITCD_END
		End Get
		Set
			If (String.Equals(Me._SUNITCD_END, value) = false) Then
				Me.OnSUNITCD_ENDChanging(value)
				Me.SendPropertyChanging
				Me._SUNITCD_END = value
				Me.SendPropertyChanged("SUNITCD_END")
				Me.OnSUNITCD_ENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF", DbType:="NVarChar(MAX)")>  _
	Public Property REF() As String
		Get
			Return Me._REF
		End Get
		Set
			If (String.Equals(Me._REF, value) = false) Then
				Me.OnREFChanging(value)
				Me.SendPropertyChanging
				Me._REF = value
				Me.SendPropertyChanged("REF")
				Me.OnREFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION", DbType:="NVarChar(50)")>  _
	Public Property CONDITION() As String
		Get
			Return Me._CONDITION
		End Get
		Set
			If (String.Equals(Me._CONDITION, value) = false) Then
				Me.OnCONDITIONChanging(value)
				Me.SendPropertyChanging
				Me._CONDITION = value
				Me.SendPropertyChanged("CONDITION")
				Me.OnCONDITIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_EQTO")>  _
Partial Public Class DRRQT_EQTO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As String
	
	Private _ROWS As String
	
	Private _IOWA As String
	
	Private _QTY As String
	
	Private _MULTIPLY As String
	
	Private _STR_VALUE As String
	
	Private _SUNITCD As String
	
	Private _aori As String
	
	Private _FK_DRRQT_IDA As String
	
	Private _FK_SET As System.Nullable(Of Integer)
	
	Private _QTY_END As String
	
	Private _SUNITCD_END As String
	
	Private _REMARK As String
	
	Private _REF As String
	
	Private _CONDITION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnROWSChanging(value As String)
    End Sub
    Partial Private Sub OnROWSChanged()
    End Sub
    Partial Private Sub OnIOWAChanging(value As String)
    End Sub
    Partial Private Sub OnIOWAChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As String)
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnMULTIPLYChanging(value As String)
    End Sub
    Partial Private Sub OnMULTIPLYChanged()
    End Sub
    Partial Private Sub OnSTR_VALUEChanging(value As String)
    End Sub
    Partial Private Sub OnSTR_VALUEChanged()
    End Sub
    Partial Private Sub OnSUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnSUNITCDChanged()
    End Sub
    Partial Private Sub OnaoriChanging(value As String)
    End Sub
    Partial Private Sub OnaoriChanged()
    End Sub
    Partial Private Sub OnFK_DRRQT_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_DRRQT_IDAChanged()
    End Sub
    Partial Private Sub OnFK_SETChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_SETChanged()
    End Sub
    Partial Private Sub OnQTY_ENDChanging(value As String)
    End Sub
    Partial Private Sub OnQTY_ENDChanged()
    End Sub
    Partial Private Sub OnSUNITCD_ENDChanging(value As String)
    End Sub
    Partial Private Sub OnSUNITCD_ENDChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnREFChanging(value As String)
    End Sub
    Partial Private Sub OnREFChanged()
    End Sub
    Partial Private Sub OnCONDITIONChanging(value As String)
    End Sub
    Partial Private Sub OnCONDITIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROWS", DbType:="NVarChar(MAX)")>  _
	Public Property ROWS() As String
		Get
			Return Me._ROWS
		End Get
		Set
			If (String.Equals(Me._ROWS, value) = false) Then
				Me.OnROWSChanging(value)
				Me.SendPropertyChanging
				Me._ROWS = value
				Me.SendPropertyChanged("ROWS")
				Me.OnROWSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property IOWA() As String
		Get
			Return Me._IOWA
		End Get
		Set
			If (String.Equals(Me._IOWA, value) = false) Then
				Me.OnIOWAChanging(value)
				Me.SendPropertyChanging
				Me._IOWA = value
				Me.SendPropertyChanged("IOWA")
				Me.OnIOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property QTY() As String
		Get
			Return Me._QTY
		End Get
		Set
			If (String.Equals(Me._QTY, value) = false) Then
				Me.OnQTYChanging(value)
				Me.SendPropertyChanging
				Me._QTY = value
				Me.SendPropertyChanged("QTY")
				Me.OnQTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MULTIPLY", DbType:="NVarChar(50)")>  _
	Public Property MULTIPLY() As String
		Get
			Return Me._MULTIPLY
		End Get
		Set
			If (String.Equals(Me._MULTIPLY, value) = false) Then
				Me.OnMULTIPLYChanging(value)
				Me.SendPropertyChanging
				Me._MULTIPLY = value
				Me.SendPropertyChanged("MULTIPLY")
				Me.OnMULTIPLYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STR_VALUE", DbType:="NVarChar(50)")>  _
	Public Property STR_VALUE() As String
		Get
			Return Me._STR_VALUE
		End Get
		Set
			If (String.Equals(Me._STR_VALUE, value) = false) Then
				Me.OnSTR_VALUEChanging(value)
				Me.SendPropertyChanging
				Me._STR_VALUE = value
				Me.SendPropertyChanged("STR_VALUE")
				Me.OnSTR_VALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property SUNITCD() As String
		Get
			Return Me._SUNITCD
		End Get
		Set
			If (String.Equals(Me._SUNITCD, value) = false) Then
				Me.OnSUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._SUNITCD = value
				Me.SendPropertyChanged("SUNITCD")
				Me.OnSUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aori", DbType:="NVarChar(50)")>  _
	Public Property aori() As String
		Get
			Return Me._aori
		End Get
		Set
			If (String.Equals(Me._aori, value) = false) Then
				Me.OnaoriChanging(value)
				Me.SendPropertyChanging
				Me._aori = value
				Me.SendPropertyChanged("aori")
				Me.OnaoriChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_DRRQT_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_DRRQT_IDA() As String
		Get
			Return Me._FK_DRRQT_IDA
		End Get
		Set
			If (String.Equals(Me._FK_DRRQT_IDA, value) = false) Then
				Me.OnFK_DRRQT_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_DRRQT_IDA = value
				Me.SendPropertyChanged("FK_DRRQT_IDA")
				Me.OnFK_DRRQT_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SET", DbType:="Int")>  _
	Public Property FK_SET() As System.Nullable(Of Integer)
		Get
			Return Me._FK_SET
		End Get
		Set
			If (Me._FK_SET.Equals(value) = false) Then
				Me.OnFK_SETChanging(value)
				Me.SendPropertyChanging
				Me._FK_SET = value
				Me.SendPropertyChanged("FK_SET")
				Me.OnFK_SETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY_END", DbType:="NVarChar(MAX)")>  _
	Public Property QTY_END() As String
		Get
			Return Me._QTY_END
		End Get
		Set
			If (String.Equals(Me._QTY_END, value) = false) Then
				Me.OnQTY_ENDChanging(value)
				Me.SendPropertyChanging
				Me._QTY_END = value
				Me.SendPropertyChanged("QTY_END")
				Me.OnQTY_ENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD_END", DbType:="NVarChar(MAX)")>  _
	Public Property SUNITCD_END() As String
		Get
			Return Me._SUNITCD_END
		End Get
		Set
			If (String.Equals(Me._SUNITCD_END, value) = false) Then
				Me.OnSUNITCD_ENDChanging(value)
				Me.SendPropertyChanging
				Me._SUNITCD_END = value
				Me.SendPropertyChanged("SUNITCD_END")
				Me.OnSUNITCD_ENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF", DbType:="NVarChar(MAX)")>  _
	Public Property REF() As String
		Get
			Return Me._REF
		End Get
		Set
			If (String.Equals(Me._REF, value) = false) Then
				Me.OnREFChanging(value)
				Me.SendPropertyChanging
				Me._REF = value
				Me.SendPropertyChanged("REF")
				Me.OnREFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION", DbType:="NVarChar(50)")>  _
	Public Property CONDITION() As String
		Get
			Return Me._CONDITION
		End Get
		Set
			If (String.Equals(Me._CONDITION, value) = false) Then
				Me.OnCONDITIONChanging(value)
				Me.SendPropertyChanging
				Me._CONDITION = value
				Me.SendPropertyChanged("CONDITION")
				Me.OnCONDITIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dramldrg")>  _
Partial Public Class dramldrg
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As System.Nullable(Of Integer)
	
	Private _amltpcd As System.Nullable(Of Short)
	
	Private _amlsubcd As System.Nullable(Of Short)
	
	Private _usetpcd As System.Nullable(Of Short)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnamltpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamltpcdChanged()
    End Sub
    Partial Private Sub OnamlsubcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamlsubcdChanged()
    End Sub
    Partial Private Sub OnusetpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnusetpcdChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="VarChar(1)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="VarChar(3)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="Int")>  _
	Public Property rgtno() As System.Nullable(Of Integer)
		Get
			Return Me._rgtno
		End Get
		Set
			If (Me._rgtno.Equals(value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amltpcd", DbType:="SmallInt")>  _
	Public Property amltpcd() As System.Nullable(Of Short)
		Get
			Return Me._amltpcd
		End Get
		Set
			If (Me._amltpcd.Equals(value) = false) Then
				Me.OnamltpcdChanging(value)
				Me.SendPropertyChanging
				Me._amltpcd = value
				Me.SendPropertyChanged("amltpcd")
				Me.OnamltpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amlsubcd", DbType:="SmallInt")>  _
	Public Property amlsubcd() As System.Nullable(Of Short)
		Get
			Return Me._amlsubcd
		End Get
		Set
			If (Me._amlsubcd.Equals(value) = false) Then
				Me.OnamlsubcdChanging(value)
				Me.SendPropertyChanging
				Me._amlsubcd = value
				Me.SendPropertyChanged("amlsubcd")
				Me.OnamlsubcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usetpcd", DbType:="SmallInt")>  _
	Public Property usetpcd() As System.Nullable(Of Short)
		Get
			Return Me._usetpcd
		End Get
		Set
			If (Me._usetpcd.Equals(value) = false) Then
				Me.OnusetpcdChanging(value)
				Me.SendPropertyChanging
				Me._usetpcd = value
				Me.SendPropertyChanged("usetpcd")
				Me.OnusetpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_A_ERRORS")>  _
Partial Public Class LOG_A_ERROR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _EX_MESSAGE As String
	
	Private _R_C_NO As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnEX_MESSAGEChanging(value As String)
    End Sub
    Partial Private Sub OnEX_MESSAGEChanged()
    End Sub
    Partial Private Sub OnR_C_NOChanging(value As String)
    End Sub
    Partial Private Sub OnR_C_NOChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EX_MESSAGE", DbType:="NVarChar(MAX)")>  _
	Public Property EX_MESSAGE() As String
		Get
			Return Me._EX_MESSAGE
		End Get
		Set
			If (String.Equals(Me._EX_MESSAGE, value) = false) Then
				Me.OnEX_MESSAGEChanging(value)
				Me.SendPropertyChanging
				Me._EX_MESSAGE = value
				Me.SendPropertyChanged("EX_MESSAGE")
				Me.OnEX_MESSAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_C_NO", DbType:="NVarChar(50)")>  _
	Public Property R_C_NO() As String
		Get
			Return Me._R_C_NO
		End Get
		Set
			If (String.Equals(Me._R_C_NO, value) = false) Then
				Me.OnR_C_NOChanging(value)
				Me.SendPropertyChanging
				Me._R_C_NO = value
				Me.SendPropertyChanged("R_C_NO")
				Me.OnR_C_NOChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.case1411$")>  _
Partial Public Class case1411_
	
	Private _IDA As System.Nullable(Of Double)
	
	Private _CITIZEN_ID_AUTHORIZE As String
	
	Private _FK_LCN_IDA As System.Nullable(Of Double)
	
	Private _IDA1 As System.Nullable(Of Double)
	
	Private _STATUS_UPDATE As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", DbType:="Float")>  _
	Public Property IDA() As System.Nullable(Of Double)
		Get
			Return Me._IDA
		End Get
		Set
			If (Me._IDA.Equals(value) = false) Then
				Me._IDA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_AUTHORIZE", DbType:="NVarChar(255)")>  _
	Public Property CITIZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_AUTHORIZE, value) = false) Then
				Me._CITIZEN_ID_AUTHORIZE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_LCN_IDA", DbType:="Float")>  _
	Public Property FK_LCN_IDA() As System.Nullable(Of Double)
		Get
			Return Me._FK_LCN_IDA
		End Get
		Set
			If (Me._FK_LCN_IDA.Equals(value) = false) Then
				Me._FK_LCN_IDA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA1", DbType:="Float")>  _
	Public Property IDA1() As System.Nullable(Of Double)
		Get
			Return Me._IDA1
		End Get
		Set
			If (Me._IDA1.Equals(value) = false) Then
				Me._IDA1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_UPDATE", DbType:="NVarChar(50)")>  _
	Public Property STATUS_UPDATE() As String
		Get
			Return Me._STATUS_UPDATE
		End Get
		Set
			If (String.Equals(Me._STATUS_UPDATE, value) = false) Then
				Me._STATUS_UPDATE = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="fda.dalcn")>  _
Partial Public Class dalcn
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Integer)
	
	Private _lcntpcd As String
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _pvnabbr As String
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _lcnscd As System.Nullable(Of Integer)
	
	Private _lctnmcd As System.Nullable(Of Integer)
	
	Private _lctcd As System.Nullable(Of Integer)
	
	Private _bsnid As System.Nullable(Of Integer)
	
	Private _bsncd As System.Nullable(Of Integer)
	
	Private _bsnlctcd As System.Nullable(Of Integer)
	
	Private _bsnage As System.Nullable(Of Integer)
	
	Private _opentime As String
	
	Private _remark As String
	
	Private _phrflg As String
	
	Private _frtappdate As System.Nullable(Of Date)
	
	Private _appdate As System.Nullable(Of Date)
	
	Private _expyear As System.Nullable(Of Integer)
	
	Private _fdano As String
	
	Private _cnccd As System.Nullable(Of Integer)
	
	Private _cnccscd As System.Nullable(Of Integer)
	
	Private _cncdate As System.Nullable(Of Date)
	
	Private _lcnpayst As System.Nullable(Of Integer)
	
	Private _rcptpayst As System.Nullable(Of Integer)
	
	Private _amphrcd As System.Nullable(Of Integer)
	
	Private _chngwtcd As System.Nullable(Of Integer)
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _Co_name As String
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _comment As String
	
	Private _CTZNO As String
	
	Private _TRANSECTION_ID_UPLOAD As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _CITIZEN_ID_UPLOAD As String
	
	Private _CITIZEN_ID_AUTHORIZE As String
	
	Private _IMAGE_BSN As String
	
	Private _IMAGE_HOSPITAL As String
	
	Private _IMAGE_HOSPITAL2 As String
	
	Private _IMAGE_KEEP As String
	
	Private _IMAGE_KEEP2 As String
	
	Private _RCVDATE_DISPLAY As String
	
	Private _RCVNO_DISPLAY As String
	
	Private _LCNNO_DISPLAY As String
	
	Private _IMAGE_MAP As String
	
	Private _SEND_POST As System.Nullable(Of Integer)
	
	Private _PAY_BANK As System.Nullable(Of Integer)
	
	Private _GROUP_TYPE As String
	
	Private _Email As String
	
	Private _AGE As String
	
	Private _NATION As String
	
	Private _IDENTIFY As String
	
	Private _modifydate As System.Nullable(Of Date)
	
	Private _CONSIDER_DATE As System.Nullable(Of Date)
	
	Private _WRITE_AT As String
	
	Private _WRITE_DATE As String
	
	Private _CATEGORY_DRUG As String
	
	Private _CHK_SELL_TYPE As String
	
	Private _CHK_SELL_TYPE1 As String
	
	Private _CHK_SELL_TYPE2 As String
	
	Private _FK_STAFF_OFFER_IDA As System.Nullable(Of Integer)
	
	Private _IMAGE_QR_INPUT As String
	
	Private _IMAGE_QR_OUTPUT As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _thanm As String
	
	Private _BSN_THAIFULLNAME As String
	
	Private _BSN_IDENTIFY As String
	
	Private _BSN_ADDR As String
	
	Private _BSN_SOI As String
	
	Private _BSN_ROAD As String
	
	Private _BSN_MOO As String
	
	Private _BSN_THMBL_NAME As String
	
	Private _BSN_AMPHR_NAME As String
	
	Private _BSN_CHWNGNAME As String
	
	Private _BSN_TELEPHONE As String
	
	Private _BSN_FAX As String
	
	Private _BSN_EMAIL As String
	
	Private _thanameplace As String
	
	Private _thaaddr As String
	
	Private _thasoi As String
	
	Private _tharoad As String
	
	Private _thamu As String
	
	Private _thathmblnm As String
	
	Private _thaamphrnm As String
	
	Private _thachngwtnm As String
	
	Private _tel As String
	
	Private _fax As String
	
	Private _LOCATION_ADDRESS_thanameplace As String
	
	Private _LOCATION_ADDRESS_thaaddr As String
	
	Private _LOCATION_ADDRESS_thasoi As String
	
	Private _LOCATION_ADDRESS_tharoad As String
	
	Private _LOCATION_ADDRESS_thamu As String
	
	Private _LOCATION_ADDRESS_thathmblnm As String
	
	Private _LOCATION_ADDRESS_thaamphrnm As String
	
	Private _LOCATION_ADDRESS_thachngwtnm As String
	
	Private _LOCATION_ADDRESS_tel As String
	
	Private _LOCATION_ADDRESS_fax As String
	
	Private _LOCATION_ADDRESS_lcnsid As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_engaddr As String
	
	Private _LOCATION_ADDRESS_tharoom As String
	
	Private _LOCATION_ADDRESS_thafloor As String
	
	Private _LOCATION_ADDRESS_thabuilding As String
	
	Private _LOCATION_ADDRESS_engsoi As String
	
	Private _LOCATION_ADDRESS_engroad As String
	
	Private _LOCATION_ADDRESS_zipcode As String
	
	Private _LOCATION_ADDRESS_lstfcd As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_lmdfdate As System.Nullable(Of Date)
	
	Private _LOCATION_ADDRESS_IDA As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_FK_IDA As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_TR_ID As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_DOWN_ID As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_CITIZEN_ID As String
	
	Private _LOCATION_ADDRESS_CITIZEN_ID_UPLOAD As String
	
	Private _LOCATION_ADDRESS_XMLNAME As String
	
	Private _LOCATION_ADDRESS_engmu As String
	
	Private _LOCATION_ADDRESS_engfloor As String
	
	Private _LOCATION_ADDRESS_engbuilding As String
	
	Private _LOCATION_ADDRESS_rcvno As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_rcvdate As System.Nullable(Of Date)
	
	Private _LOCATION_ADDRESS_lctcd As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_engnameplace As String
	
	Private _LOCATION_ADDRESS_STATUS_ID As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_HOUSENO As String
	
	Private _LOCATION_ADDRESS_Branch As String
	
	Private _LOCATION_ADDRESS_LOCATION_TYPE_NORMAL As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_LOCATION_TYPE_OTHER As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_LOCATION_TYPE_ID As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_SYSTEM_NAME As String
	
	Private _LOCATION_ADDRESS_thmblcd As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_chngwtcd As System.Nullable(Of Integer)
	
	Private _LOCATION_ADDRESS_engthmblnm As String
	
	Private _LOCATION_ADDRESS_engamphrnm As String
	
	Private _LOCATION_ADDRESS_engchngwtnm As String
	
	Private _LOCATION_ADDRESS_IDENTIFY As String
	
	Private _LOCATION_ADDRESS_REMARK As String
	
	Private _BSN_IDA As System.Nullable(Of Integer)
	
	Private _BSN_THAINAME As String
	
	Private _BSN_THAILASTNAME As String
	
	Private _BSN_PREFIXENGCD As String
	
	Private _BSN_ENGNAME As String
	
	Private _BSN_ENGLASTNAME As String
	
	Private _BSN_ENGFULLNAME As String
	
	Private _CHANGWAT_ID As System.Nullable(Of Integer)
	
	Private _AMPHR_ID As System.Nullable(Of Integer)
	
	Private _TUMBON_ID As System.Nullable(Of Integer)
	
	Private _BSN_FLOOR As String
	
	Private _BSN_BUILDING As String
	
	Private _BSN_ZIPCODE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _DOWN_ID As System.Nullable(Of Integer)
	
	Private _CITIZEN_ID As String
	
	Private _XMLNAME As String
	
	Private _NATIONALITY As String
	
	Private _BSN_HOUSENO As String
	
	Private _BSN_ENGADDR As String
	
	Private _BSN_ENGMU As String
	
	Private _BSN_ENGSOI As String
	
	Private _BSN_ENGROAD As String
	
	Private _BSN_CHWNG_ENGNAME As String
	
	Private _BSN_AMPHR_ENGNAME As String
	
	Private _BSN_THMBL_ENGNAME As String
	
	Private _BSN_NATIONALITY_CD As String
	
	Private _syslcnsnm_ID As System.Nullable(Of Integer)
	
	Private _syslcnsnm_identify As String
	
	Private _syslcnsnm_lcnsid As System.Nullable(Of Integer)
	
	Private _syslcnsnm_lcnscd As System.Nullable(Of Integer)
	
	Private _syslcnsnm_prefixcd As System.Nullable(Of Integer)
	
	Private _syslcnsnm_prefixnm As String
	
	Private _syslcnsnm_thanm As String
	
	Private _syslcnsnm_engnm As String
	
	Private _syslcnsnm_lctcd As System.Nullable(Of Integer)
	
	Private _syslcnsnm_thalnm As String
	
	Private _syslcnsnm_englnm As String
	
	Private _syslcnsnm_suffixcd As System.Nullable(Of Integer)
	
	Private _syslcnsnm_lcnsst As System.Nullable(Of Integer)
	
	Private _syslcnsnm_grplcnscd As System.Nullable(Of Integer)
	
	Private _syslcnsnm_bsncd As System.Nullable(Of Integer)
	
	Private _syslcnsnm_lstfcd As System.Nullable(Of Integer)
	
	Private _syslcnsnm_lmdfdate As System.Nullable(Of Date)
	
	Private _syslcnsnm_lcnsidst As System.Nullable(Of Integer)
	
	Private _syslcnsnm_validdate As System.Nullable(Of Date)
	
	Private _syslcnsnm_oldid As String
	
	Private _syslcnsnm_type As System.Nullable(Of Integer)
	
	Private _syslcnsnm_create_date As System.Nullable(Of Date)
	
	Private _syslcnsnm_update_date As System.Nullable(Of Date)
	
	Private _prefixcd As String
	
	Private _syslcnsid_IDA As System.Nullable(Of Integer)
	
	Private _syslcnsid_identify As String
	
	Private _syslcnsid_lcnsid As System.Nullable(Of Integer)
	
	Private _lcnsid_crtlct As System.Nullable(Of Integer)
	
	Private _lcnsid_birthdate As System.Nullable(Of Date)
	
	Private _lcnsid_chngwtcd As System.Nullable(Of Integer)
	
	Private _lcnsid_ntcd As System.Nullable(Of Integer)
	
	Private _lcnsid_taxno As String
	
	Private _lcnsid_trdregno As String
	
	Private _lcnsid_ctzno As String
	
	Private _lcnsid_remark As String
	
	Private _lcnsid_idst As System.Nullable(Of Integer)
	
	Private _lcnsid_phrno As String
	
	Private _lcnsid_stfcd As System.Nullable(Of Integer)
	
	Private _lcnsid_nmprnst As System.Nullable(Of Integer)
	
	Private _lcnsid_cncdate As System.Nullable(Of Date)
	
	Private _lcnsid_lstfcd As System.Nullable(Of Integer)
	
	Private _lcnsid_lcnsidst As System.Nullable(Of Integer)
	
	Private _lcnsid_scridst As System.Nullable(Of Integer)
	
	Private _lcnsid_lmdfdate As System.Nullable(Of Date)
	
	Private _lcnsid_url As String
	
	Private _lcnsid_cncremark As String
	
	Private _lcnsid_email As String
	
	Private _lcnsid_otaxno As String
	
	Private _lcnsid_type As System.Nullable(Of Integer)
	
	Private _lcnsid_email_sro As String
	
	Private _lcnsid_email_contract_real As String
	
	Private _lcnsid_ID_main As String
	
	Private _lcnsid_status As System.Nullable(Of Integer)
	
	Private _lcnsid_person_status_ID As System.Nullable(Of Integer)
	
	Private _lcnsid_person_status As String
	
	Private _lcnsid_sex As String
	
	Private _lcnsid_standard_description As String
	
	Private _lcnsid_register_capital As String
	
	Private _syslctaddr_ID As System.Nullable(Of Integer)
	
	Private _syslctaddr_identify As String
	
	Private _syslctaddr_lcnsid As System.Nullable(Of Integer)
	
	Private _syslctaddr_lctcd As System.Nullable(Of Integer)
	
	Private _syslctaddr_thaaddr As String
	
	Private _syslctaddr_engaddr As String
	
	Private _syslctaddr_room As String
	
	Private _syslctaddr_mu As String
	
	Private _syslctaddr_floor As String
	
	Private _syslctaddr_thasoi As String
	
	Private _syslctaddr_building As String
	
	Private _syslctaddr_engsoi As String
	
	Private _syslctaddr_tharoad As String
	
	Private _syslctaddr_engroad As String
	
	Private _syslctaddr_thmblcd As System.Nullable(Of Integer)
	
	Private _syslctaddr_thmblnm As String
	
	Private _syslctaddr_amphrcd As System.Nullable(Of Integer)
	
	Private _syslctaddr_amphrnm As String
	
	Private _syslctaddr_chngwtcd As System.Nullable(Of Integer)
	
	Private _syslctaddr_chngwtnm As String
	
	Private _syslctaddr_zipcode As System.Nullable(Of Integer)
	
	Private _syslctaddr_tel As String
	
	Private _syslctaddr_fax As String
	
	Private _syslctaddr_validdate As System.Nullable(Of Date)
	
	Private _syslctaddr_lstfcd As System.Nullable(Of Integer)
	
	Private _syslctaddr_lmdfdate As System.Nullable(Of Date)
	
	Private _syslctaddr_pvcode As System.Nullable(Of Integer)
	
	Private _syslctaddr_amcode As System.Nullable(Of Integer)
	
	Private _syslctaddr_ttcode As System.Nullable(Of Integer)
	
	Private _syslctaddr_branch As String
	
	Private _syslctaddr_Fulladdr As String
	
	Private _LOCATION_ADDRESS_amphrcd As System.Nullable(Of Integer)
	
	Private _BSN_PREFIXTHAICD As System.Nullable(Of Integer)
	
	Private _syschngwt_chngwtcd As System.Nullable(Of Integer)
	
	Private _syschngwt_thachngwtnm As String
	
	Private _syschngwt_engchngwtnm As String
	
	Private _syschngwt_thacwabbr As String
	
	Private _syschngwt_engcwabbr As String
	
	Private _syschngwt_mapgis As System.Nullable(Of Integer)
	
	Private _syschngwt_chngwtgrpcd As System.Nullable(Of Integer)
	
	Private _LICENSED As String
	
	Private _SUSPENSION As String
	
	Private _REVOCATION As String
	
	Private _FINED_IMPRISONED As String
	
	Private _CASE_SUSPENDED As String
	
	Private _MAIN_LCN_IDA As System.Nullable(Of Integer)
	
	Private _CATEGORY3 As String
	
	Private _CATEGORY4 As String
	
	Private _PRASAD_INFECTION As String
	
	Private _EXTRACT As String
	
	Private _OINTMENTS_CREAMS As String
	
	Private _BIOLOGICAL As String
	
	Private _PHARMACEUTICAL_CHEMICALS As String
	
	Private _OTHER As String
	
	Private _TABLET_CAPSULE As String
	
	Private _RCVNO_MANUAL As String
	
	Private _LCNNO_MANUAL As String
	
	Private _TEMPORARY_RCVNO As String
	
	Private _TEMPLATE_ID As System.Nullable(Of Integer)
	
	Private _rcvr_id As System.Nullable(Of Integer)
	
	Private _ref_no As String
	
	Private _rcv_citizen_id As String
	
	Private _FIRST_APP_DATE As System.Nullable(Of Date)
	
	Private _expdate As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnpvnabbrChanging(value As String)
    End Sub
    Partial Private Sub OnpvnabbrChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnlctnmcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctnmcdChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnbsnidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbsnidChanged()
    End Sub
    Partial Private Sub OnbsncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbsncdChanged()
    End Sub
    Partial Private Sub OnbsnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbsnlctcdChanged()
    End Sub
    Partial Private Sub OnbsnageChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbsnageChanged()
    End Sub
    Partial Private Sub OnopentimeChanging(value As String)
    End Sub
    Partial Private Sub OnopentimeChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    Partial Private Sub OnphrflgChanging(value As String)
    End Sub
    Partial Private Sub OnphrflgChanged()
    End Sub
    Partial Private Sub OnfrtappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfrtappdateChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OnexpyearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnexpyearChanged()
    End Sub
    Partial Private Sub OnfdanoChanging(value As String)
    End Sub
    Partial Private Sub OnfdanoChanged()
    End Sub
    Partial Private Sub OncnccdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncnccdChanged()
    End Sub
    Partial Private Sub OncnccscdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncnccscdChanged()
    End Sub
    Partial Private Sub OncncdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncncdateChanged()
    End Sub
    Partial Private Sub OnlcnpaystChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnpaystChanged()
    End Sub
    Partial Private Sub OnrcptpaystChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcptpaystChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnCo_nameChanging(value As String)
    End Sub
    Partial Private Sub OnCo_nameChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OncommentChanging(value As String)
    End Sub
    Partial Private Sub OncommentChanged()
    End Sub
    Partial Private Sub OnCTZNOChanging(value As String)
    End Sub
    Partial Private Sub OnCTZNOChanged()
    End Sub
    Partial Private Sub OnTRANSECTION_ID_UPLOADChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTRANSECTION_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnIMAGE_BSNChanging(value As String)
    End Sub
    Partial Private Sub OnIMAGE_BSNChanged()
    End Sub
    Partial Private Sub OnIMAGE_HOSPITALChanging(value As String)
    End Sub
    Partial Private Sub OnIMAGE_HOSPITALChanged()
    End Sub
    Partial Private Sub OnIMAGE_HOSPITAL2Changing(value As String)
    End Sub
    Partial Private Sub OnIMAGE_HOSPITAL2Changed()
    End Sub
    Partial Private Sub OnIMAGE_KEEPChanging(value As String)
    End Sub
    Partial Private Sub OnIMAGE_KEEPChanged()
    End Sub
    Partial Private Sub OnIMAGE_KEEP2Changing(value As String)
    End Sub
    Partial Private Sub OnIMAGE_KEEP2Changed()
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanged()
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnLCNNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnIMAGE_MAPChanging(value As String)
    End Sub
    Partial Private Sub OnIMAGE_MAPChanged()
    End Sub
    Partial Private Sub OnSEND_POSTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEND_POSTChanged()
    End Sub
    Partial Private Sub OnPAY_BANKChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPAY_BANKChanged()
    End Sub
    Partial Private Sub OnGROUP_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUP_TYPEChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnAGEChanging(value As String)
    End Sub
    Partial Private Sub OnAGEChanged()
    End Sub
    Partial Private Sub OnNATIONChanging(value As String)
    End Sub
    Partial Private Sub OnNATIONChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnmodifydateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnmodifydateChanged()
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanged()
    End Sub
    Partial Private Sub OnWRITE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_ATChanged()
    End Sub
    Partial Private Sub OnWRITE_DATEChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_DATEChanged()
    End Sub
    Partial Private Sub OnCATEGORY_DRUGChanging(value As String)
    End Sub
    Partial Private Sub OnCATEGORY_DRUGChanged()
    End Sub
    Partial Private Sub OnCHK_SELL_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_SELL_TYPEChanged()
    End Sub
    Partial Private Sub OnCHK_SELL_TYPE1Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_SELL_TYPE1Changed()
    End Sub
    Partial Private Sub OnCHK_SELL_TYPE2Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_SELL_TYPE2Changed()
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanged()
    End Sub
    Partial Private Sub OnIMAGE_QR_INPUTChanging(value As String)
    End Sub
    Partial Private Sub OnIMAGE_QR_INPUTChanged()
    End Sub
    Partial Private Sub OnIMAGE_QR_OUTPUTChanging(value As String)
    End Sub
    Partial Private Sub OnIMAGE_QR_OUTPUTChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnthanmChanging(value As String)
    End Sub
    Partial Private Sub OnthanmChanged()
    End Sub
    Partial Private Sub OnBSN_THAIFULLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THAIFULLNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnBSN_ADDRChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ADDRChanged()
    End Sub
    Partial Private Sub OnBSN_SOIChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_SOIChanged()
    End Sub
    Partial Private Sub OnBSN_ROADChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ROADChanged()
    End Sub
    Partial Private Sub OnBSN_MOOChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_MOOChanged()
    End Sub
    Partial Private Sub OnBSN_THMBL_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THMBL_NAMEChanged()
    End Sub
    Partial Private Sub OnBSN_AMPHR_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_AMPHR_NAMEChanged()
    End Sub
    Partial Private Sub OnBSN_CHWNGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_CHWNGNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_TELEPHONEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_TELEPHONEChanged()
    End Sub
    Partial Private Sub OnBSN_FAXChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_FAXChanged()
    End Sub
    Partial Private Sub OnBSN_EMAILChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_EMAILChanged()
    End Sub
    Partial Private Sub OnthanameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnthanameplaceChanged()
    End Sub
    Partial Private Sub OnthaaddrChanging(value As String)
    End Sub
    Partial Private Sub OnthaaddrChanged()
    End Sub
    Partial Private Sub OnthasoiChanging(value As String)
    End Sub
    Partial Private Sub OnthasoiChanged()
    End Sub
    Partial Private Sub OntharoadChanging(value As String)
    End Sub
    Partial Private Sub OntharoadChanged()
    End Sub
    Partial Private Sub OnthamuChanging(value As String)
    End Sub
    Partial Private Sub OnthamuChanged()
    End Sub
    Partial Private Sub OnthathmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnthathmblnmChanged()
    End Sub
    Partial Private Sub OnthaamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnthaamphrnmChanged()
    End Sub
    Partial Private Sub OnthachngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnthachngwtnmChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thanameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thanameplaceChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaaddrChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaaddrChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thasoiChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thasoiChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tharoadChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tharoadChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thamuChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thamuChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thathmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thathmblnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thaamphrnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thachngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thachngwtnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_telChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_telChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_faxChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_faxChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_lcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_lcnsidChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engaddrChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engaddrChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tharoomChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_tharoomChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thafloorChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thafloorChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thabuildingChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thabuildingChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engsoiChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engsoiChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engroadChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engroadChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_zipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_zipcodeChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_lstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_lstfcdChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_lmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_lmdfdateChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_IDAChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_FK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_FK_IDAChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_TR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_TR_IDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_DOWN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_DOWN_IDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_CITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_CITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_CITIZEN_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_CITIZEN_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_XMLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_XMLNAMEChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engmuChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engmuChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engfloorChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engfloorChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engbuildingChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engbuildingChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_rcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_rcvnoChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_rcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_rcvdateChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_lctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_lctcdChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engnameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engnameplaceChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_STATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_STATUS_IDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_HOUSENOChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_HOUSENOChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_BranchChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_BranchChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_LOCATION_TYPE_NORMALChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_LOCATION_TYPE_NORMALChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_LOCATION_TYPE_OTHERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_LOCATION_TYPE_OTHERChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_LOCATION_TYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_LOCATION_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_SYSTEM_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_SYSTEM_NAMEChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thmblcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_thmblcdChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_chngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_chngwtcdChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engthmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engthmblnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engamphrnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engchngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_engchngwtnmChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_REMARKChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_REMARKChanged()
    End Sub
    Partial Private Sub OnBSN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBSN_IDAChanged()
    End Sub
    Partial Private Sub OnBSN_THAINAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THAINAMEChanged()
    End Sub
    Partial Private Sub OnBSN_THAILASTNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THAILASTNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_PREFIXENGCDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_PREFIXENGCDChanged()
    End Sub
    Partial Private Sub OnBSN_ENGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_ENGLASTNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGLASTNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_ENGFULLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGFULLNAMEChanged()
    End Sub
    Partial Private Sub OnCHANGWAT_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHANGWAT_IDChanged()
    End Sub
    Partial Private Sub OnAMPHR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAMPHR_IDChanged()
    End Sub
    Partial Private Sub OnTUMBON_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTUMBON_IDChanged()
    End Sub
    Partial Private Sub OnBSN_FLOORChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_FLOORChanged()
    End Sub
    Partial Private Sub OnBSN_BUILDINGChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_BUILDINGChanged()
    End Sub
    Partial Private Sub OnBSN_ZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ZIPCODEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnDOWN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOWN_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnXMLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnXMLNAMEChanged()
    End Sub
    Partial Private Sub OnNATIONALITYChanging(value As String)
    End Sub
    Partial Private Sub OnNATIONALITYChanged()
    End Sub
    Partial Private Sub OnBSN_HOUSENOChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_HOUSENOChanged()
    End Sub
    Partial Private Sub OnBSN_ENGADDRChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGADDRChanged()
    End Sub
    Partial Private Sub OnBSN_ENGMUChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGMUChanged()
    End Sub
    Partial Private Sub OnBSN_ENGSOIChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGSOIChanged()
    End Sub
    Partial Private Sub OnBSN_ENGROADChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_ENGROADChanged()
    End Sub
    Partial Private Sub OnBSN_CHWNG_ENGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_CHWNG_ENGNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_AMPHR_ENGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_AMPHR_ENGNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_THMBL_ENGNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_THMBL_ENGNAMEChanged()
    End Sub
    Partial Private Sub OnBSN_NATIONALITY_CDChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_NATIONALITY_CDChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslcnsnm_IDChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_identifyChanging(value As String)
    End Sub
    Partial Private Sub Onsyslcnsnm_identifyChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_lcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslcnsnm_lcnsidChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_lcnscdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslcnsnm_lcnscdChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_prefixcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslcnsnm_prefixcdChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_prefixnmChanging(value As String)
    End Sub
    Partial Private Sub Onsyslcnsnm_prefixnmChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_thanmChanging(value As String)
    End Sub
    Partial Private Sub Onsyslcnsnm_thanmChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_engnmChanging(value As String)
    End Sub
    Partial Private Sub Onsyslcnsnm_engnmChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_lctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslcnsnm_lctcdChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_thalnmChanging(value As String)
    End Sub
    Partial Private Sub Onsyslcnsnm_thalnmChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_englnmChanging(value As String)
    End Sub
    Partial Private Sub Onsyslcnsnm_englnmChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_suffixcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslcnsnm_suffixcdChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_lcnsstChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslcnsnm_lcnsstChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_grplcnscdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslcnsnm_grplcnscdChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_bsncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslcnsnm_bsncdChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_lstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslcnsnm_lstfcdChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_lmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onsyslcnsnm_lmdfdateChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_lcnsidstChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslcnsnm_lcnsidstChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_validdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onsyslcnsnm_validdateChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_oldidChanging(value As String)
    End Sub
    Partial Private Sub Onsyslcnsnm_oldidChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_typeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslcnsnm_typeChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_create_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onsyslcnsnm_create_dateChanged()
    End Sub
    Partial Private Sub Onsyslcnsnm_update_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onsyslcnsnm_update_dateChanged()
    End Sub
    Partial Private Sub OnprefixcdChanging(value As String)
    End Sub
    Partial Private Sub OnprefixcdChanged()
    End Sub
    Partial Private Sub Onsyslcnsid_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslcnsid_IDAChanged()
    End Sub
    Partial Private Sub Onsyslcnsid_identifyChanging(value As String)
    End Sub
    Partial Private Sub Onsyslcnsid_identifyChanged()
    End Sub
    Partial Private Sub Onsyslcnsid_lcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslcnsid_lcnsidChanged()
    End Sub
    Partial Private Sub Onlcnsid_crtlctChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onlcnsid_crtlctChanged()
    End Sub
    Partial Private Sub Onlcnsid_birthdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onlcnsid_birthdateChanged()
    End Sub
    Partial Private Sub Onlcnsid_chngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onlcnsid_chngwtcdChanged()
    End Sub
    Partial Private Sub Onlcnsid_ntcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onlcnsid_ntcdChanged()
    End Sub
    Partial Private Sub Onlcnsid_taxnoChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_taxnoChanged()
    End Sub
    Partial Private Sub Onlcnsid_trdregnoChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_trdregnoChanged()
    End Sub
    Partial Private Sub Onlcnsid_ctznoChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_ctznoChanged()
    End Sub
    Partial Private Sub Onlcnsid_remarkChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_remarkChanged()
    End Sub
    Partial Private Sub Onlcnsid_idstChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onlcnsid_idstChanged()
    End Sub
    Partial Private Sub Onlcnsid_phrnoChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_phrnoChanged()
    End Sub
    Partial Private Sub Onlcnsid_stfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onlcnsid_stfcdChanged()
    End Sub
    Partial Private Sub Onlcnsid_nmprnstChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onlcnsid_nmprnstChanged()
    End Sub
    Partial Private Sub Onlcnsid_cncdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onlcnsid_cncdateChanged()
    End Sub
    Partial Private Sub Onlcnsid_lstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onlcnsid_lstfcdChanged()
    End Sub
    Partial Private Sub Onlcnsid_lcnsidstChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onlcnsid_lcnsidstChanged()
    End Sub
    Partial Private Sub Onlcnsid_scridstChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onlcnsid_scridstChanged()
    End Sub
    Partial Private Sub Onlcnsid_lmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onlcnsid_lmdfdateChanged()
    End Sub
    Partial Private Sub Onlcnsid_urlChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_urlChanged()
    End Sub
    Partial Private Sub Onlcnsid_cncremarkChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_cncremarkChanged()
    End Sub
    Partial Private Sub Onlcnsid_emailChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_emailChanged()
    End Sub
    Partial Private Sub Onlcnsid_otaxnoChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_otaxnoChanged()
    End Sub
    Partial Private Sub Onlcnsid_typeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onlcnsid_typeChanged()
    End Sub
    Partial Private Sub Onlcnsid_email_sroChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_email_sroChanged()
    End Sub
    Partial Private Sub Onlcnsid_email_contract_realChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_email_contract_realChanged()
    End Sub
    Partial Private Sub Onlcnsid_ID_mainChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_ID_mainChanged()
    End Sub
    Partial Private Sub Onlcnsid_statusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onlcnsid_statusChanged()
    End Sub
    Partial Private Sub Onlcnsid_person_status_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onlcnsid_person_status_IDChanged()
    End Sub
    Partial Private Sub Onlcnsid_person_statusChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_person_statusChanged()
    End Sub
    Partial Private Sub Onlcnsid_sexChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_sexChanged()
    End Sub
    Partial Private Sub Onlcnsid_standard_descriptionChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_standard_descriptionChanged()
    End Sub
    Partial Private Sub Onlcnsid_register_capitalChanging(value As String)
    End Sub
    Partial Private Sub Onlcnsid_register_capitalChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslctaddr_IDChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_identifyChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_identifyChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_lcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslctaddr_lcnsidChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_lctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslctaddr_lctcdChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_thaaddrChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_thaaddrChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_engaddrChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_engaddrChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_roomChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_roomChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_muChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_muChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_floorChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_floorChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_thasoiChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_thasoiChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_buildingChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_buildingChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_engsoiChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_engsoiChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_tharoadChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_tharoadChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_engroadChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_engroadChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_thmblcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslctaddr_thmblcdChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_thmblnmChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_thmblnmChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_amphrcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslctaddr_amphrcdChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_amphrnmChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_amphrnmChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_chngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslctaddr_chngwtcdChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_chngwtnmChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_chngwtnmChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_zipcodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslctaddr_zipcodeChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_telChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_telChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_faxChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_faxChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_validdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onsyslctaddr_validdateChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_lstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslctaddr_lstfcdChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_lmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onsyslctaddr_lmdfdateChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_pvcodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslctaddr_pvcodeChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_amcodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslctaddr_amcodeChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_ttcodeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyslctaddr_ttcodeChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_branchChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_branchChanged()
    End Sub
    Partial Private Sub Onsyslctaddr_FulladdrChanging(value As String)
    End Sub
    Partial Private Sub Onsyslctaddr_FulladdrChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_amphrcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_ADDRESS_amphrcdChanged()
    End Sub
    Partial Private Sub OnBSN_PREFIXTHAICDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBSN_PREFIXTHAICDChanged()
    End Sub
    Partial Private Sub Onsyschngwt_chngwtcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyschngwt_chngwtcdChanged()
    End Sub
    Partial Private Sub Onsyschngwt_thachngwtnmChanging(value As String)
    End Sub
    Partial Private Sub Onsyschngwt_thachngwtnmChanged()
    End Sub
    Partial Private Sub Onsyschngwt_engchngwtnmChanging(value As String)
    End Sub
    Partial Private Sub Onsyschngwt_engchngwtnmChanged()
    End Sub
    Partial Private Sub Onsyschngwt_thacwabbrChanging(value As String)
    End Sub
    Partial Private Sub Onsyschngwt_thacwabbrChanged()
    End Sub
    Partial Private Sub Onsyschngwt_engcwabbrChanging(value As String)
    End Sub
    Partial Private Sub Onsyschngwt_engcwabbrChanged()
    End Sub
    Partial Private Sub Onsyschngwt_mapgisChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyschngwt_mapgisChanged()
    End Sub
    Partial Private Sub Onsyschngwt_chngwtgrpcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onsyschngwt_chngwtgrpcdChanged()
    End Sub
    Partial Private Sub OnLICENSEDChanging(value As String)
    End Sub
    Partial Private Sub OnLICENSEDChanged()
    End Sub
    Partial Private Sub OnSUSPENSIONChanging(value As String)
    End Sub
    Partial Private Sub OnSUSPENSIONChanged()
    End Sub
    Partial Private Sub OnREVOCATIONChanging(value As String)
    End Sub
    Partial Private Sub OnREVOCATIONChanged()
    End Sub
    Partial Private Sub OnFINED_IMPRISONEDChanging(value As String)
    End Sub
    Partial Private Sub OnFINED_IMPRISONEDChanged()
    End Sub
    Partial Private Sub OnCASE_SUSPENDEDChanging(value As String)
    End Sub
    Partial Private Sub OnCASE_SUSPENDEDChanged()
    End Sub
    Partial Private Sub OnMAIN_LCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMAIN_LCN_IDAChanged()
    End Sub
    Partial Private Sub OnCATEGORY3Changing(value As String)
    End Sub
    Partial Private Sub OnCATEGORY3Changed()
    End Sub
    Partial Private Sub OnCATEGORY4Changing(value As String)
    End Sub
    Partial Private Sub OnCATEGORY4Changed()
    End Sub
    Partial Private Sub OnPRASAD_INFECTIONChanging(value As String)
    End Sub
    Partial Private Sub OnPRASAD_INFECTIONChanged()
    End Sub
    Partial Private Sub OnEXTRACTChanging(value As String)
    End Sub
    Partial Private Sub OnEXTRACTChanged()
    End Sub
    Partial Private Sub OnOINTMENTS_CREAMSChanging(value As String)
    End Sub
    Partial Private Sub OnOINTMENTS_CREAMSChanged()
    End Sub
    Partial Private Sub OnBIOLOGICALChanging(value As String)
    End Sub
    Partial Private Sub OnBIOLOGICALChanged()
    End Sub
    Partial Private Sub OnPHARMACEUTICAL_CHEMICALSChanging(value As String)
    End Sub
    Partial Private Sub OnPHARMACEUTICAL_CHEMICALSChanged()
    End Sub
    Partial Private Sub OnOTHERChanging(value As String)
    End Sub
    Partial Private Sub OnOTHERChanged()
    End Sub
    Partial Private Sub OnTABLET_CAPSULEChanging(value As String)
    End Sub
    Partial Private Sub OnTABLET_CAPSULEChanged()
    End Sub
    Partial Private Sub OnRCVNO_MANUALChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_MANUALChanged()
    End Sub
    Partial Private Sub OnLCNNO_MANUALChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNO_MANUALChanged()
    End Sub
    Partial Private Sub OnTEMPORARY_RCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnTEMPORARY_RCVNOChanged()
    End Sub
    Partial Private Sub OnTEMPLATE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTEMPLATE_IDChanged()
    End Sub
    Partial Private Sub Onrcvr_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrcvr_idChanged()
    End Sub
    Partial Private Sub Onref_noChanging(value As String)
    End Sub
    Partial Private Sub Onref_noChanged()
    End Sub
    Partial Private Sub Onrcv_citizen_idChanging(value As String)
    End Sub
    Partial Private Sub Onrcv_citizen_idChanged()
    End Sub
    Partial Private Sub OnFIRST_APP_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFIRST_APP_DATEChanged()
    End Sub
    Partial Private Sub OnexpdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnexpdateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnabbr", DbType:="NVarChar(MAX)")>  _
	Public Property pvnabbr() As String
		Get
			Return Me._pvnabbr
		End Get
		Set
			If (String.Equals(Me._pvnabbr, value) = false) Then
				Me.OnpvnabbrChanging(value)
				Me.SendPropertyChanging
				Me._pvnabbr = value
				Me.SendPropertyChanged("pvnabbr")
				Me.OnpvnabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="Int")>  _
	Public Property lcnscd() As System.Nullable(Of Integer)
		Get
			Return Me._lcnscd
		End Get
		Set
			If (Me._lcnscd.Equals(value) = false) Then
				Me.OnlcnscdChanging(value)
				Me.SendPropertyChanging
				Me._lcnscd = value
				Me.SendPropertyChanged("lcnscd")
				Me.OnlcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmcd", DbType:="Int")>  _
	Public Property lctnmcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctnmcd
		End Get
		Set
			If (Me._lctnmcd.Equals(value) = false) Then
				Me.OnlctnmcdChanging(value)
				Me.SendPropertyChanging
				Me._lctnmcd = value
				Me.SendPropertyChanged("lctnmcd")
				Me.OnlctnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int")>  _
	Public Property lctcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctcd
		End Get
		Set
			If (Me._lctcd.Equals(value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsnid", DbType:="Int")>  _
	Public Property bsnid() As System.Nullable(Of Integer)
		Get
			Return Me._bsnid
		End Get
		Set
			If (Me._bsnid.Equals(value) = false) Then
				Me.OnbsnidChanging(value)
				Me.SendPropertyChanging
				Me._bsnid = value
				Me.SendPropertyChanged("bsnid")
				Me.OnbsnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsncd", DbType:="Int")>  _
	Public Property bsncd() As System.Nullable(Of Integer)
		Get
			Return Me._bsncd
		End Get
		Set
			If (Me._bsncd.Equals(value) = false) Then
				Me.OnbsncdChanging(value)
				Me.SendPropertyChanging
				Me._bsncd = value
				Me.SendPropertyChanged("bsncd")
				Me.OnbsncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsnlctcd", DbType:="Int")>  _
	Public Property bsnlctcd() As System.Nullable(Of Integer)
		Get
			Return Me._bsnlctcd
		End Get
		Set
			If (Me._bsnlctcd.Equals(value) = false) Then
				Me.OnbsnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._bsnlctcd = value
				Me.SendPropertyChanged("bsnlctcd")
				Me.OnbsnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bsnage", DbType:="Int")>  _
	Public Property bsnage() As System.Nullable(Of Integer)
		Get
			Return Me._bsnage
		End Get
		Set
			If (Me._bsnage.Equals(value) = false) Then
				Me.OnbsnageChanging(value)
				Me.SendPropertyChanging
				Me._bsnage = value
				Me.SendPropertyChanged("bsnage")
				Me.OnbsnageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_opentime", DbType:="NVarChar(MAX)")>  _
	Public Property opentime() As String
		Get
			Return Me._opentime
		End Get
		Set
			If (String.Equals(Me._opentime, value) = false) Then
				Me.OnopentimeChanging(value)
				Me.SendPropertyChanging
				Me._opentime = value
				Me.SendPropertyChanged("opentime")
				Me.OnopentimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="NVarChar(MAX)")>  _
	Public Property remark() As String
		Get
			Return Me._remark
		End Get
		Set
			If (String.Equals(Me._remark, value) = false) Then
				Me.OnremarkChanging(value)
				Me.SendPropertyChanging
				Me._remark = value
				Me.SendPropertyChanged("remark")
				Me.OnremarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrflg", DbType:="NVarChar(MAX)")>  _
	Public Property phrflg() As String
		Get
			Return Me._phrflg
		End Get
		Set
			If (String.Equals(Me._phrflg, value) = false) Then
				Me.OnphrflgChanging(value)
				Me.SendPropertyChanging
				Me._phrflg = value
				Me.SendPropertyChanged("phrflg")
				Me.OnphrflgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frtappdate", DbType:="Date")>  _
	Public Property frtappdate() As System.Nullable(Of Date)
		Get
			Return Me._frtappdate
		End Get
		Set
			If (Me._frtappdate.Equals(value) = false) Then
				Me.OnfrtappdateChanging(value)
				Me.SendPropertyChanging
				Me._frtappdate = value
				Me.SendPropertyChanged("frtappdate")
				Me.OnfrtappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="Date")>  _
	Public Property appdate() As System.Nullable(Of Date)
		Get
			Return Me._appdate
		End Get
		Set
			If (Me._appdate.Equals(value) = false) Then
				Me.OnappdateChanging(value)
				Me.SendPropertyChanging
				Me._appdate = value
				Me.SendPropertyChanged("appdate")
				Me.OnappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expyear", DbType:="Int")>  _
	Public Property expyear() As System.Nullable(Of Integer)
		Get
			Return Me._expyear
		End Get
		Set
			If (Me._expyear.Equals(value) = false) Then
				Me.OnexpyearChanging(value)
				Me.SendPropertyChanging
				Me._expyear = value
				Me.SendPropertyChanged("expyear")
				Me.OnexpyearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fdano", DbType:="NVarChar(MAX)")>  _
	Public Property fdano() As String
		Get
			Return Me._fdano
		End Get
		Set
			If (String.Equals(Me._fdano, value) = false) Then
				Me.OnfdanoChanging(value)
				Me.SendPropertyChanging
				Me._fdano = value
				Me.SendPropertyChanged("fdano")
				Me.OnfdanoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccd", DbType:="Int")>  _
	Public Property cnccd() As System.Nullable(Of Integer)
		Get
			Return Me._cnccd
		End Get
		Set
			If (Me._cnccd.Equals(value) = false) Then
				Me.OncnccdChanging(value)
				Me.SendPropertyChanging
				Me._cnccd = value
				Me.SendPropertyChanged("cnccd")
				Me.OncnccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccscd", DbType:="Int")>  _
	Public Property cnccscd() As System.Nullable(Of Integer)
		Get
			Return Me._cnccscd
		End Get
		Set
			If (Me._cnccscd.Equals(value) = false) Then
				Me.OncnccscdChanging(value)
				Me.SendPropertyChanging
				Me._cnccscd = value
				Me.SendPropertyChanged("cnccscd")
				Me.OncnccscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncdate", DbType:="DateTime")>  _
	Public Property cncdate() As System.Nullable(Of Date)
		Get
			Return Me._cncdate
		End Get
		Set
			If (Me._cncdate.Equals(value) = false) Then
				Me.OncncdateChanging(value)
				Me.SendPropertyChanging
				Me._cncdate = value
				Me.SendPropertyChanged("cncdate")
				Me.OncncdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnpayst", DbType:="Int")>  _
	Public Property lcnpayst() As System.Nullable(Of Integer)
		Get
			Return Me._lcnpayst
		End Get
		Set
			If (Me._lcnpayst.Equals(value) = false) Then
				Me.OnlcnpaystChanging(value)
				Me.SendPropertyChanging
				Me._lcnpayst = value
				Me.SendPropertyChanged("lcnpayst")
				Me.OnlcnpaystChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcptpayst", DbType:="Int")>  _
	Public Property rcptpayst() As System.Nullable(Of Integer)
		Get
			Return Me._rcptpayst
		End Get
		Set
			If (Me._rcptpayst.Equals(value) = false) Then
				Me.OnrcptpaystChanging(value)
				Me.SendPropertyChanging
				Me._rcptpayst = value
				Me.SendPropertyChanged("rcptpayst")
				Me.OnrcptpaystChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="Int")>  _
	Public Property amphrcd() As System.Nullable(Of Integer)
		Get
			Return Me._amphrcd
		End Get
		Set
			If (Me._amphrcd.Equals(value) = false) Then
				Me.OnamphrcdChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd = value
				Me.SendPropertyChanged("amphrcd")
				Me.OnamphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="Int")>  _
	Public Property chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (Me._chngwtcd.Equals(value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Co_name", DbType:="NVarChar(MAX)")>  _
	Public Property Co_name() As String
		Get
			Return Me._Co_name
		End Get
		Set
			If (String.Equals(Me._Co_name, value) = false) Then
				Me.OnCo_nameChanging(value)
				Me.SendPropertyChanging
				Me._Co_name = value
				Me.SendPropertyChanged("Co_name")
				Me.OnCo_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="DateTime")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_comment", DbType:="NVarChar(MAX)")>  _
	Public Property comment() As String
		Get
			Return Me._comment
		End Get
		Set
			If (String.Equals(Me._comment, value) = false) Then
				Me.OncommentChanging(value)
				Me.SendPropertyChanging
				Me._comment = value
				Me.SendPropertyChanged("comment")
				Me.OncommentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CTZNO", DbType:="NVarChar(MAX)")>  _
	Public Property CTZNO() As String
		Get
			Return Me._CTZNO
		End Get
		Set
			If (String.Equals(Me._CTZNO, value) = false) Then
				Me.OnCTZNOChanging(value)
				Me.SendPropertyChanging
				Me._CTZNO = value
				Me.SendPropertyChanged("CTZNO")
				Me.OnCTZNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSECTION_ID_UPLOAD", DbType:="Int")>  _
	Public Property TRANSECTION_ID_UPLOAD() As System.Nullable(Of Integer)
		Get
			Return Me._TRANSECTION_ID_UPLOAD
		End Get
		Set
			If (Me._TRANSECTION_ID_UPLOAD.Equals(value) = false) Then
				Me.OnTRANSECTION_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._TRANSECTION_ID_UPLOAD = value
				Me.SendPropertyChanged("TRANSECTION_ID_UPLOAD")
				Me.OnTRANSECTION_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_UPLOAD() As String
		Get
			Return Me._CITIZEN_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_UPLOAD, value) = false) Then
				Me.OnCITIZEN_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_ID_UPLOAD")
				Me.OnCITIZEN_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_AUTHORIZE", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_ID_AUTHORIZE")
				Me.OnCITIZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_BSN", DbType:="NVarChar(MAX)")>  _
	Public Property IMAGE_BSN() As String
		Get
			Return Me._IMAGE_BSN
		End Get
		Set
			If (String.Equals(Me._IMAGE_BSN, value) = false) Then
				Me.OnIMAGE_BSNChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_BSN = value
				Me.SendPropertyChanged("IMAGE_BSN")
				Me.OnIMAGE_BSNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_HOSPITAL", DbType:="NVarChar(MAX)")>  _
	Public Property IMAGE_HOSPITAL() As String
		Get
			Return Me._IMAGE_HOSPITAL
		End Get
		Set
			If (String.Equals(Me._IMAGE_HOSPITAL, value) = false) Then
				Me.OnIMAGE_HOSPITALChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_HOSPITAL = value
				Me.SendPropertyChanged("IMAGE_HOSPITAL")
				Me.OnIMAGE_HOSPITALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_HOSPITAL2", DbType:="NVarChar(MAX)")>  _
	Public Property IMAGE_HOSPITAL2() As String
		Get
			Return Me._IMAGE_HOSPITAL2
		End Get
		Set
			If (String.Equals(Me._IMAGE_HOSPITAL2, value) = false) Then
				Me.OnIMAGE_HOSPITAL2Changing(value)
				Me.SendPropertyChanging
				Me._IMAGE_HOSPITAL2 = value
				Me.SendPropertyChanged("IMAGE_HOSPITAL2")
				Me.OnIMAGE_HOSPITAL2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_KEEP", DbType:="NVarChar(MAX)")>  _
	Public Property IMAGE_KEEP() As String
		Get
			Return Me._IMAGE_KEEP
		End Get
		Set
			If (String.Equals(Me._IMAGE_KEEP, value) = false) Then
				Me.OnIMAGE_KEEPChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_KEEP = value
				Me.SendPropertyChanged("IMAGE_KEEP")
				Me.OnIMAGE_KEEPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_KEEP2", DbType:="NVarChar(MAX)")>  _
	Public Property IMAGE_KEEP2() As String
		Get
			Return Me._IMAGE_KEEP2
		End Get
		Set
			If (String.Equals(Me._IMAGE_KEEP2, value) = false) Then
				Me.OnIMAGE_KEEP2Changing(value)
				Me.SendPropertyChanging
				Me._IMAGE_KEEP2 = value
				Me.SendPropertyChanged("IMAGE_KEEP2")
				Me.OnIMAGE_KEEP2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVDATE_DISPLAY() As String
		Get
			Return Me._RCVDATE_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVDATE_DISPLAY, value) = false) Then
				Me.OnRCVDATE_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE_DISPLAY = value
				Me.SendPropertyChanged("RCVDATE_DISPLAY")
				Me.OnRCVDATE_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_DISPLAY() As String
		Get
			Return Me._RCVNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVNO_DISPLAY, value) = false) Then
				Me.OnRCVNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_DISPLAY = value
				Me.SendPropertyChanged("RCVNO_DISPLAY")
				Me.OnRCVNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property LCNNO_DISPLAY() As String
		Get
			Return Me._LCNNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._LCNNO_DISPLAY, value) = false) Then
				Me.OnLCNNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO_DISPLAY = value
				Me.SendPropertyChanged("LCNNO_DISPLAY")
				Me.OnLCNNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_MAP", DbType:="NVarChar(MAX)")>  _
	Public Property IMAGE_MAP() As String
		Get
			Return Me._IMAGE_MAP
		End Get
		Set
			If (String.Equals(Me._IMAGE_MAP, value) = false) Then
				Me.OnIMAGE_MAPChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_MAP = value
				Me.SendPropertyChanged("IMAGE_MAP")
				Me.OnIMAGE_MAPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEND_POST", DbType:="Int")>  _
	Public Property SEND_POST() As System.Nullable(Of Integer)
		Get
			Return Me._SEND_POST
		End Get
		Set
			If (Me._SEND_POST.Equals(value) = false) Then
				Me.OnSEND_POSTChanging(value)
				Me.SendPropertyChanging
				Me._SEND_POST = value
				Me.SendPropertyChanged("SEND_POST")
				Me.OnSEND_POSTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAY_BANK", DbType:="Int")>  _
	Public Property PAY_BANK() As System.Nullable(Of Integer)
		Get
			Return Me._PAY_BANK
		End Get
		Set
			If (Me._PAY_BANK.Equals(value) = false) Then
				Me.OnPAY_BANKChanging(value)
				Me.SendPropertyChanging
				Me._PAY_BANK = value
				Me.SendPropertyChanged("PAY_BANK")
				Me.OnPAY_BANKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property GROUP_TYPE() As String
		Get
			Return Me._GROUP_TYPE
		End Get
		Set
			If (String.Equals(Me._GROUP_TYPE, value) = false) Then
				Me.OnGROUP_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_TYPE = value
				Me.SendPropertyChanged("GROUP_TYPE")
				Me.OnGROUP_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(MAX)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AGE", DbType:="NVarChar(MAX)")>  _
	Public Property AGE() As String
		Get
			Return Me._AGE
		End Get
		Set
			If (String.Equals(Me._AGE, value) = false) Then
				Me.OnAGEChanging(value)
				Me.SendPropertyChanging
				Me._AGE = value
				Me.SendPropertyChanged("AGE")
				Me.OnAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATION", DbType:="NVarChar(MAX)")>  _
	Public Property NATION() As String
		Get
			Return Me._NATION
		End Get
		Set
			If (String.Equals(Me._NATION, value) = false) Then
				Me.OnNATIONChanging(value)
				Me.SendPropertyChanging
				Me._NATION = value
				Me.SendPropertyChanged("NATION")
				Me.OnNATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifydate", DbType:="DateTime")>  _
	Public Property modifydate() As System.Nullable(Of Date)
		Get
			Return Me._modifydate
		End Get
		Set
			If (Me._modifydate.Equals(value) = false) Then
				Me.OnmodifydateChanging(value)
				Me.SendPropertyChanging
				Me._modifydate = value
				Me.SendPropertyChanged("modifydate")
				Me.OnmodifydateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSIDER_DATE", DbType:="DateTime")>  _
	Public Property CONSIDER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONSIDER_DATE
		End Get
		Set
			If (Me._CONSIDER_DATE.Equals(value) = false) Then
				Me.OnCONSIDER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONSIDER_DATE = value
				Me.SendPropertyChanged("CONSIDER_DATE")
				Me.OnCONSIDER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_AT() As String
		Get
			Return Me._WRITE_AT
		End Get
		Set
			If (String.Equals(Me._WRITE_AT, value) = false) Then
				Me.OnWRITE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_AT = value
				Me.SendPropertyChanged("WRITE_AT")
				Me.OnWRITE_ATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_DATE", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_DATE() As String
		Get
			Return Me._WRITE_DATE
		End Get
		Set
			If (String.Equals(Me._WRITE_DATE, value) = false) Then
				Me.OnWRITE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_DATE = value
				Me.SendPropertyChanged("WRITE_DATE")
				Me.OnWRITE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY_DRUG", DbType:="NVarChar(MAX)")>  _
	Public Property CATEGORY_DRUG() As String
		Get
			Return Me._CATEGORY_DRUG
		End Get
		Set
			If (String.Equals(Me._CATEGORY_DRUG, value) = false) Then
				Me.OnCATEGORY_DRUGChanging(value)
				Me.SendPropertyChanging
				Me._CATEGORY_DRUG = value
				Me.SendPropertyChanged("CATEGORY_DRUG")
				Me.OnCATEGORY_DRUGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_SELL_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_SELL_TYPE() As String
		Get
			Return Me._CHK_SELL_TYPE
		End Get
		Set
			If (String.Equals(Me._CHK_SELL_TYPE, value) = false) Then
				Me.OnCHK_SELL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CHK_SELL_TYPE = value
				Me.SendPropertyChanged("CHK_SELL_TYPE")
				Me.OnCHK_SELL_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_SELL_TYPE1", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_SELL_TYPE1() As String
		Get
			Return Me._CHK_SELL_TYPE1
		End Get
		Set
			If (String.Equals(Me._CHK_SELL_TYPE1, value) = false) Then
				Me.OnCHK_SELL_TYPE1Changing(value)
				Me.SendPropertyChanging
				Me._CHK_SELL_TYPE1 = value
				Me.SendPropertyChanged("CHK_SELL_TYPE1")
				Me.OnCHK_SELL_TYPE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_SELL_TYPE2", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_SELL_TYPE2() As String
		Get
			Return Me._CHK_SELL_TYPE2
		End Get
		Set
			If (String.Equals(Me._CHK_SELL_TYPE2, value) = false) Then
				Me.OnCHK_SELL_TYPE2Changing(value)
				Me.SendPropertyChanging
				Me._CHK_SELL_TYPE2 = value
				Me.SendPropertyChanged("CHK_SELL_TYPE2")
				Me.OnCHK_SELL_TYPE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_STAFF_OFFER_IDA", DbType:="Int")>  _
	Public Property FK_STAFF_OFFER_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_STAFF_OFFER_IDA
		End Get
		Set
			If (Me._FK_STAFF_OFFER_IDA.Equals(value) = false) Then
				Me.OnFK_STAFF_OFFER_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_STAFF_OFFER_IDA = value
				Me.SendPropertyChanged("FK_STAFF_OFFER_IDA")
				Me.OnFK_STAFF_OFFER_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_QR_INPUT", DbType:="NVarChar(MAX)")>  _
	Public Property IMAGE_QR_INPUT() As String
		Get
			Return Me._IMAGE_QR_INPUT
		End Get
		Set
			If (String.Equals(Me._IMAGE_QR_INPUT, value) = false) Then
				Me.OnIMAGE_QR_INPUTChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_QR_INPUT = value
				Me.SendPropertyChanged("IMAGE_QR_INPUT")
				Me.OnIMAGE_QR_INPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_QR_OUTPUT", DbType:="NVarChar(MAX)")>  _
	Public Property IMAGE_QR_OUTPUT() As String
		Get
			Return Me._IMAGE_QR_OUTPUT
		End Get
		Set
			If (String.Equals(Me._IMAGE_QR_OUTPUT, value) = false) Then
				Me.OnIMAGE_QR_OUTPUTChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_QR_OUTPUT = value
				Me.SendPropertyChanged("IMAGE_QR_OUTPUT")
				Me.OnIMAGE_QR_OUTPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property thanm() As String
		Get
			Return Me._thanm
		End Get
		Set
			If (String.Equals(Me._thanm, value) = false) Then
				Me.OnthanmChanging(value)
				Me.SendPropertyChanging
				Me._thanm = value
				Me.SendPropertyChanged("thanm")
				Me.OnthanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THAIFULLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THAIFULLNAME() As String
		Get
			Return Me._BSN_THAIFULLNAME
		End Get
		Set
			If (String.Equals(Me._BSN_THAIFULLNAME, value) = false) Then
				Me.OnBSN_THAIFULLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THAIFULLNAME = value
				Me.SendPropertyChanged("BSN_THAIFULLNAME")
				Me.OnBSN_THAIFULLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_IDENTIFY() As String
		Get
			Return Me._BSN_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._BSN_IDENTIFY, value) = false) Then
				Me.OnBSN_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._BSN_IDENTIFY = value
				Me.SendPropertyChanged("BSN_IDENTIFY")
				Me.OnBSN_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ADDR", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ADDR() As String
		Get
			Return Me._BSN_ADDR
		End Get
		Set
			If (String.Equals(Me._BSN_ADDR, value) = false) Then
				Me.OnBSN_ADDRChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ADDR = value
				Me.SendPropertyChanged("BSN_ADDR")
				Me.OnBSN_ADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_SOI", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_SOI() As String
		Get
			Return Me._BSN_SOI
		End Get
		Set
			If (String.Equals(Me._BSN_SOI, value) = false) Then
				Me.OnBSN_SOIChanging(value)
				Me.SendPropertyChanging
				Me._BSN_SOI = value
				Me.SendPropertyChanged("BSN_SOI")
				Me.OnBSN_SOIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ROAD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ROAD() As String
		Get
			Return Me._BSN_ROAD
		End Get
		Set
			If (String.Equals(Me._BSN_ROAD, value) = false) Then
				Me.OnBSN_ROADChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ROAD = value
				Me.SendPropertyChanged("BSN_ROAD")
				Me.OnBSN_ROADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_MOO", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_MOO() As String
		Get
			Return Me._BSN_MOO
		End Get
		Set
			If (String.Equals(Me._BSN_MOO, value) = false) Then
				Me.OnBSN_MOOChanging(value)
				Me.SendPropertyChanging
				Me._BSN_MOO = value
				Me.SendPropertyChanged("BSN_MOO")
				Me.OnBSN_MOOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THMBL_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THMBL_NAME() As String
		Get
			Return Me._BSN_THMBL_NAME
		End Get
		Set
			If (String.Equals(Me._BSN_THMBL_NAME, value) = false) Then
				Me.OnBSN_THMBL_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THMBL_NAME = value
				Me.SendPropertyChanged("BSN_THMBL_NAME")
				Me.OnBSN_THMBL_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_AMPHR_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_AMPHR_NAME() As String
		Get
			Return Me._BSN_AMPHR_NAME
		End Get
		Set
			If (String.Equals(Me._BSN_AMPHR_NAME, value) = false) Then
				Me.OnBSN_AMPHR_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_AMPHR_NAME = value
				Me.SendPropertyChanged("BSN_AMPHR_NAME")
				Me.OnBSN_AMPHR_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_CHWNGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_CHWNGNAME() As String
		Get
			Return Me._BSN_CHWNGNAME
		End Get
		Set
			If (String.Equals(Me._BSN_CHWNGNAME, value) = false) Then
				Me.OnBSN_CHWNGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_CHWNGNAME = value
				Me.SendPropertyChanged("BSN_CHWNGNAME")
				Me.OnBSN_CHWNGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_TELEPHONE", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_TELEPHONE() As String
		Get
			Return Me._BSN_TELEPHONE
		End Get
		Set
			If (String.Equals(Me._BSN_TELEPHONE, value) = false) Then
				Me.OnBSN_TELEPHONEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_TELEPHONE = value
				Me.SendPropertyChanged("BSN_TELEPHONE")
				Me.OnBSN_TELEPHONEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_FAX", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_FAX() As String
		Get
			Return Me._BSN_FAX
		End Get
		Set
			If (String.Equals(Me._BSN_FAX, value) = false) Then
				Me.OnBSN_FAXChanging(value)
				Me.SendPropertyChanging
				Me._BSN_FAX = value
				Me.SendPropertyChanged("BSN_FAX")
				Me.OnBSN_FAXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_EMAIL() As String
		Get
			Return Me._BSN_EMAIL
		End Get
		Set
			If (String.Equals(Me._BSN_EMAIL, value) = false) Then
				Me.OnBSN_EMAILChanging(value)
				Me.SendPropertyChanging
				Me._BSN_EMAIL = value
				Me.SendPropertyChanged("BSN_EMAIL")
				Me.OnBSN_EMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanameplace", DbType:="NVarChar(MAX)")>  _
	Public Property thanameplace() As String
		Get
			Return Me._thanameplace
		End Get
		Set
			If (String.Equals(Me._thanameplace, value) = false) Then
				Me.OnthanameplaceChanging(value)
				Me.SendPropertyChanging
				Me._thanameplace = value
				Me.SendPropertyChanged("thanameplace")
				Me.OnthanameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaaddr", DbType:="NVarChar(MAX)")>  _
	Public Property thaaddr() As String
		Get
			Return Me._thaaddr
		End Get
		Set
			If (String.Equals(Me._thaaddr, value) = false) Then
				Me.OnthaaddrChanging(value)
				Me.SendPropertyChanging
				Me._thaaddr = value
				Me.SendPropertyChanged("thaaddr")
				Me.OnthaaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thasoi", DbType:="NVarChar(MAX)")>  _
	Public Property thasoi() As String
		Get
			Return Me._thasoi
		End Get
		Set
			If (String.Equals(Me._thasoi, value) = false) Then
				Me.OnthasoiChanging(value)
				Me.SendPropertyChanging
				Me._thasoi = value
				Me.SendPropertyChanged("thasoi")
				Me.OnthasoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoad", DbType:="NVarChar(MAX)")>  _
	Public Property tharoad() As String
		Get
			Return Me._tharoad
		End Get
		Set
			If (String.Equals(Me._tharoad, value) = false) Then
				Me.OntharoadChanging(value)
				Me.SendPropertyChanging
				Me._tharoad = value
				Me.SendPropertyChanged("tharoad")
				Me.OntharoadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thamu", DbType:="NVarChar(MAX)")>  _
	Public Property thamu() As String
		Get
			Return Me._thamu
		End Get
		Set
			If (String.Equals(Me._thamu, value) = false) Then
				Me.OnthamuChanging(value)
				Me.SendPropertyChanging
				Me._thamu = value
				Me.SendPropertyChanged("thamu")
				Me.OnthamuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thathmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property thathmblnm() As String
		Get
			Return Me._thathmblnm
		End Get
		Set
			If (String.Equals(Me._thathmblnm, value) = false) Then
				Me.OnthathmblnmChanging(value)
				Me.SendPropertyChanging
				Me._thathmblnm = value
				Me.SendPropertyChanged("thathmblnm")
				Me.OnthathmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property thaamphrnm() As String
		Get
			Return Me._thaamphrnm
		End Get
		Set
			If (String.Equals(Me._thaamphrnm, value) = false) Then
				Me.OnthaamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._thaamphrnm = value
				Me.SendPropertyChanged("thaamphrnm")
				Me.OnthaamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thachngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property thachngwtnm() As String
		Get
			Return Me._thachngwtnm
		End Get
		Set
			If (String.Equals(Me._thachngwtnm, value) = false) Then
				Me.OnthachngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._thachngwtnm = value
				Me.SendPropertyChanged("thachngwtnm")
				Me.OnthachngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="NVarChar(MAX)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="NVarChar(MAX)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thanameplace", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thanameplace() As String
		Get
			Return Me._LOCATION_ADDRESS_thanameplace
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thanameplace, value) = false) Then
				Me.OnLOCATION_ADDRESS_thanameplaceChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thanameplace = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thanameplace")
				Me.OnLOCATION_ADDRESS_thanameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thaaddr", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thaaddr() As String
		Get
			Return Me._LOCATION_ADDRESS_thaaddr
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thaaddr, value) = false) Then
				Me.OnLOCATION_ADDRESS_thaaddrChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thaaddr = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thaaddr")
				Me.OnLOCATION_ADDRESS_thaaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thasoi", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thasoi() As String
		Get
			Return Me._LOCATION_ADDRESS_thasoi
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thasoi, value) = false) Then
				Me.OnLOCATION_ADDRESS_thasoiChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thasoi = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thasoi")
				Me.OnLOCATION_ADDRESS_thasoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_tharoad", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_tharoad() As String
		Get
			Return Me._LOCATION_ADDRESS_tharoad
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_tharoad, value) = false) Then
				Me.OnLOCATION_ADDRESS_tharoadChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_tharoad = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_tharoad")
				Me.OnLOCATION_ADDRESS_tharoadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thamu", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thamu() As String
		Get
			Return Me._LOCATION_ADDRESS_thamu
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thamu, value) = false) Then
				Me.OnLOCATION_ADDRESS_thamuChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thamu = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thamu")
				Me.OnLOCATION_ADDRESS_thamuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thathmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thathmblnm() As String
		Get
			Return Me._LOCATION_ADDRESS_thathmblnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thathmblnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_thathmblnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thathmblnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thathmblnm")
				Me.OnLOCATION_ADDRESS_thathmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thaamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thaamphrnm() As String
		Get
			Return Me._LOCATION_ADDRESS_thaamphrnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thaamphrnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_thaamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thaamphrnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thaamphrnm")
				Me.OnLOCATION_ADDRESS_thaamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thachngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thachngwtnm() As String
		Get
			Return Me._LOCATION_ADDRESS_thachngwtnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thachngwtnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_thachngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thachngwtnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thachngwtnm")
				Me.OnLOCATION_ADDRESS_thachngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_tel", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_tel() As String
		Get
			Return Me._LOCATION_ADDRESS_tel
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_tel, value) = false) Then
				Me.OnLOCATION_ADDRESS_telChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_tel = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_tel")
				Me.OnLOCATION_ADDRESS_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_fax", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_fax() As String
		Get
			Return Me._LOCATION_ADDRESS_fax
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_fax, value) = false) Then
				Me.OnLOCATION_ADDRESS_faxChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_fax = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_fax")
				Me.OnLOCATION_ADDRESS_faxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_lcnsid", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_lcnsid
		End Get
		Set
			If (Me._LOCATION_ADDRESS_lcnsid.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_lcnsidChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_lcnsid = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_lcnsid")
				Me.OnLOCATION_ADDRESS_lcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engaddr", DbType:="VarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engaddr() As String
		Get
			Return Me._LOCATION_ADDRESS_engaddr
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engaddr, value) = false) Then
				Me.OnLOCATION_ADDRESS_engaddrChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engaddr = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engaddr")
				Me.OnLOCATION_ADDRESS_engaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_tharoom", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_tharoom() As String
		Get
			Return Me._LOCATION_ADDRESS_tharoom
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_tharoom, value) = false) Then
				Me.OnLOCATION_ADDRESS_tharoomChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_tharoom = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_tharoom")
				Me.OnLOCATION_ADDRESS_tharoomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thafloor", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thafloor() As String
		Get
			Return Me._LOCATION_ADDRESS_thafloor
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thafloor, value) = false) Then
				Me.OnLOCATION_ADDRESS_thafloorChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thafloor = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thafloor")
				Me.OnLOCATION_ADDRESS_thafloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thabuilding", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_thabuilding() As String
		Get
			Return Me._LOCATION_ADDRESS_thabuilding
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_thabuilding, value) = false) Then
				Me.OnLOCATION_ADDRESS_thabuildingChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thabuilding = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thabuilding")
				Me.OnLOCATION_ADDRESS_thabuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engsoi", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engsoi() As String
		Get
			Return Me._LOCATION_ADDRESS_engsoi
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engsoi, value) = false) Then
				Me.OnLOCATION_ADDRESS_engsoiChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engsoi = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engsoi")
				Me.OnLOCATION_ADDRESS_engsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engroad", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engroad() As String
		Get
			Return Me._LOCATION_ADDRESS_engroad
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engroad, value) = false) Then
				Me.OnLOCATION_ADDRESS_engroadChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engroad = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engroad")
				Me.OnLOCATION_ADDRESS_engroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_zipcode", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_zipcode() As String
		Get
			Return Me._LOCATION_ADDRESS_zipcode
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_zipcode, value) = false) Then
				Me.OnLOCATION_ADDRESS_zipcodeChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_zipcode = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_zipcode")
				Me.OnLOCATION_ADDRESS_zipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_lstfcd", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_lstfcd
		End Get
		Set
			If (Me._LOCATION_ADDRESS_lstfcd.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_lstfcdChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_lstfcd = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_lstfcd")
				Me.OnLOCATION_ADDRESS_lstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_lmdfdate", DbType:="DateTime")>  _
	Public Property LOCATION_ADDRESS_lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._LOCATION_ADDRESS_lmdfdate
		End Get
		Set
			If (Me._LOCATION_ADDRESS_lmdfdate.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_lmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_lmdfdate = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_lmdfdate")
				Me.OnLOCATION_ADDRESS_lmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_IDA", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_IDA
		End Get
		Set
			If (Me._LOCATION_ADDRESS_IDA.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_IDA = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_IDA")
				Me.OnLOCATION_ADDRESS_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_FK_IDA", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_FK_IDA
		End Get
		Set
			If (Me._LOCATION_ADDRESS_FK_IDA.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_FK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_FK_IDA = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_FK_IDA")
				Me.OnLOCATION_ADDRESS_FK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_TR_ID", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_TR_ID
		End Get
		Set
			If (Me._LOCATION_ADDRESS_TR_ID.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_TR_IDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_TR_ID = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_TR_ID")
				Me.OnLOCATION_ADDRESS_TR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_DOWN_ID", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_DOWN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_DOWN_ID
		End Get
		Set
			If (Me._LOCATION_ADDRESS_DOWN_ID.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_DOWN_IDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_DOWN_ID = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_DOWN_ID")
				Me.OnLOCATION_ADDRESS_DOWN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_CITIZEN_ID() As String
		Get
			Return Me._LOCATION_ADDRESS_CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_CITIZEN_ID, value) = false) Then
				Me.OnLOCATION_ADDRESS_CITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_CITIZEN_ID = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_CITIZEN_ID")
				Me.OnLOCATION_ADDRESS_CITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_CITIZEN_ID_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_CITIZEN_ID_UPLOAD() As String
		Get
			Return Me._LOCATION_ADDRESS_CITIZEN_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_CITIZEN_ID_UPLOAD, value) = false) Then
				Me.OnLOCATION_ADDRESS_CITIZEN_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_CITIZEN_ID_UPLOAD = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_CITIZEN_ID_UPLOAD")
				Me.OnLOCATION_ADDRESS_CITIZEN_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_XMLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_XMLNAME() As String
		Get
			Return Me._LOCATION_ADDRESS_XMLNAME
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_XMLNAME, value) = false) Then
				Me.OnLOCATION_ADDRESS_XMLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_XMLNAME = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_XMLNAME")
				Me.OnLOCATION_ADDRESS_XMLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engmu", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engmu() As String
		Get
			Return Me._LOCATION_ADDRESS_engmu
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engmu, value) = false) Then
				Me.OnLOCATION_ADDRESS_engmuChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engmu = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engmu")
				Me.OnLOCATION_ADDRESS_engmuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engfloor", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engfloor() As String
		Get
			Return Me._LOCATION_ADDRESS_engfloor
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engfloor, value) = false) Then
				Me.OnLOCATION_ADDRESS_engfloorChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engfloor = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engfloor")
				Me.OnLOCATION_ADDRESS_engfloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engbuilding", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engbuilding() As String
		Get
			Return Me._LOCATION_ADDRESS_engbuilding
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engbuilding, value) = false) Then
				Me.OnLOCATION_ADDRESS_engbuildingChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engbuilding = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engbuilding")
				Me.OnLOCATION_ADDRESS_engbuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_rcvno", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_rcvno
		End Get
		Set
			If (Me._LOCATION_ADDRESS_rcvno.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_rcvnoChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_rcvno = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_rcvno")
				Me.OnLOCATION_ADDRESS_rcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_rcvdate", DbType:="DateTime")>  _
	Public Property LOCATION_ADDRESS_rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._LOCATION_ADDRESS_rcvdate
		End Get
		Set
			If (Me._LOCATION_ADDRESS_rcvdate.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_rcvdateChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_rcvdate = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_rcvdate")
				Me.OnLOCATION_ADDRESS_rcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_lctcd", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_lctcd() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_lctcd
		End Get
		Set
			If (Me._LOCATION_ADDRESS_lctcd.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_lctcdChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_lctcd = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_lctcd")
				Me.OnLOCATION_ADDRESS_lctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engnameplace", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engnameplace() As String
		Get
			Return Me._LOCATION_ADDRESS_engnameplace
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engnameplace, value) = false) Then
				Me.OnLOCATION_ADDRESS_engnameplaceChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engnameplace = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engnameplace")
				Me.OnLOCATION_ADDRESS_engnameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_STATUS_ID", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_STATUS_ID
		End Get
		Set
			If (Me._LOCATION_ADDRESS_STATUS_ID.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_STATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_STATUS_ID = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_STATUS_ID")
				Me.OnLOCATION_ADDRESS_STATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_HOUSENO", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_HOUSENO() As String
		Get
			Return Me._LOCATION_ADDRESS_HOUSENO
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_HOUSENO, value) = false) Then
				Me.OnLOCATION_ADDRESS_HOUSENOChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_HOUSENO = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_HOUSENO")
				Me.OnLOCATION_ADDRESS_HOUSENOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_Branch", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_Branch() As String
		Get
			Return Me._LOCATION_ADDRESS_Branch
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_Branch, value) = false) Then
				Me.OnLOCATION_ADDRESS_BranchChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_Branch = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_Branch")
				Me.OnLOCATION_ADDRESS_BranchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_LOCATION_TYPE_NORMAL", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_LOCATION_TYPE_NORMAL() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_LOCATION_TYPE_NORMAL
		End Get
		Set
			If (Me._LOCATION_ADDRESS_LOCATION_TYPE_NORMAL.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_LOCATION_TYPE_NORMALChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_LOCATION_TYPE_NORMAL = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_LOCATION_TYPE_NORMAL")
				Me.OnLOCATION_ADDRESS_LOCATION_TYPE_NORMALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_LOCATION_TYPE_OTHER", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_LOCATION_TYPE_OTHER() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_LOCATION_TYPE_OTHER
		End Get
		Set
			If (Me._LOCATION_ADDRESS_LOCATION_TYPE_OTHER.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_LOCATION_TYPE_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_LOCATION_TYPE_OTHER = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_LOCATION_TYPE_OTHER")
				Me.OnLOCATION_ADDRESS_LOCATION_TYPE_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_LOCATION_TYPE_ID", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_LOCATION_TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_LOCATION_TYPE_ID
		End Get
		Set
			If (Me._LOCATION_ADDRESS_LOCATION_TYPE_ID.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_LOCATION_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_LOCATION_TYPE_ID = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_LOCATION_TYPE_ID")
				Me.OnLOCATION_ADDRESS_LOCATION_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_SYSTEM_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_SYSTEM_NAME() As String
		Get
			Return Me._LOCATION_ADDRESS_SYSTEM_NAME
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_SYSTEM_NAME, value) = false) Then
				Me.OnLOCATION_ADDRESS_SYSTEM_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_SYSTEM_NAME = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_SYSTEM_NAME")
				Me.OnLOCATION_ADDRESS_SYSTEM_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_thmblcd", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_thmblcd() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_thmblcd
		End Get
		Set
			If (Me._LOCATION_ADDRESS_thmblcd.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_thmblcdChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_thmblcd = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_thmblcd")
				Me.OnLOCATION_ADDRESS_thmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_chngwtcd", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_chngwtcd
		End Get
		Set
			If (Me._LOCATION_ADDRESS_chngwtcd.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_chngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_chngwtcd = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_chngwtcd")
				Me.OnLOCATION_ADDRESS_chngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engthmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engthmblnm() As String
		Get
			Return Me._LOCATION_ADDRESS_engthmblnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engthmblnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_engthmblnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engthmblnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engthmblnm")
				Me.OnLOCATION_ADDRESS_engthmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engamphrnm() As String
		Get
			Return Me._LOCATION_ADDRESS_engamphrnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engamphrnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_engamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engamphrnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engamphrnm")
				Me.OnLOCATION_ADDRESS_engamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_engchngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_engchngwtnm() As String
		Get
			Return Me._LOCATION_ADDRESS_engchngwtnm
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_engchngwtnm, value) = false) Then
				Me.OnLOCATION_ADDRESS_engchngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_engchngwtnm = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_engchngwtnm")
				Me.OnLOCATION_ADDRESS_engchngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_IDENTIFY() As String
		Get
			Return Me._LOCATION_ADDRESS_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_IDENTIFY, value) = false) Then
				Me.OnLOCATION_ADDRESS_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_IDENTIFY = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_IDENTIFY")
				Me.OnLOCATION_ADDRESS_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDRESS_REMARK() As String
		Get
			Return Me._LOCATION_ADDRESS_REMARK
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDRESS_REMARK, value) = false) Then
				Me.OnLOCATION_ADDRESS_REMARKChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_REMARK = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_REMARK")
				Me.OnLOCATION_ADDRESS_REMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_IDA", DbType:="Int")>  _
	Public Property BSN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._BSN_IDA
		End Get
		Set
			If (Me._BSN_IDA.Equals(value) = false) Then
				Me.OnBSN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._BSN_IDA = value
				Me.SendPropertyChanged("BSN_IDA")
				Me.OnBSN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THAINAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THAINAME() As String
		Get
			Return Me._BSN_THAINAME
		End Get
		Set
			If (String.Equals(Me._BSN_THAINAME, value) = false) Then
				Me.OnBSN_THAINAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THAINAME = value
				Me.SendPropertyChanged("BSN_THAINAME")
				Me.OnBSN_THAINAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THAILASTNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THAILASTNAME() As String
		Get
			Return Me._BSN_THAILASTNAME
		End Get
		Set
			If (String.Equals(Me._BSN_THAILASTNAME, value) = false) Then
				Me.OnBSN_THAILASTNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THAILASTNAME = value
				Me.SendPropertyChanged("BSN_THAILASTNAME")
				Me.OnBSN_THAILASTNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_PREFIXENGCD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_PREFIXENGCD() As String
		Get
			Return Me._BSN_PREFIXENGCD
		End Get
		Set
			If (String.Equals(Me._BSN_PREFIXENGCD, value) = false) Then
				Me.OnBSN_PREFIXENGCDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_PREFIXENGCD = value
				Me.SendPropertyChanged("BSN_PREFIXENGCD")
				Me.OnBSN_PREFIXENGCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGNAME() As String
		Get
			Return Me._BSN_ENGNAME
		End Get
		Set
			If (String.Equals(Me._BSN_ENGNAME, value) = false) Then
				Me.OnBSN_ENGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGNAME = value
				Me.SendPropertyChanged("BSN_ENGNAME")
				Me.OnBSN_ENGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGLASTNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGLASTNAME() As String
		Get
			Return Me._BSN_ENGLASTNAME
		End Get
		Set
			If (String.Equals(Me._BSN_ENGLASTNAME, value) = false) Then
				Me.OnBSN_ENGLASTNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGLASTNAME = value
				Me.SendPropertyChanged("BSN_ENGLASTNAME")
				Me.OnBSN_ENGLASTNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGFULLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGFULLNAME() As String
		Get
			Return Me._BSN_ENGFULLNAME
		End Get
		Set
			If (String.Equals(Me._BSN_ENGFULLNAME, value) = false) Then
				Me.OnBSN_ENGFULLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGFULLNAME = value
				Me.SendPropertyChanged("BSN_ENGFULLNAME")
				Me.OnBSN_ENGFULLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHANGWAT_ID", DbType:="Int")>  _
	Public Property CHANGWAT_ID() As System.Nullable(Of Integer)
		Get
			Return Me._CHANGWAT_ID
		End Get
		Set
			If (Me._CHANGWAT_ID.Equals(value) = false) Then
				Me.OnCHANGWAT_IDChanging(value)
				Me.SendPropertyChanging
				Me._CHANGWAT_ID = value
				Me.SendPropertyChanged("CHANGWAT_ID")
				Me.OnCHANGWAT_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMPHR_ID", DbType:="Int")>  _
	Public Property AMPHR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._AMPHR_ID
		End Get
		Set
			If (Me._AMPHR_ID.Equals(value) = false) Then
				Me.OnAMPHR_IDChanging(value)
				Me.SendPropertyChanging
				Me._AMPHR_ID = value
				Me.SendPropertyChanged("AMPHR_ID")
				Me.OnAMPHR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TUMBON_ID", DbType:="Int")>  _
	Public Property TUMBON_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TUMBON_ID
		End Get
		Set
			If (Me._TUMBON_ID.Equals(value) = false) Then
				Me.OnTUMBON_IDChanging(value)
				Me.SendPropertyChanging
				Me._TUMBON_ID = value
				Me.SendPropertyChanged("TUMBON_ID")
				Me.OnTUMBON_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_FLOOR", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_FLOOR() As String
		Get
			Return Me._BSN_FLOOR
		End Get
		Set
			If (String.Equals(Me._BSN_FLOOR, value) = false) Then
				Me.OnBSN_FLOORChanging(value)
				Me.SendPropertyChanging
				Me._BSN_FLOOR = value
				Me.SendPropertyChanged("BSN_FLOOR")
				Me.OnBSN_FLOORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_BUILDING", DbType:="VarChar(MAX)")>  _
	Public Property BSN_BUILDING() As String
		Get
			Return Me._BSN_BUILDING
		End Get
		Set
			If (String.Equals(Me._BSN_BUILDING, value) = false) Then
				Me.OnBSN_BUILDINGChanging(value)
				Me.SendPropertyChanging
				Me._BSN_BUILDING = value
				Me.SendPropertyChanged("BSN_BUILDING")
				Me.OnBSN_BUILDINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ZIPCODE", DbType:="VarChar(MAX)")>  _
	Public Property BSN_ZIPCODE() As String
		Get
			Return Me._BSN_ZIPCODE
		End Get
		Set
			If (String.Equals(Me._BSN_ZIPCODE, value) = false) Then
				Me.OnBSN_ZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ZIPCODE = value
				Me.SendPropertyChanged("BSN_ZIPCODE")
				Me.OnBSN_ZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOWN_ID", DbType:="Int")>  _
	Public Property DOWN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DOWN_ID
		End Get
		Set
			If (Me._DOWN_ID.Equals(value) = false) Then
				Me.OnDOWN_IDChanging(value)
				Me.SendPropertyChanging
				Me._DOWN_ID = value
				Me.SendPropertyChanged("DOWN_ID")
				Me.OnDOWN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XMLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property XMLNAME() As String
		Get
			Return Me._XMLNAME
		End Get
		Set
			If (String.Equals(Me._XMLNAME, value) = false) Then
				Me.OnXMLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._XMLNAME = value
				Me.SendPropertyChanged("XMLNAME")
				Me.OnXMLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATIONALITY", DbType:="NVarChar(MAX)")>  _
	Public Property NATIONALITY() As String
		Get
			Return Me._NATIONALITY
		End Get
		Set
			If (String.Equals(Me._NATIONALITY, value) = false) Then
				Me.OnNATIONALITYChanging(value)
				Me.SendPropertyChanging
				Me._NATIONALITY = value
				Me.SendPropertyChanged("NATIONALITY")
				Me.OnNATIONALITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_HOUSENO", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_HOUSENO() As String
		Get
			Return Me._BSN_HOUSENO
		End Get
		Set
			If (String.Equals(Me._BSN_HOUSENO, value) = false) Then
				Me.OnBSN_HOUSENOChanging(value)
				Me.SendPropertyChanging
				Me._BSN_HOUSENO = value
				Me.SendPropertyChanged("BSN_HOUSENO")
				Me.OnBSN_HOUSENOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGADDR", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGADDR() As String
		Get
			Return Me._BSN_ENGADDR
		End Get
		Set
			If (String.Equals(Me._BSN_ENGADDR, value) = false) Then
				Me.OnBSN_ENGADDRChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGADDR = value
				Me.SendPropertyChanged("BSN_ENGADDR")
				Me.OnBSN_ENGADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGMU", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGMU() As String
		Get
			Return Me._BSN_ENGMU
		End Get
		Set
			If (String.Equals(Me._BSN_ENGMU, value) = false) Then
				Me.OnBSN_ENGMUChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGMU = value
				Me.SendPropertyChanged("BSN_ENGMU")
				Me.OnBSN_ENGMUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGSOI", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGSOI() As String
		Get
			Return Me._BSN_ENGSOI
		End Get
		Set
			If (String.Equals(Me._BSN_ENGSOI, value) = false) Then
				Me.OnBSN_ENGSOIChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGSOI = value
				Me.SendPropertyChanged("BSN_ENGSOI")
				Me.OnBSN_ENGSOIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_ENGROAD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_ENGROAD() As String
		Get
			Return Me._BSN_ENGROAD
		End Get
		Set
			If (String.Equals(Me._BSN_ENGROAD, value) = false) Then
				Me.OnBSN_ENGROADChanging(value)
				Me.SendPropertyChanging
				Me._BSN_ENGROAD = value
				Me.SendPropertyChanged("BSN_ENGROAD")
				Me.OnBSN_ENGROADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_CHWNG_ENGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_CHWNG_ENGNAME() As String
		Get
			Return Me._BSN_CHWNG_ENGNAME
		End Get
		Set
			If (String.Equals(Me._BSN_CHWNG_ENGNAME, value) = false) Then
				Me.OnBSN_CHWNG_ENGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_CHWNG_ENGNAME = value
				Me.SendPropertyChanged("BSN_CHWNG_ENGNAME")
				Me.OnBSN_CHWNG_ENGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_AMPHR_ENGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_AMPHR_ENGNAME() As String
		Get
			Return Me._BSN_AMPHR_ENGNAME
		End Get
		Set
			If (String.Equals(Me._BSN_AMPHR_ENGNAME, value) = false) Then
				Me.OnBSN_AMPHR_ENGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_AMPHR_ENGNAME = value
				Me.SendPropertyChanged("BSN_AMPHR_ENGNAME")
				Me.OnBSN_AMPHR_ENGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_THMBL_ENGNAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_THMBL_ENGNAME() As String
		Get
			Return Me._BSN_THMBL_ENGNAME
		End Get
		Set
			If (String.Equals(Me._BSN_THMBL_ENGNAME, value) = false) Then
				Me.OnBSN_THMBL_ENGNAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_THMBL_ENGNAME = value
				Me.SendPropertyChanged("BSN_THMBL_ENGNAME")
				Me.OnBSN_THMBL_ENGNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_NATIONALITY_CD", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_NATIONALITY_CD() As String
		Get
			Return Me._BSN_NATIONALITY_CD
		End Get
		Set
			If (String.Equals(Me._BSN_NATIONALITY_CD, value) = false) Then
				Me.OnBSN_NATIONALITY_CDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_NATIONALITY_CD = value
				Me.SendPropertyChanged("BSN_NATIONALITY_CD")
				Me.OnBSN_NATIONALITY_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_ID", DbType:="Int")>  _
	Public Property syslcnsnm_ID() As System.Nullable(Of Integer)
		Get
			Return Me._syslcnsnm_ID
		End Get
		Set
			If (Me._syslcnsnm_ID.Equals(value) = false) Then
				Me.Onsyslcnsnm_IDChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_ID = value
				Me.SendPropertyChanged("syslcnsnm_ID")
				Me.Onsyslcnsnm_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_identify", DbType:="VarChar(MAX)")>  _
	Public Property syslcnsnm_identify() As String
		Get
			Return Me._syslcnsnm_identify
		End Get
		Set
			If (String.Equals(Me._syslcnsnm_identify, value) = false) Then
				Me.Onsyslcnsnm_identifyChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_identify = value
				Me.SendPropertyChanged("syslcnsnm_identify")
				Me.Onsyslcnsnm_identifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_lcnsid", DbType:="Int")>  _
	Public Property syslcnsnm_lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._syslcnsnm_lcnsid
		End Get
		Set
			If (Me._syslcnsnm_lcnsid.Equals(value) = false) Then
				Me.Onsyslcnsnm_lcnsidChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_lcnsid = value
				Me.SendPropertyChanged("syslcnsnm_lcnsid")
				Me.Onsyslcnsnm_lcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_lcnscd", DbType:="Int")>  _
	Public Property syslcnsnm_lcnscd() As System.Nullable(Of Integer)
		Get
			Return Me._syslcnsnm_lcnscd
		End Get
		Set
			If (Me._syslcnsnm_lcnscd.Equals(value) = false) Then
				Me.Onsyslcnsnm_lcnscdChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_lcnscd = value
				Me.SendPropertyChanged("syslcnsnm_lcnscd")
				Me.Onsyslcnsnm_lcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_prefixcd", DbType:="Int")>  _
	Public Property syslcnsnm_prefixcd() As System.Nullable(Of Integer)
		Get
			Return Me._syslcnsnm_prefixcd
		End Get
		Set
			If (Me._syslcnsnm_prefixcd.Equals(value) = false) Then
				Me.Onsyslcnsnm_prefixcdChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_prefixcd = value
				Me.SendPropertyChanged("syslcnsnm_prefixcd")
				Me.Onsyslcnsnm_prefixcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_prefixnm", DbType:="NVarChar(MAX)")>  _
	Public Property syslcnsnm_prefixnm() As String
		Get
			Return Me._syslcnsnm_prefixnm
		End Get
		Set
			If (String.Equals(Me._syslcnsnm_prefixnm, value) = false) Then
				Me.Onsyslcnsnm_prefixnmChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_prefixnm = value
				Me.SendPropertyChanged("syslcnsnm_prefixnm")
				Me.Onsyslcnsnm_prefixnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property syslcnsnm_thanm() As String
		Get
			Return Me._syslcnsnm_thanm
		End Get
		Set
			If (String.Equals(Me._syslcnsnm_thanm, value) = false) Then
				Me.Onsyslcnsnm_thanmChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_thanm = value
				Me.SendPropertyChanged("syslcnsnm_thanm")
				Me.Onsyslcnsnm_thanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_engnm", DbType:="NVarChar(MAX)")>  _
	Public Property syslcnsnm_engnm() As String
		Get
			Return Me._syslcnsnm_engnm
		End Get
		Set
			If (String.Equals(Me._syslcnsnm_engnm, value) = false) Then
				Me.Onsyslcnsnm_engnmChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_engnm = value
				Me.SendPropertyChanged("syslcnsnm_engnm")
				Me.Onsyslcnsnm_engnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_lctcd", DbType:="Int")>  _
	Public Property syslcnsnm_lctcd() As System.Nullable(Of Integer)
		Get
			Return Me._syslcnsnm_lctcd
		End Get
		Set
			If (Me._syslcnsnm_lctcd.Equals(value) = false) Then
				Me.Onsyslcnsnm_lctcdChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_lctcd = value
				Me.SendPropertyChanged("syslcnsnm_lctcd")
				Me.Onsyslcnsnm_lctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_thalnm", DbType:="NVarChar(MAX)")>  _
	Public Property syslcnsnm_thalnm() As String
		Get
			Return Me._syslcnsnm_thalnm
		End Get
		Set
			If (String.Equals(Me._syslcnsnm_thalnm, value) = false) Then
				Me.Onsyslcnsnm_thalnmChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_thalnm = value
				Me.SendPropertyChanged("syslcnsnm_thalnm")
				Me.Onsyslcnsnm_thalnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_englnm", DbType:="NVarChar(MAX)")>  _
	Public Property syslcnsnm_englnm() As String
		Get
			Return Me._syslcnsnm_englnm
		End Get
		Set
			If (String.Equals(Me._syslcnsnm_englnm, value) = false) Then
				Me.Onsyslcnsnm_englnmChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_englnm = value
				Me.SendPropertyChanged("syslcnsnm_englnm")
				Me.Onsyslcnsnm_englnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_suffixcd", DbType:="Int")>  _
	Public Property syslcnsnm_suffixcd() As System.Nullable(Of Integer)
		Get
			Return Me._syslcnsnm_suffixcd
		End Get
		Set
			If (Me._syslcnsnm_suffixcd.Equals(value) = false) Then
				Me.Onsyslcnsnm_suffixcdChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_suffixcd = value
				Me.SendPropertyChanged("syslcnsnm_suffixcd")
				Me.Onsyslcnsnm_suffixcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_lcnsst", DbType:="Int")>  _
	Public Property syslcnsnm_lcnsst() As System.Nullable(Of Integer)
		Get
			Return Me._syslcnsnm_lcnsst
		End Get
		Set
			If (Me._syslcnsnm_lcnsst.Equals(value) = false) Then
				Me.Onsyslcnsnm_lcnsstChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_lcnsst = value
				Me.SendPropertyChanged("syslcnsnm_lcnsst")
				Me.Onsyslcnsnm_lcnsstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_grplcnscd", DbType:="Int")>  _
	Public Property syslcnsnm_grplcnscd() As System.Nullable(Of Integer)
		Get
			Return Me._syslcnsnm_grplcnscd
		End Get
		Set
			If (Me._syslcnsnm_grplcnscd.Equals(value) = false) Then
				Me.Onsyslcnsnm_grplcnscdChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_grplcnscd = value
				Me.SendPropertyChanged("syslcnsnm_grplcnscd")
				Me.Onsyslcnsnm_grplcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_bsncd", DbType:="Int")>  _
	Public Property syslcnsnm_bsncd() As System.Nullable(Of Integer)
		Get
			Return Me._syslcnsnm_bsncd
		End Get
		Set
			If (Me._syslcnsnm_bsncd.Equals(value) = false) Then
				Me.Onsyslcnsnm_bsncdChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_bsncd = value
				Me.SendPropertyChanged("syslcnsnm_bsncd")
				Me.Onsyslcnsnm_bsncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_lstfcd", DbType:="Int")>  _
	Public Property syslcnsnm_lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._syslcnsnm_lstfcd
		End Get
		Set
			If (Me._syslcnsnm_lstfcd.Equals(value) = false) Then
				Me.Onsyslcnsnm_lstfcdChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_lstfcd = value
				Me.SendPropertyChanged("syslcnsnm_lstfcd")
				Me.Onsyslcnsnm_lstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_lmdfdate", DbType:="DateTime")>  _
	Public Property syslcnsnm_lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._syslcnsnm_lmdfdate
		End Get
		Set
			If (Me._syslcnsnm_lmdfdate.Equals(value) = false) Then
				Me.Onsyslcnsnm_lmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_lmdfdate = value
				Me.SendPropertyChanged("syslcnsnm_lmdfdate")
				Me.Onsyslcnsnm_lmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_lcnsidst", DbType:="Int")>  _
	Public Property syslcnsnm_lcnsidst() As System.Nullable(Of Integer)
		Get
			Return Me._syslcnsnm_lcnsidst
		End Get
		Set
			If (Me._syslcnsnm_lcnsidst.Equals(value) = false) Then
				Me.Onsyslcnsnm_lcnsidstChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_lcnsidst = value
				Me.SendPropertyChanged("syslcnsnm_lcnsidst")
				Me.Onsyslcnsnm_lcnsidstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_validdate", DbType:="DateTime")>  _
	Public Property syslcnsnm_validdate() As System.Nullable(Of Date)
		Get
			Return Me._syslcnsnm_validdate
		End Get
		Set
			If (Me._syslcnsnm_validdate.Equals(value) = false) Then
				Me.Onsyslcnsnm_validdateChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_validdate = value
				Me.SendPropertyChanged("syslcnsnm_validdate")
				Me.Onsyslcnsnm_validdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_oldid", DbType:="NVarChar(MAX)")>  _
	Public Property syslcnsnm_oldid() As String
		Get
			Return Me._syslcnsnm_oldid
		End Get
		Set
			If (String.Equals(Me._syslcnsnm_oldid, value) = false) Then
				Me.Onsyslcnsnm_oldidChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_oldid = value
				Me.SendPropertyChanged("syslcnsnm_oldid")
				Me.Onsyslcnsnm_oldidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_type", DbType:="Int")>  _
	Public Property syslcnsnm_type() As System.Nullable(Of Integer)
		Get
			Return Me._syslcnsnm_type
		End Get
		Set
			If (Me._syslcnsnm_type.Equals(value) = false) Then
				Me.Onsyslcnsnm_typeChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_type = value
				Me.SendPropertyChanged("syslcnsnm_type")
				Me.Onsyslcnsnm_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_create_date", DbType:="DateTime")>  _
	Public Property syslcnsnm_create_date() As System.Nullable(Of Date)
		Get
			Return Me._syslcnsnm_create_date
		End Get
		Set
			If (Me._syslcnsnm_create_date.Equals(value) = false) Then
				Me.Onsyslcnsnm_create_dateChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_create_date = value
				Me.SendPropertyChanged("syslcnsnm_create_date")
				Me.Onsyslcnsnm_create_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsnm_update_date", DbType:="DateTime")>  _
	Public Property syslcnsnm_update_date() As System.Nullable(Of Date)
		Get
			Return Me._syslcnsnm_update_date
		End Get
		Set
			If (Me._syslcnsnm_update_date.Equals(value) = false) Then
				Me.Onsyslcnsnm_update_dateChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsnm_update_date = value
				Me.SendPropertyChanged("syslcnsnm_update_date")
				Me.Onsyslcnsnm_update_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prefixcd", DbType:="NVarChar(MAX)")>  _
	Public Property prefixcd() As String
		Get
			Return Me._prefixcd
		End Get
		Set
			If (String.Equals(Me._prefixcd, value) = false) Then
				Me.OnprefixcdChanging(value)
				Me.SendPropertyChanging
				Me._prefixcd = value
				Me.SendPropertyChanged("prefixcd")
				Me.OnprefixcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsid_IDA", DbType:="Int")>  _
	Public Property syslcnsid_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._syslcnsid_IDA
		End Get
		Set
			If (Me._syslcnsid_IDA.Equals(value) = false) Then
				Me.Onsyslcnsid_IDAChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsid_IDA = value
				Me.SendPropertyChanged("syslcnsid_IDA")
				Me.Onsyslcnsid_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsid_identify", DbType:="NVarChar(MAX)")>  _
	Public Property syslcnsid_identify() As String
		Get
			Return Me._syslcnsid_identify
		End Get
		Set
			If (String.Equals(Me._syslcnsid_identify, value) = false) Then
				Me.Onsyslcnsid_identifyChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsid_identify = value
				Me.SendPropertyChanged("syslcnsid_identify")
				Me.Onsyslcnsid_identifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslcnsid_lcnsid", DbType:="Int")>  _
	Public Property syslcnsid_lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._syslcnsid_lcnsid
		End Get
		Set
			If (Me._syslcnsid_lcnsid.Equals(value) = false) Then
				Me.Onsyslcnsid_lcnsidChanging(value)
				Me.SendPropertyChanging
				Me._syslcnsid_lcnsid = value
				Me.SendPropertyChanged("syslcnsid_lcnsid")
				Me.Onsyslcnsid_lcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_crtlct", DbType:="Int")>  _
	Public Property lcnsid_crtlct() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid_crtlct
		End Get
		Set
			If (Me._lcnsid_crtlct.Equals(value) = false) Then
				Me.Onlcnsid_crtlctChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_crtlct = value
				Me.SendPropertyChanged("lcnsid_crtlct")
				Me.Onlcnsid_crtlctChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_birthdate", DbType:="DateTime")>  _
	Public Property lcnsid_birthdate() As System.Nullable(Of Date)
		Get
			Return Me._lcnsid_birthdate
		End Get
		Set
			If (Me._lcnsid_birthdate.Equals(value) = false) Then
				Me.Onlcnsid_birthdateChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_birthdate = value
				Me.SendPropertyChanged("lcnsid_birthdate")
				Me.Onlcnsid_birthdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_chngwtcd", DbType:="Int")>  _
	Public Property lcnsid_chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid_chngwtcd
		End Get
		Set
			If (Me._lcnsid_chngwtcd.Equals(value) = false) Then
				Me.Onlcnsid_chngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_chngwtcd = value
				Me.SendPropertyChanged("lcnsid_chngwtcd")
				Me.Onlcnsid_chngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_ntcd", DbType:="Int")>  _
	Public Property lcnsid_ntcd() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid_ntcd
		End Get
		Set
			If (Me._lcnsid_ntcd.Equals(value) = false) Then
				Me.Onlcnsid_ntcdChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_ntcd = value
				Me.SendPropertyChanged("lcnsid_ntcd")
				Me.Onlcnsid_ntcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_taxno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid_taxno() As String
		Get
			Return Me._lcnsid_taxno
		End Get
		Set
			If (String.Equals(Me._lcnsid_taxno, value) = false) Then
				Me.Onlcnsid_taxnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_taxno = value
				Me.SendPropertyChanged("lcnsid_taxno")
				Me.Onlcnsid_taxnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_trdregno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid_trdregno() As String
		Get
			Return Me._lcnsid_trdregno
		End Get
		Set
			If (String.Equals(Me._lcnsid_trdregno, value) = false) Then
				Me.Onlcnsid_trdregnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_trdregno = value
				Me.SendPropertyChanged("lcnsid_trdregno")
				Me.Onlcnsid_trdregnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_ctzno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid_ctzno() As String
		Get
			Return Me._lcnsid_ctzno
		End Get
		Set
			If (String.Equals(Me._lcnsid_ctzno, value) = false) Then
				Me.Onlcnsid_ctznoChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_ctzno = value
				Me.SendPropertyChanged("lcnsid_ctzno")
				Me.Onlcnsid_ctznoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_remark", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid_remark() As String
		Get
			Return Me._lcnsid_remark
		End Get
		Set
			If (String.Equals(Me._lcnsid_remark, value) = false) Then
				Me.Onlcnsid_remarkChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_remark = value
				Me.SendPropertyChanged("lcnsid_remark")
				Me.Onlcnsid_remarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_idst", DbType:="Int")>  _
	Public Property lcnsid_idst() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid_idst
		End Get
		Set
			If (Me._lcnsid_idst.Equals(value) = false) Then
				Me.Onlcnsid_idstChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_idst = value
				Me.SendPropertyChanged("lcnsid_idst")
				Me.Onlcnsid_idstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_phrno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid_phrno() As String
		Get
			Return Me._lcnsid_phrno
		End Get
		Set
			If (String.Equals(Me._lcnsid_phrno, value) = false) Then
				Me.Onlcnsid_phrnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_phrno = value
				Me.SendPropertyChanged("lcnsid_phrno")
				Me.Onlcnsid_phrnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_stfcd", DbType:="Int")>  _
	Public Property lcnsid_stfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid_stfcd
		End Get
		Set
			If (Me._lcnsid_stfcd.Equals(value) = false) Then
				Me.Onlcnsid_stfcdChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_stfcd = value
				Me.SendPropertyChanged("lcnsid_stfcd")
				Me.Onlcnsid_stfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_nmprnst", DbType:="Int")>  _
	Public Property lcnsid_nmprnst() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid_nmprnst
		End Get
		Set
			If (Me._lcnsid_nmprnst.Equals(value) = false) Then
				Me.Onlcnsid_nmprnstChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_nmprnst = value
				Me.SendPropertyChanged("lcnsid_nmprnst")
				Me.Onlcnsid_nmprnstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_cncdate", DbType:="DateTime")>  _
	Public Property lcnsid_cncdate() As System.Nullable(Of Date)
		Get
			Return Me._lcnsid_cncdate
		End Get
		Set
			If (Me._lcnsid_cncdate.Equals(value) = false) Then
				Me.Onlcnsid_cncdateChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_cncdate = value
				Me.SendPropertyChanged("lcnsid_cncdate")
				Me.Onlcnsid_cncdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_lstfcd", DbType:="Int")>  _
	Public Property lcnsid_lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid_lstfcd
		End Get
		Set
			If (Me._lcnsid_lstfcd.Equals(value) = false) Then
				Me.Onlcnsid_lstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_lstfcd = value
				Me.SendPropertyChanged("lcnsid_lstfcd")
				Me.Onlcnsid_lstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_lcnsidst", DbType:="Int")>  _
	Public Property lcnsid_lcnsidst() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid_lcnsidst
		End Get
		Set
			If (Me._lcnsid_lcnsidst.Equals(value) = false) Then
				Me.Onlcnsid_lcnsidstChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_lcnsidst = value
				Me.SendPropertyChanged("lcnsid_lcnsidst")
				Me.Onlcnsid_lcnsidstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_scridst", DbType:="Int")>  _
	Public Property lcnsid_scridst() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid_scridst
		End Get
		Set
			If (Me._lcnsid_scridst.Equals(value) = false) Then
				Me.Onlcnsid_scridstChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_scridst = value
				Me.SendPropertyChanged("lcnsid_scridst")
				Me.Onlcnsid_scridstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_lmdfdate", DbType:="DateTime")>  _
	Public Property lcnsid_lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lcnsid_lmdfdate
		End Get
		Set
			If (Me._lcnsid_lmdfdate.Equals(value) = false) Then
				Me.Onlcnsid_lmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_lmdfdate = value
				Me.SendPropertyChanged("lcnsid_lmdfdate")
				Me.Onlcnsid_lmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_url", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid_url() As String
		Get
			Return Me._lcnsid_url
		End Get
		Set
			If (String.Equals(Me._lcnsid_url, value) = false) Then
				Me.Onlcnsid_urlChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_url = value
				Me.SendPropertyChanged("lcnsid_url")
				Me.Onlcnsid_urlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_cncremark", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid_cncremark() As String
		Get
			Return Me._lcnsid_cncremark
		End Get
		Set
			If (String.Equals(Me._lcnsid_cncremark, value) = false) Then
				Me.Onlcnsid_cncremarkChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_cncremark = value
				Me.SendPropertyChanged("lcnsid_cncremark")
				Me.Onlcnsid_cncremarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_email", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid_email() As String
		Get
			Return Me._lcnsid_email
		End Get
		Set
			If (String.Equals(Me._lcnsid_email, value) = false) Then
				Me.Onlcnsid_emailChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_email = value
				Me.SendPropertyChanged("lcnsid_email")
				Me.Onlcnsid_emailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_otaxno", DbType:="VarChar(20)")>  _
	Public Property lcnsid_otaxno() As String
		Get
			Return Me._lcnsid_otaxno
		End Get
		Set
			If (String.Equals(Me._lcnsid_otaxno, value) = false) Then
				Me.Onlcnsid_otaxnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_otaxno = value
				Me.SendPropertyChanged("lcnsid_otaxno")
				Me.Onlcnsid_otaxnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_type", DbType:="Int")>  _
	Public Property lcnsid_type() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid_type
		End Get
		Set
			If (Me._lcnsid_type.Equals(value) = false) Then
				Me.Onlcnsid_typeChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_type = value
				Me.SendPropertyChanged("lcnsid_type")
				Me.Onlcnsid_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_email_sro", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid_email_sro() As String
		Get
			Return Me._lcnsid_email_sro
		End Get
		Set
			If (String.Equals(Me._lcnsid_email_sro, value) = false) Then
				Me.Onlcnsid_email_sroChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_email_sro = value
				Me.SendPropertyChanged("lcnsid_email_sro")
				Me.Onlcnsid_email_sroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_email_contract_real", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid_email_contract_real() As String
		Get
			Return Me._lcnsid_email_contract_real
		End Get
		Set
			If (String.Equals(Me._lcnsid_email_contract_real, value) = false) Then
				Me.Onlcnsid_email_contract_realChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_email_contract_real = value
				Me.SendPropertyChanged("lcnsid_email_contract_real")
				Me.Onlcnsid_email_contract_realChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_ID_main", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid_ID_main() As String
		Get
			Return Me._lcnsid_ID_main
		End Get
		Set
			If (String.Equals(Me._lcnsid_ID_main, value) = false) Then
				Me.Onlcnsid_ID_mainChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_ID_main = value
				Me.SendPropertyChanged("lcnsid_ID_main")
				Me.Onlcnsid_ID_mainChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_status", DbType:="Int")>  _
	Public Property lcnsid_status() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid_status
		End Get
		Set
			If (Me._lcnsid_status.Equals(value) = false) Then
				Me.Onlcnsid_statusChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_status = value
				Me.SendPropertyChanged("lcnsid_status")
				Me.Onlcnsid_statusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_person_status_ID", DbType:="Int")>  _
	Public Property lcnsid_person_status_ID() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid_person_status_ID
		End Get
		Set
			If (Me._lcnsid_person_status_ID.Equals(value) = false) Then
				Me.Onlcnsid_person_status_IDChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_person_status_ID = value
				Me.SendPropertyChanged("lcnsid_person_status_ID")
				Me.Onlcnsid_person_status_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_person_status", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid_person_status() As String
		Get
			Return Me._lcnsid_person_status
		End Get
		Set
			If (String.Equals(Me._lcnsid_person_status, value) = false) Then
				Me.Onlcnsid_person_statusChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_person_status = value
				Me.SendPropertyChanged("lcnsid_person_status")
				Me.Onlcnsid_person_statusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_sex", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid_sex() As String
		Get
			Return Me._lcnsid_sex
		End Get
		Set
			If (String.Equals(Me._lcnsid_sex, value) = false) Then
				Me.Onlcnsid_sexChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_sex = value
				Me.SendPropertyChanged("lcnsid_sex")
				Me.Onlcnsid_sexChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_standard_description", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid_standard_description() As String
		Get
			Return Me._lcnsid_standard_description
		End Get
		Set
			If (String.Equals(Me._lcnsid_standard_description, value) = false) Then
				Me.Onlcnsid_standard_descriptionChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_standard_description = value
				Me.SendPropertyChanged("lcnsid_standard_description")
				Me.Onlcnsid_standard_descriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid_register_capital", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid_register_capital() As String
		Get
			Return Me._lcnsid_register_capital
		End Get
		Set
			If (String.Equals(Me._lcnsid_register_capital, value) = false) Then
				Me.Onlcnsid_register_capitalChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid_register_capital = value
				Me.SendPropertyChanged("lcnsid_register_capital")
				Me.Onlcnsid_register_capitalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_ID", DbType:="Int")>  _
	Public Property syslctaddr_ID() As System.Nullable(Of Integer)
		Get
			Return Me._syslctaddr_ID
		End Get
		Set
			If (Me._syslctaddr_ID.Equals(value) = false) Then
				Me.Onsyslctaddr_IDChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_ID = value
				Me.SendPropertyChanged("syslctaddr_ID")
				Me.Onsyslctaddr_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_identify", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_identify() As String
		Get
			Return Me._syslctaddr_identify
		End Get
		Set
			If (String.Equals(Me._syslctaddr_identify, value) = false) Then
				Me.Onsyslctaddr_identifyChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_identify = value
				Me.SendPropertyChanged("syslctaddr_identify")
				Me.Onsyslctaddr_identifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_lcnsid", DbType:="Int")>  _
	Public Property syslctaddr_lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._syslctaddr_lcnsid
		End Get
		Set
			If (Me._syslctaddr_lcnsid.Equals(value) = false) Then
				Me.Onsyslctaddr_lcnsidChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_lcnsid = value
				Me.SendPropertyChanged("syslctaddr_lcnsid")
				Me.Onsyslctaddr_lcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_lctcd", DbType:="Int")>  _
	Public Property syslctaddr_lctcd() As System.Nullable(Of Integer)
		Get
			Return Me._syslctaddr_lctcd
		End Get
		Set
			If (Me._syslctaddr_lctcd.Equals(value) = false) Then
				Me.Onsyslctaddr_lctcdChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_lctcd = value
				Me.SendPropertyChanged("syslctaddr_lctcd")
				Me.Onsyslctaddr_lctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_thaaddr", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_thaaddr() As String
		Get
			Return Me._syslctaddr_thaaddr
		End Get
		Set
			If (String.Equals(Me._syslctaddr_thaaddr, value) = false) Then
				Me.Onsyslctaddr_thaaddrChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_thaaddr = value
				Me.SendPropertyChanged("syslctaddr_thaaddr")
				Me.Onsyslctaddr_thaaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_engaddr", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_engaddr() As String
		Get
			Return Me._syslctaddr_engaddr
		End Get
		Set
			If (String.Equals(Me._syslctaddr_engaddr, value) = false) Then
				Me.Onsyslctaddr_engaddrChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_engaddr = value
				Me.SendPropertyChanged("syslctaddr_engaddr")
				Me.Onsyslctaddr_engaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_room", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_room() As String
		Get
			Return Me._syslctaddr_room
		End Get
		Set
			If (String.Equals(Me._syslctaddr_room, value) = false) Then
				Me.Onsyslctaddr_roomChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_room = value
				Me.SendPropertyChanged("syslctaddr_room")
				Me.Onsyslctaddr_roomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_mu", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_mu() As String
		Get
			Return Me._syslctaddr_mu
		End Get
		Set
			If (String.Equals(Me._syslctaddr_mu, value) = false) Then
				Me.Onsyslctaddr_muChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_mu = value
				Me.SendPropertyChanged("syslctaddr_mu")
				Me.Onsyslctaddr_muChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_floor", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_floor() As String
		Get
			Return Me._syslctaddr_floor
		End Get
		Set
			If (String.Equals(Me._syslctaddr_floor, value) = false) Then
				Me.Onsyslctaddr_floorChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_floor = value
				Me.SendPropertyChanged("syslctaddr_floor")
				Me.Onsyslctaddr_floorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_thasoi", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_thasoi() As String
		Get
			Return Me._syslctaddr_thasoi
		End Get
		Set
			If (String.Equals(Me._syslctaddr_thasoi, value) = false) Then
				Me.Onsyslctaddr_thasoiChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_thasoi = value
				Me.SendPropertyChanged("syslctaddr_thasoi")
				Me.Onsyslctaddr_thasoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_building", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_building() As String
		Get
			Return Me._syslctaddr_building
		End Get
		Set
			If (String.Equals(Me._syslctaddr_building, value) = false) Then
				Me.Onsyslctaddr_buildingChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_building = value
				Me.SendPropertyChanged("syslctaddr_building")
				Me.Onsyslctaddr_buildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_engsoi", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_engsoi() As String
		Get
			Return Me._syslctaddr_engsoi
		End Get
		Set
			If (String.Equals(Me._syslctaddr_engsoi, value) = false) Then
				Me.Onsyslctaddr_engsoiChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_engsoi = value
				Me.SendPropertyChanged("syslctaddr_engsoi")
				Me.Onsyslctaddr_engsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_tharoad", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_tharoad() As String
		Get
			Return Me._syslctaddr_tharoad
		End Get
		Set
			If (String.Equals(Me._syslctaddr_tharoad, value) = false) Then
				Me.Onsyslctaddr_tharoadChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_tharoad = value
				Me.SendPropertyChanged("syslctaddr_tharoad")
				Me.Onsyslctaddr_tharoadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_engroad", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_engroad() As String
		Get
			Return Me._syslctaddr_engroad
		End Get
		Set
			If (String.Equals(Me._syslctaddr_engroad, value) = false) Then
				Me.Onsyslctaddr_engroadChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_engroad = value
				Me.SendPropertyChanged("syslctaddr_engroad")
				Me.Onsyslctaddr_engroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_thmblcd", DbType:="Int")>  _
	Public Property syslctaddr_thmblcd() As System.Nullable(Of Integer)
		Get
			Return Me._syslctaddr_thmblcd
		End Get
		Set
			If (Me._syslctaddr_thmblcd.Equals(value) = false) Then
				Me.Onsyslctaddr_thmblcdChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_thmblcd = value
				Me.SendPropertyChanged("syslctaddr_thmblcd")
				Me.Onsyslctaddr_thmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_thmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_thmblnm() As String
		Get
			Return Me._syslctaddr_thmblnm
		End Get
		Set
			If (String.Equals(Me._syslctaddr_thmblnm, value) = false) Then
				Me.Onsyslctaddr_thmblnmChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_thmblnm = value
				Me.SendPropertyChanged("syslctaddr_thmblnm")
				Me.Onsyslctaddr_thmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_amphrcd", DbType:="Int")>  _
	Public Property syslctaddr_amphrcd() As System.Nullable(Of Integer)
		Get
			Return Me._syslctaddr_amphrcd
		End Get
		Set
			If (Me._syslctaddr_amphrcd.Equals(value) = false) Then
				Me.Onsyslctaddr_amphrcdChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_amphrcd = value
				Me.SendPropertyChanged("syslctaddr_amphrcd")
				Me.Onsyslctaddr_amphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_amphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_amphrnm() As String
		Get
			Return Me._syslctaddr_amphrnm
		End Get
		Set
			If (String.Equals(Me._syslctaddr_amphrnm, value) = false) Then
				Me.Onsyslctaddr_amphrnmChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_amphrnm = value
				Me.SendPropertyChanged("syslctaddr_amphrnm")
				Me.Onsyslctaddr_amphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_chngwtcd", DbType:="Int")>  _
	Public Property syslctaddr_chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._syslctaddr_chngwtcd
		End Get
		Set
			If (Me._syslctaddr_chngwtcd.Equals(value) = false) Then
				Me.Onsyslctaddr_chngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_chngwtcd = value
				Me.SendPropertyChanged("syslctaddr_chngwtcd")
				Me.Onsyslctaddr_chngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_chngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_chngwtnm() As String
		Get
			Return Me._syslctaddr_chngwtnm
		End Get
		Set
			If (String.Equals(Me._syslctaddr_chngwtnm, value) = false) Then
				Me.Onsyslctaddr_chngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_chngwtnm = value
				Me.SendPropertyChanged("syslctaddr_chngwtnm")
				Me.Onsyslctaddr_chngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_zipcode", DbType:="Int")>  _
	Public Property syslctaddr_zipcode() As System.Nullable(Of Integer)
		Get
			Return Me._syslctaddr_zipcode
		End Get
		Set
			If (Me._syslctaddr_zipcode.Equals(value) = false) Then
				Me.Onsyslctaddr_zipcodeChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_zipcode = value
				Me.SendPropertyChanged("syslctaddr_zipcode")
				Me.Onsyslctaddr_zipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_tel", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_tel() As String
		Get
			Return Me._syslctaddr_tel
		End Get
		Set
			If (String.Equals(Me._syslctaddr_tel, value) = false) Then
				Me.Onsyslctaddr_telChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_tel = value
				Me.SendPropertyChanged("syslctaddr_tel")
				Me.Onsyslctaddr_telChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_fax", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_fax() As String
		Get
			Return Me._syslctaddr_fax
		End Get
		Set
			If (String.Equals(Me._syslctaddr_fax, value) = false) Then
				Me.Onsyslctaddr_faxChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_fax = value
				Me.SendPropertyChanged("syslctaddr_fax")
				Me.Onsyslctaddr_faxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_validdate", DbType:="DateTime")>  _
	Public Property syslctaddr_validdate() As System.Nullable(Of Date)
		Get
			Return Me._syslctaddr_validdate
		End Get
		Set
			If (Me._syslctaddr_validdate.Equals(value) = false) Then
				Me.Onsyslctaddr_validdateChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_validdate = value
				Me.SendPropertyChanged("syslctaddr_validdate")
				Me.Onsyslctaddr_validdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_lstfcd", DbType:="Int")>  _
	Public Property syslctaddr_lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._syslctaddr_lstfcd
		End Get
		Set
			If (Me._syslctaddr_lstfcd.Equals(value) = false) Then
				Me.Onsyslctaddr_lstfcdChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_lstfcd = value
				Me.SendPropertyChanged("syslctaddr_lstfcd")
				Me.Onsyslctaddr_lstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_lmdfdate", DbType:="DateTime")>  _
	Public Property syslctaddr_lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._syslctaddr_lmdfdate
		End Get
		Set
			If (Me._syslctaddr_lmdfdate.Equals(value) = false) Then
				Me.Onsyslctaddr_lmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_lmdfdate = value
				Me.SendPropertyChanged("syslctaddr_lmdfdate")
				Me.Onsyslctaddr_lmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_pvcode", DbType:="Int")>  _
	Public Property syslctaddr_pvcode() As System.Nullable(Of Integer)
		Get
			Return Me._syslctaddr_pvcode
		End Get
		Set
			If (Me._syslctaddr_pvcode.Equals(value) = false) Then
				Me.Onsyslctaddr_pvcodeChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_pvcode = value
				Me.SendPropertyChanged("syslctaddr_pvcode")
				Me.Onsyslctaddr_pvcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_amcode", DbType:="Int")>  _
	Public Property syslctaddr_amcode() As System.Nullable(Of Integer)
		Get
			Return Me._syslctaddr_amcode
		End Get
		Set
			If (Me._syslctaddr_amcode.Equals(value) = false) Then
				Me.Onsyslctaddr_amcodeChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_amcode = value
				Me.SendPropertyChanged("syslctaddr_amcode")
				Me.Onsyslctaddr_amcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_ttcode", DbType:="Int")>  _
	Public Property syslctaddr_ttcode() As System.Nullable(Of Integer)
		Get
			Return Me._syslctaddr_ttcode
		End Get
		Set
			If (Me._syslctaddr_ttcode.Equals(value) = false) Then
				Me.Onsyslctaddr_ttcodeChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_ttcode = value
				Me.SendPropertyChanged("syslctaddr_ttcode")
				Me.Onsyslctaddr_ttcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_branch", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_branch() As String
		Get
			Return Me._syslctaddr_branch
		End Get
		Set
			If (String.Equals(Me._syslctaddr_branch, value) = false) Then
				Me.Onsyslctaddr_branchChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_branch = value
				Me.SendPropertyChanged("syslctaddr_branch")
				Me.Onsyslctaddr_branchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syslctaddr_Fulladdr", DbType:="NVarChar(MAX)")>  _
	Public Property syslctaddr_Fulladdr() As String
		Get
			Return Me._syslctaddr_Fulladdr
		End Get
		Set
			If (String.Equals(Me._syslctaddr_Fulladdr, value) = false) Then
				Me.Onsyslctaddr_FulladdrChanging(value)
				Me.SendPropertyChanging
				Me._syslctaddr_Fulladdr = value
				Me.SendPropertyChanged("syslctaddr_Fulladdr")
				Me.Onsyslctaddr_FulladdrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDRESS_amphrcd", DbType:="Int")>  _
	Public Property LOCATION_ADDRESS_amphrcd() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_ADDRESS_amphrcd
		End Get
		Set
			If (Me._LOCATION_ADDRESS_amphrcd.Equals(value) = false) Then
				Me.OnLOCATION_ADDRESS_amphrcdChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDRESS_amphrcd = value
				Me.SendPropertyChanged("LOCATION_ADDRESS_amphrcd")
				Me.OnLOCATION_ADDRESS_amphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_PREFIXTHAICD", DbType:="Int")>  _
	Public Property BSN_PREFIXTHAICD() As System.Nullable(Of Integer)
		Get
			Return Me._BSN_PREFIXTHAICD
		End Get
		Set
			If (Me._BSN_PREFIXTHAICD.Equals(value) = false) Then
				Me.OnBSN_PREFIXTHAICDChanging(value)
				Me.SendPropertyChanging
				Me._BSN_PREFIXTHAICD = value
				Me.SendPropertyChanged("BSN_PREFIXTHAICD")
				Me.OnBSN_PREFIXTHAICDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syschngwt_chngwtcd", DbType:="Int")>  _
	Public Property syschngwt_chngwtcd() As System.Nullable(Of Integer)
		Get
			Return Me._syschngwt_chngwtcd
		End Get
		Set
			If (Me._syschngwt_chngwtcd.Equals(value) = false) Then
				Me.Onsyschngwt_chngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._syschngwt_chngwtcd = value
				Me.SendPropertyChanged("syschngwt_chngwtcd")
				Me.Onsyschngwt_chngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syschngwt_thachngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property syschngwt_thachngwtnm() As String
		Get
			Return Me._syschngwt_thachngwtnm
		End Get
		Set
			If (String.Equals(Me._syschngwt_thachngwtnm, value) = false) Then
				Me.Onsyschngwt_thachngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._syschngwt_thachngwtnm = value
				Me.SendPropertyChanged("syschngwt_thachngwtnm")
				Me.Onsyschngwt_thachngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syschngwt_engchngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property syschngwt_engchngwtnm() As String
		Get
			Return Me._syschngwt_engchngwtnm
		End Get
		Set
			If (String.Equals(Me._syschngwt_engchngwtnm, value) = false) Then
				Me.Onsyschngwt_engchngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._syschngwt_engchngwtnm = value
				Me.SendPropertyChanged("syschngwt_engchngwtnm")
				Me.Onsyschngwt_engchngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syschngwt_thacwabbr", DbType:="NVarChar(MAX)")>  _
	Public Property syschngwt_thacwabbr() As String
		Get
			Return Me._syschngwt_thacwabbr
		End Get
		Set
			If (String.Equals(Me._syschngwt_thacwabbr, value) = false) Then
				Me.Onsyschngwt_thacwabbrChanging(value)
				Me.SendPropertyChanging
				Me._syschngwt_thacwabbr = value
				Me.SendPropertyChanged("syschngwt_thacwabbr")
				Me.Onsyschngwt_thacwabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syschngwt_engcwabbr", DbType:="NVarChar(MAX)")>  _
	Public Property syschngwt_engcwabbr() As String
		Get
			Return Me._syschngwt_engcwabbr
		End Get
		Set
			If (String.Equals(Me._syschngwt_engcwabbr, value) = false) Then
				Me.Onsyschngwt_engcwabbrChanging(value)
				Me.SendPropertyChanging
				Me._syschngwt_engcwabbr = value
				Me.SendPropertyChanged("syschngwt_engcwabbr")
				Me.Onsyschngwt_engcwabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syschngwt_mapgis", DbType:="Int")>  _
	Public Property syschngwt_mapgis() As System.Nullable(Of Integer)
		Get
			Return Me._syschngwt_mapgis
		End Get
		Set
			If (Me._syschngwt_mapgis.Equals(value) = false) Then
				Me.Onsyschngwt_mapgisChanging(value)
				Me.SendPropertyChanging
				Me._syschngwt_mapgis = value
				Me.SendPropertyChanged("syschngwt_mapgis")
				Me.Onsyschngwt_mapgisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syschngwt_chngwtgrpcd", DbType:="Int")>  _
	Public Property syschngwt_chngwtgrpcd() As System.Nullable(Of Integer)
		Get
			Return Me._syschngwt_chngwtgrpcd
		End Get
		Set
			If (Me._syschngwt_chngwtgrpcd.Equals(value) = false) Then
				Me.Onsyschngwt_chngwtgrpcdChanging(value)
				Me.SendPropertyChanging
				Me._syschngwt_chngwtgrpcd = value
				Me.SendPropertyChanged("syschngwt_chngwtgrpcd")
				Me.Onsyschngwt_chngwtgrpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICENSED", DbType:="NVarChar(MAX)")>  _
	Public Property LICENSED() As String
		Get
			Return Me._LICENSED
		End Get
		Set
			If (String.Equals(Me._LICENSED, value) = false) Then
				Me.OnLICENSEDChanging(value)
				Me.SendPropertyChanging
				Me._LICENSED = value
				Me.SendPropertyChanged("LICENSED")
				Me.OnLICENSEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUSPENSION", DbType:="NVarChar(MAX)")>  _
	Public Property SUSPENSION() As String
		Get
			Return Me._SUSPENSION
		End Get
		Set
			If (String.Equals(Me._SUSPENSION, value) = false) Then
				Me.OnSUSPENSIONChanging(value)
				Me.SendPropertyChanging
				Me._SUSPENSION = value
				Me.SendPropertyChanged("SUSPENSION")
				Me.OnSUSPENSIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REVOCATION", DbType:="NVarChar(MAX)")>  _
	Public Property REVOCATION() As String
		Get
			Return Me._REVOCATION
		End Get
		Set
			If (String.Equals(Me._REVOCATION, value) = false) Then
				Me.OnREVOCATIONChanging(value)
				Me.SendPropertyChanging
				Me._REVOCATION = value
				Me.SendPropertyChanged("REVOCATION")
				Me.OnREVOCATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINED_IMPRISONED", DbType:="NVarChar(MAX)")>  _
	Public Property FINED_IMPRISONED() As String
		Get
			Return Me._FINED_IMPRISONED
		End Get
		Set
			If (String.Equals(Me._FINED_IMPRISONED, value) = false) Then
				Me.OnFINED_IMPRISONEDChanging(value)
				Me.SendPropertyChanging
				Me._FINED_IMPRISONED = value
				Me.SendPropertyChanged("FINED_IMPRISONED")
				Me.OnFINED_IMPRISONEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CASE_SUSPENDED", DbType:="NVarChar(MAX)")>  _
	Public Property CASE_SUSPENDED() As String
		Get
			Return Me._CASE_SUSPENDED
		End Get
		Set
			If (String.Equals(Me._CASE_SUSPENDED, value) = false) Then
				Me.OnCASE_SUSPENDEDChanging(value)
				Me.SendPropertyChanging
				Me._CASE_SUSPENDED = value
				Me.SendPropertyChanged("CASE_SUSPENDED")
				Me.OnCASE_SUSPENDEDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAIN_LCN_IDA", DbType:="Int")>  _
	Public Property MAIN_LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._MAIN_LCN_IDA
		End Get
		Set
			If (Me._MAIN_LCN_IDA.Equals(value) = false) Then
				Me.OnMAIN_LCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._MAIN_LCN_IDA = value
				Me.SendPropertyChanged("MAIN_LCN_IDA")
				Me.OnMAIN_LCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY3", DbType:="NVarChar(MAX)")>  _
	Public Property CATEGORY3() As String
		Get
			Return Me._CATEGORY3
		End Get
		Set
			If (String.Equals(Me._CATEGORY3, value) = false) Then
				Me.OnCATEGORY3Changing(value)
				Me.SendPropertyChanging
				Me._CATEGORY3 = value
				Me.SendPropertyChanged("CATEGORY3")
				Me.OnCATEGORY3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CATEGORY4", DbType:="NVarChar(MAX)")>  _
	Public Property CATEGORY4() As String
		Get
			Return Me._CATEGORY4
		End Get
		Set
			If (String.Equals(Me._CATEGORY4, value) = false) Then
				Me.OnCATEGORY4Changing(value)
				Me.SendPropertyChanging
				Me._CATEGORY4 = value
				Me.SendPropertyChanged("CATEGORY4")
				Me.OnCATEGORY4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRASAD_INFECTION", DbType:="NVarChar(MAX)")>  _
	Public Property PRASAD_INFECTION() As String
		Get
			Return Me._PRASAD_INFECTION
		End Get
		Set
			If (String.Equals(Me._PRASAD_INFECTION, value) = false) Then
				Me.OnPRASAD_INFECTIONChanging(value)
				Me.SendPropertyChanging
				Me._PRASAD_INFECTION = value
				Me.SendPropertyChanged("PRASAD_INFECTION")
				Me.OnPRASAD_INFECTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXTRACT", DbType:="NVarChar(MAX)")>  _
	Public Property EXTRACT() As String
		Get
			Return Me._EXTRACT
		End Get
		Set
			If (String.Equals(Me._EXTRACT, value) = false) Then
				Me.OnEXTRACTChanging(value)
				Me.SendPropertyChanging
				Me._EXTRACT = value
				Me.SendPropertyChanged("EXTRACT")
				Me.OnEXTRACTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OINTMENTS_CREAMS", DbType:="NVarChar(MAX)")>  _
	Public Property OINTMENTS_CREAMS() As String
		Get
			Return Me._OINTMENTS_CREAMS
		End Get
		Set
			If (String.Equals(Me._OINTMENTS_CREAMS, value) = false) Then
				Me.OnOINTMENTS_CREAMSChanging(value)
				Me.SendPropertyChanging
				Me._OINTMENTS_CREAMS = value
				Me.SendPropertyChanged("OINTMENTS_CREAMS")
				Me.OnOINTMENTS_CREAMSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIOLOGICAL", DbType:="NVarChar(MAX)")>  _
	Public Property BIOLOGICAL() As String
		Get
			Return Me._BIOLOGICAL
		End Get
		Set
			If (String.Equals(Me._BIOLOGICAL, value) = false) Then
				Me.OnBIOLOGICALChanging(value)
				Me.SendPropertyChanging
				Me._BIOLOGICAL = value
				Me.SendPropertyChanged("BIOLOGICAL")
				Me.OnBIOLOGICALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHARMACEUTICAL_CHEMICALS", DbType:="NVarChar(MAX)")>  _
	Public Property PHARMACEUTICAL_CHEMICALS() As String
		Get
			Return Me._PHARMACEUTICAL_CHEMICALS
		End Get
		Set
			If (String.Equals(Me._PHARMACEUTICAL_CHEMICALS, value) = false) Then
				Me.OnPHARMACEUTICAL_CHEMICALSChanging(value)
				Me.SendPropertyChanging
				Me._PHARMACEUTICAL_CHEMICALS = value
				Me.SendPropertyChanged("PHARMACEUTICAL_CHEMICALS")
				Me.OnPHARMACEUTICAL_CHEMICALSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER() As String
		Get
			Return Me._OTHER
		End Get
		Set
			If (String.Equals(Me._OTHER, value) = false) Then
				Me.OnOTHERChanging(value)
				Me.SendPropertyChanging
				Me._OTHER = value
				Me.SendPropertyChanged("OTHER")
				Me.OnOTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TABLET_CAPSULE", DbType:="NVarChar(MAX)")>  _
	Public Property TABLET_CAPSULE() As String
		Get
			Return Me._TABLET_CAPSULE
		End Get
		Set
			If (String.Equals(Me._TABLET_CAPSULE, value) = false) Then
				Me.OnTABLET_CAPSULEChanging(value)
				Me.SendPropertyChanging
				Me._TABLET_CAPSULE = value
				Me.SendPropertyChanged("TABLET_CAPSULE")
				Me.OnTABLET_CAPSULEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_MANUAL", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_MANUAL() As String
		Get
			Return Me._RCVNO_MANUAL
		End Get
		Set
			If (String.Equals(Me._RCVNO_MANUAL, value) = false) Then
				Me.OnRCVNO_MANUALChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_MANUAL = value
				Me.SendPropertyChanged("RCVNO_MANUAL")
				Me.OnRCVNO_MANUALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO_MANUAL", DbType:="NVarChar(MAX)")>  _
	Public Property LCNNO_MANUAL() As String
		Get
			Return Me._LCNNO_MANUAL
		End Get
		Set
			If (String.Equals(Me._LCNNO_MANUAL, value) = false) Then
				Me.OnLCNNO_MANUALChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO_MANUAL = value
				Me.SendPropertyChanged("LCNNO_MANUAL")
				Me.OnLCNNO_MANUALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPORARY_RCVNO", DbType:="NVarChar(MAX)")>  _
	Public Property TEMPORARY_RCVNO() As String
		Get
			Return Me._TEMPORARY_RCVNO
		End Get
		Set
			If (String.Equals(Me._TEMPORARY_RCVNO, value) = false) Then
				Me.OnTEMPORARY_RCVNOChanging(value)
				Me.SendPropertyChanging
				Me._TEMPORARY_RCVNO = value
				Me.SendPropertyChanged("TEMPORARY_RCVNO")
				Me.OnTEMPORARY_RCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPLATE_ID", DbType:="Int")>  _
	Public Property TEMPLATE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TEMPLATE_ID
		End Get
		Set
			If (Me._TEMPLATE_ID.Equals(value) = false) Then
				Me.OnTEMPLATE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TEMPLATE_ID = value
				Me.SendPropertyChanged("TEMPLATE_ID")
				Me.OnTEMPLATE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvr_id", DbType:="Int")>  _
	Public Property rcvr_id() As System.Nullable(Of Integer)
		Get
			Return Me._rcvr_id
		End Get
		Set
			If (Me._rcvr_id.Equals(value) = false) Then
				Me.Onrcvr_idChanging(value)
				Me.SendPropertyChanging
				Me._rcvr_id = value
				Me.SendPropertyChanged("rcvr_id")
				Me.Onrcvr_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref_no", DbType:="NVarChar(50)")>  _
	Public Property ref_no() As String
		Get
			Return Me._ref_no
		End Get
		Set
			If (String.Equals(Me._ref_no, value) = false) Then
				Me.Onref_noChanging(value)
				Me.SendPropertyChanging
				Me._ref_no = value
				Me.SendPropertyChanged("ref_no")
				Me.Onref_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcv_citizen_id", DbType:="NVarChar(50)")>  _
	Public Property rcv_citizen_id() As String
		Get
			Return Me._rcv_citizen_id
		End Get
		Set
			If (String.Equals(Me._rcv_citizen_id, value) = false) Then
				Me.Onrcv_citizen_idChanging(value)
				Me.SendPropertyChanging
				Me._rcv_citizen_id = value
				Me.SendPropertyChanged("rcv_citizen_id")
				Me.Onrcv_citizen_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIRST_APP_DATE", DbType:="DateTime")>  _
	Public Property FIRST_APP_DATE() As System.Nullable(Of Date)
		Get
			Return Me._FIRST_APP_DATE
		End Get
		Set
			If (Me._FIRST_APP_DATE.Equals(value) = false) Then
				Me.OnFIRST_APP_DATEChanging(value)
				Me.SendPropertyChanging
				Me._FIRST_APP_DATE = value
				Me.SendPropertyChanged("FIRST_APP_DATE")
				Me.OnFIRST_APP_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expdate", DbType:="DateTime")>  _
	Public Property expdate() As System.Nullable(Of Date)
		Get
			Return Me._expdate
		End Get
		Set
			If (Me._expdate.Equals(value) = false) Then
				Me.OnexpdateChanging(value)
				Me.SendPropertyChanging
				Me._expdate = value
				Me.SendPropertyChanged("expdate")
				Me.OnexpdateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drrqt")>  _
Partial Public Class drrqt
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rcvno As String
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _docno As String
	
	Private _pvnabbr As String
	
	Private _lpvncd As String
	
	Private _lcntpcd As String
	
	Private _lcnno As String
	
	Private _lcnsid As String
	
	Private _lcnscd As String
	
	Private _lctnmcd As String
	
	Private _lctcd As String
	
	Private _thadrgnm As String
	
	Private _engdrgnm As String
	
	Private _potency As String
	
	Private _ctgcd As String
	
	Private _kindcd As String
	
	Private _ndrgtp As String
	
	Private _accttp As String
	
	Private _classcd As String
	
	Private _dsgcd As String
	
	Private _packcd As String
	
	Private _rsbstfcd As String
	
	Private _drgexpst As String
	
	Private _drgbiost As String
	
	Private _drgnewst As String
	
	Private _fdano As String
	
	Private _cnsdcd As String
	
	Private _cnsddate As System.Nullable(Of Date)
	
	Private _appdate As System.Nullable(Of Date)
	
	Private _cscd As String
	
	Private _lcnabbr As String
	
	Private _rgtdrgtpcd As String
	
	Private _rgtno As String
	
	Private _jpctpcd As String
	
	Private _rqttpcd As String
	
	Private _cndno As String
	
	Private _feepayst As String
	
	Private _dvcd As String
	
	Private _feetpcd As String
	
	Private _feeno As String
	
	Private _chngdrgtpcd As String
	
	Private _lstfcd As String
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _REMARK As String
	
	Private _FK_LCN_IDA As System.Nullable(Of Integer)
	
	Private _FK_REGIS As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _CTZNO As String
	
	Private _REMARK1 As String
	
	Private _IDENTIFY As String
	
	Private _DRUG_STRENGTH As String
	
	Private _PROCESS_ID As String
	
	Private _FK_DRRQT As System.Nullable(Of Integer)
	
	Private _TABEAN_TYPE As String
	
	Private _CHK_LCN_SUBTYPE1 As String
	
	Private _CHK_LCN_SUBTYPE2 As String
	
	Private _CHK_LCN_SUBTYPE3 As String
	
	Private _EXTEND_DATE As System.Nullable(Of Date)
	
	Private _FK_DOSAGE_FORM As String
	
	Private _FIRST_APP_DATE As System.Nullable(Of Date)
	
	Private _CONSIDER_DATE As System.Nullable(Of Date)
	
	Private _FK_STAFF_OFFER_IDA As String
	
	Private _drgtpcd_rcv As String
	
	Private _STAFF_APP_IDENTIFY As String
	
	Private _REGIST_TYPE As String
	
	Private _R_NO As String
	
	Private _C_NO As String
	
	Private _A_NO As String
	
	Private _YOR8_FK_IDA As String
	
	Private _TYPE_REQUEST_ID As String
	
	Private _AMOUNT As System.Nullable(Of Decimal)
	
	Private _AMOUNT_CAL As System.Nullable(Of Decimal)
	
	Private _DRUG_STYLE As String
	
	Private _UNIT_NORMAL As String
	
	Private _UNIT_BIO As String
	
	Private _DRUG_PACKING As String
	
	Private _DRUG_COLOR As String
	
	Private _TABEAN_TYPE1 As String
	
	Private _TABEAN_TYPE2 As String
	
	Private _STAFF_RCV_IDENTIFY As String
	
	Private _PACKAGE_DETAIL As String
	
	Private _FK_TRANSFER As String
	
	Private _TRANSFER_TYPE As String
	
	Private _SIGN_NAME As String
	
	Private _SIGN_IDENTIFY As String
	
	Private _pvnabbr2 As String
	
	Private _USE_PVNABBR2 As String
	
	Private _expdate As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OndocnoChanging(value As String)
    End Sub
    Partial Private Sub OndocnoChanged()
    End Sub
    Partial Private Sub OnpvnabbrChanging(value As String)
    End Sub
    Partial Private Sub OnpvnabbrChanged()
    End Sub
    Partial Private Sub OnlpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnlpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As String)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As String)
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnlctnmcdChanging(value As String)
    End Sub
    Partial Private Sub OnlctnmcdChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As String)
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnthadrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadrgnmChanged()
    End Sub
    Partial Private Sub OnengdrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgnmChanged()
    End Sub
    Partial Private Sub OnpotencyChanging(value As String)
    End Sub
    Partial Private Sub OnpotencyChanged()
    End Sub
    Partial Private Sub OnctgcdChanging(value As String)
    End Sub
    Partial Private Sub OnctgcdChanged()
    End Sub
    Partial Private Sub OnkindcdChanging(value As String)
    End Sub
    Partial Private Sub OnkindcdChanged()
    End Sub
    Partial Private Sub OnndrgtpChanging(value As String)
    End Sub
    Partial Private Sub OnndrgtpChanged()
    End Sub
    Partial Private Sub OnaccttpChanging(value As String)
    End Sub
    Partial Private Sub OnaccttpChanged()
    End Sub
    Partial Private Sub OnclasscdChanging(value As String)
    End Sub
    Partial Private Sub OnclasscdChanged()
    End Sub
    Partial Private Sub OndsgcdChanging(value As String)
    End Sub
    Partial Private Sub OndsgcdChanged()
    End Sub
    Partial Private Sub OnpackcdChanging(value As String)
    End Sub
    Partial Private Sub OnpackcdChanged()
    End Sub
    Partial Private Sub OnrsbstfcdChanging(value As String)
    End Sub
    Partial Private Sub OnrsbstfcdChanged()
    End Sub
    Partial Private Sub OndrgexpstChanging(value As String)
    End Sub
    Partial Private Sub OndrgexpstChanged()
    End Sub
    Partial Private Sub OndrgbiostChanging(value As String)
    End Sub
    Partial Private Sub OndrgbiostChanged()
    End Sub
    Partial Private Sub OndrgnewstChanging(value As String)
    End Sub
    Partial Private Sub OndrgnewstChanged()
    End Sub
    Partial Private Sub OnfdanoChanging(value As String)
    End Sub
    Partial Private Sub OnfdanoChanged()
    End Sub
    Partial Private Sub OncnsdcdChanging(value As String)
    End Sub
    Partial Private Sub OncnsdcdChanged()
    End Sub
    Partial Private Sub OncnsddateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncnsddateChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OncscdChanging(value As String)
    End Sub
    Partial Private Sub OncscdChanged()
    End Sub
    Partial Private Sub OnlcnabbrChanging(value As String)
    End Sub
    Partial Private Sub OnlcnabbrChanged()
    End Sub
    Partial Private Sub OnrgtdrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgtdrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnjpctpcdChanging(value As String)
    End Sub
    Partial Private Sub OnjpctpcdChanged()
    End Sub
    Partial Private Sub OnrqttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrqttpcdChanged()
    End Sub
    Partial Private Sub OncndnoChanging(value As String)
    End Sub
    Partial Private Sub OncndnoChanged()
    End Sub
    Partial Private Sub OnfeepaystChanging(value As String)
    End Sub
    Partial Private Sub OnfeepaystChanged()
    End Sub
    Partial Private Sub OndvcdChanging(value As String)
    End Sub
    Partial Private Sub OndvcdChanged()
    End Sub
    Partial Private Sub OnfeetpcdChanging(value As String)
    End Sub
    Partial Private Sub OnfeetpcdChanged()
    End Sub
    Partial Private Sub OnfeenoChanging(value As String)
    End Sub
    Partial Private Sub OnfeenoChanged()
    End Sub
    Partial Private Sub OnchngdrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OnchngdrgtpcdChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As String)
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnFK_LCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_LCN_IDAChanged()
    End Sub
    Partial Private Sub OnFK_REGISChanging(value As String)
    End Sub
    Partial Private Sub OnFK_REGISChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnCTZNOChanging(value As String)
    End Sub
    Partial Private Sub OnCTZNOChanged()
    End Sub
    Partial Private Sub OnREMARK1Changing(value As String)
    End Sub
    Partial Private Sub OnREMARK1Changed()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnDRUG_STRENGTHChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_STRENGTHChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnFK_DRRQTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_DRRQTChanged()
    End Sub
    Partial Private Sub OnTABEAN_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTABEAN_TYPEChanged()
    End Sub
    Partial Private Sub OnCHK_LCN_SUBTYPE1Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_LCN_SUBTYPE1Changed()
    End Sub
    Partial Private Sub OnCHK_LCN_SUBTYPE2Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_LCN_SUBTYPE2Changed()
    End Sub
    Partial Private Sub OnCHK_LCN_SUBTYPE3Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_LCN_SUBTYPE3Changed()
    End Sub
    Partial Private Sub OnEXTEND_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEXTEND_DATEChanged()
    End Sub
    Partial Private Sub OnFK_DOSAGE_FORMChanging(value As String)
    End Sub
    Partial Private Sub OnFK_DOSAGE_FORMChanged()
    End Sub
    Partial Private Sub OnFIRST_APP_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFIRST_APP_DATEChanged()
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanged()
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanged()
    End Sub
    Partial Private Sub Ondrgtpcd_rcvChanging(value As String)
    End Sub
    Partial Private Sub Ondrgtpcd_rcvChanged()
    End Sub
    Partial Private Sub OnSTAFF_APP_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_APP_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnREGIST_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnREGIST_TYPEChanged()
    End Sub
    Partial Private Sub OnR_NOChanging(value As String)
    End Sub
    Partial Private Sub OnR_NOChanged()
    End Sub
    Partial Private Sub OnC_NOChanging(value As String)
    End Sub
    Partial Private Sub OnC_NOChanged()
    End Sub
    Partial Private Sub OnA_NOChanging(value As String)
    End Sub
    Partial Private Sub OnA_NOChanged()
    End Sub
    Partial Private Sub OnYOR8_FK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnYOR8_FK_IDAChanged()
    End Sub
    Partial Private Sub OnTYPE_REQUEST_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_REQUEST_IDChanged()
    End Sub
    Partial Private Sub OnAMOUNTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAMOUNTChanged()
    End Sub
    Partial Private Sub OnAMOUNT_CALChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAMOUNT_CALChanged()
    End Sub
    Partial Private Sub OnDRUG_STYLEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_STYLEChanged()
    End Sub
    Partial Private Sub OnUNIT_NORMALChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_NORMALChanged()
    End Sub
    Partial Private Sub OnUNIT_BIOChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_BIOChanged()
    End Sub
    Partial Private Sub OnDRUG_PACKINGChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_PACKINGChanged()
    End Sub
    Partial Private Sub OnDRUG_COLORChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_COLORChanged()
    End Sub
    Partial Private Sub OnTABEAN_TYPE1Changing(value As String)
    End Sub
    Partial Private Sub OnTABEAN_TYPE1Changed()
    End Sub
    Partial Private Sub OnTABEAN_TYPE2Changing(value As String)
    End Sub
    Partial Private Sub OnTABEAN_TYPE2Changed()
    End Sub
    Partial Private Sub OnSTAFF_RCV_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_RCV_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnPACKAGE_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnPACKAGE_DETAILChanged()
    End Sub
    Partial Private Sub OnFK_TRANSFERChanging(value As String)
    End Sub
    Partial Private Sub OnFK_TRANSFERChanged()
    End Sub
    Partial Private Sub OnTRANSFER_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTRANSFER_TYPEChanged()
    End Sub
    Partial Private Sub OnSIGN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSIGN_NAMEChanged()
    End Sub
    Partial Private Sub OnSIGN_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnSIGN_IDENTIFYChanged()
    End Sub
    Partial Private Sub Onpvnabbr2Changing(value As String)
    End Sub
    Partial Private Sub Onpvnabbr2Changed()
    End Sub
    Partial Private Sub OnUSE_PVNABBR2Changing(value As String)
    End Sub
    Partial Private Sub OnUSE_PVNABBR2Changed()
    End Sub
    Partial Private Sub OnexpdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnexpdateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(MAX)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(MAX)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="Date")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_docno", DbType:="NVarChar(MAX)")>  _
	Public Property docno() As String
		Get
			Return Me._docno
		End Get
		Set
			If (String.Equals(Me._docno, value) = false) Then
				Me.OndocnoChanging(value)
				Me.SendPropertyChanging
				Me._docno = value
				Me.SendPropertyChanged("docno")
				Me.OndocnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnabbr", DbType:="NVarChar(MAX)")>  _
	Public Property pvnabbr() As String
		Get
			Return Me._pvnabbr
		End Get
		Set
			If (String.Equals(Me._pvnabbr, value) = false) Then
				Me.OnpvnabbrChanging(value)
				Me.SendPropertyChanging
				Me._pvnabbr = value
				Me.SendPropertyChanged("pvnabbr")
				Me.OnpvnabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lpvncd", DbType:="NVarChar(MAX)")>  _
	Public Property lpvncd() As String
		Get
			Return Me._lpvncd
		End Get
		Set
			If (String.Equals(Me._lpvncd, value) = false) Then
				Me.OnlpvncdChanging(value)
				Me.SendPropertyChanging
				Me._lpvncd = value
				Me.SendPropertyChanged("lpvncd")
				Me.OnlpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid() As String
		Get
			Return Me._lcnsid
		End Get
		Set
			If (String.Equals(Me._lcnsid, value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="NVarChar(MAX)")>  _
	Public Property lcnscd() As String
		Get
			Return Me._lcnscd
		End Get
		Set
			If (String.Equals(Me._lcnscd, value) = false) Then
				Me.OnlcnscdChanging(value)
				Me.SendPropertyChanging
				Me._lcnscd = value
				Me.SendPropertyChanged("lcnscd")
				Me.OnlcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmcd", DbType:="NVarChar(MAX)")>  _
	Public Property lctnmcd() As String
		Get
			Return Me._lctnmcd
		End Get
		Set
			If (String.Equals(Me._lctnmcd, value) = false) Then
				Me.OnlctnmcdChanging(value)
				Me.SendPropertyChanging
				Me._lctnmcd = value
				Me.SendPropertyChanged("lctnmcd")
				Me.OnlctnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="NVarChar(MAX)")>  _
	Public Property lctcd() As String
		Get
			Return Me._lctcd
		End Get
		Set
			If (String.Equals(Me._lctcd, value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadrgnm() As String
		Get
			Return Me._thadrgnm
		End Get
		Set
			If (String.Equals(Me._thadrgnm, value) = false) Then
				Me.OnthadrgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadrgnm = value
				Me.SendPropertyChanged("thadrgnm")
				Me.OnthadrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgnm() As String
		Get
			Return Me._engdrgnm
		End Get
		Set
			If (String.Equals(Me._engdrgnm, value) = false) Then
				Me.OnengdrgnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgnm = value
				Me.SendPropertyChanged("engdrgnm")
				Me.OnengdrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_potency", DbType:="NVarChar(MAX)")>  _
	Public Property potency() As String
		Get
			Return Me._potency
		End Get
		Set
			If (String.Equals(Me._potency, value) = false) Then
				Me.OnpotencyChanging(value)
				Me.SendPropertyChanging
				Me._potency = value
				Me.SendPropertyChanged("potency")
				Me.OnpotencyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctgcd", DbType:="NVarChar(MAX)")>  _
	Public Property ctgcd() As String
		Get
			Return Me._ctgcd
		End Get
		Set
			If (String.Equals(Me._ctgcd, value) = false) Then
				Me.OnctgcdChanging(value)
				Me.SendPropertyChanging
				Me._ctgcd = value
				Me.SendPropertyChanged("ctgcd")
				Me.OnctgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_kindcd", DbType:="NVarChar(MAX)")>  _
	Public Property kindcd() As String
		Get
			Return Me._kindcd
		End Get
		Set
			If (String.Equals(Me._kindcd, value) = false) Then
				Me.OnkindcdChanging(value)
				Me.SendPropertyChanging
				Me._kindcd = value
				Me.SendPropertyChanged("kindcd")
				Me.OnkindcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ndrgtp", DbType:="NVarChar(MAX)")>  _
	Public Property ndrgtp() As String
		Get
			Return Me._ndrgtp
		End Get
		Set
			If (String.Equals(Me._ndrgtp, value) = false) Then
				Me.OnndrgtpChanging(value)
				Me.SendPropertyChanging
				Me._ndrgtp = value
				Me.SendPropertyChanged("ndrgtp")
				Me.OnndrgtpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_accttp", DbType:="NVarChar(MAX)")>  _
	Public Property accttp() As String
		Get
			Return Me._accttp
		End Get
		Set
			If (String.Equals(Me._accttp, value) = false) Then
				Me.OnaccttpChanging(value)
				Me.SendPropertyChanging
				Me._accttp = value
				Me.SendPropertyChanged("accttp")
				Me.OnaccttpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_classcd", DbType:="NVarChar(MAX)")>  _
	Public Property classcd() As String
		Get
			Return Me._classcd
		End Get
		Set
			If (String.Equals(Me._classcd, value) = false) Then
				Me.OnclasscdChanging(value)
				Me.SendPropertyChanging
				Me._classcd = value
				Me.SendPropertyChanged("classcd")
				Me.OnclasscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsgcd", DbType:="NVarChar(MAX)")>  _
	Public Property dsgcd() As String
		Get
			Return Me._dsgcd
		End Get
		Set
			If (String.Equals(Me._dsgcd, value) = false) Then
				Me.OndsgcdChanging(value)
				Me.SendPropertyChanging
				Me._dsgcd = value
				Me.SendPropertyChanged("dsgcd")
				Me.OndsgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_packcd", DbType:="NVarChar(MAX)")>  _
	Public Property packcd() As String
		Get
			Return Me._packcd
		End Get
		Set
			If (String.Equals(Me._packcd, value) = false) Then
				Me.OnpackcdChanging(value)
				Me.SendPropertyChanging
				Me._packcd = value
				Me.SendPropertyChanged("packcd")
				Me.OnpackcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsbstfcd", DbType:="NVarChar(MAX)")>  _
	Public Property rsbstfcd() As String
		Get
			Return Me._rsbstfcd
		End Get
		Set
			If (String.Equals(Me._rsbstfcd, value) = false) Then
				Me.OnrsbstfcdChanging(value)
				Me.SendPropertyChanging
				Me._rsbstfcd = value
				Me.SendPropertyChanged("rsbstfcd")
				Me.OnrsbstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgexpst", DbType:="NVarChar(MAX)")>  _
	Public Property drgexpst() As String
		Get
			Return Me._drgexpst
		End Get
		Set
			If (String.Equals(Me._drgexpst, value) = false) Then
				Me.OndrgexpstChanging(value)
				Me.SendPropertyChanging
				Me._drgexpst = value
				Me.SendPropertyChanged("drgexpst")
				Me.OndrgexpstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgbiost", DbType:="NVarChar(MAX)")>  _
	Public Property drgbiost() As String
		Get
			Return Me._drgbiost
		End Get
		Set
			If (String.Equals(Me._drgbiost, value) = false) Then
				Me.OndrgbiostChanging(value)
				Me.SendPropertyChanging
				Me._drgbiost = value
				Me.SendPropertyChanged("drgbiost")
				Me.OndrgbiostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgnewst", DbType:="NVarChar(MAX)")>  _
	Public Property drgnewst() As String
		Get
			Return Me._drgnewst
		End Get
		Set
			If (String.Equals(Me._drgnewst, value) = false) Then
				Me.OndrgnewstChanging(value)
				Me.SendPropertyChanging
				Me._drgnewst = value
				Me.SendPropertyChanged("drgnewst")
				Me.OndrgnewstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fdano", DbType:="NVarChar(MAX)")>  _
	Public Property fdano() As String
		Get
			Return Me._fdano
		End Get
		Set
			If (String.Equals(Me._fdano, value) = false) Then
				Me.OnfdanoChanging(value)
				Me.SendPropertyChanging
				Me._fdano = value
				Me.SendPropertyChanged("fdano")
				Me.OnfdanoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnsdcd", DbType:="NVarChar(MAX)")>  _
	Public Property cnsdcd() As String
		Get
			Return Me._cnsdcd
		End Get
		Set
			If (String.Equals(Me._cnsdcd, value) = false) Then
				Me.OncnsdcdChanging(value)
				Me.SendPropertyChanging
				Me._cnsdcd = value
				Me.SendPropertyChanged("cnsdcd")
				Me.OncnsdcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnsddate", DbType:="Date")>  _
	Public Property cnsddate() As System.Nullable(Of Date)
		Get
			Return Me._cnsddate
		End Get
		Set
			If (Me._cnsddate.Equals(value) = false) Then
				Me.OncnsddateChanging(value)
				Me.SendPropertyChanging
				Me._cnsddate = value
				Me.SendPropertyChanged("cnsddate")
				Me.OncnsddateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="Date")>  _
	Public Property appdate() As System.Nullable(Of Date)
		Get
			Return Me._appdate
		End Get
		Set
			If (Me._appdate.Equals(value) = false) Then
				Me.OnappdateChanging(value)
				Me.SendPropertyChanging
				Me._appdate = value
				Me.SendPropertyChanged("appdate")
				Me.OnappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cscd", DbType:="NVarChar(MAX)")>  _
	Public Property cscd() As String
		Get
			Return Me._cscd
		End Get
		Set
			If (String.Equals(Me._cscd, value) = false) Then
				Me.OncscdChanging(value)
				Me.SendPropertyChanging
				Me._cscd = value
				Me.SendPropertyChanged("cscd")
				Me.OncscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnabbr", DbType:="NVarChar(MAX)")>  _
	Public Property lcnabbr() As String
		Get
			Return Me._lcnabbr
		End Get
		Set
			If (String.Equals(Me._lcnabbr, value) = false) Then
				Me.OnlcnabbrChanging(value)
				Me.SendPropertyChanging
				Me._lcnabbr = value
				Me.SendPropertyChanged("lcnabbr")
				Me.OnlcnabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtdrgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rgtdrgtpcd() As String
		Get
			Return Me._rgtdrgtpcd
		End Get
		Set
			If (String.Equals(Me._rgtdrgtpcd, value) = false) Then
				Me.OnrgtdrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgtdrgtpcd = value
				Me.SendPropertyChanged("rgtdrgtpcd")
				Me.OnrgtdrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(MAX)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jpctpcd", DbType:="NVarChar(MAX)")>  _
	Public Property jpctpcd() As String
		Get
			Return Me._jpctpcd
		End Get
		Set
			If (String.Equals(Me._jpctpcd, value) = false) Then
				Me.OnjpctpcdChanging(value)
				Me.SendPropertyChanging
				Me._jpctpcd = value
				Me.SendPropertyChanged("jpctpcd")
				Me.OnjpctpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rqttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rqttpcd() As String
		Get
			Return Me._rqttpcd
		End Get
		Set
			If (String.Equals(Me._rqttpcd, value) = false) Then
				Me.OnrqttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rqttpcd = value
				Me.SendPropertyChanged("rqttpcd")
				Me.OnrqttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cndno", DbType:="NVarChar(MAX)")>  _
	Public Property cndno() As String
		Get
			Return Me._cndno
		End Get
		Set
			If (String.Equals(Me._cndno, value) = false) Then
				Me.OncndnoChanging(value)
				Me.SendPropertyChanging
				Me._cndno = value
				Me.SendPropertyChanged("cndno")
				Me.OncndnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feepayst", DbType:="NVarChar(MAX)")>  _
	Public Property feepayst() As String
		Get
			Return Me._feepayst
		End Get
		Set
			If (String.Equals(Me._feepayst, value) = false) Then
				Me.OnfeepaystChanging(value)
				Me.SendPropertyChanging
				Me._feepayst = value
				Me.SendPropertyChanged("feepayst")
				Me.OnfeepaystChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvcd", DbType:="NVarChar(MAX)")>  _
	Public Property dvcd() As String
		Get
			Return Me._dvcd
		End Get
		Set
			If (String.Equals(Me._dvcd, value) = false) Then
				Me.OndvcdChanging(value)
				Me.SendPropertyChanging
				Me._dvcd = value
				Me.SendPropertyChanged("dvcd")
				Me.OndvcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feetpcd", DbType:="NVarChar(MAX)")>  _
	Public Property feetpcd() As String
		Get
			Return Me._feetpcd
		End Get
		Set
			If (String.Equals(Me._feetpcd, value) = false) Then
				Me.OnfeetpcdChanging(value)
				Me.SendPropertyChanging
				Me._feetpcd = value
				Me.SendPropertyChanged("feetpcd")
				Me.OnfeetpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_feeno", DbType:="NVarChar(MAX)")>  _
	Public Property feeno() As String
		Get
			Return Me._feeno
		End Get
		Set
			If (String.Equals(Me._feeno, value) = false) Then
				Me.OnfeenoChanging(value)
				Me.SendPropertyChanging
				Me._feeno = value
				Me.SendPropertyChanged("feeno")
				Me.OnfeenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngdrgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property chngdrgtpcd() As String
		Get
			Return Me._chngdrgtpcd
		End Get
		Set
			If (String.Equals(Me._chngdrgtpcd, value) = false) Then
				Me.OnchngdrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._chngdrgtpcd = value
				Me.SendPropertyChanged("chngdrgtpcd")
				Me.OnchngdrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="NVarChar(MAX)")>  _
	Public Property lstfcd() As String
		Get
			Return Me._lstfcd
		End Get
		Set
			If (String.Equals(Me._lstfcd, value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_LCN_IDA", DbType:="Int")>  _
	Public Property FK_LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_LCN_IDA
		End Get
		Set
			If (Me._FK_LCN_IDA.Equals(value) = false) Then
				Me.OnFK_LCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_LCN_IDA = value
				Me.SendPropertyChanged("FK_LCN_IDA")
				Me.OnFK_LCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_REGIS", DbType:="NVarChar(50)")>  _
	Public Property FK_REGIS() As String
		Get
			Return Me._FK_REGIS
		End Get
		Set
			If (String.Equals(Me._FK_REGIS, value) = false) Then
				Me.OnFK_REGISChanging(value)
				Me.SendPropertyChanging
				Me._FK_REGIS = value
				Me.SendPropertyChanged("FK_REGIS")
				Me.OnFK_REGISChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CTZNO", DbType:="NVarChar(MAX)")>  _
	Public Property CTZNO() As String
		Get
			Return Me._CTZNO
		End Get
		Set
			If (String.Equals(Me._CTZNO, value) = false) Then
				Me.OnCTZNOChanging(value)
				Me.SendPropertyChanging
				Me._CTZNO = value
				Me.SendPropertyChanged("CTZNO")
				Me.OnCTZNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK1", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK1() As String
		Get
			Return Me._REMARK1
		End Get
		Set
			If (String.Equals(Me._REMARK1, value) = false) Then
				Me.OnREMARK1Changing(value)
				Me.SendPropertyChanging
				Me._REMARK1 = value
				Me.SendPropertyChanged("REMARK1")
				Me.OnREMARK1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_STRENGTH", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_STRENGTH() As String
		Get
			Return Me._DRUG_STRENGTH
		End Get
		Set
			If (String.Equals(Me._DRUG_STRENGTH, value) = false) Then
				Me.OnDRUG_STRENGTHChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_STRENGTH = value
				Me.SendPropertyChanged("DRUG_STRENGTH")
				Me.OnDRUG_STRENGTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_DRRQT", DbType:="Int")>  _
	Public Property FK_DRRQT() As System.Nullable(Of Integer)
		Get
			Return Me._FK_DRRQT
		End Get
		Set
			If (Me._FK_DRRQT.Equals(value) = false) Then
				Me.OnFK_DRRQTChanging(value)
				Me.SendPropertyChanging
				Me._FK_DRRQT = value
				Me.SendPropertyChanged("FK_DRRQT")
				Me.OnFK_DRRQTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TABEAN_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TABEAN_TYPE() As String
		Get
			Return Me._TABEAN_TYPE
		End Get
		Set
			If (String.Equals(Me._TABEAN_TYPE, value) = false) Then
				Me.OnTABEAN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._TABEAN_TYPE = value
				Me.SendPropertyChanged("TABEAN_TYPE")
				Me.OnTABEAN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_LCN_SUBTYPE1", DbType:="NVarChar(50)")>  _
	Public Property CHK_LCN_SUBTYPE1() As String
		Get
			Return Me._CHK_LCN_SUBTYPE1
		End Get
		Set
			If (String.Equals(Me._CHK_LCN_SUBTYPE1, value) = false) Then
				Me.OnCHK_LCN_SUBTYPE1Changing(value)
				Me.SendPropertyChanging
				Me._CHK_LCN_SUBTYPE1 = value
				Me.SendPropertyChanged("CHK_LCN_SUBTYPE1")
				Me.OnCHK_LCN_SUBTYPE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_LCN_SUBTYPE2", DbType:="NVarChar(50)")>  _
	Public Property CHK_LCN_SUBTYPE2() As String
		Get
			Return Me._CHK_LCN_SUBTYPE2
		End Get
		Set
			If (String.Equals(Me._CHK_LCN_SUBTYPE2, value) = false) Then
				Me.OnCHK_LCN_SUBTYPE2Changing(value)
				Me.SendPropertyChanging
				Me._CHK_LCN_SUBTYPE2 = value
				Me.SendPropertyChanged("CHK_LCN_SUBTYPE2")
				Me.OnCHK_LCN_SUBTYPE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_LCN_SUBTYPE3", DbType:="NVarChar(50)")>  _
	Public Property CHK_LCN_SUBTYPE3() As String
		Get
			Return Me._CHK_LCN_SUBTYPE3
		End Get
		Set
			If (String.Equals(Me._CHK_LCN_SUBTYPE3, value) = false) Then
				Me.OnCHK_LCN_SUBTYPE3Changing(value)
				Me.SendPropertyChanging
				Me._CHK_LCN_SUBTYPE3 = value
				Me.SendPropertyChanged("CHK_LCN_SUBTYPE3")
				Me.OnCHK_LCN_SUBTYPE3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXTEND_DATE", DbType:="DateTime")>  _
	Public Property EXTEND_DATE() As System.Nullable(Of Date)
		Get
			Return Me._EXTEND_DATE
		End Get
		Set
			If (Me._EXTEND_DATE.Equals(value) = false) Then
				Me.OnEXTEND_DATEChanging(value)
				Me.SendPropertyChanging
				Me._EXTEND_DATE = value
				Me.SendPropertyChanged("EXTEND_DATE")
				Me.OnEXTEND_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_DOSAGE_FORM", DbType:="NVarChar(MAX)")>  _
	Public Property FK_DOSAGE_FORM() As String
		Get
			Return Me._FK_DOSAGE_FORM
		End Get
		Set
			If (String.Equals(Me._FK_DOSAGE_FORM, value) = false) Then
				Me.OnFK_DOSAGE_FORMChanging(value)
				Me.SendPropertyChanging
				Me._FK_DOSAGE_FORM = value
				Me.SendPropertyChanged("FK_DOSAGE_FORM")
				Me.OnFK_DOSAGE_FORMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIRST_APP_DATE", DbType:="DateTime")>  _
	Public Property FIRST_APP_DATE() As System.Nullable(Of Date)
		Get
			Return Me._FIRST_APP_DATE
		End Get
		Set
			If (Me._FIRST_APP_DATE.Equals(value) = false) Then
				Me.OnFIRST_APP_DATEChanging(value)
				Me.SendPropertyChanging
				Me._FIRST_APP_DATE = value
				Me.SendPropertyChanged("FIRST_APP_DATE")
				Me.OnFIRST_APP_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSIDER_DATE", DbType:="DateTime")>  _
	Public Property CONSIDER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONSIDER_DATE
		End Get
		Set
			If (Me._CONSIDER_DATE.Equals(value) = false) Then
				Me.OnCONSIDER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONSIDER_DATE = value
				Me.SendPropertyChanged("CONSIDER_DATE")
				Me.OnCONSIDER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_STAFF_OFFER_IDA", DbType:="NVarChar(50)")>  _
	Public Property FK_STAFF_OFFER_IDA() As String
		Get
			Return Me._FK_STAFF_OFFER_IDA
		End Get
		Set
			If (String.Equals(Me._FK_STAFF_OFFER_IDA, value) = false) Then
				Me.OnFK_STAFF_OFFER_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_STAFF_OFFER_IDA = value
				Me.SendPropertyChanged("FK_STAFF_OFFER_IDA")
				Me.OnFK_STAFF_OFFER_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd_rcv", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd_rcv() As String
		Get
			Return Me._drgtpcd_rcv
		End Get
		Set
			If (String.Equals(Me._drgtpcd_rcv, value) = false) Then
				Me.Ondrgtpcd_rcvChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd_rcv = value
				Me.SendPropertyChanged("drgtpcd_rcv")
				Me.Ondrgtpcd_rcvChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_APP_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_APP_IDENTIFY() As String
		Get
			Return Me._STAFF_APP_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._STAFF_APP_IDENTIFY, value) = false) Then
				Me.OnSTAFF_APP_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_APP_IDENTIFY = value
				Me.SendPropertyChanged("STAFF_APP_IDENTIFY")
				Me.OnSTAFF_APP_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGIST_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property REGIST_TYPE() As String
		Get
			Return Me._REGIST_TYPE
		End Get
		Set
			If (String.Equals(Me._REGIST_TYPE, value) = false) Then
				Me.OnREGIST_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._REGIST_TYPE = value
				Me.SendPropertyChanged("REGIST_TYPE")
				Me.OnREGIST_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_R_NO", DbType:="NVarChar(MAX)")>  _
	Public Property R_NO() As String
		Get
			Return Me._R_NO
		End Get
		Set
			If (String.Equals(Me._R_NO, value) = false) Then
				Me.OnR_NOChanging(value)
				Me.SendPropertyChanging
				Me._R_NO = value
				Me.SendPropertyChanged("R_NO")
				Me.OnR_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C_NO", DbType:="NVarChar(MAX)")>  _
	Public Property C_NO() As String
		Get
			Return Me._C_NO
		End Get
		Set
			If (String.Equals(Me._C_NO, value) = false) Then
				Me.OnC_NOChanging(value)
				Me.SendPropertyChanging
				Me._C_NO = value
				Me.SendPropertyChanged("C_NO")
				Me.OnC_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A_NO", DbType:="NVarChar(MAX)")>  _
	Public Property A_NO() As String
		Get
			Return Me._A_NO
		End Get
		Set
			If (String.Equals(Me._A_NO, value) = false) Then
				Me.OnA_NOChanging(value)
				Me.SendPropertyChanging
				Me._A_NO = value
				Me.SendPropertyChanged("A_NO")
				Me.OnA_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YOR8_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property YOR8_FK_IDA() As String
		Get
			Return Me._YOR8_FK_IDA
		End Get
		Set
			If (String.Equals(Me._YOR8_FK_IDA, value) = false) Then
				Me.OnYOR8_FK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._YOR8_FK_IDA = value
				Me.SendPropertyChanged("YOR8_FK_IDA")
				Me.OnYOR8_FK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_REQUEST_ID", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_REQUEST_ID() As String
		Get
			Return Me._TYPE_REQUEST_ID
		End Get
		Set
			If (String.Equals(Me._TYPE_REQUEST_ID, value) = false) Then
				Me.OnTYPE_REQUEST_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_REQUEST_ID = value
				Me.SendPropertyChanged("TYPE_REQUEST_ID")
				Me.OnTYPE_REQUEST_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT", DbType:="Money")>  _
	Public Property AMOUNT() As System.Nullable(Of Decimal)
		Get
			Return Me._AMOUNT
		End Get
		Set
			If (Me._AMOUNT.Equals(value) = false) Then
				Me.OnAMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT = value
				Me.SendPropertyChanged("AMOUNT")
				Me.OnAMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT_CAL", DbType:="Money")>  _
	Public Property AMOUNT_CAL() As System.Nullable(Of Decimal)
		Get
			Return Me._AMOUNT_CAL
		End Get
		Set
			If (Me._AMOUNT_CAL.Equals(value) = false) Then
				Me.OnAMOUNT_CALChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT_CAL = value
				Me.SendPropertyChanged("AMOUNT_CAL")
				Me.OnAMOUNT_CALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_STYLE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_STYLE() As String
		Get
			Return Me._DRUG_STYLE
		End Get
		Set
			If (String.Equals(Me._DRUG_STYLE, value) = false) Then
				Me.OnDRUG_STYLEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_STYLE = value
				Me.SendPropertyChanged("DRUG_STYLE")
				Me.OnDRUG_STYLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_NORMAL", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_NORMAL() As String
		Get
			Return Me._UNIT_NORMAL
		End Get
		Set
			If (String.Equals(Me._UNIT_NORMAL, value) = false) Then
				Me.OnUNIT_NORMALChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_NORMAL = value
				Me.SendPropertyChanged("UNIT_NORMAL")
				Me.OnUNIT_NORMALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_BIO", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_BIO() As String
		Get
			Return Me._UNIT_BIO
		End Get
		Set
			If (String.Equals(Me._UNIT_BIO, value) = false) Then
				Me.OnUNIT_BIOChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_BIO = value
				Me.SendPropertyChanged("UNIT_BIO")
				Me.OnUNIT_BIOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_PACKING", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_PACKING() As String
		Get
			Return Me._DRUG_PACKING
		End Get
		Set
			If (String.Equals(Me._DRUG_PACKING, value) = false) Then
				Me.OnDRUG_PACKINGChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_PACKING = value
				Me.SendPropertyChanged("DRUG_PACKING")
				Me.OnDRUG_PACKINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_COLOR", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_COLOR() As String
		Get
			Return Me._DRUG_COLOR
		End Get
		Set
			If (String.Equals(Me._DRUG_COLOR, value) = false) Then
				Me.OnDRUG_COLORChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_COLOR = value
				Me.SendPropertyChanged("DRUG_COLOR")
				Me.OnDRUG_COLORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TABEAN_TYPE1", DbType:="NVarChar(50)")>  _
	Public Property TABEAN_TYPE1() As String
		Get
			Return Me._TABEAN_TYPE1
		End Get
		Set
			If (String.Equals(Me._TABEAN_TYPE1, value) = false) Then
				Me.OnTABEAN_TYPE1Changing(value)
				Me.SendPropertyChanging
				Me._TABEAN_TYPE1 = value
				Me.SendPropertyChanged("TABEAN_TYPE1")
				Me.OnTABEAN_TYPE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TABEAN_TYPE2", DbType:="NVarChar(50)")>  _
	Public Property TABEAN_TYPE2() As String
		Get
			Return Me._TABEAN_TYPE2
		End Get
		Set
			If (String.Equals(Me._TABEAN_TYPE2, value) = false) Then
				Me.OnTABEAN_TYPE2Changing(value)
				Me.SendPropertyChanging
				Me._TABEAN_TYPE2 = value
				Me.SendPropertyChanged("TABEAN_TYPE2")
				Me.OnTABEAN_TYPE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_RCV_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_RCV_IDENTIFY() As String
		Get
			Return Me._STAFF_RCV_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._STAFF_RCV_IDENTIFY, value) = false) Then
				Me.OnSTAFF_RCV_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_RCV_IDENTIFY = value
				Me.SendPropertyChanged("STAFF_RCV_IDENTIFY")
				Me.OnSTAFF_RCV_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACKAGE_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property PACKAGE_DETAIL() As String
		Get
			Return Me._PACKAGE_DETAIL
		End Get
		Set
			If (String.Equals(Me._PACKAGE_DETAIL, value) = false) Then
				Me.OnPACKAGE_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._PACKAGE_DETAIL = value
				Me.SendPropertyChanged("PACKAGE_DETAIL")
				Me.OnPACKAGE_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_TRANSFER", DbType:="NVarChar(MAX)")>  _
	Public Property FK_TRANSFER() As String
		Get
			Return Me._FK_TRANSFER
		End Get
		Set
			If (String.Equals(Me._FK_TRANSFER, value) = false) Then
				Me.OnFK_TRANSFERChanging(value)
				Me.SendPropertyChanging
				Me._FK_TRANSFER = value
				Me.SendPropertyChanged("FK_TRANSFER")
				Me.OnFK_TRANSFERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSFER_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property TRANSFER_TYPE() As String
		Get
			Return Me._TRANSFER_TYPE
		End Get
		Set
			If (String.Equals(Me._TRANSFER_TYPE, value) = false) Then
				Me.OnTRANSFER_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._TRANSFER_TYPE = value
				Me.SendPropertyChanged("TRANSFER_TYPE")
				Me.OnTRANSFER_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIGN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SIGN_NAME() As String
		Get
			Return Me._SIGN_NAME
		End Get
		Set
			If (String.Equals(Me._SIGN_NAME, value) = false) Then
				Me.OnSIGN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SIGN_NAME = value
				Me.SendPropertyChanged("SIGN_NAME")
				Me.OnSIGN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIGN_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property SIGN_IDENTIFY() As String
		Get
			Return Me._SIGN_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._SIGN_IDENTIFY, value) = false) Then
				Me.OnSIGN_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._SIGN_IDENTIFY = value
				Me.SendPropertyChanged("SIGN_IDENTIFY")
				Me.OnSIGN_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnabbr2", DbType:="NVarChar(MAX)")>  _
	Public Property pvnabbr2() As String
		Get
			Return Me._pvnabbr2
		End Get
		Set
			If (String.Equals(Me._pvnabbr2, value) = false) Then
				Me.Onpvnabbr2Changing(value)
				Me.SendPropertyChanging
				Me._pvnabbr2 = value
				Me.SendPropertyChanged("pvnabbr2")
				Me.Onpvnabbr2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USE_PVNABBR2", DbType:="NVarChar(MAX)")>  _
	Public Property USE_PVNABBR2() As String
		Get
			Return Me._USE_PVNABBR2
		End Get
		Set
			If (String.Equals(Me._USE_PVNABBR2, value) = false) Then
				Me.OnUSE_PVNABBR2Changing(value)
				Me.SendPropertyChanging
				Me._USE_PVNABBR2 = value
				Me.SendPropertyChanged("USE_PVNABBR2")
				Me.OnUSE_PVNABBR2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expdate", DbType:="DateTime")>  _
	Public Property expdate() As System.Nullable(Of Date)
		Get
			Return Me._expdate
		End Get
		Set
			If (Me._expdate.Equals(value) = false) Then
				Me.OnexpdateChanging(value)
				Me.SendPropertyChanging
				Me._expdate = value
				Me.SendPropertyChanged("expdate")
				Me.OnexpdateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drrgt")>  _
Partial Public Class drrgt
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _pvnabbr As String
	
	Private _lcnabbr As String
	
	Private _lpvncd As String
	
	Private _lcntpcd As String
	
	Private _lcnno As String
	
	Private _lcnsid As String
	
	Private _lcnscd As String
	
	Private _lctnmcd As String
	
	Private _lctcd As String
	
	Private _thadrgnm As String
	
	Private _engdrgnm As String
	
	Private _potency As String
	
	Private _ctgcd As String
	
	Private _kindcd As String
	
	Private _ndrgtp As String
	
	Private _accttp As String
	
	Private _classcd As String
	
	Private _dsgcd As String
	
	Private _packcd As String
	
	Private _drgexpst As String
	
	Private _drgbiost As String
	
	Private _drgnewst As String
	
	Private _frtappdate As System.Nullable(Of Date)
	
	Private _appdate As System.Nullable(Of Date)
	
	Private _fdano As String
	
	Private _cnccd As String
	
	Private _cnccscd As String
	
	Private _cncdate As System.Nullable(Of Date)
	
	Private _lcnpayst As String
	
	Private _rcptpayst As String
	
	Private _amphrcd As String
	
	Private _chngwtcd As String
	
	Private _appvno As String
	
	Private _rcvno As String
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _lstfcd As String
	
	Private _lmdfdate As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _CTZNO As String
	
	Private _REMARK As String
	
	Private _IDENTIFY As String
	
	Private _DRUG_STRENGTH As String
	
	Private _PROCESS_ID As String
	
	Private _FK_LCN_IDA As System.Nullable(Of Integer)
	
	Private _FK_DRRQT As System.Nullable(Of Integer)
	
	Private _TABEAN_TYPE As String
	
	Private _CHK_LCN_SUBTYPE1 As String
	
	Private _CHK_LCN_SUBTYPE2 As String
	
	Private _CHK_LCN_SUBTYPE3 As String
	
	Private _EXTEND_DATE As System.Nullable(Of Date)
	
	Private _FK_DOSAGE_FORM As String
	
	Private _FIRST_APP_DATE As System.Nullable(Of Date)
	
	Private _CONSIDER_DATE As System.Nullable(Of Date)
	
	Private _FK_STAFF_OFFER_IDA As String
	
	Private _drgtpcd_rcv As String
	
	Private _STAFF_APP_IDENTIFY As String
	
	Private _REGIST_TYPE As String
	
	Private _REGIST_SEND_STATUS As String
	
	Private _TYPE_REQUEST_ID As String
	
	Private _UNIT_NORMAL As String
	
	Private _UNIT_BIO As String
	
	Private _DRUG_STYLE As String
	
	Private _DRUG_PACKING As String
	
	Private _DRUG_COLOR As String
	
	Private _TABEAN_TYPE1 As String
	
	Private _TABEAN_TYPE2 As String
	
	Private _PACKAGE_DETAIL As String
	
	Private _FK_TRANSFER As String
	
	Private _TRANSFER_TYPE As String
	
	Private _SIGN_NAME As String
	
	Private _SIGN_IDENTIFY As String
	
	Private _cncnote As String
	
	Private _pvnabbr2 As String
	
	Private _USE_PVNABBR2 As String
	
	Private _expdate As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnpvnabbrChanging(value As String)
    End Sub
    Partial Private Sub OnpvnabbrChanged()
    End Sub
    Partial Private Sub OnlcnabbrChanging(value As String)
    End Sub
    Partial Private Sub OnlcnabbrChanged()
    End Sub
    Partial Private Sub OnlpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnlpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As String)
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As String)
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnlctnmcdChanging(value As String)
    End Sub
    Partial Private Sub OnlctnmcdChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As String)
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnthadrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadrgnmChanged()
    End Sub
    Partial Private Sub OnengdrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgnmChanged()
    End Sub
    Partial Private Sub OnpotencyChanging(value As String)
    End Sub
    Partial Private Sub OnpotencyChanged()
    End Sub
    Partial Private Sub OnctgcdChanging(value As String)
    End Sub
    Partial Private Sub OnctgcdChanged()
    End Sub
    Partial Private Sub OnkindcdChanging(value As String)
    End Sub
    Partial Private Sub OnkindcdChanged()
    End Sub
    Partial Private Sub OnndrgtpChanging(value As String)
    End Sub
    Partial Private Sub OnndrgtpChanged()
    End Sub
    Partial Private Sub OnaccttpChanging(value As String)
    End Sub
    Partial Private Sub OnaccttpChanged()
    End Sub
    Partial Private Sub OnclasscdChanging(value As String)
    End Sub
    Partial Private Sub OnclasscdChanged()
    End Sub
    Partial Private Sub OndsgcdChanging(value As String)
    End Sub
    Partial Private Sub OndsgcdChanged()
    End Sub
    Partial Private Sub OnpackcdChanging(value As String)
    End Sub
    Partial Private Sub OnpackcdChanged()
    End Sub
    Partial Private Sub OndrgexpstChanging(value As String)
    End Sub
    Partial Private Sub OndrgexpstChanged()
    End Sub
    Partial Private Sub OndrgbiostChanging(value As String)
    End Sub
    Partial Private Sub OndrgbiostChanged()
    End Sub
    Partial Private Sub OndrgnewstChanging(value As String)
    End Sub
    Partial Private Sub OndrgnewstChanged()
    End Sub
    Partial Private Sub OnfrtappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfrtappdateChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OnfdanoChanging(value As String)
    End Sub
    Partial Private Sub OnfdanoChanged()
    End Sub
    Partial Private Sub OncnccdChanging(value As String)
    End Sub
    Partial Private Sub OncnccdChanged()
    End Sub
    Partial Private Sub OncnccscdChanging(value As String)
    End Sub
    Partial Private Sub OncnccscdChanged()
    End Sub
    Partial Private Sub OncncdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncncdateChanged()
    End Sub
    Partial Private Sub OnlcnpaystChanging(value As String)
    End Sub
    Partial Private Sub OnlcnpaystChanged()
    End Sub
    Partial Private Sub OnrcptpaystChanging(value As String)
    End Sub
    Partial Private Sub OnrcptpaystChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As String)
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As String)
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnappvnoChanging(value As String)
    End Sub
    Partial Private Sub OnappvnoChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As String)
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As String)
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnCTZNOChanging(value As String)
    End Sub
    Partial Private Sub OnCTZNOChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnDRUG_STRENGTHChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_STRENGTHChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnFK_LCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_LCN_IDAChanged()
    End Sub
    Partial Private Sub OnFK_DRRQTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_DRRQTChanged()
    End Sub
    Partial Private Sub OnTABEAN_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTABEAN_TYPEChanged()
    End Sub
    Partial Private Sub OnCHK_LCN_SUBTYPE1Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_LCN_SUBTYPE1Changed()
    End Sub
    Partial Private Sub OnCHK_LCN_SUBTYPE2Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_LCN_SUBTYPE2Changed()
    End Sub
    Partial Private Sub OnCHK_LCN_SUBTYPE3Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_LCN_SUBTYPE3Changed()
    End Sub
    Partial Private Sub OnEXTEND_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEXTEND_DATEChanged()
    End Sub
    Partial Private Sub OnFK_DOSAGE_FORMChanging(value As String)
    End Sub
    Partial Private Sub OnFK_DOSAGE_FORMChanged()
    End Sub
    Partial Private Sub OnFIRST_APP_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFIRST_APP_DATEChanged()
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanged()
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanged()
    End Sub
    Partial Private Sub Ondrgtpcd_rcvChanging(value As String)
    End Sub
    Partial Private Sub Ondrgtpcd_rcvChanged()
    End Sub
    Partial Private Sub OnSTAFF_APP_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_APP_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnREGIST_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnREGIST_TYPEChanged()
    End Sub
    Partial Private Sub OnREGIST_SEND_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnREGIST_SEND_STATUSChanged()
    End Sub
    Partial Private Sub OnTYPE_REQUEST_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_REQUEST_IDChanged()
    End Sub
    Partial Private Sub OnUNIT_NORMALChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_NORMALChanged()
    End Sub
    Partial Private Sub OnUNIT_BIOChanging(value As String)
    End Sub
    Partial Private Sub OnUNIT_BIOChanged()
    End Sub
    Partial Private Sub OnDRUG_STYLEChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_STYLEChanged()
    End Sub
    Partial Private Sub OnDRUG_PACKINGChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_PACKINGChanged()
    End Sub
    Partial Private Sub OnDRUG_COLORChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_COLORChanged()
    End Sub
    Partial Private Sub OnTABEAN_TYPE1Changing(value As String)
    End Sub
    Partial Private Sub OnTABEAN_TYPE1Changed()
    End Sub
    Partial Private Sub OnTABEAN_TYPE2Changing(value As String)
    End Sub
    Partial Private Sub OnTABEAN_TYPE2Changed()
    End Sub
    Partial Private Sub OnPACKAGE_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnPACKAGE_DETAILChanged()
    End Sub
    Partial Private Sub OnFK_TRANSFERChanging(value As String)
    End Sub
    Partial Private Sub OnFK_TRANSFERChanged()
    End Sub
    Partial Private Sub OnTRANSFER_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTRANSFER_TYPEChanged()
    End Sub
    Partial Private Sub OnSIGN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSIGN_NAMEChanged()
    End Sub
    Partial Private Sub OnSIGN_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnSIGN_IDENTIFYChanged()
    End Sub
    Partial Private Sub OncncnoteChanging(value As String)
    End Sub
    Partial Private Sub OncncnoteChanged()
    End Sub
    Partial Private Sub Onpvnabbr2Changing(value As String)
    End Sub
    Partial Private Sub Onpvnabbr2Changed()
    End Sub
    Partial Private Sub OnUSE_PVNABBR2Changing(value As String)
    End Sub
    Partial Private Sub OnUSE_PVNABBR2Changed()
    End Sub
    Partial Private Sub OnexpdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnexpdateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(MAX)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(MAX)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(MAX)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnabbr", DbType:="NVarChar(MAX)")>  _
	Public Property pvnabbr() As String
		Get
			Return Me._pvnabbr
		End Get
		Set
			If (String.Equals(Me._pvnabbr, value) = false) Then
				Me.OnpvnabbrChanging(value)
				Me.SendPropertyChanging
				Me._pvnabbr = value
				Me.SendPropertyChanged("pvnabbr")
				Me.OnpvnabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnabbr", DbType:="NVarChar(MAX)")>  _
	Public Property lcnabbr() As String
		Get
			Return Me._lcnabbr
		End Get
		Set
			If (String.Equals(Me._lcnabbr, value) = false) Then
				Me.OnlcnabbrChanging(value)
				Me.SendPropertyChanging
				Me._lcnabbr = value
				Me.SendPropertyChanged("lcnabbr")
				Me.OnlcnabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lpvncd", DbType:="NVarChar(MAX)")>  _
	Public Property lpvncd() As String
		Get
			Return Me._lpvncd
		End Get
		Set
			If (String.Equals(Me._lpvncd, value) = false) Then
				Me.OnlpvncdChanging(value)
				Me.SendPropertyChanging
				Me._lpvncd = value
				Me.SendPropertyChanged("lpvncd")
				Me.OnlpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="NVarChar(MAX)")>  _
	Public Property lcnsid() As String
		Get
			Return Me._lcnsid
		End Get
		Set
			If (String.Equals(Me._lcnsid, value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="NVarChar(MAX)")>  _
	Public Property lcnscd() As String
		Get
			Return Me._lcnscd
		End Get
		Set
			If (String.Equals(Me._lcnscd, value) = false) Then
				Me.OnlcnscdChanging(value)
				Me.SendPropertyChanging
				Me._lcnscd = value
				Me.SendPropertyChanged("lcnscd")
				Me.OnlcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmcd", DbType:="NVarChar(MAX)")>  _
	Public Property lctnmcd() As String
		Get
			Return Me._lctnmcd
		End Get
		Set
			If (String.Equals(Me._lctnmcd, value) = false) Then
				Me.OnlctnmcdChanging(value)
				Me.SendPropertyChanging
				Me._lctnmcd = value
				Me.SendPropertyChanged("lctnmcd")
				Me.OnlctnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="NVarChar(MAX)")>  _
	Public Property lctcd() As String
		Get
			Return Me._lctcd
		End Get
		Set
			If (String.Equals(Me._lctcd, value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadrgnm() As String
		Get
			Return Me._thadrgnm
		End Get
		Set
			If (String.Equals(Me._thadrgnm, value) = false) Then
				Me.OnthadrgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadrgnm = value
				Me.SendPropertyChanged("thadrgnm")
				Me.OnthadrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgnm() As String
		Get
			Return Me._engdrgnm
		End Get
		Set
			If (String.Equals(Me._engdrgnm, value) = false) Then
				Me.OnengdrgnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgnm = value
				Me.SendPropertyChanged("engdrgnm")
				Me.OnengdrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_potency", DbType:="NVarChar(MAX)")>  _
	Public Property potency() As String
		Get
			Return Me._potency
		End Get
		Set
			If (String.Equals(Me._potency, value) = false) Then
				Me.OnpotencyChanging(value)
				Me.SendPropertyChanging
				Me._potency = value
				Me.SendPropertyChanged("potency")
				Me.OnpotencyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctgcd", DbType:="NVarChar(MAX)")>  _
	Public Property ctgcd() As String
		Get
			Return Me._ctgcd
		End Get
		Set
			If (String.Equals(Me._ctgcd, value) = false) Then
				Me.OnctgcdChanging(value)
				Me.SendPropertyChanging
				Me._ctgcd = value
				Me.SendPropertyChanged("ctgcd")
				Me.OnctgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_kindcd", DbType:="NVarChar(MAX)")>  _
	Public Property kindcd() As String
		Get
			Return Me._kindcd
		End Get
		Set
			If (String.Equals(Me._kindcd, value) = false) Then
				Me.OnkindcdChanging(value)
				Me.SendPropertyChanging
				Me._kindcd = value
				Me.SendPropertyChanged("kindcd")
				Me.OnkindcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ndrgtp", DbType:="NVarChar(MAX)")>  _
	Public Property ndrgtp() As String
		Get
			Return Me._ndrgtp
		End Get
		Set
			If (String.Equals(Me._ndrgtp, value) = false) Then
				Me.OnndrgtpChanging(value)
				Me.SendPropertyChanging
				Me._ndrgtp = value
				Me.SendPropertyChanged("ndrgtp")
				Me.OnndrgtpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_accttp", DbType:="NVarChar(MAX)")>  _
	Public Property accttp() As String
		Get
			Return Me._accttp
		End Get
		Set
			If (String.Equals(Me._accttp, value) = false) Then
				Me.OnaccttpChanging(value)
				Me.SendPropertyChanging
				Me._accttp = value
				Me.SendPropertyChanged("accttp")
				Me.OnaccttpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_classcd", DbType:="NVarChar(MAX)")>  _
	Public Property classcd() As String
		Get
			Return Me._classcd
		End Get
		Set
			If (String.Equals(Me._classcd, value) = false) Then
				Me.OnclasscdChanging(value)
				Me.SendPropertyChanging
				Me._classcd = value
				Me.SendPropertyChanged("classcd")
				Me.OnclasscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsgcd", DbType:="NVarChar(MAX)")>  _
	Public Property dsgcd() As String
		Get
			Return Me._dsgcd
		End Get
		Set
			If (String.Equals(Me._dsgcd, value) = false) Then
				Me.OndsgcdChanging(value)
				Me.SendPropertyChanging
				Me._dsgcd = value
				Me.SendPropertyChanged("dsgcd")
				Me.OndsgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_packcd", DbType:="NVarChar(MAX)")>  _
	Public Property packcd() As String
		Get
			Return Me._packcd
		End Get
		Set
			If (String.Equals(Me._packcd, value) = false) Then
				Me.OnpackcdChanging(value)
				Me.SendPropertyChanging
				Me._packcd = value
				Me.SendPropertyChanged("packcd")
				Me.OnpackcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgexpst", DbType:="NVarChar(MAX)")>  _
	Public Property drgexpst() As String
		Get
			Return Me._drgexpst
		End Get
		Set
			If (String.Equals(Me._drgexpst, value) = false) Then
				Me.OndrgexpstChanging(value)
				Me.SendPropertyChanging
				Me._drgexpst = value
				Me.SendPropertyChanged("drgexpst")
				Me.OndrgexpstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgbiost", DbType:="NVarChar(MAX)")>  _
	Public Property drgbiost() As String
		Get
			Return Me._drgbiost
		End Get
		Set
			If (String.Equals(Me._drgbiost, value) = false) Then
				Me.OndrgbiostChanging(value)
				Me.SendPropertyChanging
				Me._drgbiost = value
				Me.SendPropertyChanged("drgbiost")
				Me.OndrgbiostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgnewst", DbType:="NVarChar(MAX)")>  _
	Public Property drgnewst() As String
		Get
			Return Me._drgnewst
		End Get
		Set
			If (String.Equals(Me._drgnewst, value) = false) Then
				Me.OndrgnewstChanging(value)
				Me.SendPropertyChanging
				Me._drgnewst = value
				Me.SendPropertyChanged("drgnewst")
				Me.OndrgnewstChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frtappdate", DbType:="Date")>  _
	Public Property frtappdate() As System.Nullable(Of Date)
		Get
			Return Me._frtappdate
		End Get
		Set
			If (Me._frtappdate.Equals(value) = false) Then
				Me.OnfrtappdateChanging(value)
				Me.SendPropertyChanging
				Me._frtappdate = value
				Me.SendPropertyChanged("frtappdate")
				Me.OnfrtappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="Date")>  _
	Public Property appdate() As System.Nullable(Of Date)
		Get
			Return Me._appdate
		End Get
		Set
			If (Me._appdate.Equals(value) = false) Then
				Me.OnappdateChanging(value)
				Me.SendPropertyChanging
				Me._appdate = value
				Me.SendPropertyChanged("appdate")
				Me.OnappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fdano", DbType:="NVarChar(MAX)")>  _
	Public Property fdano() As String
		Get
			Return Me._fdano
		End Get
		Set
			If (String.Equals(Me._fdano, value) = false) Then
				Me.OnfdanoChanging(value)
				Me.SendPropertyChanging
				Me._fdano = value
				Me.SendPropertyChanged("fdano")
				Me.OnfdanoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccd", DbType:="NVarChar(MAX)")>  _
	Public Property cnccd() As String
		Get
			Return Me._cnccd
		End Get
		Set
			If (String.Equals(Me._cnccd, value) = false) Then
				Me.OncnccdChanging(value)
				Me.SendPropertyChanging
				Me._cnccd = value
				Me.SendPropertyChanged("cnccd")
				Me.OncnccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccscd", DbType:="NVarChar(MAX)")>  _
	Public Property cnccscd() As String
		Get
			Return Me._cnccscd
		End Get
		Set
			If (String.Equals(Me._cnccscd, value) = false) Then
				Me.OncnccscdChanging(value)
				Me.SendPropertyChanging
				Me._cnccscd = value
				Me.SendPropertyChanged("cnccscd")
				Me.OncnccscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncdate", DbType:="Date")>  _
	Public Property cncdate() As System.Nullable(Of Date)
		Get
			Return Me._cncdate
		End Get
		Set
			If (Me._cncdate.Equals(value) = false) Then
				Me.OncncdateChanging(value)
				Me.SendPropertyChanging
				Me._cncdate = value
				Me.SendPropertyChanged("cncdate")
				Me.OncncdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnpayst", DbType:="NVarChar(MAX)")>  _
	Public Property lcnpayst() As String
		Get
			Return Me._lcnpayst
		End Get
		Set
			If (String.Equals(Me._lcnpayst, value) = false) Then
				Me.OnlcnpaystChanging(value)
				Me.SendPropertyChanging
				Me._lcnpayst = value
				Me.SendPropertyChanged("lcnpayst")
				Me.OnlcnpaystChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcptpayst", DbType:="NVarChar(MAX)")>  _
	Public Property rcptpayst() As String
		Get
			Return Me._rcptpayst
		End Get
		Set
			If (String.Equals(Me._rcptpayst, value) = false) Then
				Me.OnrcptpaystChanging(value)
				Me.SendPropertyChanging
				Me._rcptpayst = value
				Me.SendPropertyChanged("rcptpayst")
				Me.OnrcptpaystChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="NVarChar(MAX)")>  _
	Public Property amphrcd() As String
		Get
			Return Me._amphrcd
		End Get
		Set
			If (String.Equals(Me._amphrcd, value) = false) Then
				Me.OnamphrcdChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd = value
				Me.SendPropertyChanged("amphrcd")
				Me.OnamphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="NVarChar(MAX)")>  _
	Public Property chngwtcd() As String
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (String.Equals(Me._chngwtcd, value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appvno", DbType:="NVarChar(MAX)")>  _
	Public Property appvno() As String
		Get
			Return Me._appvno
		End Get
		Set
			If (String.Equals(Me._appvno, value) = false) Then
				Me.OnappvnoChanging(value)
				Me.SendPropertyChanging
				Me._appvno = value
				Me.SendPropertyChanged("appvno")
				Me.OnappvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(MAX)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="Date")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="NVarChar(MAX)")>  _
	Public Property lstfcd() As String
		Get
			Return Me._lstfcd
		End Get
		Set
			If (String.Equals(Me._lstfcd, value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="NVarChar(MAX)")>  _
	Public Property lmdfdate() As String
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (String.Equals(Me._lmdfdate, value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CTZNO", DbType:="NVarChar(MAX)")>  _
	Public Property CTZNO() As String
		Get
			Return Me._CTZNO
		End Get
		Set
			If (String.Equals(Me._CTZNO, value) = false) Then
				Me.OnCTZNOChanging(value)
				Me.SendPropertyChanging
				Me._CTZNO = value
				Me.SendPropertyChanged("CTZNO")
				Me.OnCTZNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_STRENGTH", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_STRENGTH() As String
		Get
			Return Me._DRUG_STRENGTH
		End Get
		Set
			If (String.Equals(Me._DRUG_STRENGTH, value) = false) Then
				Me.OnDRUG_STRENGTHChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_STRENGTH = value
				Me.SendPropertyChanged("DRUG_STRENGTH")
				Me.OnDRUG_STRENGTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_LCN_IDA", DbType:="Int")>  _
	Public Property FK_LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_LCN_IDA
		End Get
		Set
			If (Me._FK_LCN_IDA.Equals(value) = false) Then
				Me.OnFK_LCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_LCN_IDA = value
				Me.SendPropertyChanged("FK_LCN_IDA")
				Me.OnFK_LCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_DRRQT", DbType:="Int")>  _
	Public Property FK_DRRQT() As System.Nullable(Of Integer)
		Get
			Return Me._FK_DRRQT
		End Get
		Set
			If (Me._FK_DRRQT.Equals(value) = false) Then
				Me.OnFK_DRRQTChanging(value)
				Me.SendPropertyChanging
				Me._FK_DRRQT = value
				Me.SendPropertyChanged("FK_DRRQT")
				Me.OnFK_DRRQTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TABEAN_TYPE", DbType:="NVarChar(50)")>  _
	Public Property TABEAN_TYPE() As String
		Get
			Return Me._TABEAN_TYPE
		End Get
		Set
			If (String.Equals(Me._TABEAN_TYPE, value) = false) Then
				Me.OnTABEAN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._TABEAN_TYPE = value
				Me.SendPropertyChanged("TABEAN_TYPE")
				Me.OnTABEAN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_LCN_SUBTYPE1", DbType:="NVarChar(50)")>  _
	Public Property CHK_LCN_SUBTYPE1() As String
		Get
			Return Me._CHK_LCN_SUBTYPE1
		End Get
		Set
			If (String.Equals(Me._CHK_LCN_SUBTYPE1, value) = false) Then
				Me.OnCHK_LCN_SUBTYPE1Changing(value)
				Me.SendPropertyChanging
				Me._CHK_LCN_SUBTYPE1 = value
				Me.SendPropertyChanged("CHK_LCN_SUBTYPE1")
				Me.OnCHK_LCN_SUBTYPE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_LCN_SUBTYPE2", DbType:="NVarChar(50)")>  _
	Public Property CHK_LCN_SUBTYPE2() As String
		Get
			Return Me._CHK_LCN_SUBTYPE2
		End Get
		Set
			If (String.Equals(Me._CHK_LCN_SUBTYPE2, value) = false) Then
				Me.OnCHK_LCN_SUBTYPE2Changing(value)
				Me.SendPropertyChanging
				Me._CHK_LCN_SUBTYPE2 = value
				Me.SendPropertyChanged("CHK_LCN_SUBTYPE2")
				Me.OnCHK_LCN_SUBTYPE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_LCN_SUBTYPE3", DbType:="NVarChar(50)")>  _
	Public Property CHK_LCN_SUBTYPE3() As String
		Get
			Return Me._CHK_LCN_SUBTYPE3
		End Get
		Set
			If (String.Equals(Me._CHK_LCN_SUBTYPE3, value) = false) Then
				Me.OnCHK_LCN_SUBTYPE3Changing(value)
				Me.SendPropertyChanging
				Me._CHK_LCN_SUBTYPE3 = value
				Me.SendPropertyChanged("CHK_LCN_SUBTYPE3")
				Me.OnCHK_LCN_SUBTYPE3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXTEND_DATE", DbType:="DateTime")>  _
	Public Property EXTEND_DATE() As System.Nullable(Of Date)
		Get
			Return Me._EXTEND_DATE
		End Get
		Set
			If (Me._EXTEND_DATE.Equals(value) = false) Then
				Me.OnEXTEND_DATEChanging(value)
				Me.SendPropertyChanging
				Me._EXTEND_DATE = value
				Me.SendPropertyChanged("EXTEND_DATE")
				Me.OnEXTEND_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_DOSAGE_FORM", DbType:="NVarChar(MAX)")>  _
	Public Property FK_DOSAGE_FORM() As String
		Get
			Return Me._FK_DOSAGE_FORM
		End Get
		Set
			If (String.Equals(Me._FK_DOSAGE_FORM, value) = false) Then
				Me.OnFK_DOSAGE_FORMChanging(value)
				Me.SendPropertyChanging
				Me._FK_DOSAGE_FORM = value
				Me.SendPropertyChanged("FK_DOSAGE_FORM")
				Me.OnFK_DOSAGE_FORMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FIRST_APP_DATE", DbType:="DateTime")>  _
	Public Property FIRST_APP_DATE() As System.Nullable(Of Date)
		Get
			Return Me._FIRST_APP_DATE
		End Get
		Set
			If (Me._FIRST_APP_DATE.Equals(value) = false) Then
				Me.OnFIRST_APP_DATEChanging(value)
				Me.SendPropertyChanging
				Me._FIRST_APP_DATE = value
				Me.SendPropertyChanged("FIRST_APP_DATE")
				Me.OnFIRST_APP_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSIDER_DATE", DbType:="DateTime")>  _
	Public Property CONSIDER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONSIDER_DATE
		End Get
		Set
			If (Me._CONSIDER_DATE.Equals(value) = false) Then
				Me.OnCONSIDER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONSIDER_DATE = value
				Me.SendPropertyChanged("CONSIDER_DATE")
				Me.OnCONSIDER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_STAFF_OFFER_IDA", DbType:="NVarChar(50)")>  _
	Public Property FK_STAFF_OFFER_IDA() As String
		Get
			Return Me._FK_STAFF_OFFER_IDA
		End Get
		Set
			If (String.Equals(Me._FK_STAFF_OFFER_IDA, value) = false) Then
				Me.OnFK_STAFF_OFFER_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_STAFF_OFFER_IDA = value
				Me.SendPropertyChanged("FK_STAFF_OFFER_IDA")
				Me.OnFK_STAFF_OFFER_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd_rcv", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd_rcv() As String
		Get
			Return Me._drgtpcd_rcv
		End Get
		Set
			If (String.Equals(Me._drgtpcd_rcv, value) = false) Then
				Me.Ondrgtpcd_rcvChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd_rcv = value
				Me.SendPropertyChanged("drgtpcd_rcv")
				Me.Ondrgtpcd_rcvChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_APP_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_APP_IDENTIFY() As String
		Get
			Return Me._STAFF_APP_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._STAFF_APP_IDENTIFY, value) = false) Then
				Me.OnSTAFF_APP_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_APP_IDENTIFY = value
				Me.SendPropertyChanged("STAFF_APP_IDENTIFY")
				Me.OnSTAFF_APP_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGIST_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property REGIST_TYPE() As String
		Get
			Return Me._REGIST_TYPE
		End Get
		Set
			If (String.Equals(Me._REGIST_TYPE, value) = false) Then
				Me.OnREGIST_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._REGIST_TYPE = value
				Me.SendPropertyChanged("REGIST_TYPE")
				Me.OnREGIST_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGIST_SEND_STATUS", DbType:="NVarChar(MAX)")>  _
	Public Property REGIST_SEND_STATUS() As String
		Get
			Return Me._REGIST_SEND_STATUS
		End Get
		Set
			If (String.Equals(Me._REGIST_SEND_STATUS, value) = false) Then
				Me.OnREGIST_SEND_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._REGIST_SEND_STATUS = value
				Me.SendPropertyChanged("REGIST_SEND_STATUS")
				Me.OnREGIST_SEND_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_REQUEST_ID", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_REQUEST_ID() As String
		Get
			Return Me._TYPE_REQUEST_ID
		End Get
		Set
			If (String.Equals(Me._TYPE_REQUEST_ID, value) = false) Then
				Me.OnTYPE_REQUEST_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_REQUEST_ID = value
				Me.SendPropertyChanged("TYPE_REQUEST_ID")
				Me.OnTYPE_REQUEST_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_NORMAL", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_NORMAL() As String
		Get
			Return Me._UNIT_NORMAL
		End Get
		Set
			If (String.Equals(Me._UNIT_NORMAL, value) = false) Then
				Me.OnUNIT_NORMALChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_NORMAL = value
				Me.SendPropertyChanged("UNIT_NORMAL")
				Me.OnUNIT_NORMALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIT_BIO", DbType:="NVarChar(MAX)")>  _
	Public Property UNIT_BIO() As String
		Get
			Return Me._UNIT_BIO
		End Get
		Set
			If (String.Equals(Me._UNIT_BIO, value) = false) Then
				Me.OnUNIT_BIOChanging(value)
				Me.SendPropertyChanging
				Me._UNIT_BIO = value
				Me.SendPropertyChanged("UNIT_BIO")
				Me.OnUNIT_BIOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_STYLE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_STYLE() As String
		Get
			Return Me._DRUG_STYLE
		End Get
		Set
			If (String.Equals(Me._DRUG_STYLE, value) = false) Then
				Me.OnDRUG_STYLEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_STYLE = value
				Me.SendPropertyChanged("DRUG_STYLE")
				Me.OnDRUG_STYLEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_PACKING", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_PACKING() As String
		Get
			Return Me._DRUG_PACKING
		End Get
		Set
			If (String.Equals(Me._DRUG_PACKING, value) = false) Then
				Me.OnDRUG_PACKINGChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_PACKING = value
				Me.SendPropertyChanged("DRUG_PACKING")
				Me.OnDRUG_PACKINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_COLOR", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_COLOR() As String
		Get
			Return Me._DRUG_COLOR
		End Get
		Set
			If (String.Equals(Me._DRUG_COLOR, value) = false) Then
				Me.OnDRUG_COLORChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_COLOR = value
				Me.SendPropertyChanged("DRUG_COLOR")
				Me.OnDRUG_COLORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TABEAN_TYPE1", DbType:="NVarChar(50)")>  _
	Public Property TABEAN_TYPE1() As String
		Get
			Return Me._TABEAN_TYPE1
		End Get
		Set
			If (String.Equals(Me._TABEAN_TYPE1, value) = false) Then
				Me.OnTABEAN_TYPE1Changing(value)
				Me.SendPropertyChanging
				Me._TABEAN_TYPE1 = value
				Me.SendPropertyChanged("TABEAN_TYPE1")
				Me.OnTABEAN_TYPE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TABEAN_TYPE2", DbType:="NVarChar(50)")>  _
	Public Property TABEAN_TYPE2() As String
		Get
			Return Me._TABEAN_TYPE2
		End Get
		Set
			If (String.Equals(Me._TABEAN_TYPE2, value) = false) Then
				Me.OnTABEAN_TYPE2Changing(value)
				Me.SendPropertyChanging
				Me._TABEAN_TYPE2 = value
				Me.SendPropertyChanged("TABEAN_TYPE2")
				Me.OnTABEAN_TYPE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACKAGE_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property PACKAGE_DETAIL() As String
		Get
			Return Me._PACKAGE_DETAIL
		End Get
		Set
			If (String.Equals(Me._PACKAGE_DETAIL, value) = false) Then
				Me.OnPACKAGE_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._PACKAGE_DETAIL = value
				Me.SendPropertyChanged("PACKAGE_DETAIL")
				Me.OnPACKAGE_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_TRANSFER", DbType:="NVarChar(MAX)")>  _
	Public Property FK_TRANSFER() As String
		Get
			Return Me._FK_TRANSFER
		End Get
		Set
			If (String.Equals(Me._FK_TRANSFER, value) = false) Then
				Me.OnFK_TRANSFERChanging(value)
				Me.SendPropertyChanging
				Me._FK_TRANSFER = value
				Me.SendPropertyChanged("FK_TRANSFER")
				Me.OnFK_TRANSFERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSFER_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property TRANSFER_TYPE() As String
		Get
			Return Me._TRANSFER_TYPE
		End Get
		Set
			If (String.Equals(Me._TRANSFER_TYPE, value) = false) Then
				Me.OnTRANSFER_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._TRANSFER_TYPE = value
				Me.SendPropertyChanged("TRANSFER_TYPE")
				Me.OnTRANSFER_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIGN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SIGN_NAME() As String
		Get
			Return Me._SIGN_NAME
		End Get
		Set
			If (String.Equals(Me._SIGN_NAME, value) = false) Then
				Me.OnSIGN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SIGN_NAME = value
				Me.SendPropertyChanged("SIGN_NAME")
				Me.OnSIGN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIGN_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property SIGN_IDENTIFY() As String
		Get
			Return Me._SIGN_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._SIGN_IDENTIFY, value) = false) Then
				Me.OnSIGN_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._SIGN_IDENTIFY = value
				Me.SendPropertyChanged("SIGN_IDENTIFY")
				Me.OnSIGN_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncnote", DbType:="NVarChar(MAX)")>  _
	Public Property cncnote() As String
		Get
			Return Me._cncnote
		End Get
		Set
			If (String.Equals(Me._cncnote, value) = false) Then
				Me.OncncnoteChanging(value)
				Me.SendPropertyChanging
				Me._cncnote = value
				Me.SendPropertyChanged("cncnote")
				Me.OncncnoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnabbr2", DbType:="NVarChar(MAX)")>  _
	Public Property pvnabbr2() As String
		Get
			Return Me._pvnabbr2
		End Get
		Set
			If (String.Equals(Me._pvnabbr2, value) = false) Then
				Me.Onpvnabbr2Changing(value)
				Me.SendPropertyChanging
				Me._pvnabbr2 = value
				Me.SendPropertyChanged("pvnabbr2")
				Me.Onpvnabbr2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USE_PVNABBR2", DbType:="NVarChar(MAX)")>  _
	Public Property USE_PVNABBR2() As String
		Get
			Return Me._USE_PVNABBR2
		End Get
		Set
			If (String.Equals(Me._USE_PVNABBR2, value) = false) Then
				Me.OnUSE_PVNABBR2Changing(value)
				Me.SendPropertyChanging
				Me._USE_PVNABBR2 = value
				Me.SendPropertyChanged("USE_PVNABBR2")
				Me.OnUSE_PVNABBR2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expdate", DbType:="DateTime")>  _
	Public Property expdate() As System.Nullable(Of Date)
		Get
			Return Me._expdate
		End Get
		Set
			If (Me._expdate.Equals(value) = false) Then
				Me.OnexpdateChanging(value)
				Me.SendPropertyChanging
				Me._expdate = value
				Me.SendPropertyChanged("expdate")
				Me.OnexpdateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[15_TAMRAP_ATC]")>  _
Partial Public Class _15_TAMRAP_ATC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _atccd As String
	
	Private _atcname As String
	
	Private _atcd_IDA As System.Nullable(Of Integer)
	
	Private _TAMRAP_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnatccdChanging(value As String)
    End Sub
    Partial Private Sub OnatccdChanged()
    End Sub
    Partial Private Sub OnatcnameChanging(value As String)
    End Sub
    Partial Private Sub OnatcnameChanged()
    End Sub
    Partial Private Sub Onatcd_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onatcd_IDAChanged()
    End Sub
    Partial Private Sub OnTAMRAP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAMRAP_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_atccd", DbType:="NVarChar(50)")>  _
	Public Property atccd() As String
		Get
			Return Me._atccd
		End Get
		Set
			If (String.Equals(Me._atccd, value) = false) Then
				Me.OnatccdChanging(value)
				Me.SendPropertyChanging
				Me._atccd = value
				Me.SendPropertyChanged("atccd")
				Me.OnatccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_atcname", DbType:="NVarChar(MAX)")>  _
	Public Property atcname() As String
		Get
			Return Me._atcname
		End Get
		Set
			If (String.Equals(Me._atcname, value) = false) Then
				Me.OnatcnameChanging(value)
				Me.SendPropertyChanging
				Me._atcname = value
				Me.SendPropertyChanged("atcname")
				Me.OnatcnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_atcd_IDA", DbType:="Int")>  _
	Public Property atcd_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._atcd_IDA
		End Get
		Set
			If (Me._atcd_IDA.Equals(value) = false) Then
				Me.Onatcd_IDAChanging(value)
				Me.SendPropertyChanging
				Me._atcd_IDA = value
				Me.SendPropertyChanged("atcd_IDA")
				Me.Onatcd_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAMRAP_ID", DbType:="Int")>  _
	Public Property TAMRAP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TAMRAP_ID
		End Get
		Set
			If (Me._TAMRAP_ID.Equals(value) = false) Then
				Me.OnTAMRAP_IDChanging(value)
				Me.SendPropertyChanging
				Me._TAMRAP_ID = value
				Me.SendPropertyChanged("TAMRAP_ID")
				Me.OnTAMRAP_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[15_TAMRAP_DTL]")>  _
Partial Public Class _15_TAMRAP_DTL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TAMRAP_ID As System.Nullable(Of Integer)
	
	Private _dtl As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTAMRAP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAMRAP_IDChanged()
    End Sub
    Partial Private Sub OndtlChanging(value As String)
    End Sub
    Partial Private Sub OndtlChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAMRAP_ID", DbType:="Int")>  _
	Public Property TAMRAP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TAMRAP_ID
		End Get
		Set
			If (Me._TAMRAP_ID.Equals(value) = false) Then
				Me.OnTAMRAP_IDChanging(value)
				Me.SendPropertyChanging
				Me._TAMRAP_ID = value
				Me.SendPropertyChanged("TAMRAP_ID")
				Me.OnTAMRAP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtl", DbType:="NVarChar(MAX)")>  _
	Public Property dtl() As String
		Get
			Return Me._dtl
		End Get
		Set
			If (String.Equals(Me._dtl, value) = false) Then
				Me.OndtlChanging(value)
				Me.SendPropertyChanging
				Me._dtl = value
				Me.SendPropertyChanged("dtl")
				Me.OndtlChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[15_TAMRAP_EACH]")>  _
Partial Public Class _15_TAMRAP_EACH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _EACH_AMOUNT As String
	
	Private _sunitcd As System.Nullable(Of Integer)
	
	Private _TAMRAP_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnEACH_AMOUNTChanging(value As String)
    End Sub
    Partial Private Sub OnEACH_AMOUNTChanged()
    End Sub
    Partial Private Sub OnsunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsunitcdChanged()
    End Sub
    Partial Private Sub OnTAMRAP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAMRAP_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EACH_AMOUNT", DbType:="NVarChar(MAX)")>  _
	Public Property EACH_AMOUNT() As String
		Get
			Return Me._EACH_AMOUNT
		End Get
		Set
			If (String.Equals(Me._EACH_AMOUNT, value) = false) Then
				Me.OnEACH_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._EACH_AMOUNT = value
				Me.SendPropertyChanged("EACH_AMOUNT")
				Me.OnEACH_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitcd", DbType:="Int")>  _
	Public Property sunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sunitcd
		End Get
		Set
			If (Me._sunitcd.Equals(value) = false) Then
				Me.OnsunitcdChanging(value)
				Me.SendPropertyChanging
				Me._sunitcd = value
				Me.SendPropertyChanged("sunitcd")
				Me.OnsunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAMRAP_ID", DbType:="Int")>  _
	Public Property TAMRAP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TAMRAP_ID
		End Get
		Set
			If (Me._TAMRAP_ID.Equals(value) = false) Then
				Me.OnTAMRAP_IDChanging(value)
				Me.SendPropertyChanging
				Me._TAMRAP_ID = value
				Me.SendPropertyChanged("TAMRAP_ID")
				Me.OnTAMRAP_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[15_TAMRAP_PACKSIZE]")>  _
Partial Public Class _15_TAMRAP_PACKSIZE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TAMRAP_ID As System.Nullable(Of Integer)
	
	Private _pcksize As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTAMRAP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAMRAP_IDChanged()
    End Sub
    Partial Private Sub OnpcksizeChanging(value As String)
    End Sub
    Partial Private Sub OnpcksizeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAMRAP_ID", DbType:="Int")>  _
	Public Property TAMRAP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TAMRAP_ID
		End Get
		Set
			If (Me._TAMRAP_ID.Equals(value) = false) Then
				Me.OnTAMRAP_IDChanging(value)
				Me.SendPropertyChanging
				Me._TAMRAP_ID = value
				Me.SendPropertyChanged("TAMRAP_ID")
				Me.OnTAMRAP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pcksize", DbType:="NVarChar(MAX)")>  _
	Public Property pcksize() As String
		Get
			Return Me._pcksize
		End Get
		Set
			If (String.Equals(Me._pcksize, value) = false) Then
				Me.OnpcksizeChanging(value)
				Me.SendPropertyChanging
				Me._pcksize = value
				Me.SendPropertyChanged("pcksize")
				Me.OnpcksizeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_MULTITAB")>  _
Partial Public Class LOG_MULTITAB
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _DESCRIPTION As String
	
	Private _CITIZEN_ID As String
	
	Private _URL As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnURLChanging(value As String)
    End Sub
    Partial Private Sub OnURLChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_URL", DbType:="NVarChar(MAX)")>  _
	Public Property URL() As String
		Get
			Return Me._URL
		End Get
		Set
			If (String.Equals(Me._URL, value) = false) Then
				Me.OnURLChanging(value)
				Me.SendPropertyChanging
				Me._URL = value
				Me.SendPropertyChanged("URL")
				Me.OnURLChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_REGISTRATION_EQTO")>  _
Partial Public Class DRUG_REGISTRATION_EQTO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As String
	
	Private _ROWS As String
	
	Private _IOWA As String
	
	Private _QTY As String
	
	Private _MULTIPLY As String
	
	Private _STR_VALUE As String
	
	Private _SUNITCD As String
	
	Private _aori As String
	
	Private _FK_SET As System.Nullable(Of Integer)
	
	Private _mltplr As String
	
	Private _FK_REGIST As System.Nullable(Of Integer)
	
	Private _CONDITION As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnROWSChanging(value As String)
    End Sub
    Partial Private Sub OnROWSChanged()
    End Sub
    Partial Private Sub OnIOWAChanging(value As String)
    End Sub
    Partial Private Sub OnIOWAChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As String)
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnMULTIPLYChanging(value As String)
    End Sub
    Partial Private Sub OnMULTIPLYChanged()
    End Sub
    Partial Private Sub OnSTR_VALUEChanging(value As String)
    End Sub
    Partial Private Sub OnSTR_VALUEChanged()
    End Sub
    Partial Private Sub OnSUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnSUNITCDChanged()
    End Sub
    Partial Private Sub OnaoriChanging(value As String)
    End Sub
    Partial Private Sub OnaoriChanged()
    End Sub
    Partial Private Sub OnFK_SETChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_SETChanged()
    End Sub
    Partial Private Sub OnmltplrChanging(value As String)
    End Sub
    Partial Private Sub OnmltplrChanged()
    End Sub
    Partial Private Sub OnFK_REGISTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_REGISTChanged()
    End Sub
    Partial Private Sub OnCONDITIONChanging(value As String)
    End Sub
    Partial Private Sub OnCONDITIONChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROWS", DbType:="NVarChar(MAX)")>  _
	Public Property ROWS() As String
		Get
			Return Me._ROWS
		End Get
		Set
			If (String.Equals(Me._ROWS, value) = false) Then
				Me.OnROWSChanging(value)
				Me.SendPropertyChanging
				Me._ROWS = value
				Me.SendPropertyChanged("ROWS")
				Me.OnROWSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property IOWA() As String
		Get
			Return Me._IOWA
		End Get
		Set
			If (String.Equals(Me._IOWA, value) = false) Then
				Me.OnIOWAChanging(value)
				Me.SendPropertyChanging
				Me._IOWA = value
				Me.SendPropertyChanged("IOWA")
				Me.OnIOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property QTY() As String
		Get
			Return Me._QTY
		End Get
		Set
			If (String.Equals(Me._QTY, value) = false) Then
				Me.OnQTYChanging(value)
				Me.SendPropertyChanging
				Me._QTY = value
				Me.SendPropertyChanged("QTY")
				Me.OnQTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MULTIPLY", DbType:="NVarChar(50)")>  _
	Public Property MULTIPLY() As String
		Get
			Return Me._MULTIPLY
		End Get
		Set
			If (String.Equals(Me._MULTIPLY, value) = false) Then
				Me.OnMULTIPLYChanging(value)
				Me.SendPropertyChanging
				Me._MULTIPLY = value
				Me.SendPropertyChanged("MULTIPLY")
				Me.OnMULTIPLYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STR_VALUE", DbType:="NVarChar(50)")>  _
	Public Property STR_VALUE() As String
		Get
			Return Me._STR_VALUE
		End Get
		Set
			If (String.Equals(Me._STR_VALUE, value) = false) Then
				Me.OnSTR_VALUEChanging(value)
				Me.SendPropertyChanging
				Me._STR_VALUE = value
				Me.SendPropertyChanged("STR_VALUE")
				Me.OnSTR_VALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property SUNITCD() As String
		Get
			Return Me._SUNITCD
		End Get
		Set
			If (String.Equals(Me._SUNITCD, value) = false) Then
				Me.OnSUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._SUNITCD = value
				Me.SendPropertyChanged("SUNITCD")
				Me.OnSUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aori", DbType:="NVarChar(50)")>  _
	Public Property aori() As String
		Get
			Return Me._aori
		End Get
		Set
			If (String.Equals(Me._aori, value) = false) Then
				Me.OnaoriChanging(value)
				Me.SendPropertyChanging
				Me._aori = value
				Me.SendPropertyChanged("aori")
				Me.OnaoriChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SET", DbType:="Int")>  _
	Public Property FK_SET() As System.Nullable(Of Integer)
		Get
			Return Me._FK_SET
		End Get
		Set
			If (Me._FK_SET.Equals(value) = false) Then
				Me.OnFK_SETChanging(value)
				Me.SendPropertyChanging
				Me._FK_SET = value
				Me.SendPropertyChanged("FK_SET")
				Me.OnFK_SETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mltplr", DbType:="NVarChar(50)")>  _
	Public Property mltplr() As String
		Get
			Return Me._mltplr
		End Get
		Set
			If (String.Equals(Me._mltplr, value) = false) Then
				Me.OnmltplrChanging(value)
				Me.SendPropertyChanging
				Me._mltplr = value
				Me.SendPropertyChanged("mltplr")
				Me.OnmltplrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_REGIST", DbType:="Int")>  _
	Public Property FK_REGIST() As System.Nullable(Of Integer)
		Get
			Return Me._FK_REGIST
		End Get
		Set
			If (Me._FK_REGIST.Equals(value) = false) Then
				Me.OnFK_REGISTChanging(value)
				Me.SendPropertyChanging
				Me._FK_REGIST = value
				Me.SendPropertyChanged("FK_REGIST")
				Me.OnFK_REGISTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION", DbType:="NVarChar(MAX)")>  _
	Public Property CONDITION() As String
		Get
			Return Me._CONDITION
		End Get
		Set
			If (String.Equals(Me._CONDITION, value) = false) Then
				Me.OnCONDITIONChanging(value)
				Me.SendPropertyChanging
				Me._CONDITION = value
				Me.SendPropertyChanged("CONDITION")
				Me.OnCONDITIONChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACKING_RQT_LOG")>  _
Partial Public Class E_TRACKING_RQT_LOG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_TYPE As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _EDIT_DESCRIPTION As String
	
	Private _HEAD_STATUS As System.Nullable(Of Integer)
	
	Private _SUB_STATUS As System.Nullable(Of Integer)
	
	Private _CITIZEN_ID As String
	
	Private _PROCESS_NAME As String
	
	Private _SUB_IDA As System.Nullable(Of Integer)
	
	Private _URL As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_TYPEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnEDIT_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnEDIT_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnHEAD_STATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEAD_STATUSChanged()
    End Sub
    Partial Private Sub OnSUB_STATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUB_STATUSChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanged()
    End Sub
    Partial Private Sub OnSUB_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUB_IDAChanged()
    End Sub
    Partial Private Sub OnURLChanging(value As String)
    End Sub
    Partial Private Sub OnURLChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_TYPE", DbType:="Int")>  _
	Public Property STATUS_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_TYPE
		End Get
		Set
			If (Me._STATUS_TYPE.Equals(value) = false) Then
				Me.OnSTATUS_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_TYPE = value
				Me.SendPropertyChanged("STATUS_TYPE")
				Me.OnSTATUS_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property EDIT_DESCRIPTION() As String
		Get
			Return Me._EDIT_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._EDIT_DESCRIPTION, value) = false) Then
				Me.OnEDIT_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_DESCRIPTION = value
				Me.SendPropertyChanged("EDIT_DESCRIPTION")
				Me.OnEDIT_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_STATUS", DbType:="Int")>  _
	Public Property HEAD_STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_STATUS
		End Get
		Set
			If (Me._HEAD_STATUS.Equals(value) = false) Then
				Me.OnHEAD_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_STATUS = value
				Me.SendPropertyChanged("HEAD_STATUS")
				Me.OnHEAD_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_STATUS", DbType:="Int")>  _
	Public Property SUB_STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._SUB_STATUS
		End Get
		Set
			If (Me._SUB_STATUS.Equals(value) = false) Then
				Me.OnSUB_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._SUB_STATUS = value
				Me.SendPropertyChanged("SUB_STATUS")
				Me.OnSUB_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_NAME() As String
		Get
			Return Me._PROCESS_NAME
		End Get
		Set
			If (String.Equals(Me._PROCESS_NAME, value) = false) Then
				Me.OnPROCESS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_NAME = value
				Me.SendPropertyChanged("PROCESS_NAME")
				Me.OnPROCESS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_IDA", DbType:="Int")>  _
	Public Property SUB_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._SUB_IDA
		End Get
		Set
			If (Me._SUB_IDA.Equals(value) = false) Then
				Me.OnSUB_IDAChanging(value)
				Me.SendPropertyChanging
				Me._SUB_IDA = value
				Me.SendPropertyChanged("SUB_IDA")
				Me.OnSUB_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_URL", DbType:="NVarChar(MAX)")>  _
	Public Property URL() As String
		Get
			Return Me._URL
		End Get
		Set
			If (String.Equals(Me._URL, value) = false) Then
				Me.OnURLChanging(value)
				Me.SendPropertyChanging
				Me._URL = value
				Me.SendPropertyChanged("URL")
				Me.OnURLChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACKING_RQT_STOP_TIME")>  _
Partial Public Class E_TRACKING_RQT_STOP_TIME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _START_DATE As System.Nullable(Of Date)
	
	Private _END_DATE As System.Nullable(Of Date)
	
	Private _PERIOD_COUNT As System.Nullable(Of Integer)
	
	Private _TYPE_PERIOD As System.Nullable(Of Integer)
	
	Private _EXPERT_TYPE_ID As System.Nullable(Of Integer)
	
	Private _EXPERT_COUNT As System.Nullable(Of Integer)
	
	Private _CTZID As String
	
	Private _PRODUCT_TYPE As System.Nullable(Of Integer)
	
	Private _SMALL_TYPE As System.Nullable(Of Integer)
	
	Private _pvncd As System.Nullable(Of Integer)
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _PLUS_OR_MINUS As String
	
	Private _drgtpcd As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TYPE_P As System.Nullable(Of Integer)
	
	Private _FK_COMMENT As System.Nullable(Of Integer)
	
	Private _SUM_DAY As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTART_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTART_DATEChanged()
    End Sub
    Partial Private Sub OnEND_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEND_DATEChanged()
    End Sub
    Partial Private Sub OnPERIOD_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPERIOD_COUNTChanged()
    End Sub
    Partial Private Sub OnTYPE_PERIODChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_PERIODChanged()
    End Sub
    Partial Private Sub OnEXPERT_TYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEXPERT_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnEXPERT_COUNTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEXPERT_COUNTChanged()
    End Sub
    Partial Private Sub OnCTZIDChanging(value As String)
    End Sub
    Partial Private Sub OnCTZIDChanged()
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanged()
    End Sub
    Partial Private Sub OnSMALL_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSMALL_TYPEChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnPLUS_OR_MINUSChanging(value As String)
    End Sub
    Partial Private Sub OnPLUS_OR_MINUSChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTYPE_PChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTYPE_PChanged()
    End Sub
    Partial Private Sub OnFK_COMMENTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_COMMENTChanged()
    End Sub
    Partial Private Sub OnSUM_DAYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUM_DAYChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_START_DATE", DbType:="DateTime")>  _
	Public Property START_DATE() As System.Nullable(Of Date)
		Get
			Return Me._START_DATE
		End Get
		Set
			If (Me._START_DATE.Equals(value) = false) Then
				Me.OnSTART_DATEChanging(value)
				Me.SendPropertyChanging
				Me._START_DATE = value
				Me.SendPropertyChanged("START_DATE")
				Me.OnSTART_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_END_DATE", DbType:="DateTime")>  _
	Public Property END_DATE() As System.Nullable(Of Date)
		Get
			Return Me._END_DATE
		End Get
		Set
			If (Me._END_DATE.Equals(value) = false) Then
				Me.OnEND_DATEChanging(value)
				Me.SendPropertyChanging
				Me._END_DATE = value
				Me.SendPropertyChanged("END_DATE")
				Me.OnEND_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERIOD_COUNT", DbType:="Int")>  _
	Public Property PERIOD_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._PERIOD_COUNT
		End Get
		Set
			If (Me._PERIOD_COUNT.Equals(value) = false) Then
				Me.OnPERIOD_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._PERIOD_COUNT = value
				Me.SendPropertyChanged("PERIOD_COUNT")
				Me.OnPERIOD_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_PERIOD", DbType:="Int")>  _
	Public Property TYPE_PERIOD() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_PERIOD
		End Get
		Set
			If (Me._TYPE_PERIOD.Equals(value) = false) Then
				Me.OnTYPE_PERIODChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_PERIOD = value
				Me.SendPropertyChanged("TYPE_PERIOD")
				Me.OnTYPE_PERIODChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPERT_TYPE_ID", DbType:="Int")>  _
	Public Property EXPERT_TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._EXPERT_TYPE_ID
		End Get
		Set
			If (Me._EXPERT_TYPE_ID.Equals(value) = false) Then
				Me.OnEXPERT_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._EXPERT_TYPE_ID = value
				Me.SendPropertyChanged("EXPERT_TYPE_ID")
				Me.OnEXPERT_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXPERT_COUNT", DbType:="Int")>  _
	Public Property EXPERT_COUNT() As System.Nullable(Of Integer)
		Get
			Return Me._EXPERT_COUNT
		End Get
		Set
			If (Me._EXPERT_COUNT.Equals(value) = false) Then
				Me.OnEXPERT_COUNTChanging(value)
				Me.SendPropertyChanging
				Me._EXPERT_COUNT = value
				Me.SendPropertyChanged("EXPERT_COUNT")
				Me.OnEXPERT_COUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CTZID", DbType:="NVarChar(50)")>  _
	Public Property CTZID() As String
		Get
			Return Me._CTZID
		End Get
		Set
			If (String.Equals(Me._CTZID, value) = false) Then
				Me.OnCTZIDChanging(value)
				Me.SendPropertyChanging
				Me._CTZID = value
				Me.SendPropertyChanged("CTZID")
				Me.OnCTZIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_TYPE", DbType:="Int")>  _
	Public Property PRODUCT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PRODUCT_TYPE
		End Get
		Set
			If (Me._PRODUCT_TYPE.Equals(value) = false) Then
				Me.OnPRODUCT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_TYPE = value
				Me.SendPropertyChanged("PRODUCT_TYPE")
				Me.OnPRODUCT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_TYPE", DbType:="Int")>  _
	Public Property SMALL_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._SMALL_TYPE
		End Get
		Set
			If (Me._SMALL_TYPE.Equals(value) = false) Then
				Me.OnSMALL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_TYPE = value
				Me.SendPropertyChanged("SMALL_TYPE")
				Me.OnSMALL_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLUS_OR_MINUS", DbType:="NVarChar(MAX)")>  _
	Public Property PLUS_OR_MINUS() As String
		Get
			Return Me._PLUS_OR_MINUS
		End Get
		Set
			If (String.Equals(Me._PLUS_OR_MINUS, value) = false) Then
				Me.OnPLUS_OR_MINUSChanging(value)
				Me.SendPropertyChanging
				Me._PLUS_OR_MINUS = value
				Me.SendPropertyChanged("PLUS_OR_MINUS")
				Me.OnPLUS_OR_MINUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(MAX)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_P", DbType:="Int")>  _
	Public Property TYPE_P() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_P
		End Get
		Set
			If (Me._TYPE_P.Equals(value) = false) Then
				Me.OnTYPE_PChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_P = value
				Me.SendPropertyChanged("TYPE_P")
				Me.OnTYPE_PChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_COMMENT", DbType:="Int")>  _
	Public Property FK_COMMENT() As System.Nullable(Of Integer)
		Get
			Return Me._FK_COMMENT
		End Get
		Set
			If (Me._FK_COMMENT.Equals(value) = false) Then
				Me.OnFK_COMMENTChanging(value)
				Me.SendPropertyChanging
				Me._FK_COMMENT = value
				Me.SendPropertyChanged("FK_COMMENT")
				Me.OnFK_COMMENTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUM_DAY", DbType:="Int")>  _
	Public Property SUM_DAY() As System.Nullable(Of Integer)
		Get
			Return Me._SUM_DAY
		End Get
		Set
			If (Me._SUM_DAY.Equals(value) = false) Then
				Me.OnSUM_DAYChanging(value)
				Me.SendPropertyChanging
				Me._SUM_DAY = value
				Me.SendPropertyChanged("SUM_DAY")
				Me.OnSUM_DAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.E_TRACKING_STATUS_RQT_ALL")>  _
Partial Public Class E_TRACKING_STATUS_RQT_ALL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _START_DATE As System.Nullable(Of Date)
	
	Private _END_DATE As System.Nullable(Of Date)
	
	Private _STATUS_INDEX As System.Nullable(Of Integer)
	
	Private _PRODUCT_TYPE As System.Nullable(Of Integer)
	
	Private _HEAD_STATUS_ID As System.Nullable(Of Integer)
	
	Private _SUB_PRODUCT_TYPE As System.Nullable(Of Integer)
	
	Private _SUB_STATUS_ID As System.Nullable(Of Integer)
	
	Private _REF_NO As String
	
	Private _SUB_STATUS_DATE As System.Nullable(Of Date)
	
	Private _STAFF_CITIZEN As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _PROCESS_ID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTART_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTART_DATEChanged()
    End Sub
    Partial Private Sub OnEND_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEND_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUS_INDEXChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_INDEXChanged()
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanged()
    End Sub
    Partial Private Sub OnHEAD_STATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHEAD_STATUS_IDChanged()
    End Sub
    Partial Private Sub OnSUB_PRODUCT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUB_PRODUCT_TYPEChanged()
    End Sub
    Partial Private Sub OnSUB_STATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUB_STATUS_IDChanged()
    End Sub
    Partial Private Sub OnREF_NOChanging(value As String)
    End Sub
    Partial Private Sub OnREF_NOChanged()
    End Sub
    Partial Private Sub OnSUB_STATUS_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSUB_STATUS_DATEChanged()
    End Sub
    Partial Private Sub OnSTAFF_CITIZENChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_CITIZENChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_START_DATE", DbType:="DateTime")>  _
	Public Property START_DATE() As System.Nullable(Of Date)
		Get
			Return Me._START_DATE
		End Get
		Set
			If (Me._START_DATE.Equals(value) = false) Then
				Me.OnSTART_DATEChanging(value)
				Me.SendPropertyChanging
				Me._START_DATE = value
				Me.SendPropertyChanged("START_DATE")
				Me.OnSTART_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_END_DATE", DbType:="DateTime")>  _
	Public Property END_DATE() As System.Nullable(Of Date)
		Get
			Return Me._END_DATE
		End Get
		Set
			If (Me._END_DATE.Equals(value) = false) Then
				Me.OnEND_DATEChanging(value)
				Me.SendPropertyChanging
				Me._END_DATE = value
				Me.SendPropertyChanged("END_DATE")
				Me.OnEND_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_INDEX", DbType:="Int")>  _
	Public Property STATUS_INDEX() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_INDEX
		End Get
		Set
			If (Me._STATUS_INDEX.Equals(value) = false) Then
				Me.OnSTATUS_INDEXChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_INDEX = value
				Me.SendPropertyChanged("STATUS_INDEX")
				Me.OnSTATUS_INDEXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_TYPE", DbType:="Int")>  _
	Public Property PRODUCT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PRODUCT_TYPE
		End Get
		Set
			If (Me._PRODUCT_TYPE.Equals(value) = false) Then
				Me.OnPRODUCT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_TYPE = value
				Me.SendPropertyChanged("PRODUCT_TYPE")
				Me.OnPRODUCT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_STATUS_ID", DbType:="Int")>  _
	Public Property HEAD_STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_STATUS_ID
		End Get
		Set
			If (Me._HEAD_STATUS_ID.Equals(value) = false) Then
				Me.OnHEAD_STATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._HEAD_STATUS_ID = value
				Me.SendPropertyChanged("HEAD_STATUS_ID")
				Me.OnHEAD_STATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_PRODUCT_TYPE", DbType:="Int")>  _
	Public Property SUB_PRODUCT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._SUB_PRODUCT_TYPE
		End Get
		Set
			If (Me._SUB_PRODUCT_TYPE.Equals(value) = false) Then
				Me.OnSUB_PRODUCT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._SUB_PRODUCT_TYPE = value
				Me.SendPropertyChanged("SUB_PRODUCT_TYPE")
				Me.OnSUB_PRODUCT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_STATUS_ID", DbType:="Int")>  _
	Public Property SUB_STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SUB_STATUS_ID
		End Get
		Set
			If (Me._SUB_STATUS_ID.Equals(value) = false) Then
				Me.OnSUB_STATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._SUB_STATUS_ID = value
				Me.SendPropertyChanged("SUB_STATUS_ID")
				Me.OnSUB_STATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_NO", DbType:="NVarChar(MAX)")>  _
	Public Property REF_NO() As String
		Get
			Return Me._REF_NO
		End Get
		Set
			If (String.Equals(Me._REF_NO, value) = false) Then
				Me.OnREF_NOChanging(value)
				Me.SendPropertyChanging
				Me._REF_NO = value
				Me.SendPropertyChanged("REF_NO")
				Me.OnREF_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_STATUS_DATE", DbType:="DateTime")>  _
	Public Property SUB_STATUS_DATE() As System.Nullable(Of Date)
		Get
			Return Me._SUB_STATUS_DATE
		End Get
		Set
			If (Me._SUB_STATUS_DATE.Equals(value) = false) Then
				Me.OnSUB_STATUS_DATEChanging(value)
				Me.SendPropertyChanging
				Me._SUB_STATUS_DATE = value
				Me.SendPropertyChanged("SUB_STATUS_DATE")
				Me.OnSUB_STATUS_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_CITIZEN", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_CITIZEN() As String
		Get
			Return Me._STAFF_CITIZEN
		End Get
		Set
			If (String.Equals(Me._STAFF_CITIZEN, value) = false) Then
				Me.OnSTAFF_CITIZENChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_CITIZEN = value
				Me.SendPropertyChanged("STAFF_CITIZEN")
				Me.OnSTAFF_CITIZENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LCN_EXTEND_LITE_OPEN")>  _
Partial Public Class LCN_EXTEND_LITE_OPEN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _VAL_OPEN As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnVAL_OPENChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVAL_OPENChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAL_OPEN", DbType:="Int")>  _
	Public Property VAL_OPEN() As System.Nullable(Of Integer)
		Get
			Return Me._VAL_OPEN
		End Get
		Set
			If (Me._VAL_OPEN.Equals(value) = false) Then
				Me.OnVAL_OPENChanging(value)
				Me.SendPropertyChanging
				Me._VAL_OPEN = value
				Me.SendPropertyChanged("VAL_OPEN")
				Me.OnVAL_OPENChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_DETAIL_CAS")>  _
Partial Public Class DRRGT_DETAIL_CA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As String
	
	Private _ROWS As String
	
	Private _IOWA As String
	
	Private _QTY As String
	
	Private _SUNITCD As String
	
	Private _EQTO_IOWA As String
	
	Private _EQTO_QTY As String
	
	Private _EQTO_SUNITCD As String
	
	Private _BASE_FORM As String
	
	Private _AORI As String
	
	Private _FK_SET As System.Nullable(Of Integer)
	
	Private _CAS_TYPE As System.Nullable(Of Integer)
	
	Private _REMARK As String
	
	Private _sbioqty As System.Nullable(Of Decimal)
	
	Private _sbiosqno As System.Nullable(Of Decimal)
	
	Private _sbiounitcd As System.Nullable(Of Integer)
	
	Private _ebioqty As System.Nullable(Of Decimal)
	
	Private _ebiosqno As System.Nullable(Of Decimal)
	
	Private _ebiounitcd As System.Nullable(Of Integer)
	
	Private _mltplr As System.Nullable(Of Integer)
	
	Private _REF As String
	
	Private _IOWANM As String
	
	Private _QTY_txt As String
	
	Private _CONDITION As String
	
	Private _QTY2 As String
	
	Private _SUNITCD2 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnROWSChanging(value As String)
    End Sub
    Partial Private Sub OnROWSChanged()
    End Sub
    Partial Private Sub OnIOWAChanging(value As String)
    End Sub
    Partial Private Sub OnIOWAChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As String)
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnSUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnSUNITCDChanged()
    End Sub
    Partial Private Sub OnEQTO_IOWAChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_IOWAChanged()
    End Sub
    Partial Private Sub OnEQTO_QTYChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_QTYChanged()
    End Sub
    Partial Private Sub OnEQTO_SUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_SUNITCDChanged()
    End Sub
    Partial Private Sub OnBASE_FORMChanging(value As String)
    End Sub
    Partial Private Sub OnBASE_FORMChanged()
    End Sub
    Partial Private Sub OnAORIChanging(value As String)
    End Sub
    Partial Private Sub OnAORIChanged()
    End Sub
    Partial Private Sub OnFK_SETChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_SETChanged()
    End Sub
    Partial Private Sub OnCAS_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCAS_TYPEChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnsbioqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnsbioqtyChanged()
    End Sub
    Partial Private Sub OnsbiosqnoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnsbiosqnoChanged()
    End Sub
    Partial Private Sub OnsbiounitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsbiounitcdChanged()
    End Sub
    Partial Private Sub OnebioqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnebioqtyChanged()
    End Sub
    Partial Private Sub OnebiosqnoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnebiosqnoChanged()
    End Sub
    Partial Private Sub OnebiounitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnebiounitcdChanged()
    End Sub
    Partial Private Sub OnmltplrChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnmltplrChanged()
    End Sub
    Partial Private Sub OnREFChanging(value As String)
    End Sub
    Partial Private Sub OnREFChanged()
    End Sub
    Partial Private Sub OnIOWANMChanging(value As String)
    End Sub
    Partial Private Sub OnIOWANMChanged()
    End Sub
    Partial Private Sub OnQTY_txtChanging(value As String)
    End Sub
    Partial Private Sub OnQTY_txtChanged()
    End Sub
    Partial Private Sub OnCONDITIONChanging(value As String)
    End Sub
    Partial Private Sub OnCONDITIONChanged()
    End Sub
    Partial Private Sub OnQTY2Changing(value As String)
    End Sub
    Partial Private Sub OnQTY2Changed()
    End Sub
    Partial Private Sub OnSUNITCD2Changing(value As String)
    End Sub
    Partial Private Sub OnSUNITCD2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROWS", DbType:="NVarChar(MAX)")>  _
	Public Property ROWS() As String
		Get
			Return Me._ROWS
		End Get
		Set
			If (String.Equals(Me._ROWS, value) = false) Then
				Me.OnROWSChanging(value)
				Me.SendPropertyChanging
				Me._ROWS = value
				Me.SendPropertyChanged("ROWS")
				Me.OnROWSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property IOWA() As String
		Get
			Return Me._IOWA
		End Get
		Set
			If (String.Equals(Me._IOWA, value) = false) Then
				Me.OnIOWAChanging(value)
				Me.SendPropertyChanging
				Me._IOWA = value
				Me.SendPropertyChanged("IOWA")
				Me.OnIOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property QTY() As String
		Get
			Return Me._QTY
		End Get
		Set
			If (String.Equals(Me._QTY, value) = false) Then
				Me.OnQTYChanging(value)
				Me.SendPropertyChanging
				Me._QTY = value
				Me.SendPropertyChanged("QTY")
				Me.OnQTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property SUNITCD() As String
		Get
			Return Me._SUNITCD
		End Get
		Set
			If (String.Equals(Me._SUNITCD, value) = false) Then
				Me.OnSUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._SUNITCD = value
				Me.SendPropertyChanged("SUNITCD")
				Me.OnSUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_IOWA() As String
		Get
			Return Me._EQTO_IOWA
		End Get
		Set
			If (String.Equals(Me._EQTO_IOWA, value) = false) Then
				Me.OnEQTO_IOWAChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_IOWA = value
				Me.SendPropertyChanged("EQTO_IOWA")
				Me.OnEQTO_IOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_QTY() As String
		Get
			Return Me._EQTO_QTY
		End Get
		Set
			If (String.Equals(Me._EQTO_QTY, value) = false) Then
				Me.OnEQTO_QTYChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_QTY = value
				Me.SendPropertyChanged("EQTO_QTY")
				Me.OnEQTO_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_SUNITCD() As String
		Get
			Return Me._EQTO_SUNITCD
		End Get
		Set
			If (String.Equals(Me._EQTO_SUNITCD, value) = false) Then
				Me.OnEQTO_SUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_SUNITCD = value
				Me.SendPropertyChanged("EQTO_SUNITCD")
				Me.OnEQTO_SUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASE_FORM", DbType:="NVarChar(MAX)")>  _
	Public Property BASE_FORM() As String
		Get
			Return Me._BASE_FORM
		End Get
		Set
			If (String.Equals(Me._BASE_FORM, value) = false) Then
				Me.OnBASE_FORMChanging(value)
				Me.SendPropertyChanging
				Me._BASE_FORM = value
				Me.SendPropertyChanged("BASE_FORM")
				Me.OnBASE_FORMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AORI", DbType:="NVarChar(50)")>  _
	Public Property AORI() As String
		Get
			Return Me._AORI
		End Get
		Set
			If (String.Equals(Me._AORI, value) = false) Then
				Me.OnAORIChanging(value)
				Me.SendPropertyChanging
				Me._AORI = value
				Me.SendPropertyChanged("AORI")
				Me.OnAORIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SET", DbType:="Int")>  _
	Public Property FK_SET() As System.Nullable(Of Integer)
		Get
			Return Me._FK_SET
		End Get
		Set
			If (Me._FK_SET.Equals(value) = false) Then
				Me.OnFK_SETChanging(value)
				Me.SendPropertyChanging
				Me._FK_SET = value
				Me.SendPropertyChanged("FK_SET")
				Me.OnFK_SETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAS_TYPE", DbType:="Int")>  _
	Public Property CAS_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._CAS_TYPE
		End Get
		Set
			If (Me._CAS_TYPE.Equals(value) = false) Then
				Me.OnCAS_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CAS_TYPE = value
				Me.SendPropertyChanged("CAS_TYPE")
				Me.OnCAS_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbioqty", DbType:="Decimal(14,8)")>  _
	Public Property sbioqty() As System.Nullable(Of Decimal)
		Get
			Return Me._sbioqty
		End Get
		Set
			If (Me._sbioqty.Equals(value) = false) Then
				Me.OnsbioqtyChanging(value)
				Me.SendPropertyChanging
				Me._sbioqty = value
				Me.SendPropertyChanged("sbioqty")
				Me.OnsbioqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbiosqno", DbType:="Decimal(14,8)")>  _
	Public Property sbiosqno() As System.Nullable(Of Decimal)
		Get
			Return Me._sbiosqno
		End Get
		Set
			If (Me._sbiosqno.Equals(value) = false) Then
				Me.OnsbiosqnoChanging(value)
				Me.SendPropertyChanging
				Me._sbiosqno = value
				Me.SendPropertyChanged("sbiosqno")
				Me.OnsbiosqnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbiounitcd", DbType:="Int")>  _
	Public Property sbiounitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sbiounitcd
		End Get
		Set
			If (Me._sbiounitcd.Equals(value) = false) Then
				Me.OnsbiounitcdChanging(value)
				Me.SendPropertyChanging
				Me._sbiounitcd = value
				Me.SendPropertyChanged("sbiounitcd")
				Me.OnsbiounitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ebioqty", DbType:="Decimal(14,8)")>  _
	Public Property ebioqty() As System.Nullable(Of Decimal)
		Get
			Return Me._ebioqty
		End Get
		Set
			If (Me._ebioqty.Equals(value) = false) Then
				Me.OnebioqtyChanging(value)
				Me.SendPropertyChanging
				Me._ebioqty = value
				Me.SendPropertyChanged("ebioqty")
				Me.OnebioqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ebiosqno", DbType:="Decimal(14,8)")>  _
	Public Property ebiosqno() As System.Nullable(Of Decimal)
		Get
			Return Me._ebiosqno
		End Get
		Set
			If (Me._ebiosqno.Equals(value) = false) Then
				Me.OnebiosqnoChanging(value)
				Me.SendPropertyChanging
				Me._ebiosqno = value
				Me.SendPropertyChanged("ebiosqno")
				Me.OnebiosqnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ebiounitcd", DbType:="Int")>  _
	Public Property ebiounitcd() As System.Nullable(Of Integer)
		Get
			Return Me._ebiounitcd
		End Get
		Set
			If (Me._ebiounitcd.Equals(value) = false) Then
				Me.OnebiounitcdChanging(value)
				Me.SendPropertyChanging
				Me._ebiounitcd = value
				Me.SendPropertyChanged("ebiounitcd")
				Me.OnebiounitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mltplr", DbType:="Int")>  _
	Public Property mltplr() As System.Nullable(Of Integer)
		Get
			Return Me._mltplr
		End Get
		Set
			If (Me._mltplr.Equals(value) = false) Then
				Me.OnmltplrChanging(value)
				Me.SendPropertyChanging
				Me._mltplr = value
				Me.SendPropertyChanged("mltplr")
				Me.OnmltplrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF", DbType:="NVarChar(MAX)")>  _
	Public Property REF() As String
		Get
			Return Me._REF
		End Get
		Set
			If (String.Equals(Me._REF, value) = false) Then
				Me.OnREFChanging(value)
				Me.SendPropertyChanging
				Me._REF = value
				Me.SendPropertyChanged("REF")
				Me.OnREFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWANM", DbType:="NVarChar(MAX)")>  _
	Public Property IOWANM() As String
		Get
			Return Me._IOWANM
		End Get
		Set
			If (String.Equals(Me._IOWANM, value) = false) Then
				Me.OnIOWANMChanging(value)
				Me.SendPropertyChanging
				Me._IOWANM = value
				Me.SendPropertyChanged("IOWANM")
				Me.OnIOWANMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY_txt", DbType:="NVarChar(MAX)")>  _
	Public Property QTY_txt() As String
		Get
			Return Me._QTY_txt
		End Get
		Set
			If (String.Equals(Me._QTY_txt, value) = false) Then
				Me.OnQTY_txtChanging(value)
				Me.SendPropertyChanging
				Me._QTY_txt = value
				Me.SendPropertyChanged("QTY_txt")
				Me.OnQTY_txtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION", DbType:="NVarChar(50)")>  _
	Public Property CONDITION() As String
		Get
			Return Me._CONDITION
		End Get
		Set
			If (String.Equals(Me._CONDITION, value) = false) Then
				Me.OnCONDITIONChanging(value)
				Me.SendPropertyChanging
				Me._CONDITION = value
				Me.SendPropertyChanged("CONDITION")
				Me.OnCONDITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY2", DbType:="NVarChar(MAX)")>  _
	Public Property QTY2() As String
		Get
			Return Me._QTY2
		End Get
		Set
			If (String.Equals(Me._QTY2, value) = false) Then
				Me.OnQTY2Changing(value)
				Me.SendPropertyChanging
				Me._QTY2 = value
				Me.SendPropertyChanged("QTY2")
				Me.OnQTY2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD2", DbType:="NVarChar(MAX)")>  _
	Public Property SUNITCD2() As String
		Get
			Return Me._SUNITCD2
		End Get
		Set
			If (String.Equals(Me._SUNITCD2, value) = false) Then
				Me.OnSUNITCD2Changing(value)
				Me.SendPropertyChanging
				Me._SUNITCD2 = value
				Me.SendPropertyChanged("SUNITCD2")
				Me.OnSUNITCD2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRQT_DETAIL_CAS")>  _
Partial Public Class DRRQT_DETAIL_CA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As String
	
	Private _ROWS As String
	
	Private _IOWA As String
	
	Private _QTY As String
	
	Private _SUNITCD As String
	
	Private _EQTO_IOWA As String
	
	Private _EQTO_QTY As String
	
	Private _EQTO_SUNITCD As String
	
	Private _BASE_FORM As String
	
	Private _AORI As String
	
	Private _FK_SET As System.Nullable(Of Integer)
	
	Private _CAS_TYPE As System.Nullable(Of Integer)
	
	Private _REMARK As String
	
	Private _sbioqty As System.Nullable(Of Decimal)
	
	Private _sbiosqno As System.Nullable(Of Decimal)
	
	Private _sbiounitcd As System.Nullable(Of Integer)
	
	Private _ebioqty As System.Nullable(Of Decimal)
	
	Private _ebiosqno As System.Nullable(Of Decimal)
	
	Private _ebiounitcd As System.Nullable(Of Integer)
	
	Private _mltplr As System.Nullable(Of Integer)
	
	Private _REF As String
	
	Private _IOWANM As String
	
	Private _QTY_txt As String
	
	Private _CONDITION As String
	
	Private _QTY2 As String
	
	Private _SUNITCD2 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnROWSChanging(value As String)
    End Sub
    Partial Private Sub OnROWSChanged()
    End Sub
    Partial Private Sub OnIOWAChanging(value As String)
    End Sub
    Partial Private Sub OnIOWAChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As String)
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnSUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnSUNITCDChanged()
    End Sub
    Partial Private Sub OnEQTO_IOWAChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_IOWAChanged()
    End Sub
    Partial Private Sub OnEQTO_QTYChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_QTYChanged()
    End Sub
    Partial Private Sub OnEQTO_SUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_SUNITCDChanged()
    End Sub
    Partial Private Sub OnBASE_FORMChanging(value As String)
    End Sub
    Partial Private Sub OnBASE_FORMChanged()
    End Sub
    Partial Private Sub OnAORIChanging(value As String)
    End Sub
    Partial Private Sub OnAORIChanged()
    End Sub
    Partial Private Sub OnFK_SETChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_SETChanged()
    End Sub
    Partial Private Sub OnCAS_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCAS_TYPEChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnsbioqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnsbioqtyChanged()
    End Sub
    Partial Private Sub OnsbiosqnoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnsbiosqnoChanged()
    End Sub
    Partial Private Sub OnsbiounitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsbiounitcdChanged()
    End Sub
    Partial Private Sub OnebioqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnebioqtyChanged()
    End Sub
    Partial Private Sub OnebiosqnoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnebiosqnoChanged()
    End Sub
    Partial Private Sub OnebiounitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnebiounitcdChanged()
    End Sub
    Partial Private Sub OnmltplrChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnmltplrChanged()
    End Sub
    Partial Private Sub OnREFChanging(value As String)
    End Sub
    Partial Private Sub OnREFChanged()
    End Sub
    Partial Private Sub OnIOWANMChanging(value As String)
    End Sub
    Partial Private Sub OnIOWANMChanged()
    End Sub
    Partial Private Sub OnQTY_txtChanging(value As String)
    End Sub
    Partial Private Sub OnQTY_txtChanged()
    End Sub
    Partial Private Sub OnCONDITIONChanging(value As String)
    End Sub
    Partial Private Sub OnCONDITIONChanged()
    End Sub
    Partial Private Sub OnQTY2Changing(value As String)
    End Sub
    Partial Private Sub OnQTY2Changed()
    End Sub
    Partial Private Sub OnSUNITCD2Changing(value As String)
    End Sub
    Partial Private Sub OnSUNITCD2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROWS", DbType:="NVarChar(MAX)")>  _
	Public Property ROWS() As String
		Get
			Return Me._ROWS
		End Get
		Set
			If (String.Equals(Me._ROWS, value) = false) Then
				Me.OnROWSChanging(value)
				Me.SendPropertyChanging
				Me._ROWS = value
				Me.SendPropertyChanged("ROWS")
				Me.OnROWSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property IOWA() As String
		Get
			Return Me._IOWA
		End Get
		Set
			If (String.Equals(Me._IOWA, value) = false) Then
				Me.OnIOWAChanging(value)
				Me.SendPropertyChanging
				Me._IOWA = value
				Me.SendPropertyChanged("IOWA")
				Me.OnIOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property QTY() As String
		Get
			Return Me._QTY
		End Get
		Set
			If (String.Equals(Me._QTY, value) = false) Then
				Me.OnQTYChanging(value)
				Me.SendPropertyChanging
				Me._QTY = value
				Me.SendPropertyChanged("QTY")
				Me.OnQTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property SUNITCD() As String
		Get
			Return Me._SUNITCD
		End Get
		Set
			If (String.Equals(Me._SUNITCD, value) = false) Then
				Me.OnSUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._SUNITCD = value
				Me.SendPropertyChanged("SUNITCD")
				Me.OnSUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_IOWA() As String
		Get
			Return Me._EQTO_IOWA
		End Get
		Set
			If (String.Equals(Me._EQTO_IOWA, value) = false) Then
				Me.OnEQTO_IOWAChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_IOWA = value
				Me.SendPropertyChanged("EQTO_IOWA")
				Me.OnEQTO_IOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_QTY() As String
		Get
			Return Me._EQTO_QTY
		End Get
		Set
			If (String.Equals(Me._EQTO_QTY, value) = false) Then
				Me.OnEQTO_QTYChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_QTY = value
				Me.SendPropertyChanged("EQTO_QTY")
				Me.OnEQTO_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_SUNITCD() As String
		Get
			Return Me._EQTO_SUNITCD
		End Get
		Set
			If (String.Equals(Me._EQTO_SUNITCD, value) = false) Then
				Me.OnEQTO_SUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_SUNITCD = value
				Me.SendPropertyChanged("EQTO_SUNITCD")
				Me.OnEQTO_SUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASE_FORM", DbType:="NVarChar(MAX)")>  _
	Public Property BASE_FORM() As String
		Get
			Return Me._BASE_FORM
		End Get
		Set
			If (String.Equals(Me._BASE_FORM, value) = false) Then
				Me.OnBASE_FORMChanging(value)
				Me.SendPropertyChanging
				Me._BASE_FORM = value
				Me.SendPropertyChanged("BASE_FORM")
				Me.OnBASE_FORMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AORI", DbType:="NVarChar(50)")>  _
	Public Property AORI() As String
		Get
			Return Me._AORI
		End Get
		Set
			If (String.Equals(Me._AORI, value) = false) Then
				Me.OnAORIChanging(value)
				Me.SendPropertyChanging
				Me._AORI = value
				Me.SendPropertyChanged("AORI")
				Me.OnAORIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SET", DbType:="Int")>  _
	Public Property FK_SET() As System.Nullable(Of Integer)
		Get
			Return Me._FK_SET
		End Get
		Set
			If (Me._FK_SET.Equals(value) = false) Then
				Me.OnFK_SETChanging(value)
				Me.SendPropertyChanging
				Me._FK_SET = value
				Me.SendPropertyChanged("FK_SET")
				Me.OnFK_SETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAS_TYPE", DbType:="Int")>  _
	Public Property CAS_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._CAS_TYPE
		End Get
		Set
			If (Me._CAS_TYPE.Equals(value) = false) Then
				Me.OnCAS_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CAS_TYPE = value
				Me.SendPropertyChanged("CAS_TYPE")
				Me.OnCAS_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbioqty", DbType:="Decimal(14,8)")>  _
	Public Property sbioqty() As System.Nullable(Of Decimal)
		Get
			Return Me._sbioqty
		End Get
		Set
			If (Me._sbioqty.Equals(value) = false) Then
				Me.OnsbioqtyChanging(value)
				Me.SendPropertyChanging
				Me._sbioqty = value
				Me.SendPropertyChanged("sbioqty")
				Me.OnsbioqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbiosqno", DbType:="Decimal(14,8)")>  _
	Public Property sbiosqno() As System.Nullable(Of Decimal)
		Get
			Return Me._sbiosqno
		End Get
		Set
			If (Me._sbiosqno.Equals(value) = false) Then
				Me.OnsbiosqnoChanging(value)
				Me.SendPropertyChanging
				Me._sbiosqno = value
				Me.SendPropertyChanged("sbiosqno")
				Me.OnsbiosqnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbiounitcd", DbType:="Int")>  _
	Public Property sbiounitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sbiounitcd
		End Get
		Set
			If (Me._sbiounitcd.Equals(value) = false) Then
				Me.OnsbiounitcdChanging(value)
				Me.SendPropertyChanging
				Me._sbiounitcd = value
				Me.SendPropertyChanged("sbiounitcd")
				Me.OnsbiounitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ebioqty", DbType:="Decimal(14,8)")>  _
	Public Property ebioqty() As System.Nullable(Of Decimal)
		Get
			Return Me._ebioqty
		End Get
		Set
			If (Me._ebioqty.Equals(value) = false) Then
				Me.OnebioqtyChanging(value)
				Me.SendPropertyChanging
				Me._ebioqty = value
				Me.SendPropertyChanged("ebioqty")
				Me.OnebioqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ebiosqno", DbType:="Decimal(14,8)")>  _
	Public Property ebiosqno() As System.Nullable(Of Decimal)
		Get
			Return Me._ebiosqno
		End Get
		Set
			If (Me._ebiosqno.Equals(value) = false) Then
				Me.OnebiosqnoChanging(value)
				Me.SendPropertyChanging
				Me._ebiosqno = value
				Me.SendPropertyChanged("ebiosqno")
				Me.OnebiosqnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ebiounitcd", DbType:="Int")>  _
	Public Property ebiounitcd() As System.Nullable(Of Integer)
		Get
			Return Me._ebiounitcd
		End Get
		Set
			If (Me._ebiounitcd.Equals(value) = false) Then
				Me.OnebiounitcdChanging(value)
				Me.SendPropertyChanging
				Me._ebiounitcd = value
				Me.SendPropertyChanged("ebiounitcd")
				Me.OnebiounitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mltplr", DbType:="Int")>  _
	Public Property mltplr() As System.Nullable(Of Integer)
		Get
			Return Me._mltplr
		End Get
		Set
			If (Me._mltplr.Equals(value) = false) Then
				Me.OnmltplrChanging(value)
				Me.SendPropertyChanging
				Me._mltplr = value
				Me.SendPropertyChanged("mltplr")
				Me.OnmltplrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF", DbType:="NVarChar(MAX)")>  _
	Public Property REF() As String
		Get
			Return Me._REF
		End Get
		Set
			If (String.Equals(Me._REF, value) = false) Then
				Me.OnREFChanging(value)
				Me.SendPropertyChanging
				Me._REF = value
				Me.SendPropertyChanged("REF")
				Me.OnREFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWANM", DbType:="NVarChar(MAX)")>  _
	Public Property IOWANM() As String
		Get
			Return Me._IOWANM
		End Get
		Set
			If (String.Equals(Me._IOWANM, value) = false) Then
				Me.OnIOWANMChanging(value)
				Me.SendPropertyChanging
				Me._IOWANM = value
				Me.SendPropertyChanged("IOWANM")
				Me.OnIOWANMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY_txt", DbType:="NVarChar(MAX)")>  _
	Public Property QTY_txt() As String
		Get
			Return Me._QTY_txt
		End Get
		Set
			If (String.Equals(Me._QTY_txt, value) = false) Then
				Me.OnQTY_txtChanging(value)
				Me.SendPropertyChanging
				Me._QTY_txt = value
				Me.SendPropertyChanged("QTY_txt")
				Me.OnQTY_txtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION", DbType:="NVarChar(50)")>  _
	Public Property CONDITION() As String
		Get
			Return Me._CONDITION
		End Get
		Set
			If (String.Equals(Me._CONDITION, value) = false) Then
				Me.OnCONDITIONChanging(value)
				Me.SendPropertyChanging
				Me._CONDITION = value
				Me.SendPropertyChanged("CONDITION")
				Me.OnCONDITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY2", DbType:="NVarChar(MAX)")>  _
	Public Property QTY2() As String
		Get
			Return Me._QTY2
		End Get
		Set
			If (String.Equals(Me._QTY2, value) = false) Then
				Me.OnQTY2Changing(value)
				Me.SendPropertyChanging
				Me._QTY2 = value
				Me.SendPropertyChanged("QTY2")
				Me.OnQTY2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD2", DbType:="NVarChar(MAX)")>  _
	Public Property SUNITCD2() As String
		Get
			Return Me._SUNITCD2
		End Get
		Set
			If (String.Equals(Me._SUNITCD2, value) = false) Then
				Me.OnSUNITCD2Changing(value)
				Me.SendPropertyChanging
				Me._SUNITCD2 = value
				Me.SendPropertyChanged("SUNITCD2")
				Me.OnSUNITCD2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[15_TAMRAP_TEMPLATE]")>  _
Partial Public Class _15_TAMRAP_TEMPLATE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ROWS As String
	
	Private _IOWA As String
	
	Private _QTY As String
	
	Private _SUNITCD As String
	
	Private _EQTO_IOWA As String
	
	Private _EQTO_QTY As String
	
	Private _EQTO_SUNITCD As String
	
	Private _BASE_FORM As String
	
	Private _AORI As String
	
	Private _FK_SET As System.Nullable(Of Integer)
	
	Private _IOWANM As String
	
	Private _TAMRAP As System.Nullable(Of Integer)
	
	Private _DRUG_DOSESAGE As System.Nullable(Of Integer)
	
	Private _REMARK As String
	
	Private _TAMRAP_ID As System.Nullable(Of Integer)
	
	Private _CONTITION As String
	
	Private _VAL As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnROWSChanging(value As String)
    End Sub
    Partial Private Sub OnROWSChanged()
    End Sub
    Partial Private Sub OnIOWAChanging(value As String)
    End Sub
    Partial Private Sub OnIOWAChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As String)
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnSUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnSUNITCDChanged()
    End Sub
    Partial Private Sub OnEQTO_IOWAChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_IOWAChanged()
    End Sub
    Partial Private Sub OnEQTO_QTYChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_QTYChanged()
    End Sub
    Partial Private Sub OnEQTO_SUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_SUNITCDChanged()
    End Sub
    Partial Private Sub OnBASE_FORMChanging(value As String)
    End Sub
    Partial Private Sub OnBASE_FORMChanged()
    End Sub
    Partial Private Sub OnAORIChanging(value As String)
    End Sub
    Partial Private Sub OnAORIChanged()
    End Sub
    Partial Private Sub OnFK_SETChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_SETChanged()
    End Sub
    Partial Private Sub OnIOWANMChanging(value As String)
    End Sub
    Partial Private Sub OnIOWANMChanged()
    End Sub
    Partial Private Sub OnTAMRAPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAMRAPChanged()
    End Sub
    Partial Private Sub OnDRUG_DOSESAGEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_DOSESAGEChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnTAMRAP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAMRAP_IDChanged()
    End Sub
    Partial Private Sub OnCONTITIONChanging(value As String)
    End Sub
    Partial Private Sub OnCONTITIONChanged()
    End Sub
    Partial Private Sub OnVALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVALChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROWS", DbType:="NVarChar(MAX)")>  _
	Public Property ROWS() As String
		Get
			Return Me._ROWS
		End Get
		Set
			If (String.Equals(Me._ROWS, value) = false) Then
				Me.OnROWSChanging(value)
				Me.SendPropertyChanging
				Me._ROWS = value
				Me.SendPropertyChanged("ROWS")
				Me.OnROWSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property IOWA() As String
		Get
			Return Me._IOWA
		End Get
		Set
			If (String.Equals(Me._IOWA, value) = false) Then
				Me.OnIOWAChanging(value)
				Me.SendPropertyChanging
				Me._IOWA = value
				Me.SendPropertyChanged("IOWA")
				Me.OnIOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property QTY() As String
		Get
			Return Me._QTY
		End Get
		Set
			If (String.Equals(Me._QTY, value) = false) Then
				Me.OnQTYChanging(value)
				Me.SendPropertyChanging
				Me._QTY = value
				Me.SendPropertyChanged("QTY")
				Me.OnQTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property SUNITCD() As String
		Get
			Return Me._SUNITCD
		End Get
		Set
			If (String.Equals(Me._SUNITCD, value) = false) Then
				Me.OnSUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._SUNITCD = value
				Me.SendPropertyChanged("SUNITCD")
				Me.OnSUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_IOWA() As String
		Get
			Return Me._EQTO_IOWA
		End Get
		Set
			If (String.Equals(Me._EQTO_IOWA, value) = false) Then
				Me.OnEQTO_IOWAChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_IOWA = value
				Me.SendPropertyChanged("EQTO_IOWA")
				Me.OnEQTO_IOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_QTY() As String
		Get
			Return Me._EQTO_QTY
		End Get
		Set
			If (String.Equals(Me._EQTO_QTY, value) = false) Then
				Me.OnEQTO_QTYChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_QTY = value
				Me.SendPropertyChanged("EQTO_QTY")
				Me.OnEQTO_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_SUNITCD() As String
		Get
			Return Me._EQTO_SUNITCD
		End Get
		Set
			If (String.Equals(Me._EQTO_SUNITCD, value) = false) Then
				Me.OnEQTO_SUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_SUNITCD = value
				Me.SendPropertyChanged("EQTO_SUNITCD")
				Me.OnEQTO_SUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASE_FORM", DbType:="NVarChar(MAX)")>  _
	Public Property BASE_FORM() As String
		Get
			Return Me._BASE_FORM
		End Get
		Set
			If (String.Equals(Me._BASE_FORM, value) = false) Then
				Me.OnBASE_FORMChanging(value)
				Me.SendPropertyChanging
				Me._BASE_FORM = value
				Me.SendPropertyChanged("BASE_FORM")
				Me.OnBASE_FORMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AORI", DbType:="NVarChar(50)")>  _
	Public Property AORI() As String
		Get
			Return Me._AORI
		End Get
		Set
			If (String.Equals(Me._AORI, value) = false) Then
				Me.OnAORIChanging(value)
				Me.SendPropertyChanging
				Me._AORI = value
				Me.SendPropertyChanged("AORI")
				Me.OnAORIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SET", DbType:="Int")>  _
	Public Property FK_SET() As System.Nullable(Of Integer)
		Get
			Return Me._FK_SET
		End Get
		Set
			If (Me._FK_SET.Equals(value) = false) Then
				Me.OnFK_SETChanging(value)
				Me.SendPropertyChanging
				Me._FK_SET = value
				Me.SendPropertyChanged("FK_SET")
				Me.OnFK_SETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWANM", DbType:="NVarChar(MAX)")>  _
	Public Property IOWANM() As String
		Get
			Return Me._IOWANM
		End Get
		Set
			If (String.Equals(Me._IOWANM, value) = false) Then
				Me.OnIOWANMChanging(value)
				Me.SendPropertyChanging
				Me._IOWANM = value
				Me.SendPropertyChanged("IOWANM")
				Me.OnIOWANMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAMRAP", DbType:="Int")>  _
	Public Property TAMRAP() As System.Nullable(Of Integer)
		Get
			Return Me._TAMRAP
		End Get
		Set
			If (Me._TAMRAP.Equals(value) = false) Then
				Me.OnTAMRAPChanging(value)
				Me.SendPropertyChanging
				Me._TAMRAP = value
				Me.SendPropertyChanged("TAMRAP")
				Me.OnTAMRAPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_DOSESAGE", DbType:="Int")>  _
	Public Property DRUG_DOSESAGE() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_DOSESAGE
		End Get
		Set
			If (Me._DRUG_DOSESAGE.Equals(value) = false) Then
				Me.OnDRUG_DOSESAGEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_DOSESAGE = value
				Me.SendPropertyChanged("DRUG_DOSESAGE")
				Me.OnDRUG_DOSESAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAMRAP_ID", DbType:="Int")>  _
	Public Property TAMRAP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TAMRAP_ID
		End Get
		Set
			If (Me._TAMRAP_ID.Equals(value) = false) Then
				Me.OnTAMRAP_IDChanging(value)
				Me.SendPropertyChanging
				Me._TAMRAP_ID = value
				Me.SendPropertyChanged("TAMRAP_ID")
				Me.OnTAMRAP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTITION", DbType:="NVarChar(50)")>  _
	Public Property CONTITION() As String
		Get
			Return Me._CONTITION
		End Get
		Set
			If (String.Equals(Me._CONTITION, value) = false) Then
				Me.OnCONTITIONChanging(value)
				Me.SendPropertyChanging
				Me._CONTITION = value
				Me.SendPropertyChanged("CONTITION")
				Me.OnCONTITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAL", DbType:="Float")>  _
	Public Property VAL() As System.Nullable(Of Double)
		Get
			Return Me._VAL
		End Get
		Set
			If (Me._VAL.Equals(value) = false) Then
				Me.OnVALChanging(value)
				Me.SendPropertyChanging
				Me._VAL = value
				Me.SendPropertyChanged("VAL")
				Me.OnVALChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[15_TAMRAP_EQTO]")>  _
Partial Public Class _15_TAMRAP_EQTO
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As String
	
	Private _ROWS As String
	
	Private _IOWA As String
	
	Private _QTY As String
	
	Private _MULTIPLY As String
	
	Private _STR_VALUE As String
	
	Private _SUNITCD As String
	
	Private _aori As String
	
	Private _FK_SET As System.Nullable(Of Integer)
	
	Private _mltplr As String
	
	Private _FK_REGIST As System.Nullable(Of Integer)
	
	Private _CONDITION As String
	
	Private _val As System.Nullable(Of Double)
	
	Private _TAMRAP_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnROWSChanging(value As String)
    End Sub
    Partial Private Sub OnROWSChanged()
    End Sub
    Partial Private Sub OnIOWAChanging(value As String)
    End Sub
    Partial Private Sub OnIOWAChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As String)
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnMULTIPLYChanging(value As String)
    End Sub
    Partial Private Sub OnMULTIPLYChanged()
    End Sub
    Partial Private Sub OnSTR_VALUEChanging(value As String)
    End Sub
    Partial Private Sub OnSTR_VALUEChanged()
    End Sub
    Partial Private Sub OnSUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnSUNITCDChanged()
    End Sub
    Partial Private Sub OnaoriChanging(value As String)
    End Sub
    Partial Private Sub OnaoriChanged()
    End Sub
    Partial Private Sub OnFK_SETChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_SETChanged()
    End Sub
    Partial Private Sub OnmltplrChanging(value As String)
    End Sub
    Partial Private Sub OnmltplrChanged()
    End Sub
    Partial Private Sub OnFK_REGISTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_REGISTChanged()
    End Sub
    Partial Private Sub OnCONDITIONChanging(value As String)
    End Sub
    Partial Private Sub OnCONDITIONChanged()
    End Sub
    Partial Private Sub OnvalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnvalChanged()
    End Sub
    Partial Private Sub OnTAMRAP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAMRAP_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROWS", DbType:="NVarChar(MAX)")>  _
	Public Property ROWS() As String
		Get
			Return Me._ROWS
		End Get
		Set
			If (String.Equals(Me._ROWS, value) = false) Then
				Me.OnROWSChanging(value)
				Me.SendPropertyChanging
				Me._ROWS = value
				Me.SendPropertyChanged("ROWS")
				Me.OnROWSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property IOWA() As String
		Get
			Return Me._IOWA
		End Get
		Set
			If (String.Equals(Me._IOWA, value) = false) Then
				Me.OnIOWAChanging(value)
				Me.SendPropertyChanging
				Me._IOWA = value
				Me.SendPropertyChanged("IOWA")
				Me.OnIOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property QTY() As String
		Get
			Return Me._QTY
		End Get
		Set
			If (String.Equals(Me._QTY, value) = false) Then
				Me.OnQTYChanging(value)
				Me.SendPropertyChanging
				Me._QTY = value
				Me.SendPropertyChanged("QTY")
				Me.OnQTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MULTIPLY", DbType:="NVarChar(50)")>  _
	Public Property MULTIPLY() As String
		Get
			Return Me._MULTIPLY
		End Get
		Set
			If (String.Equals(Me._MULTIPLY, value) = false) Then
				Me.OnMULTIPLYChanging(value)
				Me.SendPropertyChanging
				Me._MULTIPLY = value
				Me.SendPropertyChanged("MULTIPLY")
				Me.OnMULTIPLYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STR_VALUE", DbType:="NVarChar(50)")>  _
	Public Property STR_VALUE() As String
		Get
			Return Me._STR_VALUE
		End Get
		Set
			If (String.Equals(Me._STR_VALUE, value) = false) Then
				Me.OnSTR_VALUEChanging(value)
				Me.SendPropertyChanging
				Me._STR_VALUE = value
				Me.SendPropertyChanged("STR_VALUE")
				Me.OnSTR_VALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property SUNITCD() As String
		Get
			Return Me._SUNITCD
		End Get
		Set
			If (String.Equals(Me._SUNITCD, value) = false) Then
				Me.OnSUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._SUNITCD = value
				Me.SendPropertyChanged("SUNITCD")
				Me.OnSUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aori", DbType:="NVarChar(50)")>  _
	Public Property aori() As String
		Get
			Return Me._aori
		End Get
		Set
			If (String.Equals(Me._aori, value) = false) Then
				Me.OnaoriChanging(value)
				Me.SendPropertyChanging
				Me._aori = value
				Me.SendPropertyChanged("aori")
				Me.OnaoriChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SET", DbType:="Int")>  _
	Public Property FK_SET() As System.Nullable(Of Integer)
		Get
			Return Me._FK_SET
		End Get
		Set
			If (Me._FK_SET.Equals(value) = false) Then
				Me.OnFK_SETChanging(value)
				Me.SendPropertyChanging
				Me._FK_SET = value
				Me.SendPropertyChanged("FK_SET")
				Me.OnFK_SETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mltplr", DbType:="NVarChar(50)")>  _
	Public Property mltplr() As String
		Get
			Return Me._mltplr
		End Get
		Set
			If (String.Equals(Me._mltplr, value) = false) Then
				Me.OnmltplrChanging(value)
				Me.SendPropertyChanging
				Me._mltplr = value
				Me.SendPropertyChanged("mltplr")
				Me.OnmltplrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_REGIST", DbType:="Int")>  _
	Public Property FK_REGIST() As System.Nullable(Of Integer)
		Get
			Return Me._FK_REGIST
		End Get
		Set
			If (Me._FK_REGIST.Equals(value) = false) Then
				Me.OnFK_REGISTChanging(value)
				Me.SendPropertyChanging
				Me._FK_REGIST = value
				Me.SendPropertyChanged("FK_REGIST")
				Me.OnFK_REGISTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION", DbType:="NVarChar(MAX)")>  _
	Public Property CONDITION() As String
		Get
			Return Me._CONDITION
		End Get
		Set
			If (String.Equals(Me._CONDITION, value) = false) Then
				Me.OnCONDITIONChanging(value)
				Me.SendPropertyChanging
				Me._CONDITION = value
				Me.SendPropertyChanged("CONDITION")
				Me.OnCONDITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_val", DbType:="Float")>  _
	Public Property val() As System.Nullable(Of Double)
		Get
			Return Me._val
		End Get
		Set
			If (Me._val.Equals(value) = false) Then
				Me.OnvalChanging(value)
				Me.SendPropertyChanging
				Me._val = value
				Me.SendPropertyChanged("val")
				Me.OnvalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAMRAP_ID", DbType:="Int")>  _
	Public Property TAMRAP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TAMRAP_ID
		End Get
		Set
			If (Me._TAMRAP_ID.Equals(value) = false) Then
				Me.OnTAMRAP_IDChanging(value)
				Me.SendPropertyChanging
				Me._TAMRAP_ID = value
				Me.SendPropertyChanged("TAMRAP_ID")
				Me.OnTAMRAP_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.genno_temp")>  _
Partial Public Class genno_temp
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _GENNO As String
	
	Private _create_date As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnGENNOChanging(value As String)
    End Sub
    Partial Private Sub OnGENNOChanged()
    End Sub
    Partial Private Sub Oncreate_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreate_dateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENNO", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property GENNO() As String
		Get
			Return Me._GENNO
		End Get
		Set
			If (String.Equals(Me._GENNO, value) = false) Then
				Me.OnGENNOChanging(value)
				Me.SendPropertyChanging
				Me._GENNO = value
				Me.SendPropertyChanged("GENNO")
				Me.OnGENNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_create_date", DbType:="DateTime")>  _
	Public Property create_date() As System.Nullable(Of Date)
		Get
			Return Me._create_date
		End Get
		Set
			If (Me._create_date.Equals(value) = false) Then
				Me.Oncreate_dateChanging(value)
				Me.SendPropertyChanging
				Me._create_date = value
				Me.SendPropertyChanged("create_date")
				Me.Oncreate_dateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[15_TAMRAP_IOWA_DDL]")>  _
Partial Public Class _15_TAMRAP_IOWA_DDL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ROWS As String
	
	Private _IOWA As String
	
	Private _QTY As String
	
	Private _SUNITCD As String
	
	Private _EQTO_IOWA As String
	
	Private _EQTO_QTY As String
	
	Private _EQTO_SUNITCD As String
	
	Private _BASE_FORM As String
	
	Private _AORI As String
	
	Private _FK_SET As System.Nullable(Of Integer)
	
	Private _IOWANM As String
	
	Private _TAMRAP As System.Nullable(Of Integer)
	
	Private _DRUG_DOSESAGE As System.Nullable(Of Integer)
	
	Private _REMARK As String
	
	Private _TAMRAP_ID As System.Nullable(Of Integer)
	
	Private _CONTITION As String
	
	Private _VAL As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnROWSChanging(value As String)
    End Sub
    Partial Private Sub OnROWSChanged()
    End Sub
    Partial Private Sub OnIOWAChanging(value As String)
    End Sub
    Partial Private Sub OnIOWAChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As String)
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnSUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnSUNITCDChanged()
    End Sub
    Partial Private Sub OnEQTO_IOWAChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_IOWAChanged()
    End Sub
    Partial Private Sub OnEQTO_QTYChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_QTYChanged()
    End Sub
    Partial Private Sub OnEQTO_SUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_SUNITCDChanged()
    End Sub
    Partial Private Sub OnBASE_FORMChanging(value As String)
    End Sub
    Partial Private Sub OnBASE_FORMChanged()
    End Sub
    Partial Private Sub OnAORIChanging(value As String)
    End Sub
    Partial Private Sub OnAORIChanged()
    End Sub
    Partial Private Sub OnFK_SETChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_SETChanged()
    End Sub
    Partial Private Sub OnIOWANMChanging(value As String)
    End Sub
    Partial Private Sub OnIOWANMChanged()
    End Sub
    Partial Private Sub OnTAMRAPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAMRAPChanged()
    End Sub
    Partial Private Sub OnDRUG_DOSESAGEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_DOSESAGEChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnTAMRAP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAMRAP_IDChanged()
    End Sub
    Partial Private Sub OnCONTITIONChanging(value As String)
    End Sub
    Partial Private Sub OnCONTITIONChanged()
    End Sub
    Partial Private Sub OnVALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVALChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROWS", DbType:="NVarChar(MAX)")>  _
	Public Property ROWS() As String
		Get
			Return Me._ROWS
		End Get
		Set
			If (String.Equals(Me._ROWS, value) = false) Then
				Me.OnROWSChanging(value)
				Me.SendPropertyChanging
				Me._ROWS = value
				Me.SendPropertyChanged("ROWS")
				Me.OnROWSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property IOWA() As String
		Get
			Return Me._IOWA
		End Get
		Set
			If (String.Equals(Me._IOWA, value) = false) Then
				Me.OnIOWAChanging(value)
				Me.SendPropertyChanging
				Me._IOWA = value
				Me.SendPropertyChanged("IOWA")
				Me.OnIOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property QTY() As String
		Get
			Return Me._QTY
		End Get
		Set
			If (String.Equals(Me._QTY, value) = false) Then
				Me.OnQTYChanging(value)
				Me.SendPropertyChanging
				Me._QTY = value
				Me.SendPropertyChanged("QTY")
				Me.OnQTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property SUNITCD() As String
		Get
			Return Me._SUNITCD
		End Get
		Set
			If (String.Equals(Me._SUNITCD, value) = false) Then
				Me.OnSUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._SUNITCD = value
				Me.SendPropertyChanged("SUNITCD")
				Me.OnSUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_IOWA() As String
		Get
			Return Me._EQTO_IOWA
		End Get
		Set
			If (String.Equals(Me._EQTO_IOWA, value) = false) Then
				Me.OnEQTO_IOWAChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_IOWA = value
				Me.SendPropertyChanged("EQTO_IOWA")
				Me.OnEQTO_IOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_QTY() As String
		Get
			Return Me._EQTO_QTY
		End Get
		Set
			If (String.Equals(Me._EQTO_QTY, value) = false) Then
				Me.OnEQTO_QTYChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_QTY = value
				Me.SendPropertyChanged("EQTO_QTY")
				Me.OnEQTO_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_SUNITCD() As String
		Get
			Return Me._EQTO_SUNITCD
		End Get
		Set
			If (String.Equals(Me._EQTO_SUNITCD, value) = false) Then
				Me.OnEQTO_SUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_SUNITCD = value
				Me.SendPropertyChanged("EQTO_SUNITCD")
				Me.OnEQTO_SUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASE_FORM", DbType:="NVarChar(MAX)")>  _
	Public Property BASE_FORM() As String
		Get
			Return Me._BASE_FORM
		End Get
		Set
			If (String.Equals(Me._BASE_FORM, value) = false) Then
				Me.OnBASE_FORMChanging(value)
				Me.SendPropertyChanging
				Me._BASE_FORM = value
				Me.SendPropertyChanged("BASE_FORM")
				Me.OnBASE_FORMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AORI", DbType:="NVarChar(50)")>  _
	Public Property AORI() As String
		Get
			Return Me._AORI
		End Get
		Set
			If (String.Equals(Me._AORI, value) = false) Then
				Me.OnAORIChanging(value)
				Me.SendPropertyChanging
				Me._AORI = value
				Me.SendPropertyChanged("AORI")
				Me.OnAORIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SET", DbType:="Int")>  _
	Public Property FK_SET() As System.Nullable(Of Integer)
		Get
			Return Me._FK_SET
		End Get
		Set
			If (Me._FK_SET.Equals(value) = false) Then
				Me.OnFK_SETChanging(value)
				Me.SendPropertyChanging
				Me._FK_SET = value
				Me.SendPropertyChanged("FK_SET")
				Me.OnFK_SETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWANM", DbType:="NVarChar(MAX)")>  _
	Public Property IOWANM() As String
		Get
			Return Me._IOWANM
		End Get
		Set
			If (String.Equals(Me._IOWANM, value) = false) Then
				Me.OnIOWANMChanging(value)
				Me.SendPropertyChanging
				Me._IOWANM = value
				Me.SendPropertyChanged("IOWANM")
				Me.OnIOWANMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAMRAP", DbType:="Int")>  _
	Public Property TAMRAP() As System.Nullable(Of Integer)
		Get
			Return Me._TAMRAP
		End Get
		Set
			If (Me._TAMRAP.Equals(value) = false) Then
				Me.OnTAMRAPChanging(value)
				Me.SendPropertyChanging
				Me._TAMRAP = value
				Me.SendPropertyChanged("TAMRAP")
				Me.OnTAMRAPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_DOSESAGE", DbType:="Int")>  _
	Public Property DRUG_DOSESAGE() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_DOSESAGE
		End Get
		Set
			If (Me._DRUG_DOSESAGE.Equals(value) = false) Then
				Me.OnDRUG_DOSESAGEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_DOSESAGE = value
				Me.SendPropertyChanged("DRUG_DOSESAGE")
				Me.OnDRUG_DOSESAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAMRAP_ID", DbType:="Int")>  _
	Public Property TAMRAP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TAMRAP_ID
		End Get
		Set
			If (Me._TAMRAP_ID.Equals(value) = false) Then
				Me.OnTAMRAP_IDChanging(value)
				Me.SendPropertyChanging
				Me._TAMRAP_ID = value
				Me.SendPropertyChanged("TAMRAP_ID")
				Me.OnTAMRAP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTITION", DbType:="NVarChar(50)")>  _
	Public Property CONTITION() As String
		Get
			Return Me._CONTITION
		End Get
		Set
			If (String.Equals(Me._CONTITION, value) = false) Then
				Me.OnCONTITIONChanging(value)
				Me.SendPropertyChanging
				Me._CONTITION = value
				Me.SendPropertyChanged("CONTITION")
				Me.OnCONTITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VAL", DbType:="Float")>  _
	Public Property VAL() As System.Nullable(Of Double)
		Get
			Return Me._VAL
		End Get
		Set
			If (Me._VAL.Equals(value) = false) Then
				Me.OnVALChanging(value)
				Me.SendPropertyChanging
				Me._VAL = value
				Me.SendPropertyChanged("VAL")
				Me.OnVALChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[15_TAMRAP_EQTO_DDL]")>  _
Partial Public Class _15_TAMRAP_EQTO_DDL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As String
	
	Private _ROWS As String
	
	Private _IOWA As String
	
	Private _QTY As String
	
	Private _MULTIPLY As String
	
	Private _STR_VALUE As String
	
	Private _SUNITCD As String
	
	Private _aori As String
	
	Private _FK_SET As System.Nullable(Of Integer)
	
	Private _mltplr As String
	
	Private _FK_REGIST As System.Nullable(Of Integer)
	
	Private _CONDITION As String
	
	Private _val As System.Nullable(Of Double)
	
	Private _TAMRAP_ID As System.Nullable(Of Integer)
	
	Private _IOWA_HEAD As String
	
	Private _IOWANM As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnROWSChanging(value As String)
    End Sub
    Partial Private Sub OnROWSChanged()
    End Sub
    Partial Private Sub OnIOWAChanging(value As String)
    End Sub
    Partial Private Sub OnIOWAChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As String)
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnMULTIPLYChanging(value As String)
    End Sub
    Partial Private Sub OnMULTIPLYChanged()
    End Sub
    Partial Private Sub OnSTR_VALUEChanging(value As String)
    End Sub
    Partial Private Sub OnSTR_VALUEChanged()
    End Sub
    Partial Private Sub OnSUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnSUNITCDChanged()
    End Sub
    Partial Private Sub OnaoriChanging(value As String)
    End Sub
    Partial Private Sub OnaoriChanged()
    End Sub
    Partial Private Sub OnFK_SETChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_SETChanged()
    End Sub
    Partial Private Sub OnmltplrChanging(value As String)
    End Sub
    Partial Private Sub OnmltplrChanged()
    End Sub
    Partial Private Sub OnFK_REGISTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_REGISTChanged()
    End Sub
    Partial Private Sub OnCONDITIONChanging(value As String)
    End Sub
    Partial Private Sub OnCONDITIONChanged()
    End Sub
    Partial Private Sub OnvalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnvalChanged()
    End Sub
    Partial Private Sub OnTAMRAP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAMRAP_IDChanged()
    End Sub
    Partial Private Sub OnIOWA_HEADChanging(value As String)
    End Sub
    Partial Private Sub OnIOWA_HEADChanged()
    End Sub
    Partial Private Sub OnIOWANMChanging(value As String)
    End Sub
    Partial Private Sub OnIOWANMChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROWS", DbType:="NVarChar(MAX)")>  _
	Public Property ROWS() As String
		Get
			Return Me._ROWS
		End Get
		Set
			If (String.Equals(Me._ROWS, value) = false) Then
				Me.OnROWSChanging(value)
				Me.SendPropertyChanging
				Me._ROWS = value
				Me.SendPropertyChanged("ROWS")
				Me.OnROWSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property IOWA() As String
		Get
			Return Me._IOWA
		End Get
		Set
			If (String.Equals(Me._IOWA, value) = false) Then
				Me.OnIOWAChanging(value)
				Me.SendPropertyChanging
				Me._IOWA = value
				Me.SendPropertyChanged("IOWA")
				Me.OnIOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property QTY() As String
		Get
			Return Me._QTY
		End Get
		Set
			If (String.Equals(Me._QTY, value) = false) Then
				Me.OnQTYChanging(value)
				Me.SendPropertyChanging
				Me._QTY = value
				Me.SendPropertyChanged("QTY")
				Me.OnQTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MULTIPLY", DbType:="NVarChar(50)")>  _
	Public Property MULTIPLY() As String
		Get
			Return Me._MULTIPLY
		End Get
		Set
			If (String.Equals(Me._MULTIPLY, value) = false) Then
				Me.OnMULTIPLYChanging(value)
				Me.SendPropertyChanging
				Me._MULTIPLY = value
				Me.SendPropertyChanged("MULTIPLY")
				Me.OnMULTIPLYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STR_VALUE", DbType:="NVarChar(50)")>  _
	Public Property STR_VALUE() As String
		Get
			Return Me._STR_VALUE
		End Get
		Set
			If (String.Equals(Me._STR_VALUE, value) = false) Then
				Me.OnSTR_VALUEChanging(value)
				Me.SendPropertyChanging
				Me._STR_VALUE = value
				Me.SendPropertyChanged("STR_VALUE")
				Me.OnSTR_VALUEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property SUNITCD() As String
		Get
			Return Me._SUNITCD
		End Get
		Set
			If (String.Equals(Me._SUNITCD, value) = false) Then
				Me.OnSUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._SUNITCD = value
				Me.SendPropertyChanged("SUNITCD")
				Me.OnSUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aori", DbType:="NVarChar(50)")>  _
	Public Property aori() As String
		Get
			Return Me._aori
		End Get
		Set
			If (String.Equals(Me._aori, value) = false) Then
				Me.OnaoriChanging(value)
				Me.SendPropertyChanging
				Me._aori = value
				Me.SendPropertyChanged("aori")
				Me.OnaoriChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SET", DbType:="Int")>  _
	Public Property FK_SET() As System.Nullable(Of Integer)
		Get
			Return Me._FK_SET
		End Get
		Set
			If (Me._FK_SET.Equals(value) = false) Then
				Me.OnFK_SETChanging(value)
				Me.SendPropertyChanging
				Me._FK_SET = value
				Me.SendPropertyChanged("FK_SET")
				Me.OnFK_SETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mltplr", DbType:="NVarChar(50)")>  _
	Public Property mltplr() As String
		Get
			Return Me._mltplr
		End Get
		Set
			If (String.Equals(Me._mltplr, value) = false) Then
				Me.OnmltplrChanging(value)
				Me.SendPropertyChanging
				Me._mltplr = value
				Me.SendPropertyChanged("mltplr")
				Me.OnmltplrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_REGIST", DbType:="Int")>  _
	Public Property FK_REGIST() As System.Nullable(Of Integer)
		Get
			Return Me._FK_REGIST
		End Get
		Set
			If (Me._FK_REGIST.Equals(value) = false) Then
				Me.OnFK_REGISTChanging(value)
				Me.SendPropertyChanging
				Me._FK_REGIST = value
				Me.SendPropertyChanged("FK_REGIST")
				Me.OnFK_REGISTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION", DbType:="NVarChar(MAX)")>  _
	Public Property CONDITION() As String
		Get
			Return Me._CONDITION
		End Get
		Set
			If (String.Equals(Me._CONDITION, value) = false) Then
				Me.OnCONDITIONChanging(value)
				Me.SendPropertyChanging
				Me._CONDITION = value
				Me.SendPropertyChanged("CONDITION")
				Me.OnCONDITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_val", DbType:="Float")>  _
	Public Property val() As System.Nullable(Of Double)
		Get
			Return Me._val
		End Get
		Set
			If (Me._val.Equals(value) = false) Then
				Me.OnvalChanging(value)
				Me.SendPropertyChanging
				Me._val = value
				Me.SendPropertyChanged("val")
				Me.OnvalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAMRAP_ID", DbType:="Int")>  _
	Public Property TAMRAP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TAMRAP_ID
		End Get
		Set
			If (Me._TAMRAP_ID.Equals(value) = false) Then
				Me.OnTAMRAP_IDChanging(value)
				Me.SendPropertyChanging
				Me._TAMRAP_ID = value
				Me.SendPropertyChanged("TAMRAP_ID")
				Me.OnTAMRAP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWA_HEAD", DbType:="NVarChar(MAX)")>  _
	Public Property IOWA_HEAD() As String
		Get
			Return Me._IOWA_HEAD
		End Get
		Set
			If (String.Equals(Me._IOWA_HEAD, value) = false) Then
				Me.OnIOWA_HEADChanging(value)
				Me.SendPropertyChanging
				Me._IOWA_HEAD = value
				Me.SendPropertyChanged("IOWA_HEAD")
				Me.OnIOWA_HEADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWANM", DbType:="NVarChar(MAX)")>  _
	Public Property IOWANM() As String
		Get
			Return Me._IOWANM
		End Get
		Set
			If (String.Equals(Me._IOWANM, value) = false) Then
				Me.OnIOWANMChanging(value)
				Me.SendPropertyChanging
				Me._IOWANM = value
				Me.SendPropertyChanged("IOWANM")
				Me.OnIOWANMChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[15_TAMRAP_GENERAL]")>  _
Partial Public Class _15_TAMRAP_GENERAL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TAMRAP_ID As System.Nullable(Of Integer)
	
	Private _dsgcd As System.Nullable(Of Integer)
	
	Private _classcd As System.Nullable(Of Integer)
	
	Private _kindcd As System.Nullable(Of Integer)
	
	Private _NORMAL_UNIT As System.Nullable(Of Integer)
	
	Private _ctgcd As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTAMRAP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAMRAP_IDChanged()
    End Sub
    Partial Private Sub OndsgcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OndsgcdChanged()
    End Sub
    Partial Private Sub OnclasscdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnclasscdChanged()
    End Sub
    Partial Private Sub OnkindcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnkindcdChanged()
    End Sub
    Partial Private Sub OnNORMAL_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNORMAL_UNITChanged()
    End Sub
    Partial Private Sub OnctgcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnctgcdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAMRAP_ID", DbType:="Int")>  _
	Public Property TAMRAP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TAMRAP_ID
		End Get
		Set
			If (Me._TAMRAP_ID.Equals(value) = false) Then
				Me.OnTAMRAP_IDChanging(value)
				Me.SendPropertyChanging
				Me._TAMRAP_ID = value
				Me.SendPropertyChanged("TAMRAP_ID")
				Me.OnTAMRAP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dsgcd", DbType:="Int")>  _
	Public Property dsgcd() As System.Nullable(Of Integer)
		Get
			Return Me._dsgcd
		End Get
		Set
			If (Me._dsgcd.Equals(value) = false) Then
				Me.OndsgcdChanging(value)
				Me.SendPropertyChanging
				Me._dsgcd = value
				Me.SendPropertyChanged("dsgcd")
				Me.OndsgcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_classcd", DbType:="Int")>  _
	Public Property classcd() As System.Nullable(Of Integer)
		Get
			Return Me._classcd
		End Get
		Set
			If (Me._classcd.Equals(value) = false) Then
				Me.OnclasscdChanging(value)
				Me.SendPropertyChanging
				Me._classcd = value
				Me.SendPropertyChanged("classcd")
				Me.OnclasscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_kindcd", DbType:="Int")>  _
	Public Property kindcd() As System.Nullable(Of Integer)
		Get
			Return Me._kindcd
		End Get
		Set
			If (Me._kindcd.Equals(value) = false) Then
				Me.OnkindcdChanging(value)
				Me.SendPropertyChanging
				Me._kindcd = value
				Me.SendPropertyChanged("kindcd")
				Me.OnkindcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NORMAL_UNIT", DbType:="Int")>  _
	Public Property NORMAL_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._NORMAL_UNIT
		End Get
		Set
			If (Me._NORMAL_UNIT.Equals(value) = false) Then
				Me.OnNORMAL_UNITChanging(value)
				Me.SendPropertyChanging
				Me._NORMAL_UNIT = value
				Me.SendPropertyChanged("NORMAL_UNIT")
				Me.OnNORMAL_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctgcd", DbType:="Int")>  _
	Public Property ctgcd() As System.Nullable(Of Integer)
		Get
			Return Me._ctgcd
		End Get
		Set
			If (Me._ctgcd.Equals(value) = false) Then
				Me.OnctgcdChanging(value)
				Me.SendPropertyChanging
				Me._ctgcd = value
				Me.SendPropertyChanged("ctgcd")
				Me.OnctgcdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[15_TAMRAP_PACK_DETAIL]")>  _
Partial Public Class _15_TAMRAP_PACK_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TAMRAP_ID As System.Nullable(Of Integer)
	
	Private _MEDIUM_UNIT As System.Nullable(Of Integer)
	
	Private _SMALL_AMOUNT As System.Nullable(Of Double)
	
	Private _SMALL_UNIT As String
	
	Private _BIG_UNIT As System.Nullable(Of Integer)
	
	Private _MEDIUM_AMOUNT As System.Nullable(Of Double)
	
	Private _BARCODE As String
	
	Private _CHECK_PACKAGE As System.Nullable(Of Boolean)
	
	Private _PACKAGE_NAME As String
	
	Private _SUM As String
	
	Private _IM_QTY As String
	
	Private _IM_DETAIL As String
	
	Private _DATE_ADD As System.Nullable(Of Date)
	
	Private _order_id As String
	
	Private _BIG_AMOUNT As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTAMRAP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAMRAP_IDChanged()
    End Sub
    Partial Private Sub OnMEDIUM_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMEDIUM_UNITChanged()
    End Sub
    Partial Private Sub OnSMALL_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSMALL_AMOUNTChanged()
    End Sub
    Partial Private Sub OnSMALL_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnSMALL_UNITChanged()
    End Sub
    Partial Private Sub OnBIG_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBIG_UNITChanged()
    End Sub
    Partial Private Sub OnMEDIUM_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMEDIUM_AMOUNTChanged()
    End Sub
    Partial Private Sub OnBARCODEChanging(value As String)
    End Sub
    Partial Private Sub OnBARCODEChanged()
    End Sub
    Partial Private Sub OnCHECK_PACKAGEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCHECK_PACKAGEChanged()
    End Sub
    Partial Private Sub OnPACKAGE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPACKAGE_NAMEChanged()
    End Sub
    Partial Private Sub OnSUMChanging(value As String)
    End Sub
    Partial Private Sub OnSUMChanged()
    End Sub
    Partial Private Sub OnIM_QTYChanging(value As String)
    End Sub
    Partial Private Sub OnIM_QTYChanged()
    End Sub
    Partial Private Sub OnIM_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnIM_DETAILChanged()
    End Sub
    Partial Private Sub OnDATE_ADDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_ADDChanged()
    End Sub
    Partial Private Sub Onorder_idChanging(value As String)
    End Sub
    Partial Private Sub Onorder_idChanged()
    End Sub
    Partial Private Sub OnBIG_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBIG_AMOUNTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAMRAP_ID", DbType:="Int")>  _
	Public Property TAMRAP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TAMRAP_ID
		End Get
		Set
			If (Me._TAMRAP_ID.Equals(value) = false) Then
				Me.OnTAMRAP_IDChanging(value)
				Me.SendPropertyChanging
				Me._TAMRAP_ID = value
				Me.SendPropertyChanged("TAMRAP_ID")
				Me.OnTAMRAP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDIUM_UNIT", DbType:="Int")>  _
	Public Property MEDIUM_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._MEDIUM_UNIT
		End Get
		Set
			If (Me._MEDIUM_UNIT.Equals(value) = false) Then
				Me.OnMEDIUM_UNITChanging(value)
				Me.SendPropertyChanging
				Me._MEDIUM_UNIT = value
				Me.SendPropertyChanged("MEDIUM_UNIT")
				Me.OnMEDIUM_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_AMOUNT", DbType:="Float")>  _
	Public Property SMALL_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._SMALL_AMOUNT
		End Get
		Set
			If (Me._SMALL_AMOUNT.Equals(value) = false) Then
				Me.OnSMALL_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_AMOUNT = value
				Me.SendPropertyChanged("SMALL_AMOUNT")
				Me.OnSMALL_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_UNIT", DbType:="NVarChar(MAX)")>  _
	Public Property SMALL_UNIT() As String
		Get
			Return Me._SMALL_UNIT
		End Get
		Set
			If (String.Equals(Me._SMALL_UNIT, value) = false) Then
				Me.OnSMALL_UNITChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_UNIT = value
				Me.SendPropertyChanged("SMALL_UNIT")
				Me.OnSMALL_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIG_UNIT", DbType:="Int")>  _
	Public Property BIG_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._BIG_UNIT
		End Get
		Set
			If (Me._BIG_UNIT.Equals(value) = false) Then
				Me.OnBIG_UNITChanging(value)
				Me.SendPropertyChanging
				Me._BIG_UNIT = value
				Me.SendPropertyChanged("BIG_UNIT")
				Me.OnBIG_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEDIUM_AMOUNT", DbType:="Float")>  _
	Public Property MEDIUM_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._MEDIUM_AMOUNT
		End Get
		Set
			If (Me._MEDIUM_AMOUNT.Equals(value) = false) Then
				Me.OnMEDIUM_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._MEDIUM_AMOUNT = value
				Me.SendPropertyChanged("MEDIUM_AMOUNT")
				Me.OnMEDIUM_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BARCODE", DbType:="NVarChar(MAX)")>  _
	Public Property BARCODE() As String
		Get
			Return Me._BARCODE
		End Get
		Set
			If (String.Equals(Me._BARCODE, value) = false) Then
				Me.OnBARCODEChanging(value)
				Me.SendPropertyChanging
				Me._BARCODE = value
				Me.SendPropertyChanged("BARCODE")
				Me.OnBARCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHECK_PACKAGE", DbType:="Bit")>  _
	Public Property CHECK_PACKAGE() As System.Nullable(Of Boolean)
		Get
			Return Me._CHECK_PACKAGE
		End Get
		Set
			If (Me._CHECK_PACKAGE.Equals(value) = false) Then
				Me.OnCHECK_PACKAGEChanging(value)
				Me.SendPropertyChanging
				Me._CHECK_PACKAGE = value
				Me.SendPropertyChanged("CHECK_PACKAGE")
				Me.OnCHECK_PACKAGEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PACKAGE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PACKAGE_NAME() As String
		Get
			Return Me._PACKAGE_NAME
		End Get
		Set
			If (String.Equals(Me._PACKAGE_NAME, value) = false) Then
				Me.OnPACKAGE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PACKAGE_NAME = value
				Me.SendPropertyChanged("PACKAGE_NAME")
				Me.OnPACKAGE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUM", DbType:="NVarChar(MAX)")>  _
	Public Property SUM() As String
		Get
			Return Me._SUM
		End Get
		Set
			If (String.Equals(Me._SUM, value) = false) Then
				Me.OnSUMChanging(value)
				Me.SendPropertyChanging
				Me._SUM = value
				Me.SendPropertyChanged("SUM")
				Me.OnSUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IM_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property IM_QTY() As String
		Get
			Return Me._IM_QTY
		End Get
		Set
			If (String.Equals(Me._IM_QTY, value) = false) Then
				Me.OnIM_QTYChanging(value)
				Me.SendPropertyChanging
				Me._IM_QTY = value
				Me.SendPropertyChanged("IM_QTY")
				Me.OnIM_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IM_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property IM_DETAIL() As String
		Get
			Return Me._IM_DETAIL
		End Get
		Set
			If (String.Equals(Me._IM_DETAIL, value) = false) Then
				Me.OnIM_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._IM_DETAIL = value
				Me.SendPropertyChanged("IM_DETAIL")
				Me.OnIM_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_ADD", DbType:="Date")>  _
	Public Property DATE_ADD() As System.Nullable(Of Date)
		Get
			Return Me._DATE_ADD
		End Get
		Set
			If (Me._DATE_ADD.Equals(value) = false) Then
				Me.OnDATE_ADDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_ADD = value
				Me.SendPropertyChanged("DATE_ADD")
				Me.OnDATE_ADDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_order_id", DbType:="NVarChar(MAX)")>  _
	Public Property order_id() As String
		Get
			Return Me._order_id
		End Get
		Set
			If (String.Equals(Me._order_id, value) = false) Then
				Me.Onorder_idChanging(value)
				Me.SendPropertyChanging
				Me._order_id = value
				Me.SendPropertyChanged("order_id")
				Me.Onorder_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIG_AMOUNT", DbType:="Float")>  _
	Public Property BIG_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._BIG_AMOUNT
		End Get
		Set
			If (Me._BIG_AMOUNT.Equals(value) = false) Then
				Me.OnBIG_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._BIG_AMOUNT = value
				Me.SendPropertyChanged("BIG_AMOUNT")
				Me.OnBIG_AMOUNTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[15_TAMRAP_CONDITION]")>  _
Partial Public Class _15_TAMRAP_CONDITION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TAMRAP_ID As System.Nullable(Of Integer)
	
	Private _CONDITION1 As String
	
	Private _CONDITION2 As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTAMRAP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAMRAP_IDChanged()
    End Sub
    Partial Private Sub OnCONDITION1Changing(value As String)
    End Sub
    Partial Private Sub OnCONDITION1Changed()
    End Sub
    Partial Private Sub OnCONDITION2Changing(value As String)
    End Sub
    Partial Private Sub OnCONDITION2Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAMRAP_ID", DbType:="Int")>  _
	Public Property TAMRAP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TAMRAP_ID
		End Get
		Set
			If (Me._TAMRAP_ID.Equals(value) = false) Then
				Me.OnTAMRAP_IDChanging(value)
				Me.SendPropertyChanging
				Me._TAMRAP_ID = value
				Me.SendPropertyChanged("TAMRAP_ID")
				Me.OnTAMRAP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION1", DbType:="NVarChar(MAX)")>  _
	Public Property CONDITION1() As String
		Get
			Return Me._CONDITION1
		End Get
		Set
			If (String.Equals(Me._CONDITION1, value) = false) Then
				Me.OnCONDITION1Changing(value)
				Me.SendPropertyChanging
				Me._CONDITION1 = value
				Me.SendPropertyChanged("CONDITION1")
				Me.OnCONDITION1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION2", DbType:="NVarChar(MAX)")>  _
	Public Property CONDITION2() As String
		Get
			Return Me._CONDITION2
		End Get
		Set
			If (String.Equals(Me._CONDITION2, value) = false) Then
				Me.OnCONDITION2Changing(value)
				Me.SendPropertyChanging
				Me._CONDITION2 = value
				Me.SendPropertyChanged("CONDITION2")
				Me.OnCONDITION2Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_TAMRAP_NAME")>  _
Partial Public Class MAS_TAMRAP_NAME
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TAMRAP_ID As System.Nullable(Of Integer)
	
	Private _TAMRAP_NAME As String
	
	Private _IS_AUTO As System.Nullable(Of Integer)
	
	Private _USE_DDL As System.Nullable(Of Integer)
	
	Private _TAMRAP_NAME_ENG As String
	
	Private _AUTO_GROUP As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTAMRAP_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTAMRAP_IDChanged()
    End Sub
    Partial Private Sub OnTAMRAP_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTAMRAP_NAMEChanged()
    End Sub
    Partial Private Sub OnIS_AUTOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIS_AUTOChanged()
    End Sub
    Partial Private Sub OnUSE_DDLChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUSE_DDLChanged()
    End Sub
    Partial Private Sub OnTAMRAP_NAME_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnTAMRAP_NAME_ENGChanged()
    End Sub
    Partial Private Sub OnAUTO_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAUTO_GROUPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAMRAP_ID", DbType:="Int")>  _
	Public Property TAMRAP_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TAMRAP_ID
		End Get
		Set
			If (Me._TAMRAP_ID.Equals(value) = false) Then
				Me.OnTAMRAP_IDChanging(value)
				Me.SendPropertyChanging
				Me._TAMRAP_ID = value
				Me.SendPropertyChanged("TAMRAP_ID")
				Me.OnTAMRAP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAMRAP_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TAMRAP_NAME() As String
		Get
			Return Me._TAMRAP_NAME
		End Get
		Set
			If (String.Equals(Me._TAMRAP_NAME, value) = false) Then
				Me.OnTAMRAP_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TAMRAP_NAME = value
				Me.SendPropertyChanged("TAMRAP_NAME")
				Me.OnTAMRAP_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_AUTO", DbType:="Int")>  _
	Public Property IS_AUTO() As System.Nullable(Of Integer)
		Get
			Return Me._IS_AUTO
		End Get
		Set
			If (Me._IS_AUTO.Equals(value) = false) Then
				Me.OnIS_AUTOChanging(value)
				Me.SendPropertyChanging
				Me._IS_AUTO = value
				Me.SendPropertyChanged("IS_AUTO")
				Me.OnIS_AUTOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USE_DDL", DbType:="Int")>  _
	Public Property USE_DDL() As System.Nullable(Of Integer)
		Get
			Return Me._USE_DDL
		End Get
		Set
			If (Me._USE_DDL.Equals(value) = false) Then
				Me.OnUSE_DDLChanging(value)
				Me.SendPropertyChanging
				Me._USE_DDL = value
				Me.SendPropertyChanged("USE_DDL")
				Me.OnUSE_DDLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAMRAP_NAME_ENG", DbType:="NVarChar(MAX)")>  _
	Public Property TAMRAP_NAME_ENG() As String
		Get
			Return Me._TAMRAP_NAME_ENG
		End Get
		Set
			If (String.Equals(Me._TAMRAP_NAME_ENG, value) = false) Then
				Me.OnTAMRAP_NAME_ENGChanging(value)
				Me.SendPropertyChanging
				Me._TAMRAP_NAME_ENG = value
				Me.SendPropertyChanged("TAMRAP_NAME_ENG")
				Me.OnTAMRAP_NAME_ENGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AUTO_GROUP", DbType:="Int")>  _
	Public Property AUTO_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._AUTO_GROUP
		End Get
		Set
			If (Me._AUTO_GROUP.Equals(value) = false) Then
				Me.OnAUTO_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._AUTO_GROUP = value
				Me.SendPropertyChanged("AUTO_GROUP")
				Me.OnAUTO_GROUPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_EDIT_PRODUCT_ESUB_BC")>  _
Partial Public Class LOG_EDIT_PRODUCT_ESUB_BC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As String
	
	Private _drgtpcd As String
	
	Private _rgttpcd As String
	
	Private _rgtno As String
	
	Private _IDA_drrgt As System.Nullable(Of Integer)
	
	Private _Newcode_U As String
	
	Private _ADMIN_ID As String
	
	Private _USER_ID_EDIT As String
	
	Private _IDENTIFY_EDIT As String
	
	Private _PREVIOUS_DETAIL_EDIT As String
	
	Private _NEW_DETAIL_EDIT As String
	
	Private _URL As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _STATUS As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnrgttpcdChanging(value As String)
    End Sub
    Partial Private Sub OnrgttpcdChanged()
    End Sub
    Partial Private Sub OnrgtnoChanging(value As String)
    End Sub
    Partial Private Sub OnrgtnoChanged()
    End Sub
    Partial Private Sub OnIDA_drrgtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDA_drrgtChanged()
    End Sub
    Partial Private Sub OnNewcode_UChanging(value As String)
    End Sub
    Partial Private Sub OnNewcode_UChanged()
    End Sub
    Partial Private Sub OnADMIN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnADMIN_IDChanged()
    End Sub
    Partial Private Sub OnUSER_ID_EDITChanging(value As String)
    End Sub
    Partial Private Sub OnUSER_ID_EDITChanged()
    End Sub
    Partial Private Sub OnIDENTIFY_EDITChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFY_EDITChanged()
    End Sub
    Partial Private Sub OnPREVIOUS_DETAIL_EDITChanging(value As String)
    End Sub
    Partial Private Sub OnPREVIOUS_DETAIL_EDITChanged()
    End Sub
    Partial Private Sub OnNEW_DETAIL_EDITChanging(value As String)
    End Sub
    Partial Private Sub OnNEW_DETAIL_EDITChanged()
    End Sub
    Partial Private Sub OnURLChanging(value As String)
    End Sub
    Partial Private Sub OnURLChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(50)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgttpcd", DbType:="NVarChar(50)")>  _
	Public Property rgttpcd() As String
		Get
			Return Me._rgttpcd
		End Get
		Set
			If (String.Equals(Me._rgttpcd, value) = false) Then
				Me.OnrgttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rgttpcd = value
				Me.SendPropertyChanged("rgttpcd")
				Me.OnrgttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rgtno", DbType:="NVarChar(50)")>  _
	Public Property rgtno() As String
		Get
			Return Me._rgtno
		End Get
		Set
			If (String.Equals(Me._rgtno, value) = false) Then
				Me.OnrgtnoChanging(value)
				Me.SendPropertyChanging
				Me._rgtno = value
				Me.SendPropertyChanged("rgtno")
				Me.OnrgtnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA_drrgt", DbType:="Int")>  _
	Public Property IDA_drrgt() As System.Nullable(Of Integer)
		Get
			Return Me._IDA_drrgt
		End Get
		Set
			If (Me._IDA_drrgt.Equals(value) = false) Then
				Me.OnIDA_drrgtChanging(value)
				Me.SendPropertyChanging
				Me._IDA_drrgt = value
				Me.SendPropertyChanged("IDA_drrgt")
				Me.OnIDA_drrgtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Newcode_U", DbType:="NVarChar(MAX)")>  _
	Public Property Newcode_U() As String
		Get
			Return Me._Newcode_U
		End Get
		Set
			If (String.Equals(Me._Newcode_U, value) = false) Then
				Me.OnNewcode_UChanging(value)
				Me.SendPropertyChanging
				Me._Newcode_U = value
				Me.SendPropertyChanged("Newcode_U")
				Me.OnNewcode_UChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADMIN_ID", DbType:="NVarChar(50)")>  _
	Public Property ADMIN_ID() As String
		Get
			Return Me._ADMIN_ID
		End Get
		Set
			If (String.Equals(Me._ADMIN_ID, value) = false) Then
				Me.OnADMIN_IDChanging(value)
				Me.SendPropertyChanging
				Me._ADMIN_ID = value
				Me.SendPropertyChanged("ADMIN_ID")
				Me.OnADMIN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USER_ID_EDIT", DbType:="NVarChar(50)")>  _
	Public Property USER_ID_EDIT() As String
		Get
			Return Me._USER_ID_EDIT
		End Get
		Set
			If (String.Equals(Me._USER_ID_EDIT, value) = false) Then
				Me.OnUSER_ID_EDITChanging(value)
				Me.SendPropertyChanging
				Me._USER_ID_EDIT = value
				Me.SendPropertyChanged("USER_ID_EDIT")
				Me.OnUSER_ID_EDITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY_EDIT", DbType:="NVarChar(50)")>  _
	Public Property IDENTIFY_EDIT() As String
		Get
			Return Me._IDENTIFY_EDIT
		End Get
		Set
			If (String.Equals(Me._IDENTIFY_EDIT, value) = false) Then
				Me.OnIDENTIFY_EDITChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY_EDIT = value
				Me.SendPropertyChanged("IDENTIFY_EDIT")
				Me.OnIDENTIFY_EDITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PREVIOUS_DETAIL_EDIT", DbType:="NVarChar(MAX)")>  _
	Public Property PREVIOUS_DETAIL_EDIT() As String
		Get
			Return Me._PREVIOUS_DETAIL_EDIT
		End Get
		Set
			If (String.Equals(Me._PREVIOUS_DETAIL_EDIT, value) = false) Then
				Me.OnPREVIOUS_DETAIL_EDITChanging(value)
				Me.SendPropertyChanging
				Me._PREVIOUS_DETAIL_EDIT = value
				Me.SendPropertyChanged("PREVIOUS_DETAIL_EDIT")
				Me.OnPREVIOUS_DETAIL_EDITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_DETAIL_EDIT", DbType:="NVarChar(MAX)")>  _
	Public Property NEW_DETAIL_EDIT() As String
		Get
			Return Me._NEW_DETAIL_EDIT
		End Get
		Set
			If (String.Equals(Me._NEW_DETAIL_EDIT, value) = false) Then
				Me.OnNEW_DETAIL_EDITChanging(value)
				Me.SendPropertyChanging
				Me._NEW_DETAIL_EDIT = value
				Me.SendPropertyChanged("NEW_DETAIL_EDIT")
				Me.OnNEW_DETAIL_EDITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_URL", DbType:="NVarChar(MAX)")>  _
	Public Property URL() As String
		Get
			Return Me._URL
		End Get
		Set
			If (String.Equals(Me._URL, value) = false) Then
				Me.OnURLChanging(value)
				Me.SendPropertyChanging
				Me._URL = value
				Me.SendPropertyChanged("URL")
				Me.OnURLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NChar(10)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.A_TEST")>  _
Partial Public Class A_TEST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _DESCRIPTIONS As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONSChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTIONS", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTIONS() As String
		Get
			Return Me._DESCRIPTIONS
		End Get
		Set
			If (String.Equals(Me._DESCRIPTIONS, value) = false) Then
				Me.OnDESCRIPTIONSChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTIONS = value
				Me.SendPropertyChanged("DESCRIPTIONS")
				Me.OnDESCRIPTIONSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TEMP_NCT_DALCN")>  _
Partial Public Class TEMP_NCT_DALCN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As String
	
	Private _IDENTIFY As String
	
	Private _LCNTPCD As String
	
	Private _LCNNO_FORMAT As String
	
	Private _LICEN_NAME As String
	
	Private _BSN_IDENTIFY As String
	
	Private _BSN_NAME As String
	
	Private _LOCATION_NAME As String
	
	Private _LOCATION_ADDR As String
	
	Private _TEL As String
	
	Private _DATE_START As String
	
	Private _DATE_END As String
	
	Private _DATE_DAY As String
	
	Private _DATE_MONTH As String
	
	Private _DATE_YEAR As String
	
	Private _APPROVE_NAME As String
	
	Private _APPROVE_POSITION As String
	
	Private _MAIN_IDA As System.Nullable(Of Integer)
	
	Private _PHR_NAME1 As String
	
	Private _PHR_NAME2 As String
	
	Private _PHR_NAME3 As String
	
	Private _PHR_NUMBER1 As String
	
	Private _PHR_NUMBER2 As String
	
	Private _PHR_NUMBER3 As String
	
	Private _LOCATION_KEEP_NAME As String
	
	Private _LOCATION_KRRP_ADDR As String
	
	Private _KEEP_TEL As String
	
	Private _MAIN_LCNNO_FORMAT As String
	
	Private _PVNABBR As String
	
	Private _CONDITION As String
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _LCNNO As System.Nullable(Of Integer)
	
	Private _PVNCD As System.Nullable(Of Integer)
	
	Private _DRUG_GROUP As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnLCNTPCDChanging(value As String)
    End Sub
    Partial Private Sub OnLCNTPCDChanged()
    End Sub
    Partial Private Sub OnLCNNO_FORMATChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNO_FORMATChanged()
    End Sub
    Partial Private Sub OnLICEN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLICEN_NAMEChanged()
    End Sub
    Partial Private Sub OnBSN_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnBSN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBSN_NAMEChanged()
    End Sub
    Partial Private Sub OnLOCATION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_NAMEChanged()
    End Sub
    Partial Private Sub OnLOCATION_ADDRChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_ADDRChanged()
    End Sub
    Partial Private Sub OnTELChanging(value As String)
    End Sub
    Partial Private Sub OnTELChanged()
    End Sub
    Partial Private Sub OnDATE_STARTChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_STARTChanged()
    End Sub
    Partial Private Sub OnDATE_ENDChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_ENDChanged()
    End Sub
    Partial Private Sub OnDATE_DAYChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_DAYChanged()
    End Sub
    Partial Private Sub OnDATE_MONTHChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_MONTHChanged()
    End Sub
    Partial Private Sub OnDATE_YEARChanging(value As String)
    End Sub
    Partial Private Sub OnDATE_YEARChanged()
    End Sub
    Partial Private Sub OnAPPROVE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnAPPROVE_NAMEChanged()
    End Sub
    Partial Private Sub OnAPPROVE_POSITIONChanging(value As String)
    End Sub
    Partial Private Sub OnAPPROVE_POSITIONChanged()
    End Sub
    Partial Private Sub OnMAIN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMAIN_IDAChanged()
    End Sub
    Partial Private Sub OnPHR_NAME1Changing(value As String)
    End Sub
    Partial Private Sub OnPHR_NAME1Changed()
    End Sub
    Partial Private Sub OnPHR_NAME2Changing(value As String)
    End Sub
    Partial Private Sub OnPHR_NAME2Changed()
    End Sub
    Partial Private Sub OnPHR_NAME3Changing(value As String)
    End Sub
    Partial Private Sub OnPHR_NAME3Changed()
    End Sub
    Partial Private Sub OnPHR_NUMBER1Changing(value As String)
    End Sub
    Partial Private Sub OnPHR_NUMBER1Changed()
    End Sub
    Partial Private Sub OnPHR_NUMBER2Changing(value As String)
    End Sub
    Partial Private Sub OnPHR_NUMBER2Changed()
    End Sub
    Partial Private Sub OnPHR_NUMBER3Changing(value As String)
    End Sub
    Partial Private Sub OnPHR_NUMBER3Changed()
    End Sub
    Partial Private Sub OnLOCATION_KEEP_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KEEP_NAMEChanged()
    End Sub
    Partial Private Sub OnLOCATION_KRRP_ADDRChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_KRRP_ADDRChanged()
    End Sub
    Partial Private Sub OnKEEP_TELChanging(value As String)
    End Sub
    Partial Private Sub OnKEEP_TELChanged()
    End Sub
    Partial Private Sub OnMAIN_LCNNO_FORMATChanging(value As String)
    End Sub
    Partial Private Sub OnMAIN_LCNNO_FORMATChanged()
    End Sub
    Partial Private Sub OnPVNABBRChanging(value As String)
    End Sub
    Partial Private Sub OnPVNABBRChanged()
    End Sub
    Partial Private Sub OnCONDITIONChanging(value As String)
    End Sub
    Partial Private Sub OnCONDITIONChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnLCNNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCNNOChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnDRUG_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_GROUPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(50)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNTPCD", DbType:="NVarChar(50)")>  _
	Public Property LCNTPCD() As String
		Get
			Return Me._LCNTPCD
		End Get
		Set
			If (String.Equals(Me._LCNTPCD, value) = false) Then
				Me.OnLCNTPCDChanging(value)
				Me.SendPropertyChanging
				Me._LCNTPCD = value
				Me.SendPropertyChanged("LCNTPCD")
				Me.OnLCNTPCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO_FORMAT", DbType:="NVarChar(MAX)")>  _
	Public Property LCNNO_FORMAT() As String
		Get
			Return Me._LCNNO_FORMAT
		End Get
		Set
			If (String.Equals(Me._LCNNO_FORMAT, value) = false) Then
				Me.OnLCNNO_FORMATChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO_FORMAT = value
				Me.SendPropertyChanged("LCNNO_FORMAT")
				Me.OnLCNNO_FORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LICEN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LICEN_NAME() As String
		Get
			Return Me._LICEN_NAME
		End Get
		Set
			If (String.Equals(Me._LICEN_NAME, value) = false) Then
				Me.OnLICEN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LICEN_NAME = value
				Me.SendPropertyChanged("LICEN_NAME")
				Me.OnLICEN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_IDENTIFY", DbType:="NVarChar(50)")>  _
	Public Property BSN_IDENTIFY() As String
		Get
			Return Me._BSN_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._BSN_IDENTIFY, value) = false) Then
				Me.OnBSN_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._BSN_IDENTIFY = value
				Me.SendPropertyChanged("BSN_IDENTIFY")
				Me.OnBSN_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BSN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BSN_NAME() As String
		Get
			Return Me._BSN_NAME
		End Get
		Set
			If (String.Equals(Me._BSN_NAME, value) = false) Then
				Me.OnBSN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BSN_NAME = value
				Me.SendPropertyChanged("BSN_NAME")
				Me.OnBSN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_NAME() As String
		Get
			Return Me._LOCATION_NAME
		End Get
		Set
			If (String.Equals(Me._LOCATION_NAME, value) = false) Then
				Me.OnLOCATION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_NAME = value
				Me.SendPropertyChanged("LOCATION_NAME")
				Me.OnLOCATION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_ADDR", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_ADDR() As String
		Get
			Return Me._LOCATION_ADDR
		End Get
		Set
			If (String.Equals(Me._LOCATION_ADDR, value) = false) Then
				Me.OnLOCATION_ADDRChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_ADDR = value
				Me.SendPropertyChanged("LOCATION_ADDR")
				Me.OnLOCATION_ADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL", DbType:="NVarChar(MAX)")>  _
	Public Property TEL() As String
		Get
			Return Me._TEL
		End Get
		Set
			If (String.Equals(Me._TEL, value) = false) Then
				Me.OnTELChanging(value)
				Me.SendPropertyChanging
				Me._TEL = value
				Me.SendPropertyChanged("TEL")
				Me.OnTELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_START", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_START() As String
		Get
			Return Me._DATE_START
		End Get
		Set
			If (String.Equals(Me._DATE_START, value) = false) Then
				Me.OnDATE_STARTChanging(value)
				Me.SendPropertyChanging
				Me._DATE_START = value
				Me.SendPropertyChanged("DATE_START")
				Me.OnDATE_STARTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_END", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_END() As String
		Get
			Return Me._DATE_END
		End Get
		Set
			If (String.Equals(Me._DATE_END, value) = false) Then
				Me.OnDATE_ENDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_END = value
				Me.SendPropertyChanged("DATE_END")
				Me.OnDATE_ENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_DAY", DbType:="NVarChar(50)")>  _
	Public Property DATE_DAY() As String
		Get
			Return Me._DATE_DAY
		End Get
		Set
			If (String.Equals(Me._DATE_DAY, value) = false) Then
				Me.OnDATE_DAYChanging(value)
				Me.SendPropertyChanging
				Me._DATE_DAY = value
				Me.SendPropertyChanged("DATE_DAY")
				Me.OnDATE_DAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_MONTH", DbType:="NVarChar(MAX)")>  _
	Public Property DATE_MONTH() As String
		Get
			Return Me._DATE_MONTH
		End Get
		Set
			If (String.Equals(Me._DATE_MONTH, value) = false) Then
				Me.OnDATE_MONTHChanging(value)
				Me.SendPropertyChanging
				Me._DATE_MONTH = value
				Me.SendPropertyChanged("DATE_MONTH")
				Me.OnDATE_MONTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATE_YEAR", DbType:="NVarChar(50)")>  _
	Public Property DATE_YEAR() As String
		Get
			Return Me._DATE_YEAR
		End Get
		Set
			If (String.Equals(Me._DATE_YEAR, value) = false) Then
				Me.OnDATE_YEARChanging(value)
				Me.SendPropertyChanging
				Me._DATE_YEAR = value
				Me.SendPropertyChanged("DATE_YEAR")
				Me.OnDATE_YEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPROVE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property APPROVE_NAME() As String
		Get
			Return Me._APPROVE_NAME
		End Get
		Set
			If (String.Equals(Me._APPROVE_NAME, value) = false) Then
				Me.OnAPPROVE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._APPROVE_NAME = value
				Me.SendPropertyChanged("APPROVE_NAME")
				Me.OnAPPROVE_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPROVE_POSITION", DbType:="NVarChar(MAX)")>  _
	Public Property APPROVE_POSITION() As String
		Get
			Return Me._APPROVE_POSITION
		End Get
		Set
			If (String.Equals(Me._APPROVE_POSITION, value) = false) Then
				Me.OnAPPROVE_POSITIONChanging(value)
				Me.SendPropertyChanging
				Me._APPROVE_POSITION = value
				Me.SendPropertyChanged("APPROVE_POSITION")
				Me.OnAPPROVE_POSITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAIN_IDA", DbType:="Int")>  _
	Public Property MAIN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._MAIN_IDA
		End Get
		Set
			If (Me._MAIN_IDA.Equals(value) = false) Then
				Me.OnMAIN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._MAIN_IDA = value
				Me.SendPropertyChanged("MAIN_IDA")
				Me.OnMAIN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_NAME1", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_NAME1() As String
		Get
			Return Me._PHR_NAME1
		End Get
		Set
			If (String.Equals(Me._PHR_NAME1, value) = false) Then
				Me.OnPHR_NAME1Changing(value)
				Me.SendPropertyChanging
				Me._PHR_NAME1 = value
				Me.SendPropertyChanged("PHR_NAME1")
				Me.OnPHR_NAME1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_NAME2", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_NAME2() As String
		Get
			Return Me._PHR_NAME2
		End Get
		Set
			If (String.Equals(Me._PHR_NAME2, value) = false) Then
				Me.OnPHR_NAME2Changing(value)
				Me.SendPropertyChanging
				Me._PHR_NAME2 = value
				Me.SendPropertyChanged("PHR_NAME2")
				Me.OnPHR_NAME2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_NAME3", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_NAME3() As String
		Get
			Return Me._PHR_NAME3
		End Get
		Set
			If (String.Equals(Me._PHR_NAME3, value) = false) Then
				Me.OnPHR_NAME3Changing(value)
				Me.SendPropertyChanging
				Me._PHR_NAME3 = value
				Me.SendPropertyChanged("PHR_NAME3")
				Me.OnPHR_NAME3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_NUMBER1", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_NUMBER1() As String
		Get
			Return Me._PHR_NUMBER1
		End Get
		Set
			If (String.Equals(Me._PHR_NUMBER1, value) = false) Then
				Me.OnPHR_NUMBER1Changing(value)
				Me.SendPropertyChanging
				Me._PHR_NUMBER1 = value
				Me.SendPropertyChanged("PHR_NUMBER1")
				Me.OnPHR_NUMBER1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_NUMBER2", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_NUMBER2() As String
		Get
			Return Me._PHR_NUMBER2
		End Get
		Set
			If (String.Equals(Me._PHR_NUMBER2, value) = false) Then
				Me.OnPHR_NUMBER2Changing(value)
				Me.SendPropertyChanging
				Me._PHR_NUMBER2 = value
				Me.SendPropertyChanged("PHR_NUMBER2")
				Me.OnPHR_NUMBER2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_NUMBER3", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_NUMBER3() As String
		Get
			Return Me._PHR_NUMBER3
		End Get
		Set
			If (String.Equals(Me._PHR_NUMBER3, value) = false) Then
				Me.OnPHR_NUMBER3Changing(value)
				Me.SendPropertyChanging
				Me._PHR_NUMBER3 = value
				Me.SendPropertyChanged("PHR_NUMBER3")
				Me.OnPHR_NUMBER3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_KEEP_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KEEP_NAME() As String
		Get
			Return Me._LOCATION_KEEP_NAME
		End Get
		Set
			If (String.Equals(Me._LOCATION_KEEP_NAME, value) = false) Then
				Me.OnLOCATION_KEEP_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KEEP_NAME = value
				Me.SendPropertyChanged("LOCATION_KEEP_NAME")
				Me.OnLOCATION_KEEP_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_KRRP_ADDR", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_KRRP_ADDR() As String
		Get
			Return Me._LOCATION_KRRP_ADDR
		End Get
		Set
			If (String.Equals(Me._LOCATION_KRRP_ADDR, value) = false) Then
				Me.OnLOCATION_KRRP_ADDRChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KRRP_ADDR = value
				Me.SendPropertyChanged("LOCATION_KRRP_ADDR")
				Me.OnLOCATION_KRRP_ADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEEP_TEL", DbType:="NVarChar(MAX)")>  _
	Public Property KEEP_TEL() As String
		Get
			Return Me._KEEP_TEL
		End Get
		Set
			If (String.Equals(Me._KEEP_TEL, value) = false) Then
				Me.OnKEEP_TELChanging(value)
				Me.SendPropertyChanging
				Me._KEEP_TEL = value
				Me.SendPropertyChanged("KEEP_TEL")
				Me.OnKEEP_TELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAIN_LCNNO_FORMAT", DbType:="NVarChar(MAX)")>  _
	Public Property MAIN_LCNNO_FORMAT() As String
		Get
			Return Me._MAIN_LCNNO_FORMAT
		End Get
		Set
			If (String.Equals(Me._MAIN_LCNNO_FORMAT, value) = false) Then
				Me.OnMAIN_LCNNO_FORMATChanging(value)
				Me.SendPropertyChanging
				Me._MAIN_LCNNO_FORMAT = value
				Me.SendPropertyChanged("MAIN_LCNNO_FORMAT")
				Me.OnMAIN_LCNNO_FORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNABBR", DbType:="NVarChar(50)")>  _
	Public Property PVNABBR() As String
		Get
			Return Me._PVNABBR
		End Get
		Set
			If (String.Equals(Me._PVNABBR, value) = false) Then
				Me.OnPVNABBRChanging(value)
				Me.SendPropertyChanging
				Me._PVNABBR = value
				Me.SendPropertyChanged("PVNABBR")
				Me.OnPVNABBRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION", DbType:="NVarChar(MAX)")>  _
	Public Property CONDITION() As String
		Get
			Return Me._CONDITION
		End Get
		Set
			If (String.Equals(Me._CONDITION, value) = false) Then
				Me.OnCONDITIONChanging(value)
				Me.SendPropertyChanging
				Me._CONDITION = value
				Me.SendPropertyChanged("CONDITION")
				Me.OnCONDITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO", DbType:="Int")>  _
	Public Property LCNNO() As System.Nullable(Of Integer)
		Get
			Return Me._LCNNO
		End Get
		Set
			If (Me._LCNNO.Equals(value) = false) Then
				Me.OnLCNNOChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO = value
				Me.SendPropertyChanged("LCNNO")
				Me.OnLCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="Int")>  _
	Public Property PVNCD() As System.Nullable(Of Integer)
		Get
			Return Me._PVNCD
		End Get
		Set
			If (Me._PVNCD.Equals(value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_GROUP", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_GROUP() As String
		Get
			Return Me._DRUG_GROUP
		End Get
		Set
			If (String.Equals(Me._DRUG_GROUP, value) = false) Then
				Me.OnDRUG_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_GROUP = value
				Me.SendPropertyChanged("DRUG_GROUP")
				Me.OnDRUG_GROUPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DDL_VORJOR")>  _
Partial Public Class DDL_VORJOR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PROCESS_ID As String
	
	Private _PROCESS_NAME As String
	
	Private _PROCESS_DESCRIPTION As String
	
	Private _group_id As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanged()
    End Sub
    Partial Private Sub OnPROCESS_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub Ongroup_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ongroup_idChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_NAME() As String
		Get
			Return Me._PROCESS_NAME
		End Get
		Set
			If (String.Equals(Me._PROCESS_NAME, value) = false) Then
				Me.OnPROCESS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_NAME = value
				Me.SendPropertyChanged("PROCESS_NAME")
				Me.OnPROCESS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_DESCRIPTION() As String
		Get
			Return Me._PROCESS_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._PROCESS_DESCRIPTION, value) = false) Then
				Me.OnPROCESS_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_DESCRIPTION = value
				Me.SendPropertyChanged("PROCESS_DESCRIPTION")
				Me.OnPROCESS_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_group_id", DbType:="Int")>  _
	Public Property group_id() As System.Nullable(Of Integer)
		Get
			Return Me._group_id
		End Get
		Set
			If (Me._group_id.Equals(value) = false) Then
				Me.Ongroup_idChanging(value)
				Me.SendPropertyChanging
				Me._group_id = value
				Me.SendPropertyChanged("group_id")
				Me.Ongroup_idChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_RECEIVER_EDIT_RQT")>  _
Partial Public Class MAS_RECEIVER_EDIT_RQT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _IDENTIFY As String
	
	Private _ACTIVE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(50)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="Int")>  _
	Public Property ACTIVE() As System.Nullable(Of Integer)
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (Me._ACTIVE.Equals(value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_PHR")>  _
Partial Public Class DALCN_PHR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PHR_IDA As Integer
	
	Private _PHR_NAME As String
	
	Private _PHR_SURNAME As String
	
	Private _PHR_CTZNO As String
	
	Private _PHR_LEVEL As String
	
	Private _TRANSECTION_ID_UPLOAD As String
	
	Private _CTZNO_UPLOAD As String
	
	Private _PHR_STATUS_UPLOAD As String
	
	Private _PHR_CHK_JOB As String
	
	Private _PHR_TEXT_JOB As String
	
	Private _PHR_CHK_NUM As String
	
	Private _PHR_TEXT_NUM As String
	
	Private _PHR_TEXT_DAY As String
	
	Private _PHR_TEXT_MOUTH As String
	
	Private _PHR_TEXT_YEAR As String
	
	Private _PHR_TEXT_EXP As String
	
	Private _PHR_CHK_NOT_WORK As String
	
	Private _PHR_CHK_WORK As String
	
	Private _PHR_TEXT_WORK_OFFICE As String
	
	Private _PHR_TEXT_WORK_TIME As String
	
	Private _PHR_JOB_TYPE As String
	
	Private _TR_ID As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _PHR_PREFIX_ID As String
	
	Private _PHR_PREFIX_NAME As String
	
	Private _PHR_VETERINARY_FIELD As String
	
	Private _PHR_MEDICAL_TYPE As String
	
	Private _PHR_CERTIFICATE_TRAINING As String
	
	Private _PHR_LAW_SECTION As String
	
	Private _POSITION_NAME As String
	
	Private _POSITION_IDA As String
	
	Private _IS_ACTIVE As String
	
	Private _pvncd As String
	
	Private _lcntpcd As String
	
	Private _lcnno As String
	
	Private _phrcd As String
	
	Private _phrid As String
	
	Private _phr_status As String
	
	Private _INACTIVE_DATE As System.Nullable(Of Date)
	
	Private _PERSONAL_TYPE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPHR_IDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnPHR_IDAChanged()
    End Sub
    Partial Private Sub OnPHR_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_NAMEChanged()
    End Sub
    Partial Private Sub OnPHR_SURNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_SURNAMEChanged()
    End Sub
    Partial Private Sub OnPHR_CTZNOChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_CTZNOChanged()
    End Sub
    Partial Private Sub OnPHR_LEVELChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_LEVELChanged()
    End Sub
    Partial Private Sub OnTRANSECTION_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnTRANSECTION_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnCTZNO_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCTZNO_UPLOADChanged()
    End Sub
    Partial Private Sub OnPHR_STATUS_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_STATUS_UPLOADChanged()
    End Sub
    Partial Private Sub OnPHR_CHK_JOBChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_CHK_JOBChanged()
    End Sub
    Partial Private Sub OnPHR_TEXT_JOBChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_TEXT_JOBChanged()
    End Sub
    Partial Private Sub OnPHR_CHK_NUMChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_CHK_NUMChanged()
    End Sub
    Partial Private Sub OnPHR_TEXT_NUMChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_TEXT_NUMChanged()
    End Sub
    Partial Private Sub OnPHR_TEXT_DAYChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_TEXT_DAYChanged()
    End Sub
    Partial Private Sub OnPHR_TEXT_MOUTHChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_TEXT_MOUTHChanged()
    End Sub
    Partial Private Sub OnPHR_TEXT_YEARChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_TEXT_YEARChanged()
    End Sub
    Partial Private Sub OnPHR_TEXT_EXPChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_TEXT_EXPChanged()
    End Sub
    Partial Private Sub OnPHR_CHK_NOT_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_CHK_NOT_WORKChanged()
    End Sub
    Partial Private Sub OnPHR_CHK_WORKChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_CHK_WORKChanged()
    End Sub
    Partial Private Sub OnPHR_TEXT_WORK_OFFICEChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_TEXT_WORK_OFFICEChanged()
    End Sub
    Partial Private Sub OnPHR_TEXT_WORK_TIMEChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_TEXT_WORK_TIMEChanged()
    End Sub
    Partial Private Sub OnPHR_JOB_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_JOB_TYPEChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnPHR_PREFIX_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_PREFIX_IDChanged()
    End Sub
    Partial Private Sub OnPHR_PREFIX_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_PREFIX_NAMEChanged()
    End Sub
    Partial Private Sub OnPHR_VETERINARY_FIELDChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_VETERINARY_FIELDChanged()
    End Sub
    Partial Private Sub OnPHR_MEDICAL_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_MEDICAL_TYPEChanged()
    End Sub
    Partial Private Sub OnPHR_CERTIFICATE_TRAININGChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_CERTIFICATE_TRAININGChanged()
    End Sub
    Partial Private Sub OnPHR_LAW_SECTIONChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_LAW_SECTIONChanged()
    End Sub
    Partial Private Sub OnPOSITION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_NAMEChanged()
    End Sub
    Partial Private Sub OnPOSITION_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_IDAChanged()
    End Sub
    Partial Private Sub OnIS_ACTIVEChanging(value As String)
    End Sub
    Partial Private Sub OnIS_ACTIVEChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As String)
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As String)
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnphrcdChanging(value As String)
    End Sub
    Partial Private Sub OnphrcdChanged()
    End Sub
    Partial Private Sub OnphridChanging(value As String)
    End Sub
    Partial Private Sub OnphridChanged()
    End Sub
    Partial Private Sub Onphr_statusChanging(value As String)
    End Sub
    Partial Private Sub Onphr_statusChanged()
    End Sub
    Partial Private Sub OnINACTIVE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINACTIVE_DATEChanged()
    End Sub
    Partial Private Sub OnPERSONAL_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnPERSONAL_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PHR_IDA() As Integer
		Get
			Return Me._PHR_IDA
		End Get
		Set
			If ((Me._PHR_IDA = value)  _
						= false) Then
				Me.OnPHR_IDAChanging(value)
				Me.SendPropertyChanging
				Me._PHR_IDA = value
				Me.SendPropertyChanged("PHR_IDA")
				Me.OnPHR_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_NAME() As String
		Get
			Return Me._PHR_NAME
		End Get
		Set
			If (String.Equals(Me._PHR_NAME, value) = false) Then
				Me.OnPHR_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PHR_NAME = value
				Me.SendPropertyChanged("PHR_NAME")
				Me.OnPHR_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_SURNAME", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_SURNAME() As String
		Get
			Return Me._PHR_SURNAME
		End Get
		Set
			If (String.Equals(Me._PHR_SURNAME, value) = false) Then
				Me.OnPHR_SURNAMEChanging(value)
				Me.SendPropertyChanging
				Me._PHR_SURNAME = value
				Me.SendPropertyChanged("PHR_SURNAME")
				Me.OnPHR_SURNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_CTZNO", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_CTZNO() As String
		Get
			Return Me._PHR_CTZNO
		End Get
		Set
			If (String.Equals(Me._PHR_CTZNO, value) = false) Then
				Me.OnPHR_CTZNOChanging(value)
				Me.SendPropertyChanging
				Me._PHR_CTZNO = value
				Me.SendPropertyChanged("PHR_CTZNO")
				Me.OnPHR_CTZNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_LEVEL", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_LEVEL() As String
		Get
			Return Me._PHR_LEVEL
		End Get
		Set
			If (String.Equals(Me._PHR_LEVEL, value) = false) Then
				Me.OnPHR_LEVELChanging(value)
				Me.SendPropertyChanging
				Me._PHR_LEVEL = value
				Me.SendPropertyChanged("PHR_LEVEL")
				Me.OnPHR_LEVELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRANSECTION_ID_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property TRANSECTION_ID_UPLOAD() As String
		Get
			Return Me._TRANSECTION_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._TRANSECTION_ID_UPLOAD, value) = false) Then
				Me.OnTRANSECTION_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._TRANSECTION_ID_UPLOAD = value
				Me.SendPropertyChanged("TRANSECTION_ID_UPLOAD")
				Me.OnTRANSECTION_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CTZNO_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CTZNO_UPLOAD() As String
		Get
			Return Me._CTZNO_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CTZNO_UPLOAD, value) = false) Then
				Me.OnCTZNO_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CTZNO_UPLOAD = value
				Me.SendPropertyChanged("CTZNO_UPLOAD")
				Me.OnCTZNO_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_STATUS_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_STATUS_UPLOAD() As String
		Get
			Return Me._PHR_STATUS_UPLOAD
		End Get
		Set
			If (String.Equals(Me._PHR_STATUS_UPLOAD, value) = false) Then
				Me.OnPHR_STATUS_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._PHR_STATUS_UPLOAD = value
				Me.SendPropertyChanged("PHR_STATUS_UPLOAD")
				Me.OnPHR_STATUS_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_CHK_JOB", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_CHK_JOB() As String
		Get
			Return Me._PHR_CHK_JOB
		End Get
		Set
			If (String.Equals(Me._PHR_CHK_JOB, value) = false) Then
				Me.OnPHR_CHK_JOBChanging(value)
				Me.SendPropertyChanging
				Me._PHR_CHK_JOB = value
				Me.SendPropertyChanged("PHR_CHK_JOB")
				Me.OnPHR_CHK_JOBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_TEXT_JOB", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_TEXT_JOB() As String
		Get
			Return Me._PHR_TEXT_JOB
		End Get
		Set
			If (String.Equals(Me._PHR_TEXT_JOB, value) = false) Then
				Me.OnPHR_TEXT_JOBChanging(value)
				Me.SendPropertyChanging
				Me._PHR_TEXT_JOB = value
				Me.SendPropertyChanged("PHR_TEXT_JOB")
				Me.OnPHR_TEXT_JOBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_CHK_NUM", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_CHK_NUM() As String
		Get
			Return Me._PHR_CHK_NUM
		End Get
		Set
			If (String.Equals(Me._PHR_CHK_NUM, value) = false) Then
				Me.OnPHR_CHK_NUMChanging(value)
				Me.SendPropertyChanging
				Me._PHR_CHK_NUM = value
				Me.SendPropertyChanged("PHR_CHK_NUM")
				Me.OnPHR_CHK_NUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_TEXT_NUM", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_TEXT_NUM() As String
		Get
			Return Me._PHR_TEXT_NUM
		End Get
		Set
			If (String.Equals(Me._PHR_TEXT_NUM, value) = false) Then
				Me.OnPHR_TEXT_NUMChanging(value)
				Me.SendPropertyChanging
				Me._PHR_TEXT_NUM = value
				Me.SendPropertyChanged("PHR_TEXT_NUM")
				Me.OnPHR_TEXT_NUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_TEXT_DAY", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_TEXT_DAY() As String
		Get
			Return Me._PHR_TEXT_DAY
		End Get
		Set
			If (String.Equals(Me._PHR_TEXT_DAY, value) = false) Then
				Me.OnPHR_TEXT_DAYChanging(value)
				Me.SendPropertyChanging
				Me._PHR_TEXT_DAY = value
				Me.SendPropertyChanged("PHR_TEXT_DAY")
				Me.OnPHR_TEXT_DAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_TEXT_MOUTH", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_TEXT_MOUTH() As String
		Get
			Return Me._PHR_TEXT_MOUTH
		End Get
		Set
			If (String.Equals(Me._PHR_TEXT_MOUTH, value) = false) Then
				Me.OnPHR_TEXT_MOUTHChanging(value)
				Me.SendPropertyChanging
				Me._PHR_TEXT_MOUTH = value
				Me.SendPropertyChanged("PHR_TEXT_MOUTH")
				Me.OnPHR_TEXT_MOUTHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_TEXT_YEAR", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_TEXT_YEAR() As String
		Get
			Return Me._PHR_TEXT_YEAR
		End Get
		Set
			If (String.Equals(Me._PHR_TEXT_YEAR, value) = false) Then
				Me.OnPHR_TEXT_YEARChanging(value)
				Me.SendPropertyChanging
				Me._PHR_TEXT_YEAR = value
				Me.SendPropertyChanged("PHR_TEXT_YEAR")
				Me.OnPHR_TEXT_YEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_TEXT_EXP", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_TEXT_EXP() As String
		Get
			Return Me._PHR_TEXT_EXP
		End Get
		Set
			If (String.Equals(Me._PHR_TEXT_EXP, value) = false) Then
				Me.OnPHR_TEXT_EXPChanging(value)
				Me.SendPropertyChanging
				Me._PHR_TEXT_EXP = value
				Me.SendPropertyChanged("PHR_TEXT_EXP")
				Me.OnPHR_TEXT_EXPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_CHK_NOT_WORK", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_CHK_NOT_WORK() As String
		Get
			Return Me._PHR_CHK_NOT_WORK
		End Get
		Set
			If (String.Equals(Me._PHR_CHK_NOT_WORK, value) = false) Then
				Me.OnPHR_CHK_NOT_WORKChanging(value)
				Me.SendPropertyChanging
				Me._PHR_CHK_NOT_WORK = value
				Me.SendPropertyChanged("PHR_CHK_NOT_WORK")
				Me.OnPHR_CHK_NOT_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_CHK_WORK", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_CHK_WORK() As String
		Get
			Return Me._PHR_CHK_WORK
		End Get
		Set
			If (String.Equals(Me._PHR_CHK_WORK, value) = false) Then
				Me.OnPHR_CHK_WORKChanging(value)
				Me.SendPropertyChanging
				Me._PHR_CHK_WORK = value
				Me.SendPropertyChanged("PHR_CHK_WORK")
				Me.OnPHR_CHK_WORKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_TEXT_WORK_OFFICE", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_TEXT_WORK_OFFICE() As String
		Get
			Return Me._PHR_TEXT_WORK_OFFICE
		End Get
		Set
			If (String.Equals(Me._PHR_TEXT_WORK_OFFICE, value) = false) Then
				Me.OnPHR_TEXT_WORK_OFFICEChanging(value)
				Me.SendPropertyChanging
				Me._PHR_TEXT_WORK_OFFICE = value
				Me.SendPropertyChanged("PHR_TEXT_WORK_OFFICE")
				Me.OnPHR_TEXT_WORK_OFFICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_TEXT_WORK_TIME", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_TEXT_WORK_TIME() As String
		Get
			Return Me._PHR_TEXT_WORK_TIME
		End Get
		Set
			If (String.Equals(Me._PHR_TEXT_WORK_TIME, value) = false) Then
				Me.OnPHR_TEXT_WORK_TIMEChanging(value)
				Me.SendPropertyChanging
				Me._PHR_TEXT_WORK_TIME = value
				Me.SendPropertyChanged("PHR_TEXT_WORK_TIME")
				Me.OnPHR_TEXT_WORK_TIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_JOB_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_JOB_TYPE() As String
		Get
			Return Me._PHR_JOB_TYPE
		End Get
		Set
			If (String.Equals(Me._PHR_JOB_TYPE, value) = false) Then
				Me.OnPHR_JOB_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PHR_JOB_TYPE = value
				Me.SendPropertyChanged("PHR_JOB_TYPE")
				Me.OnPHR_JOB_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="NVarChar(MAX)")>  _
	Public Property TR_ID() As String
		Get
			Return Me._TR_ID
		End Get
		Set
			If (String.Equals(Me._TR_ID, value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_PREFIX_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_PREFIX_ID() As String
		Get
			Return Me._PHR_PREFIX_ID
		End Get
		Set
			If (String.Equals(Me._PHR_PREFIX_ID, value) = false) Then
				Me.OnPHR_PREFIX_IDChanging(value)
				Me.SendPropertyChanging
				Me._PHR_PREFIX_ID = value
				Me.SendPropertyChanged("PHR_PREFIX_ID")
				Me.OnPHR_PREFIX_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_PREFIX_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_PREFIX_NAME() As String
		Get
			Return Me._PHR_PREFIX_NAME
		End Get
		Set
			If (String.Equals(Me._PHR_PREFIX_NAME, value) = false) Then
				Me.OnPHR_PREFIX_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PHR_PREFIX_NAME = value
				Me.SendPropertyChanged("PHR_PREFIX_NAME")
				Me.OnPHR_PREFIX_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_VETERINARY_FIELD", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_VETERINARY_FIELD() As String
		Get
			Return Me._PHR_VETERINARY_FIELD
		End Get
		Set
			If (String.Equals(Me._PHR_VETERINARY_FIELD, value) = false) Then
				Me.OnPHR_VETERINARY_FIELDChanging(value)
				Me.SendPropertyChanging
				Me._PHR_VETERINARY_FIELD = value
				Me.SendPropertyChanged("PHR_VETERINARY_FIELD")
				Me.OnPHR_VETERINARY_FIELDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_MEDICAL_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_MEDICAL_TYPE() As String
		Get
			Return Me._PHR_MEDICAL_TYPE
		End Get
		Set
			If (String.Equals(Me._PHR_MEDICAL_TYPE, value) = false) Then
				Me.OnPHR_MEDICAL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PHR_MEDICAL_TYPE = value
				Me.SendPropertyChanged("PHR_MEDICAL_TYPE")
				Me.OnPHR_MEDICAL_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_CERTIFICATE_TRAINING", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_CERTIFICATE_TRAINING() As String
		Get
			Return Me._PHR_CERTIFICATE_TRAINING
		End Get
		Set
			If (String.Equals(Me._PHR_CERTIFICATE_TRAINING, value) = false) Then
				Me.OnPHR_CERTIFICATE_TRAININGChanging(value)
				Me.SendPropertyChanging
				Me._PHR_CERTIFICATE_TRAINING = value
				Me.SendPropertyChanged("PHR_CERTIFICATE_TRAINING")
				Me.OnPHR_CERTIFICATE_TRAININGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_LAW_SECTION", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_LAW_SECTION() As String
		Get
			Return Me._PHR_LAW_SECTION
		End Get
		Set
			If (String.Equals(Me._PHR_LAW_SECTION, value) = false) Then
				Me.OnPHR_LAW_SECTIONChanging(value)
				Me.SendPropertyChanging
				Me._PHR_LAW_SECTION = value
				Me.SendPropertyChanged("PHR_LAW_SECTION")
				Me.OnPHR_LAW_SECTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_NAME() As String
		Get
			Return Me._POSITION_NAME
		End Get
		Set
			If (String.Equals(Me._POSITION_NAME, value) = false) Then
				Me.OnPOSITION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_NAME = value
				Me.SendPropertyChanged("POSITION_NAME")
				Me.OnPOSITION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_IDA() As String
		Get
			Return Me._POSITION_IDA
		End Get
		Set
			If (String.Equals(Me._POSITION_IDA, value) = false) Then
				Me.OnPOSITION_IDAChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_IDA = value
				Me.SendPropertyChanged("POSITION_IDA")
				Me.OnPOSITION_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_ACTIVE", DbType:="NVarChar(MAX)")>  _
	Public Property IS_ACTIVE() As String
		Get
			Return Me._IS_ACTIVE
		End Get
		Set
			If (String.Equals(Me._IS_ACTIVE, value) = false) Then
				Me.OnIS_ACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._IS_ACTIVE = value
				Me.SendPropertyChanged("IS_ACTIVE")
				Me.OnIS_ACTIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="NVarChar(MAX)")>  _
	Public Property pvncd() As String
		Get
			Return Me._pvncd
		End Get
		Set
			If (String.Equals(Me._pvncd, value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno() As String
		Get
			Return Me._lcnno
		End Get
		Set
			If (String.Equals(Me._lcnno, value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrcd", DbType:="NVarChar(MAX)")>  _
	Public Property phrcd() As String
		Get
			Return Me._phrcd
		End Get
		Set
			If (String.Equals(Me._phrcd, value) = false) Then
				Me.OnphrcdChanging(value)
				Me.SendPropertyChanging
				Me._phrcd = value
				Me.SendPropertyChanged("phrcd")
				Me.OnphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phrid", DbType:="NVarChar(MAX)")>  _
	Public Property phrid() As String
		Get
			Return Me._phrid
		End Get
		Set
			If (String.Equals(Me._phrid, value) = false) Then
				Me.OnphridChanging(value)
				Me.SendPropertyChanging
				Me._phrid = value
				Me.SendPropertyChanged("phrid")
				Me.OnphridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phr_status", DbType:="NVarChar(MAX)")>  _
	Public Property phr_status() As String
		Get
			Return Me._phr_status
		End Get
		Set
			If (String.Equals(Me._phr_status, value) = false) Then
				Me.Onphr_statusChanging(value)
				Me.SendPropertyChanging
				Me._phr_status = value
				Me.SendPropertyChanged("phr_status")
				Me.Onphr_statusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INACTIVE_DATE", DbType:="DateTime")>  _
	Public Property INACTIVE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._INACTIVE_DATE
		End Get
		Set
			If (Me._INACTIVE_DATE.Equals(value) = false) Then
				Me.OnINACTIVE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._INACTIVE_DATE = value
				Me.SendPropertyChanged("INACTIVE_DATE")
				Me.OnINACTIVE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSONAL_TYPE", DbType:="NVarChar(50)")>  _
	Public Property PERSONAL_TYPE() As String
		Get
			Return Me._PERSONAL_TYPE
		End Get
		Set
			If (String.Equals(Me._PERSONAL_TYPE, value) = false) Then
				Me.OnPERSONAL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PERSONAL_TYPE = value
				Me.SendPropertyChanged("PERSONAL_TYPE")
				Me.OnPERSONAL_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_EXTEND_CASCHEMICAL")>  _
Partial Public Class CER_EXTEND_CASCHEMICAL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ROW_ID As String
	
	Private _CAS_ID As String
	
	Private _CAS_NO As String
	
	Private _CAS_NAME As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _INN_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnROW_IDChanging(value As String)
    End Sub
    Partial Private Sub OnROW_IDChanged()
    End Sub
    Partial Private Sub OnCAS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCAS_IDChanged()
    End Sub
    Partial Private Sub OnCAS_NOChanging(value As String)
    End Sub
    Partial Private Sub OnCAS_NOChanged()
    End Sub
    Partial Private Sub OnCAS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCAS_NAMEChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnINN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnINN_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROW_ID", DbType:="NVarChar(MAX)")>  _
	Public Property ROW_ID() As String
		Get
			Return Me._ROW_ID
		End Get
		Set
			If (String.Equals(Me._ROW_ID, value) = false) Then
				Me.OnROW_IDChanging(value)
				Me.SendPropertyChanging
				Me._ROW_ID = value
				Me.SendPropertyChanged("ROW_ID")
				Me.OnROW_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CAS_ID() As String
		Get
			Return Me._CAS_ID
		End Get
		Set
			If (String.Equals(Me._CAS_ID, value) = false) Then
				Me.OnCAS_IDChanging(value)
				Me.SendPropertyChanging
				Me._CAS_ID = value
				Me.SendPropertyChanged("CAS_ID")
				Me.OnCAS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAS_NO", DbType:="NVarChar(MAX)")>  _
	Public Property CAS_NO() As String
		Get
			Return Me._CAS_NO
		End Get
		Set
			If (String.Equals(Me._CAS_NO, value) = false) Then
				Me.OnCAS_NOChanging(value)
				Me.SendPropertyChanging
				Me._CAS_NO = value
				Me.SendPropertyChanged("CAS_NO")
				Me.OnCAS_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CAS_NAME() As String
		Get
			Return Me._CAS_NAME
		End Get
		Set
			If (String.Equals(Me._CAS_NAME, value) = false) Then
				Me.OnCAS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CAS_NAME = value
				Me.SendPropertyChanged("CAS_NAME")
				Me.OnCAS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property INN_NAME() As String
		Get
			Return Me._INN_NAME
		End Get
		Set
			If (String.Equals(Me._INN_NAME, value) = false) Then
				Me.OnINN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._INN_NAME = value
				Me.SendPropertyChanged("INN_NAME")
				Me.OnINN_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_EXTEND_MANUFACTURE")>  _
Partial Public Class CER_EXTEND_MANUFACTURE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _COMPANY_NAME As String
	
	Private _NAME_ADDRESS As String
	
	Private _ADDRESS_NUMBER As String
	
	Private _ADDRESS_CITY As String
	
	Private _COUNTRY As String
	
	Private _COUNTRY_ID As System.Nullable(Of Integer)
	
	Private _GLN As String
	
	Private _ZIPCODE As String
	
	Private _LOCATION_STANDARD As String
	
	Private _SALE_DATE As System.Nullable(Of Date)
	
	Private _STANDARD_ID As System.Nullable(Of Integer)
	
	Private _COUNTRY_GMP As System.Nullable(Of Integer)
	
	Private _CER_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanged()
    End Sub
    Partial Private Sub OnNAME_ADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ADDRESSChanged()
    End Sub
    Partial Private Sub OnADDRESS_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_NUMBERChanged()
    End Sub
    Partial Private Sub OnADDRESS_CITYChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_CITYChanged()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_IDChanged()
    End Sub
    Partial Private Sub OnGLNChanging(value As String)
    End Sub
    Partial Private Sub OnGLNChanged()
    End Sub
    Partial Private Sub OnZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIPCODEChanged()
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanged()
    End Sub
    Partial Private Sub OnSALE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSALE_DATEChanged()
    End Sub
    Partial Private Sub OnSTANDARD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTANDARD_IDChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_GMPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_GMPChanged()
    End Sub
    Partial Private Sub OnCER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCER_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property COMPANY_NAME() As String
		Get
			Return Me._COMPANY_NAME
		End Get
		Set
			If (String.Equals(Me._COMPANY_NAME, value) = false) Then
				Me.OnCOMPANY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_NAME = value
				Me.SendPropertyChanged("COMPANY_NAME")
				Me.OnCOMPANY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ADDRESS", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ADDRESS() As String
		Get
			Return Me._NAME_ADDRESS
		End Get
		Set
			If (String.Equals(Me._NAME_ADDRESS, value) = false) Then
				Me.OnNAME_ADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ADDRESS = value
				Me.SendPropertyChanged("NAME_ADDRESS")
				Me.OnNAME_ADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_NUMBER() As String
		Get
			Return Me._ADDRESS_NUMBER
		End Get
		Set
			If (String.Equals(Me._ADDRESS_NUMBER, value) = false) Then
				Me.OnADDRESS_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_NUMBER = value
				Me.SendPropertyChanged("ADDRESS_NUMBER")
				Me.OnADDRESS_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_CITY", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_CITY() As String
		Get
			Return Me._ADDRESS_CITY
		End Get
		Set
			If (String.Equals(Me._ADDRESS_CITY, value) = false) Then
				Me.OnADDRESS_CITYChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_CITY = value
				Me.SendPropertyChanged("ADDRESS_CITY")
				Me.OnADDRESS_CITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRY() As String
		Get
			Return Me._COUNTRY
		End Get
		Set
			If (String.Equals(Me._COUNTRY, value) = false) Then
				Me.OnCOUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY = value
				Me.SendPropertyChanged("COUNTRY")
				Me.OnCOUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_ID", DbType:="Int")>  _
	Public Property COUNTRY_ID() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_ID
		End Get
		Set
			If (Me._COUNTRY_ID.Equals(value) = false) Then
				Me.OnCOUNTRY_IDChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_ID = value
				Me.SendPropertyChanged("COUNTRY_ID")
				Me.OnCOUNTRY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GLN", DbType:="NVarChar(MAX)")>  _
	Public Property GLN() As String
		Get
			Return Me._GLN
		End Get
		Set
			If (String.Equals(Me._GLN, value) = false) Then
				Me.OnGLNChanging(value)
				Me.SendPropertyChanging
				Me._GLN = value
				Me.SendPropertyChanged("GLN")
				Me.OnGLNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property ZIPCODE() As String
		Get
			Return Me._ZIPCODE
		End Get
		Set
			If (String.Equals(Me._ZIPCODE, value) = false) Then
				Me.OnZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIPCODE = value
				Me.SendPropertyChanged("ZIPCODE")
				Me.OnZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_STANDARD() As String
		Get
			Return Me._LOCATION_STANDARD
		End Get
		Set
			If (String.Equals(Me._LOCATION_STANDARD, value) = false) Then
				Me.OnLOCATION_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_STANDARD = value
				Me.SendPropertyChanged("LOCATION_STANDARD")
				Me.OnLOCATION_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_DATE", DbType:="DateTime")>  _
	Public Property SALE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._SALE_DATE
		End Get
		Set
			If (Me._SALE_DATE.Equals(value) = false) Then
				Me.OnSALE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._SALE_DATE = value
				Me.SendPropertyChanged("SALE_DATE")
				Me.OnSALE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STANDARD_ID", DbType:="Int")>  _
	Public Property STANDARD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STANDARD_ID
		End Get
		Set
			If (Me._STANDARD_ID.Equals(value) = false) Then
				Me.OnSTANDARD_IDChanging(value)
				Me.SendPropertyChanging
				Me._STANDARD_ID = value
				Me.SendPropertyChanged("STANDARD_ID")
				Me.OnSTANDARD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_GMP", DbType:="Int")>  _
	Public Property COUNTRY_GMP() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_GMP
		End Get
		Set
			If (Me._COUNTRY_GMP.Equals(value) = false) Then
				Me.OnCOUNTRY_GMPChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_GMP = value
				Me.SendPropertyChanged("COUNTRY_GMP")
				Me.OnCOUNTRY_GMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_DATE", DbType:="DateTime")>  _
	Public Property CER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CER_DATE
		End Get
		Set
			If (Me._CER_DATE.Equals(value) = false) Then
				Me.OnCER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CER_DATE = value
				Me.SendPropertyChanged("CER_DATE")
				Me.OnCER_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_EXTEND_MANUFACTURE_RQT")>  _
Partial Public Class CER_EXTEND_MANUFACTURE_RQT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _COMPANY_NAME As String
	
	Private _NAME_ADDRESS As String
	
	Private _ADDRESS_NUMBER As String
	
	Private _ADDRESS_CITY As String
	
	Private _COUNTRY As String
	
	Private _COUNTRY_ID As System.Nullable(Of Integer)
	
	Private _GLN As String
	
	Private _ZIPCODE As String
	
	Private _LOCATION_STANDARD As String
	
	Private _SALE_DATE As System.Nullable(Of Date)
	
	Private _STANDARD_ID As System.Nullable(Of Integer)
	
	Private _COUNTRY_GMP As System.Nullable(Of Integer)
	
	Private _CER_DATE As System.Nullable(Of Date)
	
	Private _OLD_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanged()
    End Sub
    Partial Private Sub OnNAME_ADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnNAME_ADDRESSChanged()
    End Sub
    Partial Private Sub OnADDRESS_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_NUMBERChanged()
    End Sub
    Partial Private Sub OnADDRESS_CITYChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_CITYChanged()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_IDChanged()
    End Sub
    Partial Private Sub OnGLNChanging(value As String)
    End Sub
    Partial Private Sub OnGLNChanged()
    End Sub
    Partial Private Sub OnZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIPCODEChanged()
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanged()
    End Sub
    Partial Private Sub OnSALE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSALE_DATEChanged()
    End Sub
    Partial Private Sub OnSTANDARD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTANDARD_IDChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_GMPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_GMPChanged()
    End Sub
    Partial Private Sub OnCER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCER_DATEChanged()
    End Sub
    Partial Private Sub OnOLD_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOLD_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property COMPANY_NAME() As String
		Get
			Return Me._COMPANY_NAME
		End Get
		Set
			If (String.Equals(Me._COMPANY_NAME, value) = false) Then
				Me.OnCOMPANY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_NAME = value
				Me.SendPropertyChanged("COMPANY_NAME")
				Me.OnCOMPANY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME_ADDRESS", DbType:="NVarChar(MAX)")>  _
	Public Property NAME_ADDRESS() As String
		Get
			Return Me._NAME_ADDRESS
		End Get
		Set
			If (String.Equals(Me._NAME_ADDRESS, value) = false) Then
				Me.OnNAME_ADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._NAME_ADDRESS = value
				Me.SendPropertyChanged("NAME_ADDRESS")
				Me.OnNAME_ADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_NUMBER() As String
		Get
			Return Me._ADDRESS_NUMBER
		End Get
		Set
			If (String.Equals(Me._ADDRESS_NUMBER, value) = false) Then
				Me.OnADDRESS_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_NUMBER = value
				Me.SendPropertyChanged("ADDRESS_NUMBER")
				Me.OnADDRESS_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_CITY", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_CITY() As String
		Get
			Return Me._ADDRESS_CITY
		End Get
		Set
			If (String.Equals(Me._ADDRESS_CITY, value) = false) Then
				Me.OnADDRESS_CITYChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_CITY = value
				Me.SendPropertyChanged("ADDRESS_CITY")
				Me.OnADDRESS_CITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRY() As String
		Get
			Return Me._COUNTRY
		End Get
		Set
			If (String.Equals(Me._COUNTRY, value) = false) Then
				Me.OnCOUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY = value
				Me.SendPropertyChanged("COUNTRY")
				Me.OnCOUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_ID", DbType:="Int")>  _
	Public Property COUNTRY_ID() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_ID
		End Get
		Set
			If (Me._COUNTRY_ID.Equals(value) = false) Then
				Me.OnCOUNTRY_IDChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_ID = value
				Me.SendPropertyChanged("COUNTRY_ID")
				Me.OnCOUNTRY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GLN", DbType:="NVarChar(MAX)")>  _
	Public Property GLN() As String
		Get
			Return Me._GLN
		End Get
		Set
			If (String.Equals(Me._GLN, value) = false) Then
				Me.OnGLNChanging(value)
				Me.SendPropertyChanging
				Me._GLN = value
				Me.SendPropertyChanged("GLN")
				Me.OnGLNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property ZIPCODE() As String
		Get
			Return Me._ZIPCODE
		End Get
		Set
			If (String.Equals(Me._ZIPCODE, value) = false) Then
				Me.OnZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIPCODE = value
				Me.SendPropertyChanged("ZIPCODE")
				Me.OnZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_STANDARD() As String
		Get
			Return Me._LOCATION_STANDARD
		End Get
		Set
			If (String.Equals(Me._LOCATION_STANDARD, value) = false) Then
				Me.OnLOCATION_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_STANDARD = value
				Me.SendPropertyChanged("LOCATION_STANDARD")
				Me.OnLOCATION_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_DATE", DbType:="DateTime")>  _
	Public Property SALE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._SALE_DATE
		End Get
		Set
			If (Me._SALE_DATE.Equals(value) = false) Then
				Me.OnSALE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._SALE_DATE = value
				Me.SendPropertyChanged("SALE_DATE")
				Me.OnSALE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STANDARD_ID", DbType:="Int")>  _
	Public Property STANDARD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STANDARD_ID
		End Get
		Set
			If (Me._STANDARD_ID.Equals(value) = false) Then
				Me.OnSTANDARD_IDChanging(value)
				Me.SendPropertyChanging
				Me._STANDARD_ID = value
				Me.SendPropertyChanged("STANDARD_ID")
				Me.OnSTANDARD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_GMP", DbType:="Int")>  _
	Public Property COUNTRY_GMP() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_GMP
		End Get
		Set
			If (Me._COUNTRY_GMP.Equals(value) = false) Then
				Me.OnCOUNTRY_GMPChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_GMP = value
				Me.SendPropertyChanged("COUNTRY_GMP")
				Me.OnCOUNTRY_GMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_DATE", DbType:="DateTime")>  _
	Public Property CER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CER_DATE
		End Get
		Set
			If (Me._CER_DATE.Equals(value) = false) Then
				Me.OnCER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CER_DATE = value
				Me.SendPropertyChanged("CER_DATE")
				Me.OnCER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_IDA", DbType:="Int")>  _
	Public Property OLD_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._OLD_IDA
		End Get
		Set
			If (Me._OLD_IDA.Equals(value) = false) Then
				Me.OnOLD_IDAChanging(value)
				Me.SendPropertyChanging
				Me._OLD_IDA = value
				Me.SendPropertyChanged("OLD_IDA")
				Me.OnOLD_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER_EXTEND_CASCHEMICAL_RQT")>  _
Partial Public Class CER_EXTEND_CASCHEMICAL_RQT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _ROW_ID As String
	
	Private _CAS_ID As String
	
	Private _CAS_NO As String
	
	Private _CAS_NAME As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _INN_NAME As String
	
	Private _OLD_IDA As System.Nullable(Of Integer)
	
	Private _IS_USE As System.Nullable(Of Integer)
	
	Private _IS_USE_STAFF As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnROW_IDChanging(value As String)
    End Sub
    Partial Private Sub OnROW_IDChanged()
    End Sub
    Partial Private Sub OnCAS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCAS_IDChanged()
    End Sub
    Partial Private Sub OnCAS_NOChanging(value As String)
    End Sub
    Partial Private Sub OnCAS_NOChanged()
    End Sub
    Partial Private Sub OnCAS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCAS_NAMEChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnINN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnINN_NAMEChanged()
    End Sub
    Partial Private Sub OnOLD_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOLD_IDAChanged()
    End Sub
    Partial Private Sub OnIS_USEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIS_USEChanged()
    End Sub
    Partial Private Sub OnIS_USE_STAFFChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIS_USE_STAFFChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROW_ID", DbType:="NVarChar(MAX)")>  _
	Public Property ROW_ID() As String
		Get
			Return Me._ROW_ID
		End Get
		Set
			If (String.Equals(Me._ROW_ID, value) = false) Then
				Me.OnROW_IDChanging(value)
				Me.SendPropertyChanging
				Me._ROW_ID = value
				Me.SendPropertyChanged("ROW_ID")
				Me.OnROW_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CAS_ID() As String
		Get
			Return Me._CAS_ID
		End Get
		Set
			If (String.Equals(Me._CAS_ID, value) = false) Then
				Me.OnCAS_IDChanging(value)
				Me.SendPropertyChanging
				Me._CAS_ID = value
				Me.SendPropertyChanged("CAS_ID")
				Me.OnCAS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAS_NO", DbType:="NVarChar(MAX)")>  _
	Public Property CAS_NO() As String
		Get
			Return Me._CAS_NO
		End Get
		Set
			If (String.Equals(Me._CAS_NO, value) = false) Then
				Me.OnCAS_NOChanging(value)
				Me.SendPropertyChanging
				Me._CAS_NO = value
				Me.SendPropertyChanged("CAS_NO")
				Me.OnCAS_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CAS_NAME() As String
		Get
			Return Me._CAS_NAME
		End Get
		Set
			If (String.Equals(Me._CAS_NAME, value) = false) Then
				Me.OnCAS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CAS_NAME = value
				Me.SendPropertyChanged("CAS_NAME")
				Me.OnCAS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property INN_NAME() As String
		Get
			Return Me._INN_NAME
		End Get
		Set
			If (String.Equals(Me._INN_NAME, value) = false) Then
				Me.OnINN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._INN_NAME = value
				Me.SendPropertyChanged("INN_NAME")
				Me.OnINN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_IDA", DbType:="Int")>  _
	Public Property OLD_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._OLD_IDA
		End Get
		Set
			If (Me._OLD_IDA.Equals(value) = false) Then
				Me.OnOLD_IDAChanging(value)
				Me.SendPropertyChanging
				Me._OLD_IDA = value
				Me.SendPropertyChanged("OLD_IDA")
				Me.OnOLD_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_USE", DbType:="Int")>  _
	Public Property IS_USE() As System.Nullable(Of Integer)
		Get
			Return Me._IS_USE
		End Get
		Set
			If (Me._IS_USE.Equals(value) = false) Then
				Me.OnIS_USEChanging(value)
				Me.SendPropertyChanging
				Me._IS_USE = value
				Me.SendPropertyChanged("IS_USE")
				Me.OnIS_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_USE_STAFF", DbType:="Int")>  _
	Public Property IS_USE_STAFF() As System.Nullable(Of Integer)
		Get
			Return Me._IS_USE_STAFF
		End Get
		Set
			If (Me._IS_USE_STAFF.Equals(value) = false) Then
				Me.OnIS_USE_STAFFChanging(value)
				Me.SendPropertyChanging
				Me._IS_USE_STAFF = value
				Me.SendPropertyChanged("IS_USE_STAFF")
				Me.OnIS_USE_STAFFChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_ADDR")>  _
Partial Public Class DRRGT_ADDR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _identify As String
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _lctcd As System.Nullable(Of Integer)
	
	Private _thaaddr As String
	
	Private _engaddr As String
	
	Private _room As String
	
	Private _mu As String
	
	Private _floor As String
	
	Private _thasoi As String
	
	Private _building As String
	
	Private _engsoi As String
	
	Private _tharoad As String
	
	Private _engroad As String
	
	Private _thmblcd As System.Nullable(Of Short)
	
	Private _thmblnm As String
	
	Private _amphrcd As System.Nullable(Of Short)
	
	Private _amphrnm As String
	
	Private _chngwtcd As System.Nullable(Of Short)
	
	Private _chngwtnm As String
	
	Private _zipcode As String
	
	Private _tel As String
	
	Private _Mobile As String
	
	Private _fax As String
	
	Private _validdate As System.Nullable(Of Date)
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _pvcode As System.Nullable(Of Short)
	
	Private _amcode As System.Nullable(Of Short)
	
	Private _ttcode As System.Nullable(Of Short)
	
	Private _branch As String
	
	Private _Fulladdr As String
	
	Private _engmu As String
	
	Private _engroom As String
	
	Private _engfloor As String
	
	Private _engbuilding As String
	
	Private _engthmblnm As String
	
	Private _engamphrnm As String
	
	Private _engchngwtnm As String
	
	Private _engFulladdr As String
	
	Private _lctnmcd As Integer
	
	Private _prefixcd As System.Nullable(Of Short)
	
	Private _thanm As String
	
	Private _engnm As String
	
	Private _suffixcd As System.Nullable(Of Short)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnidentifyChanging(value As String)
    End Sub
    Partial Private Sub OnidentifyChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnthaaddrChanging(value As String)
    End Sub
    Partial Private Sub OnthaaddrChanged()
    End Sub
    Partial Private Sub OnengaddrChanging(value As String)
    End Sub
    Partial Private Sub OnengaddrChanged()
    End Sub
    Partial Private Sub OnroomChanging(value As String)
    End Sub
    Partial Private Sub OnroomChanged()
    End Sub
    Partial Private Sub OnmuChanging(value As String)
    End Sub
    Partial Private Sub OnmuChanged()
    End Sub
    Partial Private Sub OnfloorChanging(value As String)
    End Sub
    Partial Private Sub OnfloorChanged()
    End Sub
    Partial Private Sub OnthasoiChanging(value As String)
    End Sub
    Partial Private Sub OnthasoiChanged()
    End Sub
    Partial Private Sub OnbuildingChanging(value As String)
    End Sub
    Partial Private Sub OnbuildingChanged()
    End Sub
    Partial Private Sub OnengsoiChanging(value As String)
    End Sub
    Partial Private Sub OnengsoiChanged()
    End Sub
    Partial Private Sub OntharoadChanging(value As String)
    End Sub
    Partial Private Sub OntharoadChanged()
    End Sub
    Partial Private Sub OnengroadChanging(value As String)
    End Sub
    Partial Private Sub OnengroadChanged()
    End Sub
    Partial Private Sub OnthmblcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnthmblcdChanged()
    End Sub
    Partial Private Sub OnthmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnthmblnmChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnamphrnmChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnchngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnchngwtnmChanged()
    End Sub
    Partial Private Sub OnzipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnzipcodeChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnMobileChanging(value As String)
    End Sub
    Partial Private Sub OnMobileChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub OnvaliddateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnvaliddateChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnpvcodeChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvcodeChanged()
    End Sub
    Partial Private Sub OnamcodeChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamcodeChanged()
    End Sub
    Partial Private Sub OnttcodeChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnttcodeChanged()
    End Sub
    Partial Private Sub OnbranchChanging(value As String)
    End Sub
    Partial Private Sub OnbranchChanged()
    End Sub
    Partial Private Sub OnFulladdrChanging(value As String)
    End Sub
    Partial Private Sub OnFulladdrChanged()
    End Sub
    Partial Private Sub OnengmuChanging(value As String)
    End Sub
    Partial Private Sub OnengmuChanged()
    End Sub
    Partial Private Sub OnengroomChanging(value As String)
    End Sub
    Partial Private Sub OnengroomChanged()
    End Sub
    Partial Private Sub OnengfloorChanging(value As String)
    End Sub
    Partial Private Sub OnengfloorChanged()
    End Sub
    Partial Private Sub OnengbuildingChanging(value As String)
    End Sub
    Partial Private Sub OnengbuildingChanged()
    End Sub
    Partial Private Sub OnengthmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnengthmblnmChanged()
    End Sub
    Partial Private Sub OnengamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnengamphrnmChanged()
    End Sub
    Partial Private Sub OnengchngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnengchngwtnmChanged()
    End Sub
    Partial Private Sub OnengFulladdrChanging(value As String)
    End Sub
    Partial Private Sub OnengFulladdrChanged()
    End Sub
    Partial Private Sub OnlctnmcdChanging(value As Integer)
    End Sub
    Partial Private Sub OnlctnmcdChanged()
    End Sub
    Partial Private Sub OnprefixcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnprefixcdChanged()
    End Sub
    Partial Private Sub OnthanmChanging(value As String)
    End Sub
    Partial Private Sub OnthanmChanged()
    End Sub
    Partial Private Sub OnengnmChanging(value As String)
    End Sub
    Partial Private Sub OnengnmChanged()
    End Sub
    Partial Private Sub OnsuffixcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnsuffixcdChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_identify", DbType:="NVarChar(MAX)")>  _
	Public Property identify() As String
		Get
			Return Me._identify
		End Get
		Set
			If (String.Equals(Me._identify, value) = false) Then
				Me.OnidentifyChanging(value)
				Me.SendPropertyChanging
				Me._identify = value
				Me.SendPropertyChanged("identify")
				Me.OnidentifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int")>  _
	Public Property lctcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctcd
		End Get
		Set
			If (Me._lctcd.Equals(value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaaddr", DbType:="NVarChar(MAX)")>  _
	Public Property thaaddr() As String
		Get
			Return Me._thaaddr
		End Get
		Set
			If (String.Equals(Me._thaaddr, value) = false) Then
				Me.OnthaaddrChanging(value)
				Me.SendPropertyChanging
				Me._thaaddr = value
				Me.SendPropertyChanged("thaaddr")
				Me.OnthaaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engaddr", DbType:="NVarChar(MAX)")>  _
	Public Property engaddr() As String
		Get
			Return Me._engaddr
		End Get
		Set
			If (String.Equals(Me._engaddr, value) = false) Then
				Me.OnengaddrChanging(value)
				Me.SendPropertyChanging
				Me._engaddr = value
				Me.SendPropertyChanged("engaddr")
				Me.OnengaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_room", DbType:="NVarChar(MAX)")>  _
	Public Property room() As String
		Get
			Return Me._room
		End Get
		Set
			If (String.Equals(Me._room, value) = false) Then
				Me.OnroomChanging(value)
				Me.SendPropertyChanging
				Me._room = value
				Me.SendPropertyChanged("room")
				Me.OnroomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mu", DbType:="NVarChar(MAX)")>  _
	Public Property mu() As String
		Get
			Return Me._mu
		End Get
		Set
			If (String.Equals(Me._mu, value) = false) Then
				Me.OnmuChanging(value)
				Me.SendPropertyChanging
				Me._mu = value
				Me.SendPropertyChanged("mu")
				Me.OnmuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_floor", DbType:="NVarChar(MAX)")>  _
	Public Property floor() As String
		Get
			Return Me._floor
		End Get
		Set
			If (String.Equals(Me._floor, value) = false) Then
				Me.OnfloorChanging(value)
				Me.SendPropertyChanging
				Me._floor = value
				Me.SendPropertyChanged("floor")
				Me.OnfloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thasoi", DbType:="NVarChar(MAX)")>  _
	Public Property thasoi() As String
		Get
			Return Me._thasoi
		End Get
		Set
			If (String.Equals(Me._thasoi, value) = false) Then
				Me.OnthasoiChanging(value)
				Me.SendPropertyChanging
				Me._thasoi = value
				Me.SendPropertyChanged("thasoi")
				Me.OnthasoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_building", DbType:="NVarChar(MAX)")>  _
	Public Property building() As String
		Get
			Return Me._building
		End Get
		Set
			If (String.Equals(Me._building, value) = false) Then
				Me.OnbuildingChanging(value)
				Me.SendPropertyChanging
				Me._building = value
				Me.SendPropertyChanged("building")
				Me.OnbuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engsoi", DbType:="NVarChar(MAX)")>  _
	Public Property engsoi() As String
		Get
			Return Me._engsoi
		End Get
		Set
			If (String.Equals(Me._engsoi, value) = false) Then
				Me.OnengsoiChanging(value)
				Me.SendPropertyChanging
				Me._engsoi = value
				Me.SendPropertyChanged("engsoi")
				Me.OnengsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoad", DbType:="NVarChar(MAX)")>  _
	Public Property tharoad() As String
		Get
			Return Me._tharoad
		End Get
		Set
			If (String.Equals(Me._tharoad, value) = false) Then
				Me.OntharoadChanging(value)
				Me.SendPropertyChanging
				Me._tharoad = value
				Me.SendPropertyChanged("tharoad")
				Me.OntharoadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engroad", DbType:="NVarChar(MAX)")>  _
	Public Property engroad() As String
		Get
			Return Me._engroad
		End Get
		Set
			If (String.Equals(Me._engroad, value) = false) Then
				Me.OnengroadChanging(value)
				Me.SendPropertyChanging
				Me._engroad = value
				Me.SendPropertyChanged("engroad")
				Me.OnengroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd", DbType:="SmallInt")>  _
	Public Property thmblcd() As System.Nullable(Of Short)
		Get
			Return Me._thmblcd
		End Get
		Set
			If (Me._thmblcd.Equals(value) = false) Then
				Me.OnthmblcdChanging(value)
				Me.SendPropertyChanging
				Me._thmblcd = value
				Me.SendPropertyChanged("thmblcd")
				Me.OnthmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property thmblnm() As String
		Get
			Return Me._thmblnm
		End Get
		Set
			If (String.Equals(Me._thmblnm, value) = false) Then
				Me.OnthmblnmChanging(value)
				Me.SendPropertyChanging
				Me._thmblnm = value
				Me.SendPropertyChanged("thmblnm")
				Me.OnthmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="SmallInt")>  _
	Public Property amphrcd() As System.Nullable(Of Short)
		Get
			Return Me._amphrcd
		End Get
		Set
			If (Me._amphrcd.Equals(value) = false) Then
				Me.OnamphrcdChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd = value
				Me.SendPropertyChanged("amphrcd")
				Me.OnamphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property amphrnm() As String
		Get
			Return Me._amphrnm
		End Get
		Set
			If (String.Equals(Me._amphrnm, value) = false) Then
				Me.OnamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._amphrnm = value
				Me.SendPropertyChanged("amphrnm")
				Me.OnamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="SmallInt")>  _
	Public Property chngwtcd() As System.Nullable(Of Short)
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (Me._chngwtcd.Equals(value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property chngwtnm() As String
		Get
			Return Me._chngwtnm
		End Get
		Set
			If (String.Equals(Me._chngwtnm, value) = false) Then
				Me.OnchngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._chngwtnm = value
				Me.SendPropertyChanged("chngwtnm")
				Me.OnchngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_zipcode", DbType:="NVarChar(10)")>  _
	Public Property zipcode() As String
		Get
			Return Me._zipcode
		End Get
		Set
			If (String.Equals(Me._zipcode, value) = false) Then
				Me.OnzipcodeChanging(value)
				Me.SendPropertyChanging
				Me._zipcode = value
				Me.SendPropertyChanged("zipcode")
				Me.OnzipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="NVarChar(MAX)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mobile", DbType:="NVarChar(MAX)")>  _
	Public Property Mobile() As String
		Get
			Return Me._Mobile
		End Get
		Set
			If (String.Equals(Me._Mobile, value) = false) Then
				Me.OnMobileChanging(value)
				Me.SendPropertyChanging
				Me._Mobile = value
				Me.SendPropertyChanged("Mobile")
				Me.OnMobileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="NVarChar(MAX)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_validdate", DbType:="Date")>  _
	Public Property validdate() As System.Nullable(Of Date)
		Get
			Return Me._validdate
		End Get
		Set
			If (Me._validdate.Equals(value) = false) Then
				Me.OnvaliddateChanging(value)
				Me.SendPropertyChanging
				Me._validdate = value
				Me.SendPropertyChanged("validdate")
				Me.OnvaliddateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvcode", DbType:="SmallInt")>  _
	Public Property pvcode() As System.Nullable(Of Short)
		Get
			Return Me._pvcode
		End Get
		Set
			If (Me._pvcode.Equals(value) = false) Then
				Me.OnpvcodeChanging(value)
				Me.SendPropertyChanging
				Me._pvcode = value
				Me.SendPropertyChanged("pvcode")
				Me.OnpvcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amcode", DbType:="SmallInt")>  _
	Public Property amcode() As System.Nullable(Of Short)
		Get
			Return Me._amcode
		End Get
		Set
			If (Me._amcode.Equals(value) = false) Then
				Me.OnamcodeChanging(value)
				Me.SendPropertyChanging
				Me._amcode = value
				Me.SendPropertyChanged("amcode")
				Me.OnamcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ttcode", DbType:="SmallInt")>  _
	Public Property ttcode() As System.Nullable(Of Short)
		Get
			Return Me._ttcode
		End Get
		Set
			If (Me._ttcode.Equals(value) = false) Then
				Me.OnttcodeChanging(value)
				Me.SendPropertyChanging
				Me._ttcode = value
				Me.SendPropertyChanged("ttcode")
				Me.OnttcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_branch", DbType:="NVarChar(MAX)")>  _
	Public Property branch() As String
		Get
			Return Me._branch
		End Get
		Set
			If (String.Equals(Me._branch, value) = false) Then
				Me.OnbranchChanging(value)
				Me.SendPropertyChanging
				Me._branch = value
				Me.SendPropertyChanged("branch")
				Me.OnbranchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fulladdr", DbType:="NVarChar(MAX)")>  _
	Public Property Fulladdr() As String
		Get
			Return Me._Fulladdr
		End Get
		Set
			If (String.Equals(Me._Fulladdr, value) = false) Then
				Me.OnFulladdrChanging(value)
				Me.SendPropertyChanging
				Me._Fulladdr = value
				Me.SendPropertyChanged("Fulladdr")
				Me.OnFulladdrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engmu", DbType:="NVarChar(MAX)")>  _
	Public Property engmu() As String
		Get
			Return Me._engmu
		End Get
		Set
			If (String.Equals(Me._engmu, value) = false) Then
				Me.OnengmuChanging(value)
				Me.SendPropertyChanging
				Me._engmu = value
				Me.SendPropertyChanged("engmu")
				Me.OnengmuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engroom", DbType:="NVarChar(MAX)")>  _
	Public Property engroom() As String
		Get
			Return Me._engroom
		End Get
		Set
			If (String.Equals(Me._engroom, value) = false) Then
				Me.OnengroomChanging(value)
				Me.SendPropertyChanging
				Me._engroom = value
				Me.SendPropertyChanged("engroom")
				Me.OnengroomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engfloor", DbType:="NVarChar(MAX)")>  _
	Public Property engfloor() As String
		Get
			Return Me._engfloor
		End Get
		Set
			If (String.Equals(Me._engfloor, value) = false) Then
				Me.OnengfloorChanging(value)
				Me.SendPropertyChanging
				Me._engfloor = value
				Me.SendPropertyChanged("engfloor")
				Me.OnengfloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engbuilding", DbType:="NVarChar(MAX)")>  _
	Public Property engbuilding() As String
		Get
			Return Me._engbuilding
		End Get
		Set
			If (String.Equals(Me._engbuilding, value) = false) Then
				Me.OnengbuildingChanging(value)
				Me.SendPropertyChanging
				Me._engbuilding = value
				Me.SendPropertyChanged("engbuilding")
				Me.OnengbuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engthmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property engthmblnm() As String
		Get
			Return Me._engthmblnm
		End Get
		Set
			If (String.Equals(Me._engthmblnm, value) = false) Then
				Me.OnengthmblnmChanging(value)
				Me.SendPropertyChanging
				Me._engthmblnm = value
				Me.SendPropertyChanged("engthmblnm")
				Me.OnengthmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property engamphrnm() As String
		Get
			Return Me._engamphrnm
		End Get
		Set
			If (String.Equals(Me._engamphrnm, value) = false) Then
				Me.OnengamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._engamphrnm = value
				Me.SendPropertyChanged("engamphrnm")
				Me.OnengamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engchngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property engchngwtnm() As String
		Get
			Return Me._engchngwtnm
		End Get
		Set
			If (String.Equals(Me._engchngwtnm, value) = false) Then
				Me.OnengchngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._engchngwtnm = value
				Me.SendPropertyChanged("engchngwtnm")
				Me.OnengchngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engFulladdr", DbType:="NVarChar(MAX)")>  _
	Public Property engFulladdr() As String
		Get
			Return Me._engFulladdr
		End Get
		Set
			If (String.Equals(Me._engFulladdr, value) = false) Then
				Me.OnengFulladdrChanging(value)
				Me.SendPropertyChanging
				Me._engFulladdr = value
				Me.SendPropertyChanged("engFulladdr")
				Me.OnengFulladdrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmcd", DbType:="Int NOT NULL")>  _
	Public Property lctnmcd() As Integer
		Get
			Return Me._lctnmcd
		End Get
		Set
			If ((Me._lctnmcd = value)  _
						= false) Then
				Me.OnlctnmcdChanging(value)
				Me.SendPropertyChanging
				Me._lctnmcd = value
				Me.SendPropertyChanged("lctnmcd")
				Me.OnlctnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prefixcd", DbType:="SmallInt")>  _
	Public Property prefixcd() As System.Nullable(Of Short)
		Get
			Return Me._prefixcd
		End Get
		Set
			If (Me._prefixcd.Equals(value) = false) Then
				Me.OnprefixcdChanging(value)
				Me.SendPropertyChanging
				Me._prefixcd = value
				Me.SendPropertyChanged("prefixcd")
				Me.OnprefixcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property thanm() As String
		Get
			Return Me._thanm
		End Get
		Set
			If (String.Equals(Me._thanm, value) = false) Then
				Me.OnthanmChanging(value)
				Me.SendPropertyChanging
				Me._thanm = value
				Me.SendPropertyChanged("thanm")
				Me.OnthanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engnm", DbType:="NVarChar(MAX)")>  _
	Public Property engnm() As String
		Get
			Return Me._engnm
		End Get
		Set
			If (String.Equals(Me._engnm, value) = false) Then
				Me.OnengnmChanging(value)
				Me.SendPropertyChanging
				Me._engnm = value
				Me.SendPropertyChanged("engnm")
				Me.OnengnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_suffixcd", DbType:="SmallInt")>  _
	Public Property suffixcd() As System.Nullable(Of Short)
		Get
			Return Me._suffixcd
		End Get
		Set
			If (Me._suffixcd.Equals(value) = false) Then
				Me.OnsuffixcdChanging(value)
				Me.SendPropertyChanging
				Me._suffixcd = value
				Me.SendPropertyChanged("suffixcd")
				Me.OnsuffixcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_CONSIDER_REQUESTS")>  _
Partial Public Class DRUG_CONSIDER_REQUEST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TYPE_REQUESTS As String
	
	Private _TYPE_REQUESTS_NAME As String
	
	Private _REQUESTS_DATE As System.Nullable(Of Date)
	
	Private _ALLOW_NAME As String
	
	Private _CITIZEN_ID_AUTHORIZE As String
	
	Private _CITIZEN_ID_UPLOAD As String
	
	Private _REQUESTS_AUTHORITIES As String
	
	Private _CITIZEN_ID_REQUESTS As String
	
	Private _RESPONSIBLE_AUTHORITIES As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_ID As System.Nullable(Of Integer)
	
	Private _CONREQ_CREATION_DATE As String
	
	Private _CONREQ_LAST_UPDATE As String
	
	Private _CONREQ_PDF_NAME As String
	
	Private _CONREQ_NUMBER_DAY As System.Nullable(Of Integer)
	
	Private _CONREQ_APPOINTMENT_DATE As String
	
	Private _RCVNO_DISPLAY As String
	
	Private _RCVNO As String
	
	Private _REQUESTS_DATE_DISPLAY As String
	
	Private _IDENTIFY As String
	
	Private _RCVDATE As System.Nullable(Of Date)
	
	Private _RCVDATE_DISPLAY As String
	
	Private _PERMIT_IDA As String
	
	Private _PERMIT_UPLOAD_DATE As System.Nullable(Of Date)
	
	Private _PERMIT_UPLOAD_DATE_DISPLAY As String
	
	Private _WORK_GROUP_NAME As String
	
	Private _WORK_GROUP_ID As String
	
	Private _TXT_LCNNO As String
	
	Private _SUB_TYPE_REQUESTS As String
	
	Private _ACTIVE As String
	
	Private _DRUG_NAME_ENG As String
	
	Private _DRUG_NAME_THAI As String
	
	Private _PVNCD As System.Nullable(Of Integer)
	
	Private _REQUEST_CENTER_NO As String
	
	Private _FK_REQUEST_CENTER As System.Nullable(Of Integer)
	
	Private _CITIZEN_AUTHIRIZE As String
	
	Private _CITIZEN_ID As String
	
	Private _FK_LOCATION_IDA As System.Nullable(Of Integer)
	
	Private _REF_NO As String
	
	Private _STAFF_IDENTIFY As String
	
	Private _CONREQ_LAST_UPDATE_DATE As System.Nullable(Of Date)
	
	Private _FINISH_DATE_CAL As System.Nullable(Of Date)
	
	Private _MAX_STOP_DAY As System.Nullable(Of Integer)
	
	Private _LASTEST_STATUS As System.Nullable(Of Integer)
	
	Private _STAFF_NAME As String
	
	Private _SUB_STATUS As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTYPE_REQUESTSChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_REQUESTSChanged()
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_NAMEChanged()
    End Sub
    Partial Private Sub OnREQUESTS_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUESTS_DATEChanged()
    End Sub
    Partial Private Sub OnALLOW_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnALLOW_NAMEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnREQUESTS_AUTHORITIESChanging(value As String)
    End Sub
    Partial Private Sub OnREQUESTS_AUTHORITIESChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_REQUESTSChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_REQUESTSChanged()
    End Sub
    Partial Private Sub OnRESPONSIBLE_AUTHORITIESChanging(value As String)
    End Sub
    Partial Private Sub OnRESPONSIBLE_AUTHORITIESChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDChanged()
    End Sub
    Partial Private Sub OnCONREQ_CREATION_DATEChanging(value As String)
    End Sub
    Partial Private Sub OnCONREQ_CREATION_DATEChanged()
    End Sub
    Partial Private Sub OnCONREQ_LAST_UPDATEChanging(value As String)
    End Sub
    Partial Private Sub OnCONREQ_LAST_UPDATEChanged()
    End Sub
    Partial Private Sub OnCONREQ_PDF_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCONREQ_PDF_NAMEChanged()
    End Sub
    Partial Private Sub OnCONREQ_NUMBER_DAYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCONREQ_NUMBER_DAYChanged()
    End Sub
    Partial Private Sub OnCONREQ_APPOINTMENT_DATEChanging(value As String)
    End Sub
    Partial Private Sub OnCONREQ_APPOINTMENT_DATEChanged()
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnREQUESTS_DATE_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnREQUESTS_DATE_DISPLAYChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnRCVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCVDATEChanged()
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanged()
    End Sub
    Partial Private Sub OnPERMIT_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnPERMIT_IDAChanged()
    End Sub
    Partial Private Sub OnPERMIT_UPLOAD_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPERMIT_UPLOAD_DATEChanged()
    End Sub
    Partial Private Sub OnPERMIT_UPLOAD_DATE_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnPERMIT_UPLOAD_DATE_DISPLAYChanged()
    End Sub
    Partial Private Sub OnWORK_GROUP_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnWORK_GROUP_NAMEChanged()
    End Sub
    Partial Private Sub OnWORK_GROUP_IDChanging(value As String)
    End Sub
    Partial Private Sub OnWORK_GROUP_IDChanged()
    End Sub
    Partial Private Sub OnTXT_LCNNOChanging(value As String)
    End Sub
    Partial Private Sub OnTXT_LCNNOChanged()
    End Sub
    Partial Private Sub OnSUB_TYPE_REQUESTSChanging(value As String)
    End Sub
    Partial Private Sub OnSUB_TYPE_REQUESTSChanged()
    End Sub
    Partial Private Sub OnACTIVEChanging(value As String)
    End Sub
    Partial Private Sub OnACTIVEChanged()
    End Sub
    Partial Private Sub OnDRUG_NAME_ENGChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NAME_ENGChanged()
    End Sub
    Partial Private Sub OnDRUG_NAME_THAIChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NAME_THAIChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnREQUEST_CENTER_NOChanging(value As String)
    End Sub
    Partial Private Sub OnREQUEST_CENTER_NOChanged()
    End Sub
    Partial Private Sub OnFK_REQUEST_CENTERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_REQUEST_CENTERChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHIRIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHIRIZEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnFK_LOCATION_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_LOCATION_IDAChanged()
    End Sub
    Partial Private Sub OnREF_NOChanging(value As String)
    End Sub
    Partial Private Sub OnREF_NOChanged()
    End Sub
    Partial Private Sub OnSTAFF_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnCONREQ_LAST_UPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONREQ_LAST_UPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnFINISH_DATE_CALChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFINISH_DATE_CALChanged()
    End Sub
    Partial Private Sub OnMAX_STOP_DAYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMAX_STOP_DAYChanged()
    End Sub
    Partial Private Sub OnLASTEST_STATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLASTEST_STATUSChanged()
    End Sub
    Partial Private Sub OnSTAFF_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_NAMEChanged()
    End Sub
    Partial Private Sub OnSUB_STATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUB_STATUSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_REQUESTS", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_REQUESTS() As String
		Get
			Return Me._TYPE_REQUESTS
		End Get
		Set
			If (String.Equals(Me._TYPE_REQUESTS, value) = false) Then
				Me.OnTYPE_REQUESTSChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_REQUESTS = value
				Me.SendPropertyChanged("TYPE_REQUESTS")
				Me.OnTYPE_REQUESTSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_REQUESTS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_REQUESTS_NAME() As String
		Get
			Return Me._TYPE_REQUESTS_NAME
		End Get
		Set
			If (String.Equals(Me._TYPE_REQUESTS_NAME, value) = false) Then
				Me.OnTYPE_REQUESTS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_REQUESTS_NAME = value
				Me.SendPropertyChanged("TYPE_REQUESTS_NAME")
				Me.OnTYPE_REQUESTS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUESTS_DATE", DbType:="DateTime")>  _
	Public Property REQUESTS_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUESTS_DATE
		End Get
		Set
			If (Me._REQUESTS_DATE.Equals(value) = false) Then
				Me.OnREQUESTS_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUESTS_DATE = value
				Me.SendPropertyChanged("REQUESTS_DATE")
				Me.OnREQUESTS_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLOW_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ALLOW_NAME() As String
		Get
			Return Me._ALLOW_NAME
		End Get
		Set
			If (String.Equals(Me._ALLOW_NAME, value) = false) Then
				Me.OnALLOW_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ALLOW_NAME = value
				Me.SendPropertyChanged("ALLOW_NAME")
				Me.OnALLOW_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_ID_AUTHORIZE")
				Me.OnCITIZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_UPLOAD", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID_UPLOAD() As String
		Get
			Return Me._CITIZEN_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_UPLOAD, value) = false) Then
				Me.OnCITIZEN_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_ID_UPLOAD")
				Me.OnCITIZEN_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUESTS_AUTHORITIES", DbType:="NVarChar(MAX)")>  _
	Public Property REQUESTS_AUTHORITIES() As String
		Get
			Return Me._REQUESTS_AUTHORITIES
		End Get
		Set
			If (String.Equals(Me._REQUESTS_AUTHORITIES, value) = false) Then
				Me.OnREQUESTS_AUTHORITIESChanging(value)
				Me.SendPropertyChanging
				Me._REQUESTS_AUTHORITIES = value
				Me.SendPropertyChanged("REQUESTS_AUTHORITIES")
				Me.OnREQUESTS_AUTHORITIESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_REQUESTS", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_ID_REQUESTS() As String
		Get
			Return Me._CITIZEN_ID_REQUESTS
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_REQUESTS, value) = false) Then
				Me.OnCITIZEN_ID_REQUESTSChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_REQUESTS = value
				Me.SendPropertyChanged("CITIZEN_ID_REQUESTS")
				Me.OnCITIZEN_ID_REQUESTSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESPONSIBLE_AUTHORITIES", DbType:="NVarChar(MAX)")>  _
	Public Property RESPONSIBLE_AUTHORITIES() As String
		Get
			Return Me._RESPONSIBLE_AUTHORITIES
		End Get
		Set
			If (String.Equals(Me._RESPONSIBLE_AUTHORITIES, value) = false) Then
				Me.OnRESPONSIBLE_AUTHORITIESChanging(value)
				Me.SendPropertyChanging
				Me._RESPONSIBLE_AUTHORITIES = value
				Me.SendPropertyChanged("RESPONSIBLE_AUTHORITIES")
				Me.OnRESPONSIBLE_AUTHORITIESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_ID", DbType:="Int")>  _
	Public Property FK_ID() As System.Nullable(Of Integer)
		Get
			Return Me._FK_ID
		End Get
		Set
			If (Me._FK_ID.Equals(value) = false) Then
				Me.OnFK_IDChanging(value)
				Me.SendPropertyChanging
				Me._FK_ID = value
				Me.SendPropertyChanged("FK_ID")
				Me.OnFK_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONREQ_CREATION_DATE", DbType:="NVarChar(50)")>  _
	Public Property CONREQ_CREATION_DATE() As String
		Get
			Return Me._CONREQ_CREATION_DATE
		End Get
		Set
			If (String.Equals(Me._CONREQ_CREATION_DATE, value) = false) Then
				Me.OnCONREQ_CREATION_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONREQ_CREATION_DATE = value
				Me.SendPropertyChanged("CONREQ_CREATION_DATE")
				Me.OnCONREQ_CREATION_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONREQ_LAST_UPDATE", DbType:="NVarChar(50)")>  _
	Public Property CONREQ_LAST_UPDATE() As String
		Get
			Return Me._CONREQ_LAST_UPDATE
		End Get
		Set
			If (String.Equals(Me._CONREQ_LAST_UPDATE, value) = false) Then
				Me.OnCONREQ_LAST_UPDATEChanging(value)
				Me.SendPropertyChanging
				Me._CONREQ_LAST_UPDATE = value
				Me.SendPropertyChanged("CONREQ_LAST_UPDATE")
				Me.OnCONREQ_LAST_UPDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONREQ_PDF_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CONREQ_PDF_NAME() As String
		Get
			Return Me._CONREQ_PDF_NAME
		End Get
		Set
			If (String.Equals(Me._CONREQ_PDF_NAME, value) = false) Then
				Me.OnCONREQ_PDF_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CONREQ_PDF_NAME = value
				Me.SendPropertyChanged("CONREQ_PDF_NAME")
				Me.OnCONREQ_PDF_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONREQ_NUMBER_DAY", DbType:="Int")>  _
	Public Property CONREQ_NUMBER_DAY() As System.Nullable(Of Integer)
		Get
			Return Me._CONREQ_NUMBER_DAY
		End Get
		Set
			If (Me._CONREQ_NUMBER_DAY.Equals(value) = false) Then
				Me.OnCONREQ_NUMBER_DAYChanging(value)
				Me.SendPropertyChanging
				Me._CONREQ_NUMBER_DAY = value
				Me.SendPropertyChanged("CONREQ_NUMBER_DAY")
				Me.OnCONREQ_NUMBER_DAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONREQ_APPOINTMENT_DATE", DbType:="NVarChar(50)")>  _
	Public Property CONREQ_APPOINTMENT_DATE() As String
		Get
			Return Me._CONREQ_APPOINTMENT_DATE
		End Get
		Set
			If (String.Equals(Me._CONREQ_APPOINTMENT_DATE, value) = false) Then
				Me.OnCONREQ_APPOINTMENT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONREQ_APPOINTMENT_DATE = value
				Me.SendPropertyChanged("CONREQ_APPOINTMENT_DATE")
				Me.OnCONREQ_APPOINTMENT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_DISPLAY", DbType:="NVarChar(50)")>  _
	Public Property RCVNO_DISPLAY() As String
		Get
			Return Me._RCVNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVNO_DISPLAY, value) = false) Then
				Me.OnRCVNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_DISPLAY = value
				Me.SendPropertyChanged("RCVNO_DISPLAY")
				Me.OnRCVNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="NVarChar(50)")>  _
	Public Property RCVNO() As String
		Get
			Return Me._RCVNO
		End Get
		Set
			If (String.Equals(Me._RCVNO, value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUESTS_DATE_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property REQUESTS_DATE_DISPLAY() As String
		Get
			Return Me._REQUESTS_DATE_DISPLAY
		End Get
		Set
			If (String.Equals(Me._REQUESTS_DATE_DISPLAY, value) = false) Then
				Me.OnREQUESTS_DATE_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._REQUESTS_DATE_DISPLAY = value
				Me.SendPropertyChanged("REQUESTS_DATE_DISPLAY")
				Me.OnREQUESTS_DATE_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(50)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE", DbType:="DateTime")>  _
	Public Property RCVDATE() As System.Nullable(Of Date)
		Get
			Return Me._RCVDATE
		End Get
		Set
			If (Me._RCVDATE.Equals(value) = false) Then
				Me.OnRCVDATEChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE = value
				Me.SendPropertyChanged("RCVDATE")
				Me.OnRCVDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE_DISPLAY", DbType:="NVarChar(50)")>  _
	Public Property RCVDATE_DISPLAY() As String
		Get
			Return Me._RCVDATE_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVDATE_DISPLAY, value) = false) Then
				Me.OnRCVDATE_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE_DISPLAY = value
				Me.SendPropertyChanged("RCVDATE_DISPLAY")
				Me.OnRCVDATE_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERMIT_IDA", DbType:="NVarChar(50)")>  _
	Public Property PERMIT_IDA() As String
		Get
			Return Me._PERMIT_IDA
		End Get
		Set
			If (String.Equals(Me._PERMIT_IDA, value) = false) Then
				Me.OnPERMIT_IDAChanging(value)
				Me.SendPropertyChanging
				Me._PERMIT_IDA = value
				Me.SendPropertyChanged("PERMIT_IDA")
				Me.OnPERMIT_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERMIT_UPLOAD_DATE", DbType:="DateTime")>  _
	Public Property PERMIT_UPLOAD_DATE() As System.Nullable(Of Date)
		Get
			Return Me._PERMIT_UPLOAD_DATE
		End Get
		Set
			If (Me._PERMIT_UPLOAD_DATE.Equals(value) = false) Then
				Me.OnPERMIT_UPLOAD_DATEChanging(value)
				Me.SendPropertyChanging
				Me._PERMIT_UPLOAD_DATE = value
				Me.SendPropertyChanged("PERMIT_UPLOAD_DATE")
				Me.OnPERMIT_UPLOAD_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERMIT_UPLOAD_DATE_DISPLAY", DbType:="NVarChar(50)")>  _
	Public Property PERMIT_UPLOAD_DATE_DISPLAY() As String
		Get
			Return Me._PERMIT_UPLOAD_DATE_DISPLAY
		End Get
		Set
			If (String.Equals(Me._PERMIT_UPLOAD_DATE_DISPLAY, value) = false) Then
				Me.OnPERMIT_UPLOAD_DATE_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._PERMIT_UPLOAD_DATE_DISPLAY = value
				Me.SendPropertyChanged("PERMIT_UPLOAD_DATE_DISPLAY")
				Me.OnPERMIT_UPLOAD_DATE_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORK_GROUP_NAME", DbType:="NVarChar(150)")>  _
	Public Property WORK_GROUP_NAME() As String
		Get
			Return Me._WORK_GROUP_NAME
		End Get
		Set
			If (String.Equals(Me._WORK_GROUP_NAME, value) = false) Then
				Me.OnWORK_GROUP_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._WORK_GROUP_NAME = value
				Me.SendPropertyChanged("WORK_GROUP_NAME")
				Me.OnWORK_GROUP_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WORK_GROUP_ID", DbType:="NVarChar(20)")>  _
	Public Property WORK_GROUP_ID() As String
		Get
			Return Me._WORK_GROUP_ID
		End Get
		Set
			If (String.Equals(Me._WORK_GROUP_ID, value) = false) Then
				Me.OnWORK_GROUP_IDChanging(value)
				Me.SendPropertyChanging
				Me._WORK_GROUP_ID = value
				Me.SendPropertyChanged("WORK_GROUP_ID")
				Me.OnWORK_GROUP_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TXT_LCNNO", DbType:="NVarChar(50)")>  _
	Public Property TXT_LCNNO() As String
		Get
			Return Me._TXT_LCNNO
		End Get
		Set
			If (String.Equals(Me._TXT_LCNNO, value) = false) Then
				Me.OnTXT_LCNNOChanging(value)
				Me.SendPropertyChanging
				Me._TXT_LCNNO = value
				Me.SendPropertyChanged("TXT_LCNNO")
				Me.OnTXT_LCNNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_TYPE_REQUESTS", DbType:="NVarChar(MAX)")>  _
	Public Property SUB_TYPE_REQUESTS() As String
		Get
			Return Me._SUB_TYPE_REQUESTS
		End Get
		Set
			If (String.Equals(Me._SUB_TYPE_REQUESTS, value) = false) Then
				Me.OnSUB_TYPE_REQUESTSChanging(value)
				Me.SendPropertyChanging
				Me._SUB_TYPE_REQUESTS = value
				Me.SendPropertyChanged("SUB_TYPE_REQUESTS")
				Me.OnSUB_TYPE_REQUESTSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACTIVE", DbType:="NVarChar(30)")>  _
	Public Property ACTIVE() As String
		Get
			Return Me._ACTIVE
		End Get
		Set
			If (String.Equals(Me._ACTIVE, value) = false) Then
				Me.OnACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._ACTIVE = value
				Me.SendPropertyChanged("ACTIVE")
				Me.OnACTIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NAME_ENG", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NAME_ENG() As String
		Get
			Return Me._DRUG_NAME_ENG
		End Get
		Set
			If (String.Equals(Me._DRUG_NAME_ENG, value) = false) Then
				Me.OnDRUG_NAME_ENGChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NAME_ENG = value
				Me.SendPropertyChanged("DRUG_NAME_ENG")
				Me.OnDRUG_NAME_ENGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NAME_THAI", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NAME_THAI() As String
		Get
			Return Me._DRUG_NAME_THAI
		End Get
		Set
			If (String.Equals(Me._DRUG_NAME_THAI, value) = false) Then
				Me.OnDRUG_NAME_THAIChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NAME_THAI = value
				Me.SendPropertyChanged("DRUG_NAME_THAI")
				Me.OnDRUG_NAME_THAIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="Int")>  _
	Public Property PVNCD() As System.Nullable(Of Integer)
		Get
			Return Me._PVNCD
		End Get
		Set
			If (Me._PVNCD.Equals(value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_CENTER_NO", DbType:="NVarChar(MAX)")>  _
	Public Property REQUEST_CENTER_NO() As String
		Get
			Return Me._REQUEST_CENTER_NO
		End Get
		Set
			If (String.Equals(Me._REQUEST_CENTER_NO, value) = false) Then
				Me.OnREQUEST_CENTER_NOChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_CENTER_NO = value
				Me.SendPropertyChanged("REQUEST_CENTER_NO")
				Me.OnREQUEST_CENTER_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_REQUEST_CENTER", DbType:="Int")>  _
	Public Property FK_REQUEST_CENTER() As System.Nullable(Of Integer)
		Get
			Return Me._FK_REQUEST_CENTER
		End Get
		Set
			If (Me._FK_REQUEST_CENTER.Equals(value) = false) Then
				Me.OnFK_REQUEST_CENTERChanging(value)
				Me.SendPropertyChanging
				Me._FK_REQUEST_CENTER = value
				Me.SendPropertyChanged("FK_REQUEST_CENTER")
				Me.OnFK_REQUEST_CENTERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHIRIZE", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_AUTHIRIZE() As String
		Get
			Return Me._CITIZEN_AUTHIRIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHIRIZE, value) = false) Then
				Me.OnCITIZEN_AUTHIRIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHIRIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHIRIZE")
				Me.OnCITIZEN_AUTHIRIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_LOCATION_IDA", DbType:="Int")>  _
	Public Property FK_LOCATION_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_LOCATION_IDA
		End Get
		Set
			If (Me._FK_LOCATION_IDA.Equals(value) = false) Then
				Me.OnFK_LOCATION_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_LOCATION_IDA = value
				Me.SendPropertyChanged("FK_LOCATION_IDA")
				Me.OnFK_LOCATION_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_NO", DbType:="NVarChar(MAX)")>  _
	Public Property REF_NO() As String
		Get
			Return Me._REF_NO
		End Get
		Set
			If (String.Equals(Me._REF_NO, value) = false) Then
				Me.OnREF_NOChanging(value)
				Me.SendPropertyChanging
				Me._REF_NO = value
				Me.SendPropertyChanged("REF_NO")
				Me.OnREF_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_IDENTIFY() As String
		Get
			Return Me._STAFF_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._STAFF_IDENTIFY, value) = false) Then
				Me.OnSTAFF_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_IDENTIFY = value
				Me.SendPropertyChanged("STAFF_IDENTIFY")
				Me.OnSTAFF_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONREQ_LAST_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property CONREQ_LAST_UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONREQ_LAST_UPDATE_DATE
		End Get
		Set
			If (Me._CONREQ_LAST_UPDATE_DATE.Equals(value) = false) Then
				Me.OnCONREQ_LAST_UPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONREQ_LAST_UPDATE_DATE = value
				Me.SendPropertyChanged("CONREQ_LAST_UPDATE_DATE")
				Me.OnCONREQ_LAST_UPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FINISH_DATE_CAL", DbType:="DateTime")>  _
	Public Property FINISH_DATE_CAL() As System.Nullable(Of Date)
		Get
			Return Me._FINISH_DATE_CAL
		End Get
		Set
			If (Me._FINISH_DATE_CAL.Equals(value) = false) Then
				Me.OnFINISH_DATE_CALChanging(value)
				Me.SendPropertyChanging
				Me._FINISH_DATE_CAL = value
				Me.SendPropertyChanged("FINISH_DATE_CAL")
				Me.OnFINISH_DATE_CALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAX_STOP_DAY", DbType:="Int")>  _
	Public Property MAX_STOP_DAY() As System.Nullable(Of Integer)
		Get
			Return Me._MAX_STOP_DAY
		End Get
		Set
			If (Me._MAX_STOP_DAY.Equals(value) = false) Then
				Me.OnMAX_STOP_DAYChanging(value)
				Me.SendPropertyChanging
				Me._MAX_STOP_DAY = value
				Me.SendPropertyChanged("MAX_STOP_DAY")
				Me.OnMAX_STOP_DAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LASTEST_STATUS", DbType:="Int")>  _
	Public Property LASTEST_STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._LASTEST_STATUS
		End Get
		Set
			If (Me._LASTEST_STATUS.Equals(value) = false) Then
				Me.OnLASTEST_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._LASTEST_STATUS = value
				Me.SendPropertyChanged("LASTEST_STATUS")
				Me.OnLASTEST_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_NAME() As String
		Get
			Return Me._STAFF_NAME
		End Get
		Set
			If (String.Equals(Me._STAFF_NAME, value) = false) Then
				Me.OnSTAFF_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_NAME = value
				Me.SendPropertyChanged("STAFF_NAME")
				Me.OnSTAFF_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_STATUS", DbType:="Int")>  _
	Public Property SUB_STATUS() As System.Nullable(Of Integer)
		Get
			Return Me._SUB_STATUS
		End Get
		Set
			If (Me._SUB_STATUS.Equals(value) = false) Then
				Me.OnSUB_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._SUB_STATUS = value
				Me.SendPropertyChanged("SUB_STATUS")
				Me.OnSUB_STATUSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_MENU_AUTO2")>  _
Partial Public Class MAS_MENU_AUTO2
	
	Private _IDA As Integer
	
	Private _HEAD_ID As System.Nullable(Of Integer)
	
	Private _NAME As String
	
	Private _URL As String
	
	Private _GROUP_PAGE As System.Nullable(Of Integer)
	
	Private _NODE_SWITCH As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _IS_EXPAND As System.Nullable(Of Boolean)
	
	Private _TYPE_SELECT As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me._IDA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HEAD_ID", DbType:="Int")>  _
	Public Property HEAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._HEAD_ID
		End Get
		Set
			If (Me._HEAD_ID.Equals(value) = false) Then
				Me._HEAD_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NAME() As String
		Get
			Return Me._NAME
		End Get
		Set
			If (String.Equals(Me._NAME, value) = false) Then
				Me._NAME = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_URL", DbType:="NVarChar(MAX)")>  _
	Public Property URL() As String
		Get
			Return Me._URL
		End Get
		Set
			If (String.Equals(Me._URL, value) = false) Then
				Me._URL = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_PAGE", DbType:="Int")>  _
	Public Property GROUP_PAGE() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_PAGE
		End Get
		Set
			If (Me._GROUP_PAGE.Equals(value) = false) Then
				Me._GROUP_PAGE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NODE_SWITCH", DbType:="Int")>  _
	Public Property NODE_SWITCH() As System.Nullable(Of Integer)
		Get
			Return Me._NODE_SWITCH
		End Get
		Set
			If (Me._NODE_SWITCH.Equals(value) = false) Then
				Me._NODE_SWITCH = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me._PROCESS_ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me._SEQ = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_EXPAND", DbType:="Bit")>  _
	Public Property IS_EXPAND() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_EXPAND
		End Get
		Set
			If (Me._IS_EXPAND.Equals(value) = false) Then
				Me._IS_EXPAND = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_SELECT", DbType:="Int")>  _
	Public Property TYPE_SELECT() As System.Nullable(Of Integer)
		Get
			Return Me._TYPE_SELECT
		End Get
		Set
			If (Me._TYPE_SELECT.Equals(value) = false) Then
				Me._TYPE_SELECT = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_EDIT_REQUEST")>  _
Partial Public Class DALCN_EDIT_REQUEST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _CITIZEN_ID_UPLOAD As String
	
	Private _CITIZEN_ID_AUTHORIZE As String
	
	Private _PROCESS_ID As String
	
	Private _EDIT_DESCRIPTION As String
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _EDIT_FROM As String
	
	Private _EDIT_NEW As String
	
	Private _REMARK As String
	
	Private _appdate As System.Nullable(Of Date)
	
	Private _OLD_LO_IDA As String
	
	Private _NEW_LO_IDA As String
	
	Private _OLD_KEEP_IDA As String
	
	Private _NEW_KEEP_IDA As String
	
	Private _WRITE_AT As String
	
	Private _WTIRE_DATE As System.Nullable(Of Date)
	
	Private _CHK_TYPE1 As String
	
	Private _CHK_TYPE2 As String
	
	Private _CHK_TYPE3 As String
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _CONSIDER_DATE As System.Nullable(Of Date)
	
	Private _FK_STAFF_OFFER_IDA As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnEDIT_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnEDIT_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnEDIT_FROMChanging(value As String)
    End Sub
    Partial Private Sub OnEDIT_FROMChanged()
    End Sub
    Partial Private Sub OnEDIT_NEWChanging(value As String)
    End Sub
    Partial Private Sub OnEDIT_NEWChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OnOLD_LO_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnOLD_LO_IDAChanged()
    End Sub
    Partial Private Sub OnNEW_LO_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnNEW_LO_IDAChanged()
    End Sub
    Partial Private Sub OnOLD_KEEP_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnOLD_KEEP_IDAChanged()
    End Sub
    Partial Private Sub OnNEW_KEEP_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnNEW_KEEP_IDAChanged()
    End Sub
    Partial Private Sub OnWRITE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_ATChanged()
    End Sub
    Partial Private Sub OnWTIRE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnWTIRE_DATEChanged()
    End Sub
    Partial Private Sub OnCHK_TYPE1Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE1Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE2Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE2Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE3Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE3Changed()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanged()
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_UPLOAD() As String
		Get
			Return Me._CITIZEN_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_UPLOAD, value) = false) Then
				Me.OnCITIZEN_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_ID_UPLOAD")
				Me.OnCITIZEN_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_AUTHORIZE", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_ID_AUTHORIZE")
				Me.OnCITIZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property EDIT_DESCRIPTION() As String
		Get
			Return Me._EDIT_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._EDIT_DESCRIPTION, value) = false) Then
				Me.OnEDIT_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_DESCRIPTION = value
				Me.SendPropertyChanged("EDIT_DESCRIPTION")
				Me.OnEDIT_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="DateTime")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_FROM", DbType:="NVarChar(MAX)")>  _
	Public Property EDIT_FROM() As String
		Get
			Return Me._EDIT_FROM
		End Get
		Set
			If (String.Equals(Me._EDIT_FROM, value) = false) Then
				Me.OnEDIT_FROMChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_FROM = value
				Me.SendPropertyChanged("EDIT_FROM")
				Me.OnEDIT_FROMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_NEW", DbType:="NVarChar(MAX)")>  _
	Public Property EDIT_NEW() As String
		Get
			Return Me._EDIT_NEW
		End Get
		Set
			If (String.Equals(Me._EDIT_NEW, value) = false) Then
				Me.OnEDIT_NEWChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_NEW = value
				Me.SendPropertyChanged("EDIT_NEW")
				Me.OnEDIT_NEWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="DateTime")>  _
	Public Property appdate() As System.Nullable(Of Date)
		Get
			Return Me._appdate
		End Get
		Set
			If (Me._appdate.Equals(value) = false) Then
				Me.OnappdateChanging(value)
				Me.SendPropertyChanging
				Me._appdate = value
				Me.SendPropertyChanged("appdate")
				Me.OnappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_LO_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property OLD_LO_IDA() As String
		Get
			Return Me._OLD_LO_IDA
		End Get
		Set
			If (String.Equals(Me._OLD_LO_IDA, value) = false) Then
				Me.OnOLD_LO_IDAChanging(value)
				Me.SendPropertyChanging
				Me._OLD_LO_IDA = value
				Me.SendPropertyChanged("OLD_LO_IDA")
				Me.OnOLD_LO_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_LO_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property NEW_LO_IDA() As String
		Get
			Return Me._NEW_LO_IDA
		End Get
		Set
			If (String.Equals(Me._NEW_LO_IDA, value) = false) Then
				Me.OnNEW_LO_IDAChanging(value)
				Me.SendPropertyChanging
				Me._NEW_LO_IDA = value
				Me.SendPropertyChanged("NEW_LO_IDA")
				Me.OnNEW_LO_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_KEEP_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property OLD_KEEP_IDA() As String
		Get
			Return Me._OLD_KEEP_IDA
		End Get
		Set
			If (String.Equals(Me._OLD_KEEP_IDA, value) = false) Then
				Me.OnOLD_KEEP_IDAChanging(value)
				Me.SendPropertyChanging
				Me._OLD_KEEP_IDA = value
				Me.SendPropertyChanged("OLD_KEEP_IDA")
				Me.OnOLD_KEEP_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_KEEP_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property NEW_KEEP_IDA() As String
		Get
			Return Me._NEW_KEEP_IDA
		End Get
		Set
			If (String.Equals(Me._NEW_KEEP_IDA, value) = false) Then
				Me.OnNEW_KEEP_IDAChanging(value)
				Me.SendPropertyChanging
				Me._NEW_KEEP_IDA = value
				Me.SendPropertyChanged("NEW_KEEP_IDA")
				Me.OnNEW_KEEP_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_AT() As String
		Get
			Return Me._WRITE_AT
		End Get
		Set
			If (String.Equals(Me._WRITE_AT, value) = false) Then
				Me.OnWRITE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_AT = value
				Me.SendPropertyChanged("WRITE_AT")
				Me.OnWRITE_ATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WTIRE_DATE", DbType:="DateTime")>  _
	Public Property WTIRE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._WTIRE_DATE
		End Get
		Set
			If (Me._WTIRE_DATE.Equals(value) = false) Then
				Me.OnWTIRE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._WTIRE_DATE = value
				Me.SendPropertyChanged("WTIRE_DATE")
				Me.OnWTIRE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE1", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE1() As String
		Get
			Return Me._CHK_TYPE1
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE1, value) = false) Then
				Me.OnCHK_TYPE1Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE1 = value
				Me.SendPropertyChanged("CHK_TYPE1")
				Me.OnCHK_TYPE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE2", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE2() As String
		Get
			Return Me._CHK_TYPE2
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE2, value) = false) Then
				Me.OnCHK_TYPE2Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE2 = value
				Me.SendPropertyChanged("CHK_TYPE2")
				Me.OnCHK_TYPE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE3", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE3() As String
		Get
			Return Me._CHK_TYPE3
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE3, value) = false) Then
				Me.OnCHK_TYPE3Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE3 = value
				Me.SendPropertyChanged("CHK_TYPE3")
				Me.OnCHK_TYPE3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSIDER_DATE", DbType:="DateTime")>  _
	Public Property CONSIDER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONSIDER_DATE
		End Get
		Set
			If (Me._CONSIDER_DATE.Equals(value) = false) Then
				Me.OnCONSIDER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONSIDER_DATE = value
				Me.SendPropertyChanged("CONSIDER_DATE")
				Me.OnCONSIDER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_STAFF_OFFER_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_STAFF_OFFER_IDA() As String
		Get
			Return Me._FK_STAFF_OFFER_IDA
		End Get
		Set
			If (String.Equals(Me._FK_STAFF_OFFER_IDA, value) = false) Then
				Me.OnFK_STAFF_OFFER_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_STAFF_OFFER_IDA = value
				Me.SendPropertyChanged("FK_STAFF_OFFER_IDA")
				Me.OnFK_STAFF_OFFER_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_REGISTRATION_EACH")>  _
Partial Public Class DRUG_REGISTRATION_EACH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _EACH_AMOUNT As System.Nullable(Of Double)
	
	Private _sunitcd As System.Nullable(Of Integer)
	
	Private _FK_SET As System.Nullable(Of Integer)
	
	Private _EACH_TXT As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnEACH_AMOUNTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnEACH_AMOUNTChanged()
    End Sub
    Partial Private Sub OnsunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsunitcdChanged()
    End Sub
    Partial Private Sub OnFK_SETChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_SETChanged()
    End Sub
    Partial Private Sub OnEACH_TXTChanging(value As String)
    End Sub
    Partial Private Sub OnEACH_TXTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EACH_AMOUNT", DbType:="Float")>  _
	Public Property EACH_AMOUNT() As System.Nullable(Of Double)
		Get
			Return Me._EACH_AMOUNT
		End Get
		Set
			If (Me._EACH_AMOUNT.Equals(value) = false) Then
				Me.OnEACH_AMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._EACH_AMOUNT = value
				Me.SendPropertyChanged("EACH_AMOUNT")
				Me.OnEACH_AMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitcd", DbType:="Int")>  _
	Public Property sunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sunitcd
		End Get
		Set
			If (Me._sunitcd.Equals(value) = false) Then
				Me.OnsunitcdChanging(value)
				Me.SendPropertyChanging
				Me._sunitcd = value
				Me.SendPropertyChanged("sunitcd")
				Me.OnsunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SET", DbType:="Int")>  _
	Public Property FK_SET() As System.Nullable(Of Integer)
		Get
			Return Me._FK_SET
		End Get
		Set
			If (Me._FK_SET.Equals(value) = false) Then
				Me.OnFK_SETChanging(value)
				Me.SendPropertyChanging
				Me._FK_SET = value
				Me.SendPropertyChanged("FK_SET")
				Me.OnFK_SETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EACH_TXT", DbType:="NVarChar(MAX)")>  _
	Public Property EACH_TXT() As String
		Get
			Return Me._EACH_TXT
		End Get
		Set
			If (String.Equals(Me._EACH_TXT, value) = false) Then
				Me.OnEACH_TXTChanging(value)
				Me.SendPropertyChanging
				Me._EACH_TXT = value
				Me.SendPropertyChanged("EACH_TXT")
				Me.OnEACH_TXTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LCN_EXTEND_LITE")>  _
Partial Public Class LCN_EXTEND_LITE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _pvncd As System.Nullable(Of Integer)
	
	Private _lcntpcd As String
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _CITIZEN_AUTHORIZE As String
	
	Private _thanm As String
	
	Private _thanm_address As String
	
	Private _extend_year As System.Nullable(Of Integer)
	
	Private _app_date As System.Nullable(Of Date)
	
	Private _lcnno_display_full As String
	
	Private _lcnno_pvnabbr As String
	
	Private _PROCESS_ID As String
	
	Private _PAY_L44_STAMP As System.Nullable(Of Integer)
	
	Private _PAY_STAMP As System.Nullable(Of Integer)
	
	Private _U1_CODE As String
	
	Private _licen As String
	
	Private _licen_address As String
	
	Private _licen_time As String
	
	Private _grannm_lo As String
	
	Private _grannm_address As String
	
	Private _thaamphrnm As String
	
	Private _thachngwtnm As String
	
	Private _typee As String
	
	Private _GROUPNAME As String
	
	Private _cncnm As String
	
	Private _extra_pay As System.Nullable(Of Integer)
	
	Private _process_l44 As String
	
	Private _process_l44_2 As String
	
	Private _IS_NEW As System.Nullable(Of Integer)
	
	Private _status_pay As String
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _staff As String
	
	Private _appdate As System.Nullable(Of Date)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As String
	
	Private _rcvno As String
	
	Private _CITIZEN_ID As String
	
	Private _SALE_MEDICIAN1 As String
	
	Private _SALE_MEDICIAN2 As String
	
	Private _SALE_MEDICIAN3 As String
	
	Private _SALE_MEDICIAN4 As String
	
	Private _OFF_CITIZEN As String
	
	Private _ALLOW_CITIZEN As String
	
	Private _RESPON_CITIZEN As String
	
	Private _FK_STAFF_OFFER_IDA As String
	
	Private _EXTEND As String
	
	Private _RCVNO_DISPLAY As String
	
	Private _RCVDATE_DISPLAY As String
	
	Private _REMARK As String
	
	Private _WRITE_AT As String
	
	Private _WRITE_DATE As System.Nullable(Of Date)
	
	Private _CONSIDER_DATE As System.Nullable(Of Date)
	
	Private _OFFICER_NAME As String
	
	Private _ALLOW_NAME As String
	
	Private _MAP_X As String
	
	Private _MAP_Y As String
	
	Private _Medic_4exname As String
	
	Private _Medic_4exlastname As String
	
	Private _Medic_4exnumber As String
	
	Private _Medic_4bsnname As String
	
	Private _Medic_4bsnlastname As String
	
	Private _Medic_4bsmnumber As String
	
	Private _RESPON_NAME As String
	
	Private _RCV_NAME As String
	
	Private _RCV_CITIZEN As String
	
	Private _MOBILE As String
	
	Private _ATTACH_TYPE As String
	
	Private _ATTACH_DETAIL As String
	
	Private _IMAGE_BSN As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnthanmChanging(value As String)
    End Sub
    Partial Private Sub OnthanmChanged()
    End Sub
    Partial Private Sub Onthanm_addressChanging(value As String)
    End Sub
    Partial Private Sub Onthanm_addressChanged()
    End Sub
    Partial Private Sub Onextend_yearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onextend_yearChanged()
    End Sub
    Partial Private Sub Onapp_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onapp_dateChanged()
    End Sub
    Partial Private Sub Onlcnno_display_fullChanging(value As String)
    End Sub
    Partial Private Sub Onlcnno_display_fullChanged()
    End Sub
    Partial Private Sub Onlcnno_pvnabbrChanging(value As String)
    End Sub
    Partial Private Sub Onlcnno_pvnabbrChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnPAY_L44_STAMPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPAY_L44_STAMPChanged()
    End Sub
    Partial Private Sub OnPAY_STAMPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPAY_STAMPChanged()
    End Sub
    Partial Private Sub OnU1_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnU1_CODEChanged()
    End Sub
    Partial Private Sub OnlicenChanging(value As String)
    End Sub
    Partial Private Sub OnlicenChanged()
    End Sub
    Partial Private Sub Onlicen_addressChanging(value As String)
    End Sub
    Partial Private Sub Onlicen_addressChanged()
    End Sub
    Partial Private Sub Onlicen_timeChanging(value As String)
    End Sub
    Partial Private Sub Onlicen_timeChanged()
    End Sub
    Partial Private Sub Ongrannm_loChanging(value As String)
    End Sub
    Partial Private Sub Ongrannm_loChanged()
    End Sub
    Partial Private Sub Ongrannm_addressChanging(value As String)
    End Sub
    Partial Private Sub Ongrannm_addressChanged()
    End Sub
    Partial Private Sub OnthaamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnthaamphrnmChanged()
    End Sub
    Partial Private Sub OnthachngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnthachngwtnmChanged()
    End Sub
    Partial Private Sub OntypeeChanging(value As String)
    End Sub
    Partial Private Sub OntypeeChanged()
    End Sub
    Partial Private Sub OnGROUPNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnGROUPNAMEChanged()
    End Sub
    Partial Private Sub OncncnmChanging(value As String)
    End Sub
    Partial Private Sub OncncnmChanged()
    End Sub
    Partial Private Sub Onextra_payChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onextra_payChanged()
    End Sub
    Partial Private Sub Onprocess_l44Changing(value As String)
    End Sub
    Partial Private Sub Onprocess_l44Changed()
    End Sub
    Partial Private Sub Onprocess_l44_2Changing(value As String)
    End Sub
    Partial Private Sub Onprocess_l44_2Changed()
    End Sub
    Partial Private Sub OnIS_NEWChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIS_NEWChanged()
    End Sub
    Partial Private Sub Onstatus_payChanging(value As String)
    End Sub
    Partial Private Sub Onstatus_payChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnstaffChanging(value As String)
    End Sub
    Partial Private Sub OnstaffChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnSALE_MEDICIAN1Changing(value As String)
    End Sub
    Partial Private Sub OnSALE_MEDICIAN1Changed()
    End Sub
    Partial Private Sub OnSALE_MEDICIAN2Changing(value As String)
    End Sub
    Partial Private Sub OnSALE_MEDICIAN2Changed()
    End Sub
    Partial Private Sub OnSALE_MEDICIAN3Changing(value As String)
    End Sub
    Partial Private Sub OnSALE_MEDICIAN3Changed()
    End Sub
    Partial Private Sub OnSALE_MEDICIAN4Changing(value As String)
    End Sub
    Partial Private Sub OnSALE_MEDICIAN4Changed()
    End Sub
    Partial Private Sub OnOFF_CITIZENChanging(value As String)
    End Sub
    Partial Private Sub OnOFF_CITIZENChanged()
    End Sub
    Partial Private Sub OnALLOW_CITIZENChanging(value As String)
    End Sub
    Partial Private Sub OnALLOW_CITIZENChanged()
    End Sub
    Partial Private Sub OnRESPON_CITIZENChanging(value As String)
    End Sub
    Partial Private Sub OnRESPON_CITIZENChanged()
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanged()
    End Sub
    Partial Private Sub OnEXTENDChanging(value As String)
    End Sub
    Partial Private Sub OnEXTENDChanged()
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnWRITE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_ATChanged()
    End Sub
    Partial Private Sub OnWRITE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnWRITE_DATEChanged()
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanged()
    End Sub
    Partial Private Sub OnOFFICER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnOFFICER_NAMEChanged()
    End Sub
    Partial Private Sub OnALLOW_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnALLOW_NAMEChanged()
    End Sub
    Partial Private Sub OnMAP_XChanging(value As String)
    End Sub
    Partial Private Sub OnMAP_XChanged()
    End Sub
    Partial Private Sub OnMAP_YChanging(value As String)
    End Sub
    Partial Private Sub OnMAP_YChanged()
    End Sub
    Partial Private Sub OnMedic_4exnameChanging(value As String)
    End Sub
    Partial Private Sub OnMedic_4exnameChanged()
    End Sub
    Partial Private Sub OnMedic_4exlastnameChanging(value As String)
    End Sub
    Partial Private Sub OnMedic_4exlastnameChanged()
    End Sub
    Partial Private Sub OnMedic_4exnumberChanging(value As String)
    End Sub
    Partial Private Sub OnMedic_4exnumberChanged()
    End Sub
    Partial Private Sub OnMedic_4bsnnameChanging(value As String)
    End Sub
    Partial Private Sub OnMedic_4bsnnameChanged()
    End Sub
    Partial Private Sub OnMedic_4bsnlastnameChanging(value As String)
    End Sub
    Partial Private Sub OnMedic_4bsnlastnameChanged()
    End Sub
    Partial Private Sub OnMedic_4bsmnumberChanging(value As String)
    End Sub
    Partial Private Sub OnMedic_4bsmnumberChanged()
    End Sub
    Partial Private Sub OnRESPON_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRESPON_NAMEChanged()
    End Sub
    Partial Private Sub OnRCV_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnRCV_NAMEChanged()
    End Sub
    Partial Private Sub OnRCV_CITIZENChanging(value As String)
    End Sub
    Partial Private Sub OnRCV_CITIZENChanged()
    End Sub
    Partial Private Sub OnMOBILEChanging(value As String)
    End Sub
    Partial Private Sub OnMOBILEChanged()
    End Sub
    Partial Private Sub OnATTACH_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnATTACH_TYPEChanged()
    End Sub
    Partial Private Sub OnATTACH_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnATTACH_DETAILChanged()
    End Sub
    Partial Private Sub OnIMAGE_BSNChanging(value As String)
    End Sub
    Partial Private Sub OnIMAGE_BSNChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(MAX)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm", DbType:="NVarChar(MAX)")>  _
	Public Property thanm() As String
		Get
			Return Me._thanm
		End Get
		Set
			If (String.Equals(Me._thanm, value) = false) Then
				Me.OnthanmChanging(value)
				Me.SendPropertyChanging
				Me._thanm = value
				Me.SendPropertyChanged("thanm")
				Me.OnthanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanm_address", DbType:="NVarChar(MAX)")>  _
	Public Property thanm_address() As String
		Get
			Return Me._thanm_address
		End Get
		Set
			If (String.Equals(Me._thanm_address, value) = false) Then
				Me.Onthanm_addressChanging(value)
				Me.SendPropertyChanging
				Me._thanm_address = value
				Me.SendPropertyChanged("thanm_address")
				Me.Onthanm_addressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_extend_year", DbType:="Int")>  _
	Public Property extend_year() As System.Nullable(Of Integer)
		Get
			Return Me._extend_year
		End Get
		Set
			If (Me._extend_year.Equals(value) = false) Then
				Me.Onextend_yearChanging(value)
				Me.SendPropertyChanging
				Me._extend_year = value
				Me.SendPropertyChanged("extend_year")
				Me.Onextend_yearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_app_date", DbType:="DateTime")>  _
	Public Property app_date() As System.Nullable(Of Date)
		Get
			Return Me._app_date
		End Get
		Set
			If (Me._app_date.Equals(value) = false) Then
				Me.Onapp_dateChanging(value)
				Me.SendPropertyChanging
				Me._app_date = value
				Me.SendPropertyChanged("app_date")
				Me.Onapp_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno_display_full", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno_display_full() As String
		Get
			Return Me._lcnno_display_full
		End Get
		Set
			If (String.Equals(Me._lcnno_display_full, value) = false) Then
				Me.Onlcnno_display_fullChanging(value)
				Me.SendPropertyChanging
				Me._lcnno_display_full = value
				Me.SendPropertyChanged("lcnno_display_full")
				Me.Onlcnno_display_fullChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno_pvnabbr", DbType:="NVarChar(MAX)")>  _
	Public Property lcnno_pvnabbr() As String
		Get
			Return Me._lcnno_pvnabbr
		End Get
		Set
			If (String.Equals(Me._lcnno_pvnabbr, value) = false) Then
				Me.Onlcnno_pvnabbrChanging(value)
				Me.SendPropertyChanging
				Me._lcnno_pvnabbr = value
				Me.SendPropertyChanged("lcnno_pvnabbr")
				Me.Onlcnno_pvnabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAY_L44_STAMP", DbType:="Int")>  _
	Public Property PAY_L44_STAMP() As System.Nullable(Of Integer)
		Get
			Return Me._PAY_L44_STAMP
		End Get
		Set
			If (Me._PAY_L44_STAMP.Equals(value) = false) Then
				Me.OnPAY_L44_STAMPChanging(value)
				Me.SendPropertyChanging
				Me._PAY_L44_STAMP = value
				Me.SendPropertyChanged("PAY_L44_STAMP")
				Me.OnPAY_L44_STAMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAY_STAMP", DbType:="Int")>  _
	Public Property PAY_STAMP() As System.Nullable(Of Integer)
		Get
			Return Me._PAY_STAMP
		End Get
		Set
			If (Me._PAY_STAMP.Equals(value) = false) Then
				Me.OnPAY_STAMPChanging(value)
				Me.SendPropertyChanging
				Me._PAY_STAMP = value
				Me.SendPropertyChanged("PAY_STAMP")
				Me.OnPAY_STAMPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_U1_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property U1_CODE() As String
		Get
			Return Me._U1_CODE
		End Get
		Set
			If (String.Equals(Me._U1_CODE, value) = false) Then
				Me.OnU1_CODEChanging(value)
				Me.SendPropertyChanging
				Me._U1_CODE = value
				Me.SendPropertyChanged("U1_CODE")
				Me.OnU1_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_licen", DbType:="NVarChar(MAX)")>  _
	Public Property licen() As String
		Get
			Return Me._licen
		End Get
		Set
			If (String.Equals(Me._licen, value) = false) Then
				Me.OnlicenChanging(value)
				Me.SendPropertyChanging
				Me._licen = value
				Me.SendPropertyChanged("licen")
				Me.OnlicenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_licen_address", DbType:="NVarChar(MAX)")>  _
	Public Property licen_address() As String
		Get
			Return Me._licen_address
		End Get
		Set
			If (String.Equals(Me._licen_address, value) = false) Then
				Me.Onlicen_addressChanging(value)
				Me.SendPropertyChanging
				Me._licen_address = value
				Me.SendPropertyChanged("licen_address")
				Me.Onlicen_addressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_licen_time", DbType:="NVarChar(MAX)")>  _
	Public Property licen_time() As String
		Get
			Return Me._licen_time
		End Get
		Set
			If (String.Equals(Me._licen_time, value) = false) Then
				Me.Onlicen_timeChanging(value)
				Me.SendPropertyChanging
				Me._licen_time = value
				Me.SendPropertyChanged("licen_time")
				Me.Onlicen_timeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grannm_lo", DbType:="NVarChar(MAX)")>  _
	Public Property grannm_lo() As String
		Get
			Return Me._grannm_lo
		End Get
		Set
			If (String.Equals(Me._grannm_lo, value) = false) Then
				Me.Ongrannm_loChanging(value)
				Me.SendPropertyChanging
				Me._grannm_lo = value
				Me.SendPropertyChanged("grannm_lo")
				Me.Ongrannm_loChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grannm_address", DbType:="NVarChar(MAX)")>  _
	Public Property grannm_address() As String
		Get
			Return Me._grannm_address
		End Get
		Set
			If (String.Equals(Me._grannm_address, value) = false) Then
				Me.Ongrannm_addressChanging(value)
				Me.SendPropertyChanging
				Me._grannm_address = value
				Me.SendPropertyChanged("grannm_address")
				Me.Ongrannm_addressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property thaamphrnm() As String
		Get
			Return Me._thaamphrnm
		End Get
		Set
			If (String.Equals(Me._thaamphrnm, value) = false) Then
				Me.OnthaamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._thaamphrnm = value
				Me.SendPropertyChanged("thaamphrnm")
				Me.OnthaamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thachngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property thachngwtnm() As String
		Get
			Return Me._thachngwtnm
		End Get
		Set
			If (String.Equals(Me._thachngwtnm, value) = false) Then
				Me.OnthachngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._thachngwtnm = value
				Me.SendPropertyChanged("thachngwtnm")
				Me.OnthachngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_typee", DbType:="NVarChar(MAX)")>  _
	Public Property typee() As String
		Get
			Return Me._typee
		End Get
		Set
			If (String.Equals(Me._typee, value) = false) Then
				Me.OntypeeChanging(value)
				Me.SendPropertyChanging
				Me._typee = value
				Me.SendPropertyChanged("typee")
				Me.OntypeeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUPNAME", DbType:="NVarChar(MAX)")>  _
	Public Property GROUPNAME() As String
		Get
			Return Me._GROUPNAME
		End Get
		Set
			If (String.Equals(Me._GROUPNAME, value) = false) Then
				Me.OnGROUPNAMEChanging(value)
				Me.SendPropertyChanging
				Me._GROUPNAME = value
				Me.SendPropertyChanged("GROUPNAME")
				Me.OnGROUPNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncnm", DbType:="NVarChar(MAX)")>  _
	Public Property cncnm() As String
		Get
			Return Me._cncnm
		End Get
		Set
			If (String.Equals(Me._cncnm, value) = false) Then
				Me.OncncnmChanging(value)
				Me.SendPropertyChanging
				Me._cncnm = value
				Me.SendPropertyChanged("cncnm")
				Me.OncncnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_extra_pay", DbType:="Int")>  _
	Public Property extra_pay() As System.Nullable(Of Integer)
		Get
			Return Me._extra_pay
		End Get
		Set
			If (Me._extra_pay.Equals(value) = false) Then
				Me.Onextra_payChanging(value)
				Me.SendPropertyChanging
				Me._extra_pay = value
				Me.SendPropertyChanged("extra_pay")
				Me.Onextra_payChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_process_l44", DbType:="NVarChar(MAX)")>  _
	Public Property process_l44() As String
		Get
			Return Me._process_l44
		End Get
		Set
			If (String.Equals(Me._process_l44, value) = false) Then
				Me.Onprocess_l44Changing(value)
				Me.SendPropertyChanging
				Me._process_l44 = value
				Me.SendPropertyChanged("process_l44")
				Me.Onprocess_l44Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_process_l44_2", DbType:="NVarChar(MAX)")>  _
	Public Property process_l44_2() As String
		Get
			Return Me._process_l44_2
		End Get
		Set
			If (String.Equals(Me._process_l44_2, value) = false) Then
				Me.Onprocess_l44_2Changing(value)
				Me.SendPropertyChanging
				Me._process_l44_2 = value
				Me.SendPropertyChanged("process_l44_2")
				Me.Onprocess_l44_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_NEW", DbType:="Int")>  _
	Public Property IS_NEW() As System.Nullable(Of Integer)
		Get
			Return Me._IS_NEW
		End Get
		Set
			If (Me._IS_NEW.Equals(value) = false) Then
				Me.OnIS_NEWChanging(value)
				Me.SendPropertyChanging
				Me._IS_NEW = value
				Me.SendPropertyChanged("IS_NEW")
				Me.OnIS_NEWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status_pay", DbType:="NVarChar(MAX)")>  _
	Public Property status_pay() As String
		Get
			Return Me._status_pay
		End Get
		Set
			If (String.Equals(Me._status_pay, value) = false) Then
				Me.Onstatus_payChanging(value)
				Me.SendPropertyChanging
				Me._status_pay = value
				Me.SendPropertyChanged("status_pay")
				Me.Onstatus_payChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="DateTime")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staff", DbType:="NVarChar(MAX)")>  _
	Public Property staff() As String
		Get
			Return Me._staff
		End Get
		Set
			If (String.Equals(Me._staff, value) = false) Then
				Me.OnstaffChanging(value)
				Me.SendPropertyChanging
				Me._staff = value
				Me.SendPropertyChanged("staff")
				Me.OnstaffChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="DateTime")>  _
	Public Property appdate() As System.Nullable(Of Date)
		Get
			Return Me._appdate
		End Get
		Set
			If (Me._appdate.Equals(value) = false) Then
				Me.OnappdateChanging(value)
				Me.SendPropertyChanging
				Me._appdate = value
				Me.SendPropertyChanged("appdate")
				Me.OnappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="NVarChar(MAX)")>  _
	Public Property TR_ID() As String
		Get
			Return Me._TR_ID
		End Get
		Set
			If (String.Equals(Me._TR_ID, value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(MAX)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_MEDICIAN1", DbType:="NVarChar(MAX)")>  _
	Public Property SALE_MEDICIAN1() As String
		Get
			Return Me._SALE_MEDICIAN1
		End Get
		Set
			If (String.Equals(Me._SALE_MEDICIAN1, value) = false) Then
				Me.OnSALE_MEDICIAN1Changing(value)
				Me.SendPropertyChanging
				Me._SALE_MEDICIAN1 = value
				Me.SendPropertyChanged("SALE_MEDICIAN1")
				Me.OnSALE_MEDICIAN1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_MEDICIAN2", DbType:="NVarChar(MAX)")>  _
	Public Property SALE_MEDICIAN2() As String
		Get
			Return Me._SALE_MEDICIAN2
		End Get
		Set
			If (String.Equals(Me._SALE_MEDICIAN2, value) = false) Then
				Me.OnSALE_MEDICIAN2Changing(value)
				Me.SendPropertyChanging
				Me._SALE_MEDICIAN2 = value
				Me.SendPropertyChanged("SALE_MEDICIAN2")
				Me.OnSALE_MEDICIAN2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_MEDICIAN3", DbType:="NVarChar(MAX)")>  _
	Public Property SALE_MEDICIAN3() As String
		Get
			Return Me._SALE_MEDICIAN3
		End Get
		Set
			If (String.Equals(Me._SALE_MEDICIAN3, value) = false) Then
				Me.OnSALE_MEDICIAN3Changing(value)
				Me.SendPropertyChanging
				Me._SALE_MEDICIAN3 = value
				Me.SendPropertyChanged("SALE_MEDICIAN3")
				Me.OnSALE_MEDICIAN3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALE_MEDICIAN4", DbType:="NVarChar(MAX)")>  _
	Public Property SALE_MEDICIAN4() As String
		Get
			Return Me._SALE_MEDICIAN4
		End Get
		Set
			If (String.Equals(Me._SALE_MEDICIAN4, value) = false) Then
				Me.OnSALE_MEDICIAN4Changing(value)
				Me.SendPropertyChanging
				Me._SALE_MEDICIAN4 = value
				Me.SendPropertyChanged("SALE_MEDICIAN4")
				Me.OnSALE_MEDICIAN4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFF_CITIZEN", DbType:="NVarChar(MAX)")>  _
	Public Property OFF_CITIZEN() As String
		Get
			Return Me._OFF_CITIZEN
		End Get
		Set
			If (String.Equals(Me._OFF_CITIZEN, value) = false) Then
				Me.OnOFF_CITIZENChanging(value)
				Me.SendPropertyChanging
				Me._OFF_CITIZEN = value
				Me.SendPropertyChanged("OFF_CITIZEN")
				Me.OnOFF_CITIZENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLOW_CITIZEN", DbType:="NVarChar(MAX)")>  _
	Public Property ALLOW_CITIZEN() As String
		Get
			Return Me._ALLOW_CITIZEN
		End Get
		Set
			If (String.Equals(Me._ALLOW_CITIZEN, value) = false) Then
				Me.OnALLOW_CITIZENChanging(value)
				Me.SendPropertyChanging
				Me._ALLOW_CITIZEN = value
				Me.SendPropertyChanged("ALLOW_CITIZEN")
				Me.OnALLOW_CITIZENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESPON_CITIZEN", DbType:="NVarChar(MAX)")>  _
	Public Property RESPON_CITIZEN() As String
		Get
			Return Me._RESPON_CITIZEN
		End Get
		Set
			If (String.Equals(Me._RESPON_CITIZEN, value) = false) Then
				Me.OnRESPON_CITIZENChanging(value)
				Me.SendPropertyChanging
				Me._RESPON_CITIZEN = value
				Me.SendPropertyChanged("RESPON_CITIZEN")
				Me.OnRESPON_CITIZENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_STAFF_OFFER_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_STAFF_OFFER_IDA() As String
		Get
			Return Me._FK_STAFF_OFFER_IDA
		End Get
		Set
			If (String.Equals(Me._FK_STAFF_OFFER_IDA, value) = false) Then
				Me.OnFK_STAFF_OFFER_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_STAFF_OFFER_IDA = value
				Me.SendPropertyChanged("FK_STAFF_OFFER_IDA")
				Me.OnFK_STAFF_OFFER_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXTEND", DbType:="NVarChar(MAX)")>  _
	Public Property EXTEND() As String
		Get
			Return Me._EXTEND
		End Get
		Set
			If (String.Equals(Me._EXTEND, value) = false) Then
				Me.OnEXTENDChanging(value)
				Me.SendPropertyChanging
				Me._EXTEND = value
				Me.SendPropertyChanged("EXTEND")
				Me.OnEXTENDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_DISPLAY() As String
		Get
			Return Me._RCVNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVNO_DISPLAY, value) = false) Then
				Me.OnRCVNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_DISPLAY = value
				Me.SendPropertyChanged("RCVNO_DISPLAY")
				Me.OnRCVNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVDATE_DISPLAY() As String
		Get
			Return Me._RCVDATE_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVDATE_DISPLAY, value) = false) Then
				Me.OnRCVDATE_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE_DISPLAY = value
				Me.SendPropertyChanged("RCVDATE_DISPLAY")
				Me.OnRCVDATE_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_AT() As String
		Get
			Return Me._WRITE_AT
		End Get
		Set
			If (String.Equals(Me._WRITE_AT, value) = false) Then
				Me.OnWRITE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_AT = value
				Me.SendPropertyChanged("WRITE_AT")
				Me.OnWRITE_ATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_DATE", DbType:="DateTime")>  _
	Public Property WRITE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._WRITE_DATE
		End Get
		Set
			If (Me._WRITE_DATE.Equals(value) = false) Then
				Me.OnWRITE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_DATE = value
				Me.SendPropertyChanged("WRITE_DATE")
				Me.OnWRITE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSIDER_DATE", DbType:="DateTime")>  _
	Public Property CONSIDER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONSIDER_DATE
		End Get
		Set
			If (Me._CONSIDER_DATE.Equals(value) = false) Then
				Me.OnCONSIDER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONSIDER_DATE = value
				Me.SendPropertyChanged("CONSIDER_DATE")
				Me.OnCONSIDER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OFFICER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property OFFICER_NAME() As String
		Get
			Return Me._OFFICER_NAME
		End Get
		Set
			If (String.Equals(Me._OFFICER_NAME, value) = false) Then
				Me.OnOFFICER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._OFFICER_NAME = value
				Me.SendPropertyChanged("OFFICER_NAME")
				Me.OnOFFICER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ALLOW_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ALLOW_NAME() As String
		Get
			Return Me._ALLOW_NAME
		End Get
		Set
			If (String.Equals(Me._ALLOW_NAME, value) = false) Then
				Me.OnALLOW_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ALLOW_NAME = value
				Me.SendPropertyChanged("ALLOW_NAME")
				Me.OnALLOW_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAP_X", DbType:="NVarChar(MAX)")>  _
	Public Property MAP_X() As String
		Get
			Return Me._MAP_X
		End Get
		Set
			If (String.Equals(Me._MAP_X, value) = false) Then
				Me.OnMAP_XChanging(value)
				Me.SendPropertyChanging
				Me._MAP_X = value
				Me.SendPropertyChanged("MAP_X")
				Me.OnMAP_XChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAP_Y", DbType:="NVarChar(MAX)")>  _
	Public Property MAP_Y() As String
		Get
			Return Me._MAP_Y
		End Get
		Set
			If (String.Equals(Me._MAP_Y, value) = false) Then
				Me.OnMAP_YChanging(value)
				Me.SendPropertyChanging
				Me._MAP_Y = value
				Me.SendPropertyChanged("MAP_Y")
				Me.OnMAP_YChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Medic_4exname", DbType:="NVarChar(MAX)")>  _
	Public Property Medic_4exname() As String
		Get
			Return Me._Medic_4exname
		End Get
		Set
			If (String.Equals(Me._Medic_4exname, value) = false) Then
				Me.OnMedic_4exnameChanging(value)
				Me.SendPropertyChanging
				Me._Medic_4exname = value
				Me.SendPropertyChanged("Medic_4exname")
				Me.OnMedic_4exnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Medic_4exlastname", DbType:="NVarChar(MAX)")>  _
	Public Property Medic_4exlastname() As String
		Get
			Return Me._Medic_4exlastname
		End Get
		Set
			If (String.Equals(Me._Medic_4exlastname, value) = false) Then
				Me.OnMedic_4exlastnameChanging(value)
				Me.SendPropertyChanging
				Me._Medic_4exlastname = value
				Me.SendPropertyChanged("Medic_4exlastname")
				Me.OnMedic_4exlastnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Medic_4exnumber", DbType:="NVarChar(MAX)")>  _
	Public Property Medic_4exnumber() As String
		Get
			Return Me._Medic_4exnumber
		End Get
		Set
			If (String.Equals(Me._Medic_4exnumber, value) = false) Then
				Me.OnMedic_4exnumberChanging(value)
				Me.SendPropertyChanging
				Me._Medic_4exnumber = value
				Me.SendPropertyChanged("Medic_4exnumber")
				Me.OnMedic_4exnumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Medic_4bsnname", DbType:="NVarChar(MAX)")>  _
	Public Property Medic_4bsnname() As String
		Get
			Return Me._Medic_4bsnname
		End Get
		Set
			If (String.Equals(Me._Medic_4bsnname, value) = false) Then
				Me.OnMedic_4bsnnameChanging(value)
				Me.SendPropertyChanging
				Me._Medic_4bsnname = value
				Me.SendPropertyChanged("Medic_4bsnname")
				Me.OnMedic_4bsnnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Medic_4bsnlastname", DbType:="NVarChar(MAX)")>  _
	Public Property Medic_4bsnlastname() As String
		Get
			Return Me._Medic_4bsnlastname
		End Get
		Set
			If (String.Equals(Me._Medic_4bsnlastname, value) = false) Then
				Me.OnMedic_4bsnlastnameChanging(value)
				Me.SendPropertyChanging
				Me._Medic_4bsnlastname = value
				Me.SendPropertyChanged("Medic_4bsnlastname")
				Me.OnMedic_4bsnlastnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Medic_4bsmnumber", DbType:="NVarChar(MAX)")>  _
	Public Property Medic_4bsmnumber() As String
		Get
			Return Me._Medic_4bsmnumber
		End Get
		Set
			If (String.Equals(Me._Medic_4bsmnumber, value) = false) Then
				Me.OnMedic_4bsmnumberChanging(value)
				Me.SendPropertyChanging
				Me._Medic_4bsmnumber = value
				Me.SendPropertyChanged("Medic_4bsmnumber")
				Me.OnMedic_4bsmnumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RESPON_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property RESPON_NAME() As String
		Get
			Return Me._RESPON_NAME
		End Get
		Set
			If (String.Equals(Me._RESPON_NAME, value) = false) Then
				Me.OnRESPON_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._RESPON_NAME = value
				Me.SendPropertyChanged("RESPON_NAME")
				Me.OnRESPON_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCV_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property RCV_NAME() As String
		Get
			Return Me._RCV_NAME
		End Get
		Set
			If (String.Equals(Me._RCV_NAME, value) = false) Then
				Me.OnRCV_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._RCV_NAME = value
				Me.SendPropertyChanged("RCV_NAME")
				Me.OnRCV_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCV_CITIZEN", DbType:="NVarChar(MAX)")>  _
	Public Property RCV_CITIZEN() As String
		Get
			Return Me._RCV_CITIZEN
		End Get
		Set
			If (String.Equals(Me._RCV_CITIZEN, value) = false) Then
				Me.OnRCV_CITIZENChanging(value)
				Me.SendPropertyChanging
				Me._RCV_CITIZEN = value
				Me.SendPropertyChanged("RCV_CITIZEN")
				Me.OnRCV_CITIZENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOBILE", DbType:="NVarChar(MAX)")>  _
	Public Property MOBILE() As String
		Get
			Return Me._MOBILE
		End Get
		Set
			If (String.Equals(Me._MOBILE, value) = false) Then
				Me.OnMOBILEChanging(value)
				Me.SendPropertyChanging
				Me._MOBILE = value
				Me.SendPropertyChanged("MOBILE")
				Me.OnMOBILEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_TYPE", DbType:="NVarChar(50)")>  _
	Public Property ATTACH_TYPE() As String
		Get
			Return Me._ATTACH_TYPE
		End Get
		Set
			If (String.Equals(Me._ATTACH_TYPE, value) = false) Then
				Me.OnATTACH_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._ATTACH_TYPE = value
				Me.SendPropertyChanged("ATTACH_TYPE")
				Me.OnATTACH_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property ATTACH_DETAIL() As String
		Get
			Return Me._ATTACH_DETAIL
		End Get
		Set
			If (String.Equals(Me._ATTACH_DETAIL, value) = false) Then
				Me.OnATTACH_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._ATTACH_DETAIL = value
				Me.SendPropertyChanged("ATTACH_DETAIL")
				Me.OnATTACH_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_BSN", DbType:="NVarChar(MAX)")>  _
	Public Property IMAGE_BSN() As String
		Get
			Return Me._IMAGE_BSN
		End Get
		Set
			If (String.Equals(Me._IMAGE_BSN, value) = false) Then
				Me.OnIMAGE_BSNChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_BSN = value
				Me.SendPropertyChanged("IMAGE_BSN")
				Me.OnIMAGE_BSNChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LCN_EXTEND_LITE_GPP")>  _
Partial Public Class LCN_EXTEND_LITE_GPP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _YEARS As System.Nullable(Of Integer)
	
	Private _PVNCD As System.Nullable(Of Integer)
	
	Private _CREATEDATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnYEARSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYEARSChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnCREATEDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATEDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEARS", DbType:="Int")>  _
	Public Property YEARS() As System.Nullable(Of Integer)
		Get
			Return Me._YEARS
		End Get
		Set
			If (Me._YEARS.Equals(value) = false) Then
				Me.OnYEARSChanging(value)
				Me.SendPropertyChanging
				Me._YEARS = value
				Me.SendPropertyChanged("YEARS")
				Me.OnYEARSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="Int")>  _
	Public Property PVNCD() As System.Nullable(Of Integer)
		Get
			Return Me._PVNCD
		End Get
		Set
			If (Me._PVNCD.Equals(value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATEDATE", DbType:="DateTime")>  _
	Public Property CREATEDATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATEDATE
		End Get
		Set
			If (Me._CREATEDATE.Equals(value) = false) Then
				Me.OnCREATEDATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATEDATE = value
				Me.SendPropertyChanged("CREATEDATE")
				Me.OnCREATEDATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_NCT_SUBSTITUTE")>  _
Partial Public Class DALCN_NCT_SUBSTITUTE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _CTZNO As String
	
	Private _REMARK As String
	
	Private _IDENTIFY As String
	
	Private _PROCESS_ID As String
	
	Private _TEMPLATE_ID As String
	
	Private _STAFF_RCV_IDENTIFY As String
	
	Private _PURPOSE As String
	
	Private _PURPOSE_ID As String
	
	Private _STAFF_SIGN_IDEN As String
	
	Private _rcvno As String
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _appdate As System.Nullable(Of Date)
	
	Private _CONSIDER_DATE As System.Nullable(Of Date)
	
	Private _rcv_group As String
	
	Private _rcv_symbol As String
	
	Private _WRITE_AT As String
	
	Private _WRITE_DATE As System.Nullable(Of Date)
	
	Private _CHK_TYPE1 As String
	
	Private _CHK_TYPE2 As String
	
	Private _CHK_TYPE3 As String
	
	Private _FK_STAFF_OFFER_IDA As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnCTZNOChanging(value As String)
    End Sub
    Partial Private Sub OnCTZNOChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnTEMPLATE_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTEMPLATE_IDChanged()
    End Sub
    Partial Private Sub OnSTAFF_RCV_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_RCV_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnPURPOSEChanging(value As String)
    End Sub
    Partial Private Sub OnPURPOSEChanged()
    End Sub
    Partial Private Sub OnPURPOSE_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPURPOSE_IDChanged()
    End Sub
    Partial Private Sub OnSTAFF_SIGN_IDENChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_SIGN_IDENChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As String)
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanged()
    End Sub
    Partial Private Sub Onrcv_groupChanging(value As String)
    End Sub
    Partial Private Sub Onrcv_groupChanged()
    End Sub
    Partial Private Sub Onrcv_symbolChanging(value As String)
    End Sub
    Partial Private Sub Onrcv_symbolChanged()
    End Sub
    Partial Private Sub OnWRITE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_ATChanged()
    End Sub
    Partial Private Sub OnWRITE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnWRITE_DATEChanged()
    End Sub
    Partial Private Sub OnCHK_TYPE1Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE1Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE2Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE2Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE3Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE3Changed()
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CTZNO", DbType:="NVarChar(MAX)")>  _
	Public Property CTZNO() As String
		Get
			Return Me._CTZNO
		End Get
		Set
			If (String.Equals(Me._CTZNO, value) = false) Then
				Me.OnCTZNOChanging(value)
				Me.SendPropertyChanging
				Me._CTZNO = value
				Me.SendPropertyChanged("CTZNO")
				Me.OnCTZNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPLATE_ID", DbType:="NVarChar(MAX)")>  _
	Public Property TEMPLATE_ID() As String
		Get
			Return Me._TEMPLATE_ID
		End Get
		Set
			If (String.Equals(Me._TEMPLATE_ID, value) = false) Then
				Me.OnTEMPLATE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TEMPLATE_ID = value
				Me.SendPropertyChanged("TEMPLATE_ID")
				Me.OnTEMPLATE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_RCV_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_RCV_IDENTIFY() As String
		Get
			Return Me._STAFF_RCV_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._STAFF_RCV_IDENTIFY, value) = false) Then
				Me.OnSTAFF_RCV_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_RCV_IDENTIFY = value
				Me.SendPropertyChanged("STAFF_RCV_IDENTIFY")
				Me.OnSTAFF_RCV_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PURPOSE", DbType:="NVarChar(MAX)")>  _
	Public Property PURPOSE() As String
		Get
			Return Me._PURPOSE
		End Get
		Set
			If (String.Equals(Me._PURPOSE, value) = false) Then
				Me.OnPURPOSEChanging(value)
				Me.SendPropertyChanging
				Me._PURPOSE = value
				Me.SendPropertyChanged("PURPOSE")
				Me.OnPURPOSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PURPOSE_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PURPOSE_ID() As String
		Get
			Return Me._PURPOSE_ID
		End Get
		Set
			If (String.Equals(Me._PURPOSE_ID, value) = false) Then
				Me.OnPURPOSE_IDChanging(value)
				Me.SendPropertyChanging
				Me._PURPOSE_ID = value
				Me.SendPropertyChanged("PURPOSE_ID")
				Me.OnPURPOSE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_SIGN_IDEN", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_SIGN_IDEN() As String
		Get
			Return Me._STAFF_SIGN_IDEN
		End Get
		Set
			If (String.Equals(Me._STAFF_SIGN_IDEN, value) = false) Then
				Me.OnSTAFF_SIGN_IDENChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_SIGN_IDEN = value
				Me.SendPropertyChanged("STAFF_SIGN_IDEN")
				Me.OnSTAFF_SIGN_IDENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="NVarChar(MAX)")>  _
	Public Property rcvno() As String
		Get
			Return Me._rcvno
		End Get
		Set
			If (String.Equals(Me._rcvno, value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="DateTime")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="DateTime")>  _
	Public Property appdate() As System.Nullable(Of Date)
		Get
			Return Me._appdate
		End Get
		Set
			If (Me._appdate.Equals(value) = false) Then
				Me.OnappdateChanging(value)
				Me.SendPropertyChanging
				Me._appdate = value
				Me.SendPropertyChanged("appdate")
				Me.OnappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSIDER_DATE", DbType:="DateTime")>  _
	Public Property CONSIDER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONSIDER_DATE
		End Get
		Set
			If (Me._CONSIDER_DATE.Equals(value) = false) Then
				Me.OnCONSIDER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONSIDER_DATE = value
				Me.SendPropertyChanged("CONSIDER_DATE")
				Me.OnCONSIDER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcv_group", DbType:="NVarChar(MAX)")>  _
	Public Property rcv_group() As String
		Get
			Return Me._rcv_group
		End Get
		Set
			If (String.Equals(Me._rcv_group, value) = false) Then
				Me.Onrcv_groupChanging(value)
				Me.SendPropertyChanging
				Me._rcv_group = value
				Me.SendPropertyChanged("rcv_group")
				Me.Onrcv_groupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcv_symbol", DbType:="NVarChar(MAX)")>  _
	Public Property rcv_symbol() As String
		Get
			Return Me._rcv_symbol
		End Get
		Set
			If (String.Equals(Me._rcv_symbol, value) = false) Then
				Me.Onrcv_symbolChanging(value)
				Me.SendPropertyChanging
				Me._rcv_symbol = value
				Me.SendPropertyChanged("rcv_symbol")
				Me.Onrcv_symbolChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_AT() As String
		Get
			Return Me._WRITE_AT
		End Get
		Set
			If (String.Equals(Me._WRITE_AT, value) = false) Then
				Me.OnWRITE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_AT = value
				Me.SendPropertyChanged("WRITE_AT")
				Me.OnWRITE_ATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_DATE", DbType:="DateTime")>  _
	Public Property WRITE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._WRITE_DATE
		End Get
		Set
			If (Me._WRITE_DATE.Equals(value) = false) Then
				Me.OnWRITE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_DATE = value
				Me.SendPropertyChanged("WRITE_DATE")
				Me.OnWRITE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE1", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_TYPE1() As String
		Get
			Return Me._CHK_TYPE1
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE1, value) = false) Then
				Me.OnCHK_TYPE1Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE1 = value
				Me.SendPropertyChanged("CHK_TYPE1")
				Me.OnCHK_TYPE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE2", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_TYPE2() As String
		Get
			Return Me._CHK_TYPE2
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE2, value) = false) Then
				Me.OnCHK_TYPE2Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE2 = value
				Me.SendPropertyChanged("CHK_TYPE2")
				Me.OnCHK_TYPE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE3", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_TYPE3() As String
		Get
			Return Me._CHK_TYPE3
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE3, value) = false) Then
				Me.OnCHK_TYPE3Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE3 = value
				Me.SendPropertyChanged("CHK_TYPE3")
				Me.OnCHK_TYPE3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_STAFF_OFFER_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_STAFF_OFFER_IDA() As String
		Get
			Return Me._FK_STAFF_OFFER_IDA
		End Get
		Set
			If (String.Equals(Me._FK_STAFF_OFFER_IDA, value) = false) Then
				Me.OnFK_STAFF_OFFER_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_STAFF_OFFER_IDA = value
				Me.SendPropertyChanged("FK_STAFF_OFFER_IDA")
				Me.OnFK_STAFF_OFFER_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TRANSACTION_UPLOAD")>  _
Partial Public Class TRANSACTION_UPLOAD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _CITIEZEN_ID As String
	
	Private _CITIEZEN_ID_AUTHORIZE As String
	
	Private _EMAIL As String
	
	Private _UPLOAD_DATE As System.Nullable(Of Date)
	
	Private _STATUS As String
	
	Private _DESCRIPTION As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _REF_NO As String
	
	Private _DOWNLOAD_ID As System.Nullable(Of Integer)
	
	Private _YEAR As String
	
	Private _GEN_NO As System.Nullable(Of Integer)
	
	Private _PROCESS_ID_STR As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_IDChanged()
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIEZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnUPLOAD_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPLOAD_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnREF_NOChanging(value As String)
    End Sub
    Partial Private Sub OnREF_NOChanged()
    End Sub
    Partial Private Sub OnDOWNLOAD_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOWNLOAD_IDChanged()
    End Sub
    Partial Private Sub OnYEARChanging(value As String)
    End Sub
    Partial Private Sub OnYEARChanged()
    End Sub
    Partial Private Sub OnGEN_NOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGEN_NOChanged()
    End Sub
    Partial Private Sub OnPROCESS_ID_STRChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_ID_STRChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID() As String
		Get
			Return Me._CITIEZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID, value) = false) Then
				Me.OnCITIEZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID = value
				Me.SendPropertyChanged("CITIEZEN_ID")
				Me.OnCITIEZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIEZEN_ID_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIEZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIEZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIEZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIEZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIEZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIEZEN_ID_AUTHORIZE")
				Me.OnCITIEZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPLOAD_DATE", DbType:="DateTime")>  _
	Public Property UPLOAD_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPLOAD_DATE
		End Get
		Set
			If (Me._UPLOAD_DATE.Equals(value) = false) Then
				Me.OnUPLOAD_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPLOAD_DATE = value
				Me.SendPropertyChanged("UPLOAD_DATE")
				Me.OnUPLOAD_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(50)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF_NO", DbType:="NVarChar(MAX)")>  _
	Public Property REF_NO() As String
		Get
			Return Me._REF_NO
		End Get
		Set
			If (String.Equals(Me._REF_NO, value) = false) Then
				Me.OnREF_NOChanging(value)
				Me.SendPropertyChanging
				Me._REF_NO = value
				Me.SendPropertyChanged("REF_NO")
				Me.OnREF_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOWNLOAD_ID", DbType:="Int")>  _
	Public Property DOWNLOAD_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DOWNLOAD_ID
		End Get
		Set
			If (Me._DOWNLOAD_ID.Equals(value) = false) Then
				Me.OnDOWNLOAD_IDChanging(value)
				Me.SendPropertyChanging
				Me._DOWNLOAD_ID = value
				Me.SendPropertyChanged("DOWNLOAD_ID")
				Me.OnDOWNLOAD_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YEAR", DbType:="NVarChar(10)")>  _
	Public Property YEAR() As String
		Get
			Return Me._YEAR
		End Get
		Set
			If (String.Equals(Me._YEAR, value) = false) Then
				Me.OnYEARChanging(value)
				Me.SendPropertyChanging
				Me._YEAR = value
				Me.SendPropertyChanged("YEAR")
				Me.OnYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GEN_NO", DbType:="Int")>  _
	Public Property GEN_NO() As System.Nullable(Of Integer)
		Get
			Return Me._GEN_NO
		End Get
		Set
			If (Me._GEN_NO.Equals(value) = false) Then
				Me.OnGEN_NOChanging(value)
				Me.SendPropertyChanging
				Me._GEN_NO = value
				Me.SendPropertyChanged("GEN_NO")
				Me.OnGEN_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID_STR", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID_STR() As String
		Get
			Return Me._PROCESS_ID_STR
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID_STR, value) = false) Then
				Me.OnPROCESS_ID_STRChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID_STR = value
				Me.SendPropertyChanged("PROCESS_ID_STR")
				Me.OnPROCESS_ID_STRChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.dh15rqt")>  _
Partial Public Class dh15rqt
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _lpvncd As System.Nullable(Of Short)
	
	Private _lcntpcd As String
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _pvnabbr As String
	
	Private _webno As System.Nullable(Of Integer)
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _pvncd As System.Nullable(Of Integer)
	
	Private _IDENTIFY As String
	
	Private _CITIZEN_ID_UPLOAD As String
	
	Private _CITIZEN_ID_AUTHORIZE As String
	
	Private _RCVDATE_DISPLAY As String
	
	Private _RCVNO_DISPLAY As String
	
	Private _LCNNO_DISPLAY As String
	
	Private _WRITE_AT As String
	
	Private _WRITE_DATE As String
	
	Private _IMAGE_QR_INPUT As String
	
	Private _IMAGE_QR_OUTPUT As String
	
	Private _TRADING_NAME As String
	
	Private _modifydate As System.Nullable(Of Date)
	
	Private _CONSIDER_DATE As System.Nullable(Of Date)
	
	Private _FK_STAFF_OFFER_IDA As System.Nullable(Of Integer)
	
	Private _CER_IDA As String
	
	Private _LCN_IDA As String
	
	Private _CHK_TYPE_LCN As String
	
	Private _CHK_TYPE_CHEMICAL As String
	
	Private _PHARMACOPOEIA_STANDARDS As String
	
	Private _QUOTA_TYPE As String
	
	Private _REMARK As String
	
	Private _IS_CANCEL As System.Nullable(Of Boolean)
	
	Private _CANCEL_DATE As System.Nullable(Of Date)
	
	Private _IS_APP_CANCEL As System.Nullable(Of Boolean)
	
	Private _APP_CENCEL_DATE As System.Nullable(Of Date)
	
	Private _AGENT_NAME As String
	
	Private _AGENT_COUNTRY_ID As String
	
	Private _AGENT_COUNTRY_NAME As String
	
	Private _FOREIGN_LOCATION_NAME As String
	
	Private _FOREIGN_COUNTRY_CD As String
	
	Private _FOREIGN_COUNTRY_NAME As String
	
	Private _FOREIGN_PRODUCT As String
	
	Private _unit_alpha3 As String
	
	Private _amount As String
	
	Private _PURPOSE1 As String
	
	Private _PURPOSE2 As String
	
	Private _PURPOSE3 As String
	
	Private _OTHER_PURPOSE As String
	
	Private _ATTACH1 As String
	
	Private _ATTACH2 As String
	
	Private _ATTACH3 As String
	
	Private _ATTACH4 As String
	
	Private _ATTACH5 As String
	
	Private _ATTACH6 As String
	
	Private _OTHER_ATTACH As String
	
	Private _GRADE As String
	
	Private _REQUEST_DATE As System.Nullable(Of Date)
	
	Private _MOBILE As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _quantity As String
	
	Private _PROCESS_ID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnlpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnlpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnpvnabbrChanging(value As String)
    End Sub
    Partial Private Sub OnpvnabbrChanged()
    End Sub
    Partial Private Sub OnwebnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnwebnoChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanged()
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnLCNNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnLCNNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnWRITE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_ATChanged()
    End Sub
    Partial Private Sub OnWRITE_DATEChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_DATEChanged()
    End Sub
    Partial Private Sub OnIMAGE_QR_INPUTChanging(value As String)
    End Sub
    Partial Private Sub OnIMAGE_QR_INPUTChanged()
    End Sub
    Partial Private Sub OnIMAGE_QR_OUTPUTChanging(value As String)
    End Sub
    Partial Private Sub OnIMAGE_QR_OUTPUTChanged()
    End Sub
    Partial Private Sub OnTRADING_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTRADING_NAMEChanged()
    End Sub
    Partial Private Sub OnmodifydateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnmodifydateChanged()
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanged()
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanged()
    End Sub
    Partial Private Sub OnCER_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnCER_IDAChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnCHK_TYPE_LCNChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE_LCNChanged()
    End Sub
    Partial Private Sub OnCHK_TYPE_CHEMICALChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE_CHEMICALChanged()
    End Sub
    Partial Private Sub OnPHARMACOPOEIA_STANDARDSChanging(value As String)
    End Sub
    Partial Private Sub OnPHARMACOPOEIA_STANDARDSChanged()
    End Sub
    Partial Private Sub OnQUOTA_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnQUOTA_TYPEChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnIS_CANCELChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_CANCELChanged()
    End Sub
    Partial Private Sub OnCANCEL_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCANCEL_DATEChanged()
    End Sub
    Partial Private Sub OnIS_APP_CANCELChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_APP_CANCELChanged()
    End Sub
    Partial Private Sub OnAPP_CENCEL_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAPP_CENCEL_DATEChanged()
    End Sub
    Partial Private Sub OnAGENT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnAGENT_NAMEChanged()
    End Sub
    Partial Private Sub OnAGENT_COUNTRY_IDChanging(value As String)
    End Sub
    Partial Private Sub OnAGENT_COUNTRY_IDChanged()
    End Sub
    Partial Private Sub OnAGENT_COUNTRY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnAGENT_COUNTRY_NAMEChanged()
    End Sub
    Partial Private Sub OnFOREIGN_LOCATION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFOREIGN_LOCATION_NAMEChanged()
    End Sub
    Partial Private Sub OnFOREIGN_COUNTRY_CDChanging(value As String)
    End Sub
    Partial Private Sub OnFOREIGN_COUNTRY_CDChanged()
    End Sub
    Partial Private Sub OnFOREIGN_COUNTRY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFOREIGN_COUNTRY_NAMEChanged()
    End Sub
    Partial Private Sub OnFOREIGN_PRODUCTChanging(value As String)
    End Sub
    Partial Private Sub OnFOREIGN_PRODUCTChanged()
    End Sub
    Partial Private Sub Onunit_alpha3Changing(value As String)
    End Sub
    Partial Private Sub Onunit_alpha3Changed()
    End Sub
    Partial Private Sub OnamountChanging(value As String)
    End Sub
    Partial Private Sub OnamountChanged()
    End Sub
    Partial Private Sub OnPURPOSE1Changing(value As String)
    End Sub
    Partial Private Sub OnPURPOSE1Changed()
    End Sub
    Partial Private Sub OnPURPOSE2Changing(value As String)
    End Sub
    Partial Private Sub OnPURPOSE2Changed()
    End Sub
    Partial Private Sub OnPURPOSE3Changing(value As String)
    End Sub
    Partial Private Sub OnPURPOSE3Changed()
    End Sub
    Partial Private Sub OnOTHER_PURPOSEChanging(value As String)
    End Sub
    Partial Private Sub OnOTHER_PURPOSEChanged()
    End Sub
    Partial Private Sub OnATTACH1Changing(value As String)
    End Sub
    Partial Private Sub OnATTACH1Changed()
    End Sub
    Partial Private Sub OnATTACH2Changing(value As String)
    End Sub
    Partial Private Sub OnATTACH2Changed()
    End Sub
    Partial Private Sub OnATTACH3Changing(value As String)
    End Sub
    Partial Private Sub OnATTACH3Changed()
    End Sub
    Partial Private Sub OnATTACH4Changing(value As String)
    End Sub
    Partial Private Sub OnATTACH4Changed()
    End Sub
    Partial Private Sub OnATTACH5Changing(value As String)
    End Sub
    Partial Private Sub OnATTACH5Changed()
    End Sub
    Partial Private Sub OnATTACH6Changing(value As String)
    End Sub
    Partial Private Sub OnATTACH6Changed()
    End Sub
    Partial Private Sub OnOTHER_ATTACHChanging(value As String)
    End Sub
    Partial Private Sub OnOTHER_ATTACHChanged()
    End Sub
    Partial Private Sub OnGRADEChanging(value As String)
    End Sub
    Partial Private Sub OnGRADEChanged()
    End Sub
    Partial Private Sub OnREQUEST_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUEST_DATEChanged()
    End Sub
    Partial Private Sub OnMOBILEChanging(value As String)
    End Sub
    Partial Private Sub OnMOBILEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnquantityChanging(value As String)
    End Sub
    Partial Private Sub OnquantityChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="Date")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lpvncd", DbType:="SmallInt")>  _
	Public Property lpvncd() As System.Nullable(Of Short)
		Get
			Return Me._lpvncd
		End Get
		Set
			If (Me._lpvncd.Equals(value) = false) Then
				Me.OnlpvncdChanging(value)
				Me.SendPropertyChanging
				Me._lpvncd = value
				Me.SendPropertyChanged("lpvncd")
				Me.OnlpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnabbr", DbType:="VarChar(5)")>  _
	Public Property pvnabbr() As String
		Get
			Return Me._pvnabbr
		End Get
		Set
			If (String.Equals(Me._pvnabbr, value) = false) Then
				Me.OnpvnabbrChanging(value)
				Me.SendPropertyChanging
				Me._pvnabbr = value
				Me.SendPropertyChanged("pvnabbr")
				Me.OnpvnabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_webno", DbType:="Int")>  _
	Public Property webno() As System.Nullable(Of Integer)
		Get
			Return Me._webno
		End Get
		Set
			If (Me._webno.Equals(value) = false) Then
				Me.OnwebnoChanging(value)
				Me.SendPropertyChanging
				Me._webno = value
				Me.SendPropertyChanged("webno")
				Me.OnwebnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(20)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_UPLOAD() As String
		Get
			Return Me._CITIZEN_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_UPLOAD, value) = false) Then
				Me.OnCITIZEN_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_ID_UPLOAD")
				Me.OnCITIZEN_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_AUTHORIZE", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_ID_AUTHORIZE")
				Me.OnCITIZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVDATE_DISPLAY() As String
		Get
			Return Me._RCVDATE_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVDATE_DISPLAY, value) = false) Then
				Me.OnRCVDATE_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE_DISPLAY = value
				Me.SendPropertyChanged("RCVDATE_DISPLAY")
				Me.OnRCVDATE_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_DISPLAY() As String
		Get
			Return Me._RCVNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVNO_DISPLAY, value) = false) Then
				Me.OnRCVNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_DISPLAY = value
				Me.SendPropertyChanged("RCVNO_DISPLAY")
				Me.OnRCVNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property LCNNO_DISPLAY() As String
		Get
			Return Me._LCNNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._LCNNO_DISPLAY, value) = false) Then
				Me.OnLCNNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._LCNNO_DISPLAY = value
				Me.SendPropertyChanged("LCNNO_DISPLAY")
				Me.OnLCNNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_AT() As String
		Get
			Return Me._WRITE_AT
		End Get
		Set
			If (String.Equals(Me._WRITE_AT, value) = false) Then
				Me.OnWRITE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_AT = value
				Me.SendPropertyChanged("WRITE_AT")
				Me.OnWRITE_ATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_DATE", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_DATE() As String
		Get
			Return Me._WRITE_DATE
		End Get
		Set
			If (String.Equals(Me._WRITE_DATE, value) = false) Then
				Me.OnWRITE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_DATE = value
				Me.SendPropertyChanged("WRITE_DATE")
				Me.OnWRITE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_QR_INPUT", DbType:="NVarChar(MAX)")>  _
	Public Property IMAGE_QR_INPUT() As String
		Get
			Return Me._IMAGE_QR_INPUT
		End Get
		Set
			If (String.Equals(Me._IMAGE_QR_INPUT, value) = false) Then
				Me.OnIMAGE_QR_INPUTChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_QR_INPUT = value
				Me.SendPropertyChanged("IMAGE_QR_INPUT")
				Me.OnIMAGE_QR_INPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_QR_OUTPUT", DbType:="NVarChar(MAX)")>  _
	Public Property IMAGE_QR_OUTPUT() As String
		Get
			Return Me._IMAGE_QR_OUTPUT
		End Get
		Set
			If (String.Equals(Me._IMAGE_QR_OUTPUT, value) = false) Then
				Me.OnIMAGE_QR_OUTPUTChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_QR_OUTPUT = value
				Me.SendPropertyChanged("IMAGE_QR_OUTPUT")
				Me.OnIMAGE_QR_OUTPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRADING_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TRADING_NAME() As String
		Get
			Return Me._TRADING_NAME
		End Get
		Set
			If (String.Equals(Me._TRADING_NAME, value) = false) Then
				Me.OnTRADING_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TRADING_NAME = value
				Me.SendPropertyChanged("TRADING_NAME")
				Me.OnTRADING_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifydate", DbType:="DateTime")>  _
	Public Property modifydate() As System.Nullable(Of Date)
		Get
			Return Me._modifydate
		End Get
		Set
			If (Me._modifydate.Equals(value) = false) Then
				Me.OnmodifydateChanging(value)
				Me.SendPropertyChanging
				Me._modifydate = value
				Me.SendPropertyChanged("modifydate")
				Me.OnmodifydateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSIDER_DATE", DbType:="DateTime")>  _
	Public Property CONSIDER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONSIDER_DATE
		End Get
		Set
			If (Me._CONSIDER_DATE.Equals(value) = false) Then
				Me.OnCONSIDER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONSIDER_DATE = value
				Me.SendPropertyChanged("CONSIDER_DATE")
				Me.OnCONSIDER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_STAFF_OFFER_IDA", DbType:="Int")>  _
	Public Property FK_STAFF_OFFER_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_STAFF_OFFER_IDA
		End Get
		Set
			If (Me._FK_STAFF_OFFER_IDA.Equals(value) = false) Then
				Me.OnFK_STAFF_OFFER_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_STAFF_OFFER_IDA = value
				Me.SendPropertyChanged("FK_STAFF_OFFER_IDA")
				Me.OnFK_STAFF_OFFER_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property CER_IDA() As String
		Get
			Return Me._CER_IDA
		End Get
		Set
			If (String.Equals(Me._CER_IDA, value) = false) Then
				Me.OnCER_IDAChanging(value)
				Me.SendPropertyChanging
				Me._CER_IDA = value
				Me.SendPropertyChanged("CER_IDA")
				Me.OnCER_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property LCN_IDA() As String
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (String.Equals(Me._LCN_IDA, value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE_LCN", DbType:="NVarChar(10)")>  _
	Public Property CHK_TYPE_LCN() As String
		Get
			Return Me._CHK_TYPE_LCN
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE_LCN, value) = false) Then
				Me.OnCHK_TYPE_LCNChanging(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE_LCN = value
				Me.SendPropertyChanged("CHK_TYPE_LCN")
				Me.OnCHK_TYPE_LCNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE_CHEMICAL", DbType:="NVarChar(10)")>  _
	Public Property CHK_TYPE_CHEMICAL() As String
		Get
			Return Me._CHK_TYPE_CHEMICAL
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE_CHEMICAL, value) = false) Then
				Me.OnCHK_TYPE_CHEMICALChanging(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE_CHEMICAL = value
				Me.SendPropertyChanged("CHK_TYPE_CHEMICAL")
				Me.OnCHK_TYPE_CHEMICALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHARMACOPOEIA_STANDARDS", DbType:="NVarChar(MAX)")>  _
	Public Property PHARMACOPOEIA_STANDARDS() As String
		Get
			Return Me._PHARMACOPOEIA_STANDARDS
		End Get
		Set
			If (String.Equals(Me._PHARMACOPOEIA_STANDARDS, value) = false) Then
				Me.OnPHARMACOPOEIA_STANDARDSChanging(value)
				Me.SendPropertyChanging
				Me._PHARMACOPOEIA_STANDARDS = value
				Me.SendPropertyChanged("PHARMACOPOEIA_STANDARDS")
				Me.OnPHARMACOPOEIA_STANDARDSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUOTA_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property QUOTA_TYPE() As String
		Get
			Return Me._QUOTA_TYPE
		End Get
		Set
			If (String.Equals(Me._QUOTA_TYPE, value) = false) Then
				Me.OnQUOTA_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._QUOTA_TYPE = value
				Me.SendPropertyChanged("QUOTA_TYPE")
				Me.OnQUOTA_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_CANCEL", DbType:="Bit")>  _
	Public Property IS_CANCEL() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_CANCEL
		End Get
		Set
			If (Me._IS_CANCEL.Equals(value) = false) Then
				Me.OnIS_CANCELChanging(value)
				Me.SendPropertyChanging
				Me._IS_CANCEL = value
				Me.SendPropertyChanged("IS_CANCEL")
				Me.OnIS_CANCELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CANCEL_DATE", DbType:="DateTime")>  _
	Public Property CANCEL_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CANCEL_DATE
		End Get
		Set
			If (Me._CANCEL_DATE.Equals(value) = false) Then
				Me.OnCANCEL_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CANCEL_DATE = value
				Me.SendPropertyChanged("CANCEL_DATE")
				Me.OnCANCEL_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_APP_CANCEL", DbType:="Bit")>  _
	Public Property IS_APP_CANCEL() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_APP_CANCEL
		End Get
		Set
			If (Me._IS_APP_CANCEL.Equals(value) = false) Then
				Me.OnIS_APP_CANCELChanging(value)
				Me.SendPropertyChanging
				Me._IS_APP_CANCEL = value
				Me.SendPropertyChanged("IS_APP_CANCEL")
				Me.OnIS_APP_CANCELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APP_CENCEL_DATE", DbType:="DateTime")>  _
	Public Property APP_CENCEL_DATE() As System.Nullable(Of Date)
		Get
			Return Me._APP_CENCEL_DATE
		End Get
		Set
			If (Me._APP_CENCEL_DATE.Equals(value) = false) Then
				Me.OnAPP_CENCEL_DATEChanging(value)
				Me.SendPropertyChanging
				Me._APP_CENCEL_DATE = value
				Me.SendPropertyChanged("APP_CENCEL_DATE")
				Me.OnAPP_CENCEL_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AGENT_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property AGENT_NAME() As String
		Get
			Return Me._AGENT_NAME
		End Get
		Set
			If (String.Equals(Me._AGENT_NAME, value) = false) Then
				Me.OnAGENT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._AGENT_NAME = value
				Me.SendPropertyChanged("AGENT_NAME")
				Me.OnAGENT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AGENT_COUNTRY_ID", DbType:="NVarChar(MAX)")>  _
	Public Property AGENT_COUNTRY_ID() As String
		Get
			Return Me._AGENT_COUNTRY_ID
		End Get
		Set
			If (String.Equals(Me._AGENT_COUNTRY_ID, value) = false) Then
				Me.OnAGENT_COUNTRY_IDChanging(value)
				Me.SendPropertyChanging
				Me._AGENT_COUNTRY_ID = value
				Me.SendPropertyChanged("AGENT_COUNTRY_ID")
				Me.OnAGENT_COUNTRY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AGENT_COUNTRY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property AGENT_COUNTRY_NAME() As String
		Get
			Return Me._AGENT_COUNTRY_NAME
		End Get
		Set
			If (String.Equals(Me._AGENT_COUNTRY_NAME, value) = false) Then
				Me.OnAGENT_COUNTRY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._AGENT_COUNTRY_NAME = value
				Me.SendPropertyChanged("AGENT_COUNTRY_NAME")
				Me.OnAGENT_COUNTRY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOREIGN_LOCATION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FOREIGN_LOCATION_NAME() As String
		Get
			Return Me._FOREIGN_LOCATION_NAME
		End Get
		Set
			If (String.Equals(Me._FOREIGN_LOCATION_NAME, value) = false) Then
				Me.OnFOREIGN_LOCATION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FOREIGN_LOCATION_NAME = value
				Me.SendPropertyChanged("FOREIGN_LOCATION_NAME")
				Me.OnFOREIGN_LOCATION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOREIGN_COUNTRY_CD", DbType:="NVarChar(MAX)")>  _
	Public Property FOREIGN_COUNTRY_CD() As String
		Get
			Return Me._FOREIGN_COUNTRY_CD
		End Get
		Set
			If (String.Equals(Me._FOREIGN_COUNTRY_CD, value) = false) Then
				Me.OnFOREIGN_COUNTRY_CDChanging(value)
				Me.SendPropertyChanging
				Me._FOREIGN_COUNTRY_CD = value
				Me.SendPropertyChanged("FOREIGN_COUNTRY_CD")
				Me.OnFOREIGN_COUNTRY_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOREIGN_COUNTRY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FOREIGN_COUNTRY_NAME() As String
		Get
			Return Me._FOREIGN_COUNTRY_NAME
		End Get
		Set
			If (String.Equals(Me._FOREIGN_COUNTRY_NAME, value) = false) Then
				Me.OnFOREIGN_COUNTRY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FOREIGN_COUNTRY_NAME = value
				Me.SendPropertyChanged("FOREIGN_COUNTRY_NAME")
				Me.OnFOREIGN_COUNTRY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOREIGN_PRODUCT", DbType:="NVarChar(MAX)")>  _
	Public Property FOREIGN_PRODUCT() As String
		Get
			Return Me._FOREIGN_PRODUCT
		End Get
		Set
			If (String.Equals(Me._FOREIGN_PRODUCT, value) = false) Then
				Me.OnFOREIGN_PRODUCTChanging(value)
				Me.SendPropertyChanging
				Me._FOREIGN_PRODUCT = value
				Me.SendPropertyChanged("FOREIGN_PRODUCT")
				Me.OnFOREIGN_PRODUCTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unit_alpha3", DbType:="NVarChar(MAX)")>  _
	Public Property unit_alpha3() As String
		Get
			Return Me._unit_alpha3
		End Get
		Set
			If (String.Equals(Me._unit_alpha3, value) = false) Then
				Me.Onunit_alpha3Changing(value)
				Me.SendPropertyChanging
				Me._unit_alpha3 = value
				Me.SendPropertyChanged("unit_alpha3")
				Me.Onunit_alpha3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="NVarChar(MAX)")>  _
	Public Property amount() As String
		Get
			Return Me._amount
		End Get
		Set
			If (String.Equals(Me._amount, value) = false) Then
				Me.OnamountChanging(value)
				Me.SendPropertyChanging
				Me._amount = value
				Me.SendPropertyChanged("amount")
				Me.OnamountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PURPOSE1", DbType:="NVarChar(50)")>  _
	Public Property PURPOSE1() As String
		Get
			Return Me._PURPOSE1
		End Get
		Set
			If (String.Equals(Me._PURPOSE1, value) = false) Then
				Me.OnPURPOSE1Changing(value)
				Me.SendPropertyChanging
				Me._PURPOSE1 = value
				Me.SendPropertyChanged("PURPOSE1")
				Me.OnPURPOSE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PURPOSE2", DbType:="NVarChar(50)")>  _
	Public Property PURPOSE2() As String
		Get
			Return Me._PURPOSE2
		End Get
		Set
			If (String.Equals(Me._PURPOSE2, value) = false) Then
				Me.OnPURPOSE2Changing(value)
				Me.SendPropertyChanging
				Me._PURPOSE2 = value
				Me.SendPropertyChanged("PURPOSE2")
				Me.OnPURPOSE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PURPOSE3", DbType:="NVarChar(50)")>  _
	Public Property PURPOSE3() As String
		Get
			Return Me._PURPOSE3
		End Get
		Set
			If (String.Equals(Me._PURPOSE3, value) = false) Then
				Me.OnPURPOSE3Changing(value)
				Me.SendPropertyChanging
				Me._PURPOSE3 = value
				Me.SendPropertyChanged("PURPOSE3")
				Me.OnPURPOSE3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER_PURPOSE", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER_PURPOSE() As String
		Get
			Return Me._OTHER_PURPOSE
		End Get
		Set
			If (String.Equals(Me._OTHER_PURPOSE, value) = false) Then
				Me.OnOTHER_PURPOSEChanging(value)
				Me.SendPropertyChanging
				Me._OTHER_PURPOSE = value
				Me.SendPropertyChanged("OTHER_PURPOSE")
				Me.OnOTHER_PURPOSEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH1", DbType:="NVarChar(50)")>  _
	Public Property ATTACH1() As String
		Get
			Return Me._ATTACH1
		End Get
		Set
			If (String.Equals(Me._ATTACH1, value) = false) Then
				Me.OnATTACH1Changing(value)
				Me.SendPropertyChanging
				Me._ATTACH1 = value
				Me.SendPropertyChanged("ATTACH1")
				Me.OnATTACH1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH2", DbType:="NVarChar(50)")>  _
	Public Property ATTACH2() As String
		Get
			Return Me._ATTACH2
		End Get
		Set
			If (String.Equals(Me._ATTACH2, value) = false) Then
				Me.OnATTACH2Changing(value)
				Me.SendPropertyChanging
				Me._ATTACH2 = value
				Me.SendPropertyChanged("ATTACH2")
				Me.OnATTACH2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH3", DbType:="NVarChar(50)")>  _
	Public Property ATTACH3() As String
		Get
			Return Me._ATTACH3
		End Get
		Set
			If (String.Equals(Me._ATTACH3, value) = false) Then
				Me.OnATTACH3Changing(value)
				Me.SendPropertyChanging
				Me._ATTACH3 = value
				Me.SendPropertyChanged("ATTACH3")
				Me.OnATTACH3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH4", DbType:="NVarChar(50)")>  _
	Public Property ATTACH4() As String
		Get
			Return Me._ATTACH4
		End Get
		Set
			If (String.Equals(Me._ATTACH4, value) = false) Then
				Me.OnATTACH4Changing(value)
				Me.SendPropertyChanging
				Me._ATTACH4 = value
				Me.SendPropertyChanged("ATTACH4")
				Me.OnATTACH4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH5", DbType:="NVarChar(50)")>  _
	Public Property ATTACH5() As String
		Get
			Return Me._ATTACH5
		End Get
		Set
			If (String.Equals(Me._ATTACH5, value) = false) Then
				Me.OnATTACH5Changing(value)
				Me.SendPropertyChanging
				Me._ATTACH5 = value
				Me.SendPropertyChanged("ATTACH5")
				Me.OnATTACH5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH6", DbType:="NVarChar(50)")>  _
	Public Property ATTACH6() As String
		Get
			Return Me._ATTACH6
		End Get
		Set
			If (String.Equals(Me._ATTACH6, value) = false) Then
				Me.OnATTACH6Changing(value)
				Me.SendPropertyChanging
				Me._ATTACH6 = value
				Me.SendPropertyChanged("ATTACH6")
				Me.OnATTACH6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER_ATTACH", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER_ATTACH() As String
		Get
			Return Me._OTHER_ATTACH
		End Get
		Set
			If (String.Equals(Me._OTHER_ATTACH, value) = false) Then
				Me.OnOTHER_ATTACHChanging(value)
				Me.SendPropertyChanging
				Me._OTHER_ATTACH = value
				Me.SendPropertyChanged("OTHER_ATTACH")
				Me.OnOTHER_ATTACHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GRADE", DbType:="NVarChar(MAX)")>  _
	Public Property GRADE() As String
		Get
			Return Me._GRADE
		End Get
		Set
			If (String.Equals(Me._GRADE, value) = false) Then
				Me.OnGRADEChanging(value)
				Me.SendPropertyChanging
				Me._GRADE = value
				Me.SendPropertyChanged("GRADE")
				Me.OnGRADEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_DATE
		End Get
		Set
			If (Me._REQUEST_DATE.Equals(value) = false) Then
				Me.OnREQUEST_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_DATE = value
				Me.SendPropertyChanged("REQUEST_DATE")
				Me.OnREQUEST_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOBILE", DbType:="NVarChar(MAX)")>  _
	Public Property MOBILE() As String
		Get
			Return Me._MOBILE
		End Get
		Set
			If (String.Equals(Me._MOBILE, value) = false) Then
				Me.OnMOBILEChanging(value)
				Me.SendPropertyChanging
				Me._MOBILE = value
				Me.SendPropertyChanged("MOBILE")
				Me.OnMOBILEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quantity", DbType:="NVarChar(MAX)")>  _
	Public Property quantity() As String
		Get
			Return Me._quantity
		End Get
		Set
			If (String.Equals(Me._quantity, value) = false) Then
				Me.OnquantityChanging(value)
				Me.SendPropertyChanging
				Me._quantity = value
				Me.SendPropertyChanged("quantity")
				Me.OnquantityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CER")>  _
Partial Public Class CER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _MANUFACTURER_CONFORMS_TO As String
	
	Private _CERTIFICATION_NUMBER_ALL As String
	
	Private _FOREIGN_LOCATION_NAME As String
	
	Private _ADDRESS_DETAIL As String
	
	Private _CITY_NAME As String
	
	Private _ZIPCODE As String
	
	Private _COUNTRY_IDA As System.Nullable(Of Integer)
	
	Private _ORGANIZATION_CODE As String
	
	Private _MANUFACTURER_LICENCE_NUMBER As String
	
	Private _LOCATION_STANDARD As String
	
	Private _GLN As String
	
	Private _DOCUMENT_DATE As System.Nullable(Of Date)
	
	Private _EXP_DOCUMENT_DATE As System.Nullable(Of Date)
	
	Private _DEPARTMENT_REGIST_CER_TYPE As String
	
	Private _DEPARTMENT_REGIST_CER_NAME As String
	
	Private _COUNTRY_OF_DEPARTMENT_IDA As String
	
	Private _ANALYZE_IDA As String
	
	Private _GMP_STANDARD As String
	
	Private _ESTABLISHMENT_CONFORMS As String
	
	Private _CERTIFICATION_NUMBER_ALL_FOR_ANALYZE As String
	
	Private _LAB_STANDARD As String
	
	Private _LAB_ADDR As String
	
	Private _LAB_CITY As String
	
	Private _LAB_ZIPCODE As String
	
	Private _LAB_COUNTRY_IDA As String
	
	Private _LAB_ORGANIZATION_CODE As String
	
	Private _LAB_GLN As String
	
	Private _LAB_ISO_DATE As System.Nullable(Of Date)
	
	Private _LAB_ISO_EXP_DATE As System.Nullable(Of Date)
	
	Private _LAB_DEPARTMENT_REGIST_CB As String
	
	Private _LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA As String
	
	Private _CER_SCOPE As String
	
	Private _CER_TYPE As String
	
	Private _FK_MANUFACTURE_LOCATION_ADDRESS_ID As String
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _CER_NUMBER As String
	
	Private _LCNSID As String
	
	Private _IDENTIFY As String
	
	Private _XML_NAME As String
	
	Private _RCVNO As String
	
	Private _RCVDATE As System.Nullable(Of Date)
	
	Private _CER_DATE As System.Nullable(Of Date)
	
	Private _BUYER_NAME As String
	
	Private _BUYER_COUNTRY As String
	
	Private _BUYER_STANDARD As String
	
	Private _IMAGE_QR_INPUT As String
	
	Private _IMAGE_QR_OUTPUT As String
	
	Private _REMARK As String
	
	Private _CER_FORMAT As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _PICS_NAT_ALPHA3 As String
	
	Private _PO_OTHER As String
	
	Private _MOBILE As String
	
	Private _OLD_TR_ID As String
	
	Private _REQUEST_DATE As System.Nullable(Of Date)
	
	Private _DEPARTMENT_REGIST_CER_DOCNO As String
	
	Private _PROCESS_ID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnMANUFACTURER_CONFORMS_TOChanging(value As String)
    End Sub
    Partial Private Sub OnMANUFACTURER_CONFORMS_TOChanged()
    End Sub
    Partial Private Sub OnCERTIFICATION_NUMBER_ALLChanging(value As String)
    End Sub
    Partial Private Sub OnCERTIFICATION_NUMBER_ALLChanged()
    End Sub
    Partial Private Sub OnFOREIGN_LOCATION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnFOREIGN_LOCATION_NAMEChanged()
    End Sub
    Partial Private Sub OnADDRESS_DETAILChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESS_DETAILChanged()
    End Sub
    Partial Private Sub OnCITY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCITY_NAMEChanged()
    End Sub
    Partial Private Sub OnZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIPCODEChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNTRY_IDAChanged()
    End Sub
    Partial Private Sub OnORGANIZATION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnORGANIZATION_CODEChanged()
    End Sub
    Partial Private Sub OnMANUFACTURER_LICENCE_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnMANUFACTURER_LICENCE_NUMBERChanged()
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnLOCATION_STANDARDChanged()
    End Sub
    Partial Private Sub OnGLNChanging(value As String)
    End Sub
    Partial Private Sub OnGLNChanged()
    End Sub
    Partial Private Sub OnDOCUMENT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDOCUMENT_DATEChanged()
    End Sub
    Partial Private Sub OnEXP_DOCUMENT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEXP_DOCUMENT_DATEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_REGIST_CER_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_REGIST_CER_TYPEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_REGIST_CER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_REGIST_CER_NAMEChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_OF_DEPARTMENT_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRY_OF_DEPARTMENT_IDAChanged()
    End Sub
    Partial Private Sub OnANALYZE_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnANALYZE_IDAChanged()
    End Sub
    Partial Private Sub OnGMP_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnGMP_STANDARDChanged()
    End Sub
    Partial Private Sub OnESTABLISHMENT_CONFORMSChanging(value As String)
    End Sub
    Partial Private Sub OnESTABLISHMENT_CONFORMSChanged()
    End Sub
    Partial Private Sub OnCERTIFICATION_NUMBER_ALL_FOR_ANALYZEChanging(value As String)
    End Sub
    Partial Private Sub OnCERTIFICATION_NUMBER_ALL_FOR_ANALYZEChanged()
    End Sub
    Partial Private Sub OnLAB_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_STANDARDChanged()
    End Sub
    Partial Private Sub OnLAB_ADDRChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_ADDRChanged()
    End Sub
    Partial Private Sub OnLAB_CITYChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_CITYChanged()
    End Sub
    Partial Private Sub OnLAB_ZIPCODEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_ZIPCODEChanged()
    End Sub
    Partial Private Sub OnLAB_COUNTRY_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_COUNTRY_IDAChanged()
    End Sub
    Partial Private Sub OnLAB_ORGANIZATION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_ORGANIZATION_CODEChanged()
    End Sub
    Partial Private Sub OnLAB_GLNChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_GLNChanged()
    End Sub
    Partial Private Sub OnLAB_ISO_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLAB_ISO_DATEChanged()
    End Sub
    Partial Private Sub OnLAB_ISO_EXP_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLAB_ISO_EXP_DATEChanged()
    End Sub
    Partial Private Sub OnLAB_DEPARTMENT_REGIST_CBChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_DEPARTMENT_REGIST_CBChanged()
    End Sub
    Partial Private Sub OnLAB_COUNTRY_DEPARTMENT_REGIST_CB_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnLAB_COUNTRY_DEPARTMENT_REGIST_CB_IDAChanged()
    End Sub
    Partial Private Sub OnCER_SCOPEChanging(value As String)
    End Sub
    Partial Private Sub OnCER_SCOPEChanged()
    End Sub
    Partial Private Sub OnCER_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnCER_TYPEChanged()
    End Sub
    Partial Private Sub OnFK_MANUFACTURE_LOCATION_ADDRESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnFK_MANUFACTURE_LOCATION_ADDRESS_IDChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnCER_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnCER_NUMBERChanged()
    End Sub
    Partial Private Sub OnLCNSIDChanging(value As String)
    End Sub
    Partial Private Sub OnLCNSIDChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnXML_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnXML_NAMEChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnRCVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCVDATEChanged()
    End Sub
    Partial Private Sub OnCER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCER_DATEChanged()
    End Sub
    Partial Private Sub OnBUYER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnBUYER_NAMEChanged()
    End Sub
    Partial Private Sub OnBUYER_COUNTRYChanging(value As String)
    End Sub
    Partial Private Sub OnBUYER_COUNTRYChanged()
    End Sub
    Partial Private Sub OnBUYER_STANDARDChanging(value As String)
    End Sub
    Partial Private Sub OnBUYER_STANDARDChanged()
    End Sub
    Partial Private Sub OnIMAGE_QR_INPUTChanging(value As String)
    End Sub
    Partial Private Sub OnIMAGE_QR_INPUTChanged()
    End Sub
    Partial Private Sub OnIMAGE_QR_OUTPUTChanging(value As String)
    End Sub
    Partial Private Sub OnIMAGE_QR_OUTPUTChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnCER_FORMATChanging(value As String)
    End Sub
    Partial Private Sub OnCER_FORMATChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnPICS_NAT_ALPHA3Changing(value As String)
    End Sub
    Partial Private Sub OnPICS_NAT_ALPHA3Changed()
    End Sub
    Partial Private Sub OnPO_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnPO_OTHERChanged()
    End Sub
    Partial Private Sub OnMOBILEChanging(value As String)
    End Sub
    Partial Private Sub OnMOBILEChanged()
    End Sub
    Partial Private Sub OnOLD_TR_IDChanging(value As String)
    End Sub
    Partial Private Sub OnOLD_TR_IDChanged()
    End Sub
    Partial Private Sub OnREQUEST_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUEST_DATEChanged()
    End Sub
    Partial Private Sub OnDEPARTMENT_REGIST_CER_DOCNOChanging(value As String)
    End Sub
    Partial Private Sub OnDEPARTMENT_REGIST_CER_DOCNOChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFACTURER_CONFORMS_TO", DbType:="NVarChar(MAX)")>  _
	Public Property MANUFACTURER_CONFORMS_TO() As String
		Get
			Return Me._MANUFACTURER_CONFORMS_TO
		End Get
		Set
			If (String.Equals(Me._MANUFACTURER_CONFORMS_TO, value) = false) Then
				Me.OnMANUFACTURER_CONFORMS_TOChanging(value)
				Me.SendPropertyChanging
				Me._MANUFACTURER_CONFORMS_TO = value
				Me.SendPropertyChanged("MANUFACTURER_CONFORMS_TO")
				Me.OnMANUFACTURER_CONFORMS_TOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CERTIFICATION_NUMBER_ALL", DbType:="NVarChar(MAX)")>  _
	Public Property CERTIFICATION_NUMBER_ALL() As String
		Get
			Return Me._CERTIFICATION_NUMBER_ALL
		End Get
		Set
			If (String.Equals(Me._CERTIFICATION_NUMBER_ALL, value) = false) Then
				Me.OnCERTIFICATION_NUMBER_ALLChanging(value)
				Me.SendPropertyChanging
				Me._CERTIFICATION_NUMBER_ALL = value
				Me.SendPropertyChanged("CERTIFICATION_NUMBER_ALL")
				Me.OnCERTIFICATION_NUMBER_ALLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FOREIGN_LOCATION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property FOREIGN_LOCATION_NAME() As String
		Get
			Return Me._FOREIGN_LOCATION_NAME
		End Get
		Set
			If (String.Equals(Me._FOREIGN_LOCATION_NAME, value) = false) Then
				Me.OnFOREIGN_LOCATION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._FOREIGN_LOCATION_NAME = value
				Me.SendPropertyChanged("FOREIGN_LOCATION_NAME")
				Me.OnFOREIGN_LOCATION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS_DETAIL", DbType:="NVarChar(MAX)")>  _
	Public Property ADDRESS_DETAIL() As String
		Get
			Return Me._ADDRESS_DETAIL
		End Get
		Set
			If (String.Equals(Me._ADDRESS_DETAIL, value) = false) Then
				Me.OnADDRESS_DETAILChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS_DETAIL = value
				Me.SendPropertyChanged("ADDRESS_DETAIL")
				Me.OnADDRESS_DETAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITY_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property CITY_NAME() As String
		Get
			Return Me._CITY_NAME
		End Get
		Set
			If (String.Equals(Me._CITY_NAME, value) = false) Then
				Me.OnCITY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._CITY_NAME = value
				Me.SendPropertyChanged("CITY_NAME")
				Me.OnCITY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property ZIPCODE() As String
		Get
			Return Me._ZIPCODE
		End Get
		Set
			If (String.Equals(Me._ZIPCODE, value) = false) Then
				Me.OnZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIPCODE = value
				Me.SendPropertyChanged("ZIPCODE")
				Me.OnZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_IDA", DbType:="Int")>  _
	Public Property COUNTRY_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._COUNTRY_IDA
		End Get
		Set
			If (Me._COUNTRY_IDA.Equals(value) = false) Then
				Me.OnCOUNTRY_IDAChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_IDA = value
				Me.SendPropertyChanged("COUNTRY_IDA")
				Me.OnCOUNTRY_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORGANIZATION_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property ORGANIZATION_CODE() As String
		Get
			Return Me._ORGANIZATION_CODE
		End Get
		Set
			If (String.Equals(Me._ORGANIZATION_CODE, value) = false) Then
				Me.OnORGANIZATION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ORGANIZATION_CODE = value
				Me.SendPropertyChanged("ORGANIZATION_CODE")
				Me.OnORGANIZATION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFACTURER_LICENCE_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property MANUFACTURER_LICENCE_NUMBER() As String
		Get
			Return Me._MANUFACTURER_LICENCE_NUMBER
		End Get
		Set
			If (String.Equals(Me._MANUFACTURER_LICENCE_NUMBER, value) = false) Then
				Me.OnMANUFACTURER_LICENCE_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._MANUFACTURER_LICENCE_NUMBER = value
				Me.SendPropertyChanged("MANUFACTURER_LICENCE_NUMBER")
				Me.OnMANUFACTURER_LICENCE_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property LOCATION_STANDARD() As String
		Get
			Return Me._LOCATION_STANDARD
		End Get
		Set
			If (String.Equals(Me._LOCATION_STANDARD, value) = false) Then
				Me.OnLOCATION_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_STANDARD = value
				Me.SendPropertyChanged("LOCATION_STANDARD")
				Me.OnLOCATION_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GLN", DbType:="NVarChar(MAX)")>  _
	Public Property GLN() As String
		Get
			Return Me._GLN
		End Get
		Set
			If (String.Equals(Me._GLN, value) = false) Then
				Me.OnGLNChanging(value)
				Me.SendPropertyChanging
				Me._GLN = value
				Me.SendPropertyChanged("GLN")
				Me.OnGLNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOCUMENT_DATE", DbType:="DateTime")>  _
	Public Property DOCUMENT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._DOCUMENT_DATE
		End Get
		Set
			If (Me._DOCUMENT_DATE.Equals(value) = false) Then
				Me.OnDOCUMENT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._DOCUMENT_DATE = value
				Me.SendPropertyChanged("DOCUMENT_DATE")
				Me.OnDOCUMENT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXP_DOCUMENT_DATE", DbType:="DateTime")>  _
	Public Property EXP_DOCUMENT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._EXP_DOCUMENT_DATE
		End Get
		Set
			If (Me._EXP_DOCUMENT_DATE.Equals(value) = false) Then
				Me.OnEXP_DOCUMENT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._EXP_DOCUMENT_DATE = value
				Me.SendPropertyChanged("EXP_DOCUMENT_DATE")
				Me.OnEXP_DOCUMENT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_REGIST_CER_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property DEPARTMENT_REGIST_CER_TYPE() As String
		Get
			Return Me._DEPARTMENT_REGIST_CER_TYPE
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_REGIST_CER_TYPE, value) = false) Then
				Me.OnDEPARTMENT_REGIST_CER_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_REGIST_CER_TYPE = value
				Me.SendPropertyChanged("DEPARTMENT_REGIST_CER_TYPE")
				Me.OnDEPARTMENT_REGIST_CER_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_REGIST_CER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property DEPARTMENT_REGIST_CER_NAME() As String
		Get
			Return Me._DEPARTMENT_REGIST_CER_NAME
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_REGIST_CER_NAME, value) = false) Then
				Me.OnDEPARTMENT_REGIST_CER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_REGIST_CER_NAME = value
				Me.SendPropertyChanged("DEPARTMENT_REGIST_CER_NAME")
				Me.OnDEPARTMENT_REGIST_CER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_OF_DEPARTMENT_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property COUNTRY_OF_DEPARTMENT_IDA() As String
		Get
			Return Me._COUNTRY_OF_DEPARTMENT_IDA
		End Get
		Set
			If (String.Equals(Me._COUNTRY_OF_DEPARTMENT_IDA, value) = false) Then
				Me.OnCOUNTRY_OF_DEPARTMENT_IDAChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_OF_DEPARTMENT_IDA = value
				Me.SendPropertyChanged("COUNTRY_OF_DEPARTMENT_IDA")
				Me.OnCOUNTRY_OF_DEPARTMENT_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANALYZE_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property ANALYZE_IDA() As String
		Get
			Return Me._ANALYZE_IDA
		End Get
		Set
			If (String.Equals(Me._ANALYZE_IDA, value) = false) Then
				Me.OnANALYZE_IDAChanging(value)
				Me.SendPropertyChanging
				Me._ANALYZE_IDA = value
				Me.SendPropertyChanged("ANALYZE_IDA")
				Me.OnANALYZE_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GMP_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property GMP_STANDARD() As String
		Get
			Return Me._GMP_STANDARD
		End Get
		Set
			If (String.Equals(Me._GMP_STANDARD, value) = false) Then
				Me.OnGMP_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._GMP_STANDARD = value
				Me.SendPropertyChanged("GMP_STANDARD")
				Me.OnGMP_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ESTABLISHMENT_CONFORMS", DbType:="NVarChar(MAX)")>  _
	Public Property ESTABLISHMENT_CONFORMS() As String
		Get
			Return Me._ESTABLISHMENT_CONFORMS
		End Get
		Set
			If (String.Equals(Me._ESTABLISHMENT_CONFORMS, value) = false) Then
				Me.OnESTABLISHMENT_CONFORMSChanging(value)
				Me.SendPropertyChanging
				Me._ESTABLISHMENT_CONFORMS = value
				Me.SendPropertyChanged("ESTABLISHMENT_CONFORMS")
				Me.OnESTABLISHMENT_CONFORMSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CERTIFICATION_NUMBER_ALL_FOR_ANALYZE", DbType:="NVarChar(MAX)")>  _
	Public Property CERTIFICATION_NUMBER_ALL_FOR_ANALYZE() As String
		Get
			Return Me._CERTIFICATION_NUMBER_ALL_FOR_ANALYZE
		End Get
		Set
			If (String.Equals(Me._CERTIFICATION_NUMBER_ALL_FOR_ANALYZE, value) = false) Then
				Me.OnCERTIFICATION_NUMBER_ALL_FOR_ANALYZEChanging(value)
				Me.SendPropertyChanging
				Me._CERTIFICATION_NUMBER_ALL_FOR_ANALYZE = value
				Me.SendPropertyChanged("CERTIFICATION_NUMBER_ALL_FOR_ANALYZE")
				Me.OnCERTIFICATION_NUMBER_ALL_FOR_ANALYZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_STANDARD() As String
		Get
			Return Me._LAB_STANDARD
		End Get
		Set
			If (String.Equals(Me._LAB_STANDARD, value) = false) Then
				Me.OnLAB_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._LAB_STANDARD = value
				Me.SendPropertyChanged("LAB_STANDARD")
				Me.OnLAB_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_ADDR", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_ADDR() As String
		Get
			Return Me._LAB_ADDR
		End Get
		Set
			If (String.Equals(Me._LAB_ADDR, value) = false) Then
				Me.OnLAB_ADDRChanging(value)
				Me.SendPropertyChanging
				Me._LAB_ADDR = value
				Me.SendPropertyChanged("LAB_ADDR")
				Me.OnLAB_ADDRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_CITY", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_CITY() As String
		Get
			Return Me._LAB_CITY
		End Get
		Set
			If (String.Equals(Me._LAB_CITY, value) = false) Then
				Me.OnLAB_CITYChanging(value)
				Me.SendPropertyChanging
				Me._LAB_CITY = value
				Me.SendPropertyChanged("LAB_CITY")
				Me.OnLAB_CITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_ZIPCODE", DbType:="NVarChar(50)")>  _
	Public Property LAB_ZIPCODE() As String
		Get
			Return Me._LAB_ZIPCODE
		End Get
		Set
			If (String.Equals(Me._LAB_ZIPCODE, value) = false) Then
				Me.OnLAB_ZIPCODEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_ZIPCODE = value
				Me.SendPropertyChanged("LAB_ZIPCODE")
				Me.OnLAB_ZIPCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_COUNTRY_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_COUNTRY_IDA() As String
		Get
			Return Me._LAB_COUNTRY_IDA
		End Get
		Set
			If (String.Equals(Me._LAB_COUNTRY_IDA, value) = false) Then
				Me.OnLAB_COUNTRY_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LAB_COUNTRY_IDA = value
				Me.SendPropertyChanged("LAB_COUNTRY_IDA")
				Me.OnLAB_COUNTRY_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_ORGANIZATION_CODE", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_ORGANIZATION_CODE() As String
		Get
			Return Me._LAB_ORGANIZATION_CODE
		End Get
		Set
			If (String.Equals(Me._LAB_ORGANIZATION_CODE, value) = false) Then
				Me.OnLAB_ORGANIZATION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_ORGANIZATION_CODE = value
				Me.SendPropertyChanged("LAB_ORGANIZATION_CODE")
				Me.OnLAB_ORGANIZATION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_GLN", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_GLN() As String
		Get
			Return Me._LAB_GLN
		End Get
		Set
			If (String.Equals(Me._LAB_GLN, value) = false) Then
				Me.OnLAB_GLNChanging(value)
				Me.SendPropertyChanging
				Me._LAB_GLN = value
				Me.SendPropertyChanged("LAB_GLN")
				Me.OnLAB_GLNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_ISO_DATE", DbType:="DateTime")>  _
	Public Property LAB_ISO_DATE() As System.Nullable(Of Date)
		Get
			Return Me._LAB_ISO_DATE
		End Get
		Set
			If (Me._LAB_ISO_DATE.Equals(value) = false) Then
				Me.OnLAB_ISO_DATEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_ISO_DATE = value
				Me.SendPropertyChanged("LAB_ISO_DATE")
				Me.OnLAB_ISO_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_ISO_EXP_DATE", DbType:="DateTime")>  _
	Public Property LAB_ISO_EXP_DATE() As System.Nullable(Of Date)
		Get
			Return Me._LAB_ISO_EXP_DATE
		End Get
		Set
			If (Me._LAB_ISO_EXP_DATE.Equals(value) = false) Then
				Me.OnLAB_ISO_EXP_DATEChanging(value)
				Me.SendPropertyChanging
				Me._LAB_ISO_EXP_DATE = value
				Me.SendPropertyChanged("LAB_ISO_EXP_DATE")
				Me.OnLAB_ISO_EXP_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_DEPARTMENT_REGIST_CB", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_DEPARTMENT_REGIST_CB() As String
		Get
			Return Me._LAB_DEPARTMENT_REGIST_CB
		End Get
		Set
			If (String.Equals(Me._LAB_DEPARTMENT_REGIST_CB, value) = false) Then
				Me.OnLAB_DEPARTMENT_REGIST_CBChanging(value)
				Me.SendPropertyChanging
				Me._LAB_DEPARTMENT_REGIST_CB = value
				Me.SendPropertyChanged("LAB_DEPARTMENT_REGIST_CB")
				Me.OnLAB_DEPARTMENT_REGIST_CBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA() As String
		Get
			Return Me._LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA
		End Get
		Set
			If (String.Equals(Me._LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA, value) = false) Then
				Me.OnLAB_COUNTRY_DEPARTMENT_REGIST_CB_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA = value
				Me.SendPropertyChanged("LAB_COUNTRY_DEPARTMENT_REGIST_CB_IDA")
				Me.OnLAB_COUNTRY_DEPARTMENT_REGIST_CB_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_SCOPE", DbType:="NVarChar(MAX)")>  _
	Public Property CER_SCOPE() As String
		Get
			Return Me._CER_SCOPE
		End Get
		Set
			If (String.Equals(Me._CER_SCOPE, value) = false) Then
				Me.OnCER_SCOPEChanging(value)
				Me.SendPropertyChanging
				Me._CER_SCOPE = value
				Me.SendPropertyChanged("CER_SCOPE")
				Me.OnCER_SCOPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property CER_TYPE() As String
		Get
			Return Me._CER_TYPE
		End Get
		Set
			If (String.Equals(Me._CER_TYPE, value) = false) Then
				Me.OnCER_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CER_TYPE = value
				Me.SendPropertyChanged("CER_TYPE")
				Me.OnCER_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_MANUFACTURE_LOCATION_ADDRESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property FK_MANUFACTURE_LOCATION_ADDRESS_ID() As String
		Get
			Return Me._FK_MANUFACTURE_LOCATION_ADDRESS_ID
		End Get
		Set
			If (String.Equals(Me._FK_MANUFACTURE_LOCATION_ADDRESS_ID, value) = false) Then
				Me.OnFK_MANUFACTURE_LOCATION_ADDRESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._FK_MANUFACTURE_LOCATION_ADDRESS_ID = value
				Me.SendPropertyChanged("FK_MANUFACTURE_LOCATION_ADDRESS_ID")
				Me.OnFK_MANUFACTURE_LOCATION_ADDRESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="Date")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_NUMBER", DbType:="NVarChar(MAX)")>  _
	Public Property CER_NUMBER() As String
		Get
			Return Me._CER_NUMBER
		End Get
		Set
			If (String.Equals(Me._CER_NUMBER, value) = false) Then
				Me.OnCER_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._CER_NUMBER = value
				Me.SendPropertyChanged("CER_NUMBER")
				Me.OnCER_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNSID", DbType:="NVarChar(20)")>  _
	Public Property LCNSID() As String
		Get
			Return Me._LCNSID
		End Get
		Set
			If (String.Equals(Me._LCNSID, value) = false) Then
				Me.OnLCNSIDChanging(value)
				Me.SendPropertyChanging
				Me._LCNSID = value
				Me.SendPropertyChanged("LCNSID")
				Me.OnLCNSIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(20)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XML_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property XML_NAME() As String
		Get
			Return Me._XML_NAME
		End Get
		Set
			If (String.Equals(Me._XML_NAME, value) = false) Then
				Me.OnXML_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._XML_NAME = value
				Me.SendPropertyChanged("XML_NAME")
				Me.OnXML_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO() As String
		Get
			Return Me._RCVNO
		End Get
		Set
			If (String.Equals(Me._RCVNO, value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE", DbType:="DateTime")>  _
	Public Property RCVDATE() As System.Nullable(Of Date)
		Get
			Return Me._RCVDATE
		End Get
		Set
			If (Me._RCVDATE.Equals(value) = false) Then
				Me.OnRCVDATEChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE = value
				Me.SendPropertyChanged("RCVDATE")
				Me.OnRCVDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_DATE", DbType:="DateTime")>  _
	Public Property CER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CER_DATE
		End Get
		Set
			If (Me._CER_DATE.Equals(value) = false) Then
				Me.OnCER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CER_DATE = value
				Me.SendPropertyChanged("CER_DATE")
				Me.OnCER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUYER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property BUYER_NAME() As String
		Get
			Return Me._BUYER_NAME
		End Get
		Set
			If (String.Equals(Me._BUYER_NAME, value) = false) Then
				Me.OnBUYER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._BUYER_NAME = value
				Me.SendPropertyChanged("BUYER_NAME")
				Me.OnBUYER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUYER_COUNTRY", DbType:="NVarChar(MAX)")>  _
	Public Property BUYER_COUNTRY() As String
		Get
			Return Me._BUYER_COUNTRY
		End Get
		Set
			If (String.Equals(Me._BUYER_COUNTRY, value) = false) Then
				Me.OnBUYER_COUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._BUYER_COUNTRY = value
				Me.SendPropertyChanged("BUYER_COUNTRY")
				Me.OnBUYER_COUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUYER_STANDARD", DbType:="NVarChar(MAX)")>  _
	Public Property BUYER_STANDARD() As String
		Get
			Return Me._BUYER_STANDARD
		End Get
		Set
			If (String.Equals(Me._BUYER_STANDARD, value) = false) Then
				Me.OnBUYER_STANDARDChanging(value)
				Me.SendPropertyChanging
				Me._BUYER_STANDARD = value
				Me.SendPropertyChanged("BUYER_STANDARD")
				Me.OnBUYER_STANDARDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_QR_INPUT", DbType:="NVarChar(MAX)")>  _
	Public Property IMAGE_QR_INPUT() As String
		Get
			Return Me._IMAGE_QR_INPUT
		End Get
		Set
			If (String.Equals(Me._IMAGE_QR_INPUT, value) = false) Then
				Me.OnIMAGE_QR_INPUTChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_QR_INPUT = value
				Me.SendPropertyChanged("IMAGE_QR_INPUT")
				Me.OnIMAGE_QR_INPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMAGE_QR_OUTPUT", DbType:="NVarChar(MAX)")>  _
	Public Property IMAGE_QR_OUTPUT() As String
		Get
			Return Me._IMAGE_QR_OUTPUT
		End Get
		Set
			If (String.Equals(Me._IMAGE_QR_OUTPUT, value) = false) Then
				Me.OnIMAGE_QR_OUTPUTChanging(value)
				Me.SendPropertyChanging
				Me._IMAGE_QR_OUTPUT = value
				Me.SendPropertyChanged("IMAGE_QR_OUTPUT")
				Me.OnIMAGE_QR_OUTPUTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CER_FORMAT", DbType:="NVarChar(MAX)")>  _
	Public Property CER_FORMAT() As String
		Get
			Return Me._CER_FORMAT
		End Get
		Set
			If (String.Equals(Me._CER_FORMAT, value) = false) Then
				Me.OnCER_FORMATChanging(value)
				Me.SendPropertyChanging
				Me._CER_FORMAT = value
				Me.SendPropertyChanged("CER_FORMAT")
				Me.OnCER_FORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PICS_NAT_ALPHA3", DbType:="NVarChar(50)")>  _
	Public Property PICS_NAT_ALPHA3() As String
		Get
			Return Me._PICS_NAT_ALPHA3
		End Get
		Set
			If (String.Equals(Me._PICS_NAT_ALPHA3, value) = false) Then
				Me.OnPICS_NAT_ALPHA3Changing(value)
				Me.SendPropertyChanging
				Me._PICS_NAT_ALPHA3 = value
				Me.SendPropertyChanged("PICS_NAT_ALPHA3")
				Me.OnPICS_NAT_ALPHA3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PO_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property PO_OTHER() As String
		Get
			Return Me._PO_OTHER
		End Get
		Set
			If (String.Equals(Me._PO_OTHER, value) = false) Then
				Me.OnPO_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._PO_OTHER = value
				Me.SendPropertyChanged("PO_OTHER")
				Me.OnPO_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MOBILE", DbType:="NVarChar(MAX)")>  _
	Public Property MOBILE() As String
		Get
			Return Me._MOBILE
		End Get
		Set
			If (String.Equals(Me._MOBILE, value) = false) Then
				Me.OnMOBILEChanging(value)
				Me.SendPropertyChanging
				Me._MOBILE = value
				Me.SendPropertyChanged("MOBILE")
				Me.OnMOBILEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_TR_ID", DbType:="NVarChar(MAX)")>  _
	Public Property OLD_TR_ID() As String
		Get
			Return Me._OLD_TR_ID
		End Get
		Set
			If (String.Equals(Me._OLD_TR_ID, value) = false) Then
				Me.OnOLD_TR_IDChanging(value)
				Me.SendPropertyChanging
				Me._OLD_TR_ID = value
				Me.SendPropertyChanged("OLD_TR_ID")
				Me.OnOLD_TR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_DATE
		End Get
		Set
			If (Me._REQUEST_DATE.Equals(value) = false) Then
				Me.OnREQUEST_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_DATE = value
				Me.SendPropertyChanged("REQUEST_DATE")
				Me.OnREQUEST_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEPARTMENT_REGIST_CER_DOCNO", DbType:="NVarChar(MAX)")>  _
	Public Property DEPARTMENT_REGIST_CER_DOCNO() As String
		Get
			Return Me._DEPARTMENT_REGIST_CER_DOCNO
		End Get
		Set
			If (String.Equals(Me._DEPARTMENT_REGIST_CER_DOCNO, value) = false) Then
				Me.OnDEPARTMENT_REGIST_CER_DOCNOChanging(value)
				Me.SendPropertyChanging
				Me._DEPARTMENT_REGIST_CER_DOCNO = value
				Me.SendPropertyChanged("DEPARTMENT_REGIST_CER_DOCNO")
				Me.OnDEPARTMENT_REGIST_CER_DOCNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_NYMSTAFF_PROCESS")>  _
Partial Public Class MAS_NYMSTAFF_PROCESS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _PROCESS_NAME As String
	
	Private _PROCESS_ID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_NAMEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_NAME", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_NAME() As String
		Get
			Return Me._PROCESS_NAME
		End Get
		Set
			If (String.Equals(Me._PROCESS_NAME, value) = false) Then
				Me.OnPROCESS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_NAME = value
				Me.SendPropertyChanged("PROCESS_NAME")
				Me.OnPROCESS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_STAFF_OFFER")>  _
Partial Public Class MAS_STAFF_OFFER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STAFF_OFFER_NAME As String
	
	Private _IS_USE As System.Nullable(Of Boolean)
	
	Private _INSERT_DATE As System.Nullable(Of Date)
	
	Private _INSERT_CITIZEN As String
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_CITIZEN As String
	
	Private _POSITION_NAME As String
	
	Private _ENG_POSITION_NAME As String
	
	Private _ENG_STAFF_OFFER_NAME As String
	
	Private _ENG_OTHER_POSITION As String
	
	Private _PVNCD As String
	
	Private _SYSTEM_ID As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTAFF_OFFER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_OFFER_NAMEChanged()
    End Sub
    Partial Private Sub OnIS_USEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_USEChanged()
    End Sub
    Partial Private Sub OnINSERT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnINSERT_DATEChanged()
    End Sub
    Partial Private Sub OnINSERT_CITIZENChanging(value As String)
    End Sub
    Partial Private Sub OnINSERT_CITIZENChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_CITIZENChanging(value As String)
    End Sub
    Partial Private Sub OnUPDATE_CITIZENChanged()
    End Sub
    Partial Private Sub OnPOSITION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPOSITION_NAMEChanged()
    End Sub
    Partial Private Sub OnENG_POSITION_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnENG_POSITION_NAMEChanged()
    End Sub
    Partial Private Sub OnENG_STAFF_OFFER_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnENG_STAFF_OFFER_NAMEChanged()
    End Sub
    Partial Private Sub OnENG_OTHER_POSITIONChanging(value As String)
    End Sub
    Partial Private Sub OnENG_OTHER_POSITIONChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As String)
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnSYSTEM_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSYSTEM_IDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_OFFER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_OFFER_NAME() As String
		Get
			Return Me._STAFF_OFFER_NAME
		End Get
		Set
			If (String.Equals(Me._STAFF_OFFER_NAME, value) = false) Then
				Me.OnSTAFF_OFFER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_OFFER_NAME = value
				Me.SendPropertyChanged("STAFF_OFFER_NAME")
				Me.OnSTAFF_OFFER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_USE", DbType:="Bit")>  _
	Public Property IS_USE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_USE
		End Get
		Set
			If (Me._IS_USE.Equals(value) = false) Then
				Me.OnIS_USEChanging(value)
				Me.SendPropertyChanging
				Me._IS_USE = value
				Me.SendPropertyChanged("IS_USE")
				Me.OnIS_USEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSERT_DATE", DbType:="DateTime")>  _
	Public Property INSERT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._INSERT_DATE
		End Get
		Set
			If (Me._INSERT_DATE.Equals(value) = false) Then
				Me.OnINSERT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._INSERT_DATE = value
				Me.SendPropertyChanged("INSERT_DATE")
				Me.OnINSERT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INSERT_CITIZEN", DbType:="NVarChar(50)")>  _
	Public Property INSERT_CITIZEN() As String
		Get
			Return Me._INSERT_CITIZEN
		End Get
		Set
			If (String.Equals(Me._INSERT_CITIZEN, value) = false) Then
				Me.OnINSERT_CITIZENChanging(value)
				Me.SendPropertyChanging
				Me._INSERT_CITIZEN = value
				Me.SendPropertyChanged("INSERT_CITIZEN")
				Me.OnINSERT_CITIZENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_CITIZEN", DbType:="NVarChar(50)")>  _
	Public Property UPDATE_CITIZEN() As String
		Get
			Return Me._UPDATE_CITIZEN
		End Get
		Set
			If (String.Equals(Me._UPDATE_CITIZEN, value) = false) Then
				Me.OnUPDATE_CITIZENChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_CITIZEN = value
				Me.SendPropertyChanged("UPDATE_CITIZEN")
				Me.OnUPDATE_CITIZENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_POSITION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property POSITION_NAME() As String
		Get
			Return Me._POSITION_NAME
		End Get
		Set
			If (String.Equals(Me._POSITION_NAME, value) = false) Then
				Me.OnPOSITION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._POSITION_NAME = value
				Me.SendPropertyChanged("POSITION_NAME")
				Me.OnPOSITION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENG_POSITION_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ENG_POSITION_NAME() As String
		Get
			Return Me._ENG_POSITION_NAME
		End Get
		Set
			If (String.Equals(Me._ENG_POSITION_NAME, value) = false) Then
				Me.OnENG_POSITION_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ENG_POSITION_NAME = value
				Me.SendPropertyChanged("ENG_POSITION_NAME")
				Me.OnENG_POSITION_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENG_STAFF_OFFER_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ENG_STAFF_OFFER_NAME() As String
		Get
			Return Me._ENG_STAFF_OFFER_NAME
		End Get
		Set
			If (String.Equals(Me._ENG_STAFF_OFFER_NAME, value) = false) Then
				Me.OnENG_STAFF_OFFER_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ENG_STAFF_OFFER_NAME = value
				Me.SendPropertyChanged("ENG_STAFF_OFFER_NAME")
				Me.OnENG_STAFF_OFFER_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENG_OTHER_POSITION", DbType:="NVarChar(MAX)")>  _
	Public Property ENG_OTHER_POSITION() As String
		Get
			Return Me._ENG_OTHER_POSITION
		End Get
		Set
			If (String.Equals(Me._ENG_OTHER_POSITION, value) = false) Then
				Me.OnENG_OTHER_POSITIONChanging(value)
				Me.SendPropertyChanging
				Me._ENG_OTHER_POSITION = value
				Me.SendPropertyChanged("ENG_OTHER_POSITION")
				Me.OnENG_OTHER_POSITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="NVarChar(50)")>  _
	Public Property PVNCD() As String
		Get
			Return Me._PVNCD
		End Get
		Set
			If (String.Equals(Me._PVNCD, value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYSTEM_ID", DbType:="Int")>  _
	Public Property SYSTEM_ID() As System.Nullable(Of Integer)
		Get
			Return Me._SYSTEM_ID
		End Get
		Set
			If (Me._SYSTEM_ID.Equals(value) = false) Then
				Me.OnSYSTEM_IDChanging(value)
				Me.SendPropertyChanging
				Me._SYSTEM_ID = value
				Me.SendPropertyChanged("SYSTEM_ID")
				Me.OnSYSTEM_IDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_IMPORT_DRUG_GROUP_DETAIL2")>  _
Partial Public Class DALCN_IMPORT_DRUG_GROUP_DETAIL2
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _LCN_IDA As System.Nullable(Of Integer)
	
	Private _COL1 As String
	
	Private _COL2 As String
	
	Private _COL3 As String
	
	Private _COL4 As String
	
	Private _COL5 As String
	
	Private _COL6 As String
	
	Private _COL6_OTHER As String
	
	Private _COL_ALLS As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnCOL1Changing(value As String)
    End Sub
    Partial Private Sub OnCOL1Changed()
    End Sub
    Partial Private Sub OnCOL2Changing(value As String)
    End Sub
    Partial Private Sub OnCOL2Changed()
    End Sub
    Partial Private Sub OnCOL3Changing(value As String)
    End Sub
    Partial Private Sub OnCOL3Changed()
    End Sub
    Partial Private Sub OnCOL4Changing(value As String)
    End Sub
    Partial Private Sub OnCOL4Changed()
    End Sub
    Partial Private Sub OnCOL5Changing(value As String)
    End Sub
    Partial Private Sub OnCOL5Changed()
    End Sub
    Partial Private Sub OnCOL6Changing(value As String)
    End Sub
    Partial Private Sub OnCOL6Changed()
    End Sub
    Partial Private Sub OnCOL6_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnCOL6_OTHERChanged()
    End Sub
    Partial Private Sub OnCOL_ALLSChanging(value As String)
    End Sub
    Partial Private Sub OnCOL_ALLSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="Int")>  _
	Public Property LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (Me._LCN_IDA.Equals(value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL1", DbType:="NVarChar(MAX)")>  _
	Public Property COL1() As String
		Get
			Return Me._COL1
		End Get
		Set
			If (String.Equals(Me._COL1, value) = false) Then
				Me.OnCOL1Changing(value)
				Me.SendPropertyChanging
				Me._COL1 = value
				Me.SendPropertyChanged("COL1")
				Me.OnCOL1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL2", DbType:="NVarChar(MAX)")>  _
	Public Property COL2() As String
		Get
			Return Me._COL2
		End Get
		Set
			If (String.Equals(Me._COL2, value) = false) Then
				Me.OnCOL2Changing(value)
				Me.SendPropertyChanging
				Me._COL2 = value
				Me.SendPropertyChanged("COL2")
				Me.OnCOL2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL3", DbType:="NVarChar(MAX)")>  _
	Public Property COL3() As String
		Get
			Return Me._COL3
		End Get
		Set
			If (String.Equals(Me._COL3, value) = false) Then
				Me.OnCOL3Changing(value)
				Me.SendPropertyChanging
				Me._COL3 = value
				Me.SendPropertyChanged("COL3")
				Me.OnCOL3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL4", DbType:="NVarChar(MAX)")>  _
	Public Property COL4() As String
		Get
			Return Me._COL4
		End Get
		Set
			If (String.Equals(Me._COL4, value) = false) Then
				Me.OnCOL4Changing(value)
				Me.SendPropertyChanging
				Me._COL4 = value
				Me.SendPropertyChanged("COL4")
				Me.OnCOL4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL5", DbType:="NVarChar(MAX)")>  _
	Public Property COL5() As String
		Get
			Return Me._COL5
		End Get
		Set
			If (String.Equals(Me._COL5, value) = false) Then
				Me.OnCOL5Changing(value)
				Me.SendPropertyChanging
				Me._COL5 = value
				Me.SendPropertyChanged("COL5")
				Me.OnCOL5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL6", DbType:="NVarChar(MAX)")>  _
	Public Property COL6() As String
		Get
			Return Me._COL6
		End Get
		Set
			If (String.Equals(Me._COL6, value) = false) Then
				Me.OnCOL6Changing(value)
				Me.SendPropertyChanging
				Me._COL6 = value
				Me.SendPropertyChanged("COL6")
				Me.OnCOL6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL6_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property COL6_OTHER() As String
		Get
			Return Me._COL6_OTHER
		End Get
		Set
			If (String.Equals(Me._COL6_OTHER, value) = false) Then
				Me.OnCOL6_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._COL6_OTHER = value
				Me.SendPropertyChanged("COL6_OTHER")
				Me.OnCOL6_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COL_ALLS", DbType:="NVarChar(MAX)")>  _
	Public Property COL_ALLS() As String
		Get
			Return Me._COL_ALLS
		End Get
		Set
			If (String.Equals(Me._COL_ALLS, value) = false) Then
				Me.OnCOL_ALLSChanging(value)
				Me.SendPropertyChanging
				Me._COL_ALLS = value
				Me.SendPropertyChanged("COL_ALLS")
				Me.OnCOL_ALLSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_IMPORT_DRUG_GROUP_DETAIL1")>  _
Partial Public Class DALCN_IMPORT_DRUG_GROUP_DETAIL1
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _DRUG_TYPE As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _DRUG_TYPE2 As System.Nullable(Of Integer)
	
	Private _DRUG_TYPE23 As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnDRUG_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_TYPEChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnDRUG_TYPE2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_TYPE2Changed()
    End Sub
    Partial Private Sub OnDRUG_TYPE23Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDRUG_TYPE23Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_TYPE", DbType:="Int")>  _
	Public Property DRUG_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_TYPE
		End Get
		Set
			If (Me._DRUG_TYPE.Equals(value) = false) Then
				Me.OnDRUG_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_TYPE = value
				Me.SendPropertyChanged("DRUG_TYPE")
				Me.OnDRUG_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_TYPE2", DbType:="Int")>  _
	Public Property DRUG_TYPE2() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_TYPE2
		End Get
		Set
			If (Me._DRUG_TYPE2.Equals(value) = false) Then
				Me.OnDRUG_TYPE2Changing(value)
				Me.SendPropertyChanging
				Me._DRUG_TYPE2 = value
				Me.SendPropertyChanged("DRUG_TYPE2")
				Me.OnDRUG_TYPE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_TYPE23", DbType:="Int")>  _
	Public Property DRUG_TYPE23() As System.Nullable(Of Integer)
		Get
			Return Me._DRUG_TYPE23
		End Get
		Set
			If (Me._DRUG_TYPE23.Equals(value) = false) Then
				Me.OnDRUG_TYPE23Changing(value)
				Me.SendPropertyChanging
				Me._DRUG_TYPE23 = value
				Me.SendPropertyChanged("DRUG_TYPE23")
				Me.OnDRUG_TYPE23Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_ORG_NAME_NYM")>  _
Partial Public Class MAS_ORG_NAME_NYM
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TYPE_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTYPE_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE_NAME() As String
		Get
			Return Me._TYPE_NAME
		End Get
		Set
			If (String.Equals(Me._TYPE_NAME, value) = false) Then
				Me.OnTYPE_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_NAME = value
				Me.SendPropertyChanged("TYPE_NAME")
				Me.OnTYPE_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DALCN_LOCATION_ADDRESS")>  _
Partial Public Class DALCN_LOCATION_ADDRESS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _OLD_IDA As System.Nullable(Of Integer)
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _thaaddr As String
	
	Private _engaddr As String
	
	Private _tharoom As String
	
	Private _thamu As String
	
	Private _thafloor As String
	
	Private _thasoi As String
	
	Private _thabuilding As String
	
	Private _engsoi As String
	
	Private _tharoad As String
	
	Private _engroad As String
	
	Private _zipcode As String
	
	Private _tel As String
	
	Private _Mobile As String
	
	Private _fax As String
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _DOWN_ID As System.Nullable(Of Integer)
	
	Private _CITIZEN_ID As String
	
	Private _CITIZEN_ID_UPLOAD As String
	
	Private _XMLNAME As String
	
	Private _engmu As String
	
	Private _engfloor As String
	
	Private _engbuilding As String
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _lctcd As System.Nullable(Of Integer)
	
	Private _thanameplace As String
	
	Private _engnameplace As String
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _HOUSENO As String
	
	Private _Branch As String
	
	Private _LOCATION_TYPE_NORMAL As System.Nullable(Of Integer)
	
	Private _LOCATION_TYPE_KEEP As System.Nullable(Of Integer)
	
	Private _LOCATION_TYPE_OTHER As System.Nullable(Of Integer)
	
	Private _LOCATION_TYPE_ID As System.Nullable(Of Integer)
	
	Private _SYSTEM_NAME As String
	
	Private _thmblcd As System.Nullable(Of Short)
	
	Private _amphrcd As System.Nullable(Of Short)
	
	Private _chngwtcd As System.Nullable(Of Short)
	
	Private _thathmblnm As String
	
	Private _thaamphrnm As String
	
	Private _thachngwtnm As String
	
	Private _engthmblnm As String
	
	Private _engamphrnm As String
	
	Private _engchngwtnm As String
	
	Private _IDENTIFY As String
	
	Private _REMARK As String
	
	Private _longitude As System.Nullable(Of Decimal)
	
	Private _latitude As System.Nullable(Of Decimal)
	
	Private _Status As String
	
	Private _TYPE As String
	
	Private _Country As String
	
	Private _groupdavision As System.Nullable(Of Integer)
	
	Private _LOCATION_KIND As System.Nullable(Of Integer)
	
	Private _bumbud As System.Nullable(Of Integer)
	
	Private _beds_amount As String
	
	Private _CITIZEN_RECORDER As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _system_id As String
	
	Private _pvncd As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnOLD_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnOLD_IDAChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnthaaddrChanging(value As String)
    End Sub
    Partial Private Sub OnthaaddrChanged()
    End Sub
    Partial Private Sub OnengaddrChanging(value As String)
    End Sub
    Partial Private Sub OnengaddrChanged()
    End Sub
    Partial Private Sub OntharoomChanging(value As String)
    End Sub
    Partial Private Sub OntharoomChanged()
    End Sub
    Partial Private Sub OnthamuChanging(value As String)
    End Sub
    Partial Private Sub OnthamuChanged()
    End Sub
    Partial Private Sub OnthafloorChanging(value As String)
    End Sub
    Partial Private Sub OnthafloorChanged()
    End Sub
    Partial Private Sub OnthasoiChanging(value As String)
    End Sub
    Partial Private Sub OnthasoiChanged()
    End Sub
    Partial Private Sub OnthabuildingChanging(value As String)
    End Sub
    Partial Private Sub OnthabuildingChanged()
    End Sub
    Partial Private Sub OnengsoiChanging(value As String)
    End Sub
    Partial Private Sub OnengsoiChanged()
    End Sub
    Partial Private Sub OntharoadChanging(value As String)
    End Sub
    Partial Private Sub OntharoadChanged()
    End Sub
    Partial Private Sub OnengroadChanging(value As String)
    End Sub
    Partial Private Sub OnengroadChanged()
    End Sub
    Partial Private Sub OnzipcodeChanging(value As String)
    End Sub
    Partial Private Sub OnzipcodeChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnMobileChanging(value As String)
    End Sub
    Partial Private Sub OnMobileChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnDOWN_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOWN_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnXMLNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnXMLNAMEChanged()
    End Sub
    Partial Private Sub OnengmuChanging(value As String)
    End Sub
    Partial Private Sub OnengmuChanged()
    End Sub
    Partial Private Sub OnengfloorChanging(value As String)
    End Sub
    Partial Private Sub OnengfloorChanged()
    End Sub
    Partial Private Sub OnengbuildingChanging(value As String)
    End Sub
    Partial Private Sub OnengbuildingChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnthanameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnthanameplaceChanged()
    End Sub
    Partial Private Sub OnengnameplaceChanging(value As String)
    End Sub
    Partial Private Sub OnengnameplaceChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnHOUSENOChanging(value As String)
    End Sub
    Partial Private Sub OnHOUSENOChanged()
    End Sub
    Partial Private Sub OnBranchChanging(value As String)
    End Sub
    Partial Private Sub OnBranchChanged()
    End Sub
    Partial Private Sub OnLOCATION_TYPE_NORMALChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_TYPE_NORMALChanged()
    End Sub
    Partial Private Sub OnLOCATION_TYPE_KEEPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_TYPE_KEEPChanged()
    End Sub
    Partial Private Sub OnLOCATION_TYPE_OTHERChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_TYPE_OTHERChanged()
    End Sub
    Partial Private Sub OnLOCATION_TYPE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_TYPE_IDChanged()
    End Sub
    Partial Private Sub OnSYSTEM_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSYSTEM_NAMEChanged()
    End Sub
    Partial Private Sub OnthmblcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnthmblcdChanged()
    End Sub
    Partial Private Sub OnamphrcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamphrcdChanged()
    End Sub
    Partial Private Sub OnchngwtcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnchngwtcdChanged()
    End Sub
    Partial Private Sub OnthathmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnthathmblnmChanged()
    End Sub
    Partial Private Sub OnthaamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnthaamphrnmChanged()
    End Sub
    Partial Private Sub OnthachngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnthachngwtnmChanged()
    End Sub
    Partial Private Sub OnengthmblnmChanging(value As String)
    End Sub
    Partial Private Sub OnengthmblnmChanged()
    End Sub
    Partial Private Sub OnengamphrnmChanging(value As String)
    End Sub
    Partial Private Sub OnengamphrnmChanged()
    End Sub
    Partial Private Sub OnengchngwtnmChanging(value As String)
    End Sub
    Partial Private Sub OnengchngwtnmChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnlongitudeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnlongitudeChanged()
    End Sub
    Partial Private Sub OnlatitudeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnlatitudeChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnTYPEChanged()
    End Sub
    Partial Private Sub OnCountryChanging(value As String)
    End Sub
    Partial Private Sub OnCountryChanged()
    End Sub
    Partial Private Sub OngroupdavisionChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OngroupdavisionChanged()
    End Sub
    Partial Private Sub OnLOCATION_KINDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLOCATION_KINDChanged()
    End Sub
    Partial Private Sub OnbumbudChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbumbudChanged()
    End Sub
    Partial Private Sub Onbeds_amountChanging(value As String)
    End Sub
    Partial Private Sub Onbeds_amountChanged()
    End Sub
    Partial Private Sub OnCITIZEN_RECORDERChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_RECORDERChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub Onsystem_idChanging(value As String)
    End Sub
    Partial Private Sub Onsystem_idChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_IDA", DbType:="Int")>  _
	Public Property OLD_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._OLD_IDA
		End Get
		Set
			If (Me._OLD_IDA.Equals(value) = false) Then
				Me.OnOLD_IDAChanging(value)
				Me.SendPropertyChanging
				Me._OLD_IDA = value
				Me.SendPropertyChanged("OLD_IDA")
				Me.OnOLD_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaaddr", DbType:="VarChar(MAX)")>  _
	Public Property thaaddr() As String
		Get
			Return Me._thaaddr
		End Get
		Set
			If (String.Equals(Me._thaaddr, value) = false) Then
				Me.OnthaaddrChanging(value)
				Me.SendPropertyChanging
				Me._thaaddr = value
				Me.SendPropertyChanged("thaaddr")
				Me.OnthaaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engaddr", DbType:="VarChar(MAX)")>  _
	Public Property engaddr() As String
		Get
			Return Me._engaddr
		End Get
		Set
			If (String.Equals(Me._engaddr, value) = false) Then
				Me.OnengaddrChanging(value)
				Me.SendPropertyChanging
				Me._engaddr = value
				Me.SendPropertyChanged("engaddr")
				Me.OnengaddrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoom", DbType:="VarChar(MAX)")>  _
	Public Property tharoom() As String
		Get
			Return Me._tharoom
		End Get
		Set
			If (String.Equals(Me._tharoom, value) = false) Then
				Me.OntharoomChanging(value)
				Me.SendPropertyChanging
				Me._tharoom = value
				Me.SendPropertyChanged("tharoom")
				Me.OntharoomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thamu", DbType:="VarChar(MAX)")>  _
	Public Property thamu() As String
		Get
			Return Me._thamu
		End Get
		Set
			If (String.Equals(Me._thamu, value) = false) Then
				Me.OnthamuChanging(value)
				Me.SendPropertyChanging
				Me._thamu = value
				Me.SendPropertyChanged("thamu")
				Me.OnthamuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thafloor", DbType:="VarChar(MAX)")>  _
	Public Property thafloor() As String
		Get
			Return Me._thafloor
		End Get
		Set
			If (String.Equals(Me._thafloor, value) = false) Then
				Me.OnthafloorChanging(value)
				Me.SendPropertyChanging
				Me._thafloor = value
				Me.SendPropertyChanged("thafloor")
				Me.OnthafloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thasoi", DbType:="VarChar(MAX)")>  _
	Public Property thasoi() As String
		Get
			Return Me._thasoi
		End Get
		Set
			If (String.Equals(Me._thasoi, value) = false) Then
				Me.OnthasoiChanging(value)
				Me.SendPropertyChanging
				Me._thasoi = value
				Me.SendPropertyChanged("thasoi")
				Me.OnthasoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thabuilding", DbType:="VarChar(MAX)")>  _
	Public Property thabuilding() As String
		Get
			Return Me._thabuilding
		End Get
		Set
			If (String.Equals(Me._thabuilding, value) = false) Then
				Me.OnthabuildingChanging(value)
				Me.SendPropertyChanging
				Me._thabuilding = value
				Me.SendPropertyChanged("thabuilding")
				Me.OnthabuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engsoi", DbType:="VarChar(MAX)")>  _
	Public Property engsoi() As String
		Get
			Return Me._engsoi
		End Get
		Set
			If (String.Equals(Me._engsoi, value) = false) Then
				Me.OnengsoiChanging(value)
				Me.SendPropertyChanging
				Me._engsoi = value
				Me.SendPropertyChanged("engsoi")
				Me.OnengsoiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tharoad", DbType:="VarChar(MAX)")>  _
	Public Property tharoad() As String
		Get
			Return Me._tharoad
		End Get
		Set
			If (String.Equals(Me._tharoad, value) = false) Then
				Me.OntharoadChanging(value)
				Me.SendPropertyChanging
				Me._tharoad = value
				Me.SendPropertyChanged("tharoad")
				Me.OntharoadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engroad", DbType:="VarChar(MAX)")>  _
	Public Property engroad() As String
		Get
			Return Me._engroad
		End Get
		Set
			If (String.Equals(Me._engroad, value) = false) Then
				Me.OnengroadChanging(value)
				Me.SendPropertyChanging
				Me._engroad = value
				Me.SendPropertyChanged("engroad")
				Me.OnengroadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_zipcode", DbType:="VarChar(MAX)")>  _
	Public Property zipcode() As String
		Get
			Return Me._zipcode
		End Get
		Set
			If (String.Equals(Me._zipcode, value) = false) Then
				Me.OnzipcodeChanging(value)
				Me.SendPropertyChanging
				Me._zipcode = value
				Me.SendPropertyChanged("zipcode")
				Me.OnzipcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="VarChar(MAX)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mobile", DbType:="VarChar(MAX)")>  _
	Public Property Mobile() As String
		Get
			Return Me._Mobile
		End Get
		Set
			If (String.Equals(Me._Mobile, value) = false) Then
				Me.OnMobileChanging(value)
				Me.SendPropertyChanging
				Me._Mobile = value
				Me.SendPropertyChanged("Mobile")
				Me.OnMobileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="VarChar(MAX)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOWN_ID", DbType:="Int")>  _
	Public Property DOWN_ID() As System.Nullable(Of Integer)
		Get
			Return Me._DOWN_ID
		End Get
		Set
			If (Me._DOWN_ID.Equals(value) = false) Then
				Me.OnDOWN_IDChanging(value)
				Me.SendPropertyChanging
				Me._DOWN_ID = value
				Me.SendPropertyChanged("DOWN_ID")
				Me.OnDOWN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_UPLOAD() As String
		Get
			Return Me._CITIZEN_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_UPLOAD, value) = false) Then
				Me.OnCITIZEN_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_ID_UPLOAD")
				Me.OnCITIZEN_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_XMLNAME", DbType:="NVarChar(MAX)")>  _
	Public Property XMLNAME() As String
		Get
			Return Me._XMLNAME
		End Get
		Set
			If (String.Equals(Me._XMLNAME, value) = false) Then
				Me.OnXMLNAMEChanging(value)
				Me.SendPropertyChanging
				Me._XMLNAME = value
				Me.SendPropertyChanged("XMLNAME")
				Me.OnXMLNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engmu", DbType:="NVarChar(50)")>  _
	Public Property engmu() As String
		Get
			Return Me._engmu
		End Get
		Set
			If (String.Equals(Me._engmu, value) = false) Then
				Me.OnengmuChanging(value)
				Me.SendPropertyChanging
				Me._engmu = value
				Me.SendPropertyChanged("engmu")
				Me.OnengmuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engfloor", DbType:="NVarChar(MAX)")>  _
	Public Property engfloor() As String
		Get
			Return Me._engfloor
		End Get
		Set
			If (String.Equals(Me._engfloor, value) = false) Then
				Me.OnengfloorChanging(value)
				Me.SendPropertyChanging
				Me._engfloor = value
				Me.SendPropertyChanged("engfloor")
				Me.OnengfloorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engbuilding", DbType:="NVarChar(MAX)")>  _
	Public Property engbuilding() As String
		Get
			Return Me._engbuilding
		End Get
		Set
			If (String.Equals(Me._engbuilding, value) = false) Then
				Me.OnengbuildingChanging(value)
				Me.SendPropertyChanging
				Me._engbuilding = value
				Me.SendPropertyChanged("engbuilding")
				Me.OnengbuildingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="DateTime")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int")>  _
	Public Property lctcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctcd
		End Get
		Set
			If (Me._lctcd.Equals(value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thanameplace", DbType:="NVarChar(MAX)")>  _
	Public Property thanameplace() As String
		Get
			Return Me._thanameplace
		End Get
		Set
			If (String.Equals(Me._thanameplace, value) = false) Then
				Me.OnthanameplaceChanging(value)
				Me.SendPropertyChanging
				Me._thanameplace = value
				Me.SendPropertyChanged("thanameplace")
				Me.OnthanameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engnameplace", DbType:="NVarChar(MAX)")>  _
	Public Property engnameplace() As String
		Get
			Return Me._engnameplace
		End Get
		Set
			If (String.Equals(Me._engnameplace, value) = false) Then
				Me.OnengnameplaceChanging(value)
				Me.SendPropertyChanging
				Me._engnameplace = value
				Me.SendPropertyChanged("engnameplace")
				Me.OnengnameplaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOUSENO", DbType:="NVarChar(MAX)")>  _
	Public Property HOUSENO() As String
		Get
			Return Me._HOUSENO
		End Get
		Set
			If (String.Equals(Me._HOUSENO, value) = false) Then
				Me.OnHOUSENOChanging(value)
				Me.SendPropertyChanging
				Me._HOUSENO = value
				Me.SendPropertyChanged("HOUSENO")
				Me.OnHOUSENOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Branch", DbType:="VarChar(50)")>  _
	Public Property Branch() As String
		Get
			Return Me._Branch
		End Get
		Set
			If (String.Equals(Me._Branch, value) = false) Then
				Me.OnBranchChanging(value)
				Me.SendPropertyChanging
				Me._Branch = value
				Me.SendPropertyChanged("Branch")
				Me.OnBranchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_TYPE_NORMAL", DbType:="Int")>  _
	Public Property LOCATION_TYPE_NORMAL() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_TYPE_NORMAL
		End Get
		Set
			If (Me._LOCATION_TYPE_NORMAL.Equals(value) = false) Then
				Me.OnLOCATION_TYPE_NORMALChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_TYPE_NORMAL = value
				Me.SendPropertyChanged("LOCATION_TYPE_NORMAL")
				Me.OnLOCATION_TYPE_NORMALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_TYPE_KEEP", DbType:="Int")>  _
	Public Property LOCATION_TYPE_KEEP() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_TYPE_KEEP
		End Get
		Set
			If (Me._LOCATION_TYPE_KEEP.Equals(value) = false) Then
				Me.OnLOCATION_TYPE_KEEPChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_TYPE_KEEP = value
				Me.SendPropertyChanged("LOCATION_TYPE_KEEP")
				Me.OnLOCATION_TYPE_KEEPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_TYPE_OTHER", DbType:="Int")>  _
	Public Property LOCATION_TYPE_OTHER() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_TYPE_OTHER
		End Get
		Set
			If (Me._LOCATION_TYPE_OTHER.Equals(value) = false) Then
				Me.OnLOCATION_TYPE_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_TYPE_OTHER = value
				Me.SendPropertyChanged("LOCATION_TYPE_OTHER")
				Me.OnLOCATION_TYPE_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_TYPE_ID", DbType:="Int")>  _
	Public Property LOCATION_TYPE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_TYPE_ID
		End Get
		Set
			If (Me._LOCATION_TYPE_ID.Equals(value) = false) Then
				Me.OnLOCATION_TYPE_IDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_TYPE_ID = value
				Me.SendPropertyChanged("LOCATION_TYPE_ID")
				Me.OnLOCATION_TYPE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SYSTEM_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SYSTEM_NAME() As String
		Get
			Return Me._SYSTEM_NAME
		End Get
		Set
			If (String.Equals(Me._SYSTEM_NAME, value) = false) Then
				Me.OnSYSTEM_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SYSTEM_NAME = value
				Me.SendPropertyChanged("SYSTEM_NAME")
				Me.OnSYSTEM_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thmblcd", DbType:="SmallInt")>  _
	Public Property thmblcd() As System.Nullable(Of Short)
		Get
			Return Me._thmblcd
		End Get
		Set
			If (Me._thmblcd.Equals(value) = false) Then
				Me.OnthmblcdChanging(value)
				Me.SendPropertyChanging
				Me._thmblcd = value
				Me.SendPropertyChanged("thmblcd")
				Me.OnthmblcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amphrcd", DbType:="SmallInt")>  _
	Public Property amphrcd() As System.Nullable(Of Short)
		Get
			Return Me._amphrcd
		End Get
		Set
			If (Me._amphrcd.Equals(value) = false) Then
				Me.OnamphrcdChanging(value)
				Me.SendPropertyChanging
				Me._amphrcd = value
				Me.SendPropertyChanged("amphrcd")
				Me.OnamphrcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chngwtcd", DbType:="SmallInt")>  _
	Public Property chngwtcd() As System.Nullable(Of Short)
		Get
			Return Me._chngwtcd
		End Get
		Set
			If (Me._chngwtcd.Equals(value) = false) Then
				Me.OnchngwtcdChanging(value)
				Me.SendPropertyChanging
				Me._chngwtcd = value
				Me.SendPropertyChanged("chngwtcd")
				Me.OnchngwtcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thathmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property thathmblnm() As String
		Get
			Return Me._thathmblnm
		End Get
		Set
			If (String.Equals(Me._thathmblnm, value) = false) Then
				Me.OnthathmblnmChanging(value)
				Me.SendPropertyChanging
				Me._thathmblnm = value
				Me.SendPropertyChanged("thathmblnm")
				Me.OnthathmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thaamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property thaamphrnm() As String
		Get
			Return Me._thaamphrnm
		End Get
		Set
			If (String.Equals(Me._thaamphrnm, value) = false) Then
				Me.OnthaamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._thaamphrnm = value
				Me.SendPropertyChanged("thaamphrnm")
				Me.OnthaamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thachngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property thachngwtnm() As String
		Get
			Return Me._thachngwtnm
		End Get
		Set
			If (String.Equals(Me._thachngwtnm, value) = false) Then
				Me.OnthachngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._thachngwtnm = value
				Me.SendPropertyChanged("thachngwtnm")
				Me.OnthachngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engthmblnm", DbType:="NVarChar(MAX)")>  _
	Public Property engthmblnm() As String
		Get
			Return Me._engthmblnm
		End Get
		Set
			If (String.Equals(Me._engthmblnm, value) = false) Then
				Me.OnengthmblnmChanging(value)
				Me.SendPropertyChanging
				Me._engthmblnm = value
				Me.SendPropertyChanged("engthmblnm")
				Me.OnengthmblnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engamphrnm", DbType:="NVarChar(MAX)")>  _
	Public Property engamphrnm() As String
		Get
			Return Me._engamphrnm
		End Get
		Set
			If (String.Equals(Me._engamphrnm, value) = false) Then
				Me.OnengamphrnmChanging(value)
				Me.SendPropertyChanging
				Me._engamphrnm = value
				Me.SendPropertyChanged("engamphrnm")
				Me.OnengamphrnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engchngwtnm", DbType:="NVarChar(MAX)")>  _
	Public Property engchngwtnm() As String
		Get
			Return Me._engchngwtnm
		End Get
		Set
			If (String.Equals(Me._engchngwtnm, value) = false) Then
				Me.OnengchngwtnmChanging(value)
				Me.SendPropertyChanging
				Me._engchngwtnm = value
				Me.SendPropertyChanged("engchngwtnm")
				Me.OnengchngwtnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(30)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_longitude", DbType:="Decimal(18,10)")>  _
	Public Property longitude() As System.Nullable(Of Decimal)
		Get
			Return Me._longitude
		End Get
		Set
			If (Me._longitude.Equals(value) = false) Then
				Me.OnlongitudeChanging(value)
				Me.SendPropertyChanging
				Me._longitude = value
				Me.SendPropertyChanged("longitude")
				Me.OnlongitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_latitude", DbType:="Decimal(18,10)")>  _
	Public Property latitude() As System.Nullable(Of Decimal)
		Get
			Return Me._latitude
		End Get
		Set
			If (Me._latitude.Equals(value) = false) Then
				Me.OnlatitudeChanging(value)
				Me.SendPropertyChanging
				Me._latitude = value
				Me.SendPropertyChanged("latitude")
				Me.OnlatitudeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(MAX)")>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE", DbType:="NVarChar(MAX)")>  _
	Public Property TYPE() As String
		Get
			Return Me._TYPE
		End Get
		Set
			If (String.Equals(Me._TYPE, value) = false) Then
				Me.OnTYPEChanging(value)
				Me.SendPropertyChanging
				Me._TYPE = value
				Me.SendPropertyChanged("TYPE")
				Me.OnTYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Country", DbType:="NVarChar(MAX)")>  _
	Public Property Country() As String
		Get
			Return Me._Country
		End Get
		Set
			If (String.Equals(Me._Country, value) = false) Then
				Me.OnCountryChanging(value)
				Me.SendPropertyChanging
				Me._Country = value
				Me.SendPropertyChanged("Country")
				Me.OnCountryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_groupdavision", DbType:="Int")>  _
	Public Property groupdavision() As System.Nullable(Of Integer)
		Get
			Return Me._groupdavision
		End Get
		Set
			If (Me._groupdavision.Equals(value) = false) Then
				Me.OngroupdavisionChanging(value)
				Me.SendPropertyChanging
				Me._groupdavision = value
				Me.SendPropertyChanged("groupdavision")
				Me.OngroupdavisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LOCATION_KIND", DbType:="Int")>  _
	Public Property LOCATION_KIND() As System.Nullable(Of Integer)
		Get
			Return Me._LOCATION_KIND
		End Get
		Set
			If (Me._LOCATION_KIND.Equals(value) = false) Then
				Me.OnLOCATION_KINDChanging(value)
				Me.SendPropertyChanging
				Me._LOCATION_KIND = value
				Me.SendPropertyChanged("LOCATION_KIND")
				Me.OnLOCATION_KINDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bumbud", DbType:="Int")>  _
	Public Property bumbud() As System.Nullable(Of Integer)
		Get
			Return Me._bumbud
		End Get
		Set
			If (Me._bumbud.Equals(value) = false) Then
				Me.OnbumbudChanging(value)
				Me.SendPropertyChanging
				Me._bumbud = value
				Me.SendPropertyChanged("bumbud")
				Me.OnbumbudChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_beds_amount", DbType:="NVarChar(MAX)")>  _
	Public Property beds_amount() As String
		Get
			Return Me._beds_amount
		End Get
		Set
			If (String.Equals(Me._beds_amount, value) = false) Then
				Me.Onbeds_amountChanging(value)
				Me.SendPropertyChanging
				Me._beds_amount = value
				Me.SendPropertyChanged("beds_amount")
				Me.Onbeds_amountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_RECORDER", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_RECORDER() As String
		Get
			Return Me._CITIZEN_RECORDER
		End Get
		Set
			If (String.Equals(Me._CITIZEN_RECORDER, value) = false) Then
				Me.OnCITIZEN_RECORDERChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_RECORDER = value
				Me.SendPropertyChanged("CITIZEN_RECORDER")
				Me.OnCITIZEN_RECORDERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_system_id", DbType:="NVarChar(20)")>  _
	Public Property system_id() As String
		Get
			Return Me._system_id
		End Get
		Set
			If (String.Equals(Me._system_id, value) = false) Then
				Me.Onsystem_idChanging(value)
				Me.SendPropertyChanging
				Me._system_id = value
				Me.SendPropertyChanged("system_id")
				Me.Onsystem_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.driowa_temp")>  _
Partial Public Class driowa_temp
	
	Private _IDA As Integer
	
	Private _iowacd As String
	
	Private _iowanm As String
	
	Private _iowa As String
	
	Private _run As String
	
	Private _salt As String
	
	Private _syn As String
	
	Private _IS_CANCEL As String
	
	Private _Procuct As System.Nullable(Of Integer)
	
	Private _Import As System.Nullable(Of Integer)
	
	Private _Both As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me._IDA = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowacd", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property iowacd() As String
		Get
			Return Me._iowacd
		End Get
		Set
			If (String.Equals(Me._iowacd, value) = false) Then
				Me._iowacd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowanm", DbType:="VarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property iowanm() As String
		Get
			Return Me._iowanm
		End Get
		Set
			If (String.Equals(Me._iowanm, value) = false) Then
				Me._iowanm = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowa", DbType:="VarChar(6) NOT NULL", CanBeNull:=false)>  _
	Public Property iowa() As String
		Get
			Return Me._iowa
		End Get
		Set
			If (String.Equals(Me._iowa, value) = false) Then
				Me._iowa = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_run", DbType:="VarChar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property run() As String
		Get
			Return Me._run
		End Get
		Set
			If (String.Equals(Me._run, value) = false) Then
				Me._run = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salt", DbType:="VarChar(3) NOT NULL", CanBeNull:=false)>  _
	Public Property salt() As String
		Get
			Return Me._salt
		End Get
		Set
			If (String.Equals(Me._salt, value) = false) Then
				Me._salt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syn", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property syn() As String
		Get
			Return Me._syn
		End Get
		Set
			If (String.Equals(Me._syn, value) = false) Then
				Me._syn = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_CANCEL", DbType:="NVarChar(50)")>  _
	Public Property IS_CANCEL() As String
		Get
			Return Me._IS_CANCEL
		End Get
		Set
			If (String.Equals(Me._IS_CANCEL, value) = false) Then
				Me._IS_CANCEL = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Procuct", DbType:="Int")>  _
	Public Property Procuct() As System.Nullable(Of Integer)
		Get
			Return Me._Procuct
		End Get
		Set
			If (Me._Procuct.Equals(value) = false) Then
				Me._Procuct = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Import", DbType:="Int")>  _
	Public Property Import() As System.Nullable(Of Integer)
		Get
			Return Me._Import
		End Get
		Set
			If (Me._Import.Equals(value) = false) Then
				Me._Import = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Both", DbType:="Int")>  _
	Public Property Both() As System.Nullable(Of Integer)
		Get
			Return Me._Both
		End Get
		Set
			If (Me._Both.Equals(value) = false) Then
				Me._Both = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRUG_REGISTRATION_DETAIL_CAS")>  _
Partial Public Class DRUG_REGISTRATION_DETAIL_CA
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As String
	
	Private _ROWS As String
	
	Private _IOWA As String
	
	Private _QTY As String
	
	Private _SUNITCD As String
	
	Private _EQTO_IOWA As String
	
	Private _EQTO_QTY As String
	
	Private _EQTO_SUNITCD As String
	
	Private _BASE_FORM As String
	
	Private _AORI As String
	
	Private _IOWACD As String
	
	Private _REF As String
	
	Private _REMARK As String
	
	Private _FK_SET As System.Nullable(Of Integer)
	
	Private _CONDITION As String
	
	Private _sbioqty As System.Nullable(Of Decimal)
	
	Private _sbiosqno As System.Nullable(Of Decimal)
	
	Private _sbiounitcd As System.Nullable(Of Integer)
	
	Private _ebioqty As System.Nullable(Of Decimal)
	
	Private _ebiosqno As System.Nullable(Of Decimal)
	
	Private _ebiounitcd As System.Nullable(Of Integer)
	
	Private _mltplr As System.Nullable(Of Integer)
	
	Private _QTY2 As String
	
	Private _SUNITCD2 As String
	
	Private _CAS_TYPE As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As String)
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnROWSChanging(value As String)
    End Sub
    Partial Private Sub OnROWSChanged()
    End Sub
    Partial Private Sub OnIOWAChanging(value As String)
    End Sub
    Partial Private Sub OnIOWAChanged()
    End Sub
    Partial Private Sub OnQTYChanging(value As String)
    End Sub
    Partial Private Sub OnQTYChanged()
    End Sub
    Partial Private Sub OnSUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnSUNITCDChanged()
    End Sub
    Partial Private Sub OnEQTO_IOWAChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_IOWAChanged()
    End Sub
    Partial Private Sub OnEQTO_QTYChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_QTYChanged()
    End Sub
    Partial Private Sub OnEQTO_SUNITCDChanging(value As String)
    End Sub
    Partial Private Sub OnEQTO_SUNITCDChanged()
    End Sub
    Partial Private Sub OnBASE_FORMChanging(value As String)
    End Sub
    Partial Private Sub OnBASE_FORMChanged()
    End Sub
    Partial Private Sub OnAORIChanging(value As String)
    End Sub
    Partial Private Sub OnAORIChanged()
    End Sub
    Partial Private Sub OnIOWACDChanging(value As String)
    End Sub
    Partial Private Sub OnIOWACDChanged()
    End Sub
    Partial Private Sub OnREFChanging(value As String)
    End Sub
    Partial Private Sub OnREFChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnFK_SETChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_SETChanged()
    End Sub
    Partial Private Sub OnCONDITIONChanging(value As String)
    End Sub
    Partial Private Sub OnCONDITIONChanged()
    End Sub
    Partial Private Sub OnsbioqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnsbioqtyChanged()
    End Sub
    Partial Private Sub OnsbiosqnoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnsbiosqnoChanged()
    End Sub
    Partial Private Sub OnsbiounitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsbiounitcdChanged()
    End Sub
    Partial Private Sub OnebioqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnebioqtyChanged()
    End Sub
    Partial Private Sub OnebiosqnoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnebiosqnoChanged()
    End Sub
    Partial Private Sub OnebiounitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnebiounitcdChanged()
    End Sub
    Partial Private Sub OnmltplrChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnmltplrChanged()
    End Sub
    Partial Private Sub OnQTY2Changing(value As String)
    End Sub
    Partial Private Sub OnQTY2Changed()
    End Sub
    Partial Private Sub OnSUNITCD2Changing(value As String)
    End Sub
    Partial Private Sub OnSUNITCD2Changed()
    End Sub
    Partial Private Sub OnCAS_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCAS_TYPEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="NVarChar(MAX)")>  _
	Public Property FK_IDA() As String
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (String.Equals(Me._FK_IDA, value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROWS", DbType:="NVarChar(MAX)")>  _
	Public Property ROWS() As String
		Get
			Return Me._ROWS
		End Get
		Set
			If (String.Equals(Me._ROWS, value) = false) Then
				Me.OnROWSChanging(value)
				Me.SendPropertyChanging
				Me._ROWS = value
				Me.SendPropertyChanged("ROWS")
				Me.OnROWSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property IOWA() As String
		Get
			Return Me._IOWA
		End Get
		Set
			If (String.Equals(Me._IOWA, value) = false) Then
				Me.OnIOWAChanging(value)
				Me.SendPropertyChanging
				Me._IOWA = value
				Me.SendPropertyChanged("IOWA")
				Me.OnIOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property QTY() As String
		Get
			Return Me._QTY
		End Get
		Set
			If (String.Equals(Me._QTY, value) = false) Then
				Me.OnQTYChanging(value)
				Me.SendPropertyChanging
				Me._QTY = value
				Me.SendPropertyChanged("QTY")
				Me.OnQTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property SUNITCD() As String
		Get
			Return Me._SUNITCD
		End Get
		Set
			If (String.Equals(Me._SUNITCD, value) = false) Then
				Me.OnSUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._SUNITCD = value
				Me.SendPropertyChanged("SUNITCD")
				Me.OnSUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_IOWA", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_IOWA() As String
		Get
			Return Me._EQTO_IOWA
		End Get
		Set
			If (String.Equals(Me._EQTO_IOWA, value) = false) Then
				Me.OnEQTO_IOWAChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_IOWA = value
				Me.SendPropertyChanged("EQTO_IOWA")
				Me.OnEQTO_IOWAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_QTY", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_QTY() As String
		Get
			Return Me._EQTO_QTY
		End Get
		Set
			If (String.Equals(Me._EQTO_QTY, value) = false) Then
				Me.OnEQTO_QTYChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_QTY = value
				Me.SendPropertyChanged("EQTO_QTY")
				Me.OnEQTO_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EQTO_SUNITCD", DbType:="NVarChar(MAX)")>  _
	Public Property EQTO_SUNITCD() As String
		Get
			Return Me._EQTO_SUNITCD
		End Get
		Set
			If (String.Equals(Me._EQTO_SUNITCD, value) = false) Then
				Me.OnEQTO_SUNITCDChanging(value)
				Me.SendPropertyChanging
				Me._EQTO_SUNITCD = value
				Me.SendPropertyChanged("EQTO_SUNITCD")
				Me.OnEQTO_SUNITCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BASE_FORM", DbType:="NVarChar(MAX)")>  _
	Public Property BASE_FORM() As String
		Get
			Return Me._BASE_FORM
		End Get
		Set
			If (String.Equals(Me._BASE_FORM, value) = false) Then
				Me.OnBASE_FORMChanging(value)
				Me.SendPropertyChanging
				Me._BASE_FORM = value
				Me.SendPropertyChanged("BASE_FORM")
				Me.OnBASE_FORMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AORI", DbType:="NVarChar(50)")>  _
	Public Property AORI() As String
		Get
			Return Me._AORI
		End Get
		Set
			If (String.Equals(Me._AORI, value) = false) Then
				Me.OnAORIChanging(value)
				Me.SendPropertyChanging
				Me._AORI = value
				Me.SendPropertyChanged("AORI")
				Me.OnAORIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IOWACD", DbType:="NVarChar(MAX)")>  _
	Public Property IOWACD() As String
		Get
			Return Me._IOWACD
		End Get
		Set
			If (String.Equals(Me._IOWACD, value) = false) Then
				Me.OnIOWACDChanging(value)
				Me.SendPropertyChanging
				Me._IOWACD = value
				Me.SendPropertyChanged("IOWACD")
				Me.OnIOWACDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REF", DbType:="NVarChar(MAX)")>  _
	Public Property REF() As String
		Get
			Return Me._REF
		End Get
		Set
			If (String.Equals(Me._REF, value) = false) Then
				Me.OnREFChanging(value)
				Me.SendPropertyChanging
				Me._REF = value
				Me.SendPropertyChanged("REF")
				Me.OnREFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SET", DbType:="Int")>  _
	Public Property FK_SET() As System.Nullable(Of Integer)
		Get
			Return Me._FK_SET
		End Get
		Set
			If (Me._FK_SET.Equals(value) = false) Then
				Me.OnFK_SETChanging(value)
				Me.SendPropertyChanging
				Me._FK_SET = value
				Me.SendPropertyChanged("FK_SET")
				Me.OnFK_SETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONDITION", DbType:="NVarChar(50)")>  _
	Public Property CONDITION() As String
		Get
			Return Me._CONDITION
		End Get
		Set
			If (String.Equals(Me._CONDITION, value) = false) Then
				Me.OnCONDITIONChanging(value)
				Me.SendPropertyChanging
				Me._CONDITION = value
				Me.SendPropertyChanged("CONDITION")
				Me.OnCONDITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbioqty", DbType:="Decimal(14,8)")>  _
	Public Property sbioqty() As System.Nullable(Of Decimal)
		Get
			Return Me._sbioqty
		End Get
		Set
			If (Me._sbioqty.Equals(value) = false) Then
				Me.OnsbioqtyChanging(value)
				Me.SendPropertyChanging
				Me._sbioqty = value
				Me.SendPropertyChanged("sbioqty")
				Me.OnsbioqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbiosqno", DbType:="Decimal(14,8)")>  _
	Public Property sbiosqno() As System.Nullable(Of Decimal)
		Get
			Return Me._sbiosqno
		End Get
		Set
			If (Me._sbiosqno.Equals(value) = false) Then
				Me.OnsbiosqnoChanging(value)
				Me.SendPropertyChanging
				Me._sbiosqno = value
				Me.SendPropertyChanged("sbiosqno")
				Me.OnsbiosqnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sbiounitcd", DbType:="Int")>  _
	Public Property sbiounitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sbiounitcd
		End Get
		Set
			If (Me._sbiounitcd.Equals(value) = false) Then
				Me.OnsbiounitcdChanging(value)
				Me.SendPropertyChanging
				Me._sbiounitcd = value
				Me.SendPropertyChanged("sbiounitcd")
				Me.OnsbiounitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ebioqty", DbType:="Decimal(14,8)")>  _
	Public Property ebioqty() As System.Nullable(Of Decimal)
		Get
			Return Me._ebioqty
		End Get
		Set
			If (Me._ebioqty.Equals(value) = false) Then
				Me.OnebioqtyChanging(value)
				Me.SendPropertyChanging
				Me._ebioqty = value
				Me.SendPropertyChanged("ebioqty")
				Me.OnebioqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ebiosqno", DbType:="Decimal(14,8)")>  _
	Public Property ebiosqno() As System.Nullable(Of Decimal)
		Get
			Return Me._ebiosqno
		End Get
		Set
			If (Me._ebiosqno.Equals(value) = false) Then
				Me.OnebiosqnoChanging(value)
				Me.SendPropertyChanging
				Me._ebiosqno = value
				Me.SendPropertyChanged("ebiosqno")
				Me.OnebiosqnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ebiounitcd", DbType:="Int")>  _
	Public Property ebiounitcd() As System.Nullable(Of Integer)
		Get
			Return Me._ebiounitcd
		End Get
		Set
			If (Me._ebiounitcd.Equals(value) = false) Then
				Me.OnebiounitcdChanging(value)
				Me.SendPropertyChanging
				Me._ebiounitcd = value
				Me.SendPropertyChanged("ebiounitcd")
				Me.OnebiounitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mltplr", DbType:="Int")>  _
	Public Property mltplr() As System.Nullable(Of Integer)
		Get
			Return Me._mltplr
		End Get
		Set
			If (Me._mltplr.Equals(value) = false) Then
				Me.OnmltplrChanging(value)
				Me.SendPropertyChanging
				Me._mltplr = value
				Me.SendPropertyChanged("mltplr")
				Me.OnmltplrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QTY2", DbType:="NVarChar(MAX)")>  _
	Public Property QTY2() As String
		Get
			Return Me._QTY2
		End Get
		Set
			If (String.Equals(Me._QTY2, value) = false) Then
				Me.OnQTY2Changing(value)
				Me.SendPropertyChanging
				Me._QTY2 = value
				Me.SendPropertyChanged("QTY2")
				Me.OnQTY2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUNITCD2", DbType:="NVarChar(MAX)")>  _
	Public Property SUNITCD2() As String
		Get
			Return Me._SUNITCD2
		End Get
		Set
			If (String.Equals(Me._SUNITCD2, value) = false) Then
				Me.OnSUNITCD2Changing(value)
				Me.SendPropertyChanging
				Me._SUNITCD2 = value
				Me.SendPropertyChanged("SUNITCD2")
				Me.OnSUNITCD2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAS_TYPE", DbType:="Int")>  _
	Public Property CAS_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._CAS_TYPE
		End Get
		Set
			If (Me._CAS_TYPE.Equals(value) = false) Then
				Me.OnCAS_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CAS_TYPE = value
				Me.SendPropertyChanged("CAS_TYPE")
				Me.OnCAS_TYPEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CHEMICAL_REQUEST")>  _
Partial Public Class CHEMICAL_REQUEST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _iowanm As String
	
	Private _iowacd As String
	
	Private _runno As String
	
	Private _salt As String
	
	Private _syn As String
	
	Private _aori As String
	
	Private _cas_number As String
	
	Private _look_type As String
	
	Private _cas_type As String
	
	Private _iowa As String
	
	Private _USE_FUNTION As String
	
	Private _RCVNO As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _LCNSID As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _IDENTIFY As String
	
	Private _PVNCD As System.Nullable(Of Integer)
	
	Private _RCV_DATE As System.Nullable(Of Date)
	
	Private _REQUEST_DATE As System.Nullable(Of Date)
	
	Private _MIX_TYPE As String
	
	Private _MODERN_TRADITION As String
	
	Private _REGIS_STATUS As String
	
	Private _USE_PROHIBIT As String
	
	Private _GENUS_IDA As System.Nullable(Of Integer)
	
	Private _MAIN_TYPE As System.Nullable(Of Integer)
	
	Private _SUB_TYPE As System.Nullable(Of Integer)
	
	Private _CHEM_TYPE As System.Nullable(Of Integer)
	
	Private _BIO_TYPE As System.Nullable(Of Integer)
	
	Private _GENE_MOD As System.Nullable(Of Integer)
	
	Private _EXTRACT_TYPE As System.Nullable(Of Integer)
	
	Private _EXTRACT_OTHER As String
	
	Private _GENUS As String
	
	Private _SPECIES As String
	
	Private _STRAIN As String
	
	Private _G_TYPE As System.Nullable(Of Integer)
	
	Private _iowanm_eng As String
	
	Private _SCIENTIFIC_NAME As String
	
	Private _NATIONAL_CD As System.Nullable(Of Integer)
	
	Private _IS_PROCESSING As System.Nullable(Of Integer)
	
	Private _PROCESSING_DES As String
	
	Private _BRAND_LABEL As String
	
	Private _EXTRACT_OTHER2 As String
	
	Private _DESCRIPTION_OTHER As String
	
	Private _PROCESS_ID As String
	
	Private _IS_ATC As System.Nullable(Of Boolean)
	
	Private _ATC_NAME As String
	
	Private _INN As String
	
	Private _REMARK As String
	
	Private _REMARK_DATE As System.Nullable(Of Date)
	
	Private _CITIZEN_ID_AUTHORIZE As String
	
	Private _EMAIL As String
	
	Private _TEL As String
	
	Private _INN_TH As String
	
	Private _add_digit As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OniowanmChanging(value As String)
    End Sub
    Partial Private Sub OniowanmChanged()
    End Sub
    Partial Private Sub OniowacdChanging(value As String)
    End Sub
    Partial Private Sub OniowacdChanged()
    End Sub
    Partial Private Sub OnrunnoChanging(value As String)
    End Sub
    Partial Private Sub OnrunnoChanged()
    End Sub
    Partial Private Sub OnsaltChanging(value As String)
    End Sub
    Partial Private Sub OnsaltChanged()
    End Sub
    Partial Private Sub OnsynChanging(value As String)
    End Sub
    Partial Private Sub OnsynChanged()
    End Sub
    Partial Private Sub OnaoriChanging(value As String)
    End Sub
    Partial Private Sub OnaoriChanged()
    End Sub
    Partial Private Sub Oncas_numberChanging(value As String)
    End Sub
    Partial Private Sub Oncas_numberChanged()
    End Sub
    Partial Private Sub Onlook_typeChanging(value As String)
    End Sub
    Partial Private Sub Onlook_typeChanged()
    End Sub
    Partial Private Sub Oncas_typeChanging(value As String)
    End Sub
    Partial Private Sub Oncas_typeChanged()
    End Sub
    Partial Private Sub OniowaChanging(value As String)
    End Sub
    Partial Private Sub OniowaChanged()
    End Sub
    Partial Private Sub OnUSE_FUNTIONChanging(value As String)
    End Sub
    Partial Private Sub OnUSE_FUNTIONChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnLCNSIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCNSIDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnRCV_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCV_DATEChanged()
    End Sub
    Partial Private Sub OnREQUEST_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUEST_DATEChanged()
    End Sub
    Partial Private Sub OnMIX_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnMIX_TYPEChanged()
    End Sub
    Partial Private Sub OnMODERN_TRADITIONChanging(value As String)
    End Sub
    Partial Private Sub OnMODERN_TRADITIONChanged()
    End Sub
    Partial Private Sub OnREGIS_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnREGIS_STATUSChanged()
    End Sub
    Partial Private Sub OnUSE_PROHIBITChanging(value As String)
    End Sub
    Partial Private Sub OnUSE_PROHIBITChanged()
    End Sub
    Partial Private Sub OnGENUS_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENUS_IDAChanged()
    End Sub
    Partial Private Sub OnMAIN_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMAIN_TYPEChanged()
    End Sub
    Partial Private Sub OnSUB_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUB_TYPEChanged()
    End Sub
    Partial Private Sub OnCHEM_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHEM_TYPEChanged()
    End Sub
    Partial Private Sub OnBIO_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBIO_TYPEChanged()
    End Sub
    Partial Private Sub OnGENE_MODChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENE_MODChanged()
    End Sub
    Partial Private Sub OnEXTRACT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEXTRACT_TYPEChanged()
    End Sub
    Partial Private Sub OnEXTRACT_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnEXTRACT_OTHERChanged()
    End Sub
    Partial Private Sub OnGENUSChanging(value As String)
    End Sub
    Partial Private Sub OnGENUSChanged()
    End Sub
    Partial Private Sub OnSPECIESChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIESChanged()
    End Sub
    Partial Private Sub OnSTRAINChanging(value As String)
    End Sub
    Partial Private Sub OnSTRAINChanged()
    End Sub
    Partial Private Sub OnG_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnG_TYPEChanged()
    End Sub
    Partial Private Sub Oniowanm_engChanging(value As String)
    End Sub
    Partial Private Sub Oniowanm_engChanged()
    End Sub
    Partial Private Sub OnSCIENTIFIC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSCIENTIFIC_NAMEChanged()
    End Sub
    Partial Private Sub OnNATIONAL_CDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNATIONAL_CDChanged()
    End Sub
    Partial Private Sub OnIS_PROCESSINGChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIS_PROCESSINGChanged()
    End Sub
    Partial Private Sub OnPROCESSING_DESChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESSING_DESChanged()
    End Sub
    Partial Private Sub OnBRAND_LABELChanging(value As String)
    End Sub
    Partial Private Sub OnBRAND_LABELChanged()
    End Sub
    Partial Private Sub OnEXTRACT_OTHER2Changing(value As String)
    End Sub
    Partial Private Sub OnEXTRACT_OTHER2Changed()
    End Sub
    Partial Private Sub OnDESCRIPTION_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTION_OTHERChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnIS_ATCChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_ATCChanged()
    End Sub
    Partial Private Sub OnATC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnATC_NAMEChanged()
    End Sub
    Partial Private Sub OnINNChanging(value As String)
    End Sub
    Partial Private Sub OnINNChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnREMARK_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREMARK_DATEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnTELChanging(value As String)
    End Sub
    Partial Private Sub OnTELChanged()
    End Sub
    Partial Private Sub OnINN_THChanging(value As String)
    End Sub
    Partial Private Sub OnINN_THChanged()
    End Sub
    Partial Private Sub Onadd_digitChanging(value As String)
    End Sub
    Partial Private Sub Onadd_digitChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowanm", DbType:="NVarChar(255)")>  _
	Public Property iowanm() As String
		Get
			Return Me._iowanm
		End Get
		Set
			If (String.Equals(Me._iowanm, value) = false) Then
				Me.OniowanmChanging(value)
				Me.SendPropertyChanging
				Me._iowanm = value
				Me.SendPropertyChanged("iowanm")
				Me.OniowanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowacd", DbType:="NVarChar(255)")>  _
	Public Property iowacd() As String
		Get
			Return Me._iowacd
		End Get
		Set
			If (String.Equals(Me._iowacd, value) = false) Then
				Me.OniowacdChanging(value)
				Me.SendPropertyChanging
				Me._iowacd = value
				Me.SendPropertyChanged("iowacd")
				Me.OniowacdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_runno", DbType:="NVarChar(255)")>  _
	Public Property runno() As String
		Get
			Return Me._runno
		End Get
		Set
			If (String.Equals(Me._runno, value) = false) Then
				Me.OnrunnoChanging(value)
				Me.SendPropertyChanging
				Me._runno = value
				Me.SendPropertyChanged("runno")
				Me.OnrunnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salt", DbType:="NVarChar(255)")>  _
	Public Property salt() As String
		Get
			Return Me._salt
		End Get
		Set
			If (String.Equals(Me._salt, value) = false) Then
				Me.OnsaltChanging(value)
				Me.SendPropertyChanging
				Me._salt = value
				Me.SendPropertyChanged("salt")
				Me.OnsaltChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syn", DbType:="NVarChar(255)")>  _
	Public Property syn() As String
		Get
			Return Me._syn
		End Get
		Set
			If (String.Equals(Me._syn, value) = false) Then
				Me.OnsynChanging(value)
				Me.SendPropertyChanging
				Me._syn = value
				Me.SendPropertyChanged("syn")
				Me.OnsynChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aori", DbType:="NVarChar(255)")>  _
	Public Property aori() As String
		Get
			Return Me._aori
		End Get
		Set
			If (String.Equals(Me._aori, value) = false) Then
				Me.OnaoriChanging(value)
				Me.SendPropertyChanging
				Me._aori = value
				Me.SendPropertyChanged("aori")
				Me.OnaoriChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cas_number", DbType:="NVarChar(255)")>  _
	Public Property cas_number() As String
		Get
			Return Me._cas_number
		End Get
		Set
			If (String.Equals(Me._cas_number, value) = false) Then
				Me.Oncas_numberChanging(value)
				Me.SendPropertyChanging
				Me._cas_number = value
				Me.SendPropertyChanged("cas_number")
				Me.Oncas_numberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_look_type", DbType:="NVarChar(255)")>  _
	Public Property look_type() As String
		Get
			Return Me._look_type
		End Get
		Set
			If (String.Equals(Me._look_type, value) = false) Then
				Me.Onlook_typeChanging(value)
				Me.SendPropertyChanging
				Me._look_type = value
				Me.SendPropertyChanged("look_type")
				Me.Onlook_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cas_type", DbType:="NVarChar(255)")>  _
	Public Property cas_type() As String
		Get
			Return Me._cas_type
		End Get
		Set
			If (String.Equals(Me._cas_type, value) = false) Then
				Me.Oncas_typeChanging(value)
				Me.SendPropertyChanging
				Me._cas_type = value
				Me.SendPropertyChanged("cas_type")
				Me.Oncas_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowa", DbType:="NVarChar(255)")>  _
	Public Property iowa() As String
		Get
			Return Me._iowa
		End Get
		Set
			If (String.Equals(Me._iowa, value) = false) Then
				Me.OniowaChanging(value)
				Me.SendPropertyChanging
				Me._iowa = value
				Me.SendPropertyChanged("iowa")
				Me.OniowaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USE_FUNTION", DbType:="NVarChar(MAX)")>  _
	Public Property USE_FUNTION() As String
		Get
			Return Me._USE_FUNTION
		End Get
		Set
			If (String.Equals(Me._USE_FUNTION, value) = false) Then
				Me.OnUSE_FUNTIONChanging(value)
				Me.SendPropertyChanging
				Me._USE_FUNTION = value
				Me.SendPropertyChanged("USE_FUNTION")
				Me.OnUSE_FUNTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="Int")>  _
	Public Property RCVNO() As System.Nullable(Of Integer)
		Get
			Return Me._RCVNO
		End Get
		Set
			If (Me._RCVNO.Equals(value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNSID", DbType:="Int")>  _
	Public Property LCNSID() As System.Nullable(Of Integer)
		Get
			Return Me._LCNSID
		End Get
		Set
			If (Me._LCNSID.Equals(value) = false) Then
				Me.OnLCNSIDChanging(value)
				Me.SendPropertyChanging
				Me._LCNSID = value
				Me.SendPropertyChanged("LCNSID")
				Me.OnLCNSIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="Int")>  _
	Public Property PVNCD() As System.Nullable(Of Integer)
		Get
			Return Me._PVNCD
		End Get
		Set
			If (Me._PVNCD.Equals(value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCV_DATE", DbType:="DateTime")>  _
	Public Property RCV_DATE() As System.Nullable(Of Date)
		Get
			Return Me._RCV_DATE
		End Get
		Set
			If (Me._RCV_DATE.Equals(value) = false) Then
				Me.OnRCV_DATEChanging(value)
				Me.SendPropertyChanging
				Me._RCV_DATE = value
				Me.SendPropertyChanged("RCV_DATE")
				Me.OnRCV_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_DATE
		End Get
		Set
			If (Me._REQUEST_DATE.Equals(value) = false) Then
				Me.OnREQUEST_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_DATE = value
				Me.SendPropertyChanged("REQUEST_DATE")
				Me.OnREQUEST_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MIX_TYPE", DbType:="NVarChar(255)")>  _
	Public Property MIX_TYPE() As String
		Get
			Return Me._MIX_TYPE
		End Get
		Set
			If (String.Equals(Me._MIX_TYPE, value) = false) Then
				Me.OnMIX_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._MIX_TYPE = value
				Me.SendPropertyChanged("MIX_TYPE")
				Me.OnMIX_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MODERN_TRADITION", DbType:="NVarChar(255)")>  _
	Public Property MODERN_TRADITION() As String
		Get
			Return Me._MODERN_TRADITION
		End Get
		Set
			If (String.Equals(Me._MODERN_TRADITION, value) = false) Then
				Me.OnMODERN_TRADITIONChanging(value)
				Me.SendPropertyChanging
				Me._MODERN_TRADITION = value
				Me.SendPropertyChanged("MODERN_TRADITION")
				Me.OnMODERN_TRADITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGIS_STATUS", DbType:="NVarChar(255)")>  _
	Public Property REGIS_STATUS() As String
		Get
			Return Me._REGIS_STATUS
		End Get
		Set
			If (String.Equals(Me._REGIS_STATUS, value) = false) Then
				Me.OnREGIS_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._REGIS_STATUS = value
				Me.SendPropertyChanged("REGIS_STATUS")
				Me.OnREGIS_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USE_PROHIBIT", DbType:="NVarChar(MAX)")>  _
	Public Property USE_PROHIBIT() As String
		Get
			Return Me._USE_PROHIBIT
		End Get
		Set
			If (String.Equals(Me._USE_PROHIBIT, value) = false) Then
				Me.OnUSE_PROHIBITChanging(value)
				Me.SendPropertyChanging
				Me._USE_PROHIBIT = value
				Me.SendPropertyChanged("USE_PROHIBIT")
				Me.OnUSE_PROHIBITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENUS_IDA", DbType:="Int")>  _
	Public Property GENUS_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._GENUS_IDA
		End Get
		Set
			If (Me._GENUS_IDA.Equals(value) = false) Then
				Me.OnGENUS_IDAChanging(value)
				Me.SendPropertyChanging
				Me._GENUS_IDA = value
				Me.SendPropertyChanged("GENUS_IDA")
				Me.OnGENUS_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAIN_TYPE", DbType:="Int")>  _
	Public Property MAIN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._MAIN_TYPE
		End Get
		Set
			If (Me._MAIN_TYPE.Equals(value) = false) Then
				Me.OnMAIN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._MAIN_TYPE = value
				Me.SendPropertyChanged("MAIN_TYPE")
				Me.OnMAIN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_TYPE", DbType:="Int")>  _
	Public Property SUB_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._SUB_TYPE
		End Get
		Set
			If (Me._SUB_TYPE.Equals(value) = false) Then
				Me.OnSUB_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._SUB_TYPE = value
				Me.SendPropertyChanged("SUB_TYPE")
				Me.OnSUB_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEM_TYPE", DbType:="Int")>  _
	Public Property CHEM_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._CHEM_TYPE
		End Get
		Set
			If (Me._CHEM_TYPE.Equals(value) = false) Then
				Me.OnCHEM_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CHEM_TYPE = value
				Me.SendPropertyChanged("CHEM_TYPE")
				Me.OnCHEM_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIO_TYPE", DbType:="Int")>  _
	Public Property BIO_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._BIO_TYPE
		End Get
		Set
			If (Me._BIO_TYPE.Equals(value) = false) Then
				Me.OnBIO_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._BIO_TYPE = value
				Me.SendPropertyChanged("BIO_TYPE")
				Me.OnBIO_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENE_MOD", DbType:="Int")>  _
	Public Property GENE_MOD() As System.Nullable(Of Integer)
		Get
			Return Me._GENE_MOD
		End Get
		Set
			If (Me._GENE_MOD.Equals(value) = false) Then
				Me.OnGENE_MODChanging(value)
				Me.SendPropertyChanging
				Me._GENE_MOD = value
				Me.SendPropertyChanged("GENE_MOD")
				Me.OnGENE_MODChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXTRACT_TYPE", DbType:="Int")>  _
	Public Property EXTRACT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._EXTRACT_TYPE
		End Get
		Set
			If (Me._EXTRACT_TYPE.Equals(value) = false) Then
				Me.OnEXTRACT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._EXTRACT_TYPE = value
				Me.SendPropertyChanged("EXTRACT_TYPE")
				Me.OnEXTRACT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXTRACT_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property EXTRACT_OTHER() As String
		Get
			Return Me._EXTRACT_OTHER
		End Get
		Set
			If (String.Equals(Me._EXTRACT_OTHER, value) = false) Then
				Me.OnEXTRACT_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._EXTRACT_OTHER = value
				Me.SendPropertyChanged("EXTRACT_OTHER")
				Me.OnEXTRACT_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENUS", DbType:="NVarChar(MAX)")>  _
	Public Property GENUS() As String
		Get
			Return Me._GENUS
		End Get
		Set
			If (String.Equals(Me._GENUS, value) = false) Then
				Me.OnGENUSChanging(value)
				Me.SendPropertyChanging
				Me._GENUS = value
				Me.SendPropertyChanged("GENUS")
				Me.OnGENUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIES", DbType:="NVarChar(MAX)")>  _
	Public Property SPECIES() As String
		Get
			Return Me._SPECIES
		End Get
		Set
			If (String.Equals(Me._SPECIES, value) = false) Then
				Me.OnSPECIESChanging(value)
				Me.SendPropertyChanging
				Me._SPECIES = value
				Me.SendPropertyChanged("SPECIES")
				Me.OnSPECIESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STRAIN", DbType:="NVarChar(MAX)")>  _
	Public Property STRAIN() As String
		Get
			Return Me._STRAIN
		End Get
		Set
			If (String.Equals(Me._STRAIN, value) = false) Then
				Me.OnSTRAINChanging(value)
				Me.SendPropertyChanging
				Me._STRAIN = value
				Me.SendPropertyChanged("STRAIN")
				Me.OnSTRAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G_TYPE", DbType:="Int")>  _
	Public Property G_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._G_TYPE
		End Get
		Set
			If (Me._G_TYPE.Equals(value) = false) Then
				Me.OnG_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._G_TYPE = value
				Me.SendPropertyChanged("G_TYPE")
				Me.OnG_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowanm_eng", DbType:="NVarChar(MAX)")>  _
	Public Property iowanm_eng() As String
		Get
			Return Me._iowanm_eng
		End Get
		Set
			If (String.Equals(Me._iowanm_eng, value) = false) Then
				Me.Oniowanm_engChanging(value)
				Me.SendPropertyChanging
				Me._iowanm_eng = value
				Me.SendPropertyChanged("iowanm_eng")
				Me.Oniowanm_engChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCIENTIFIC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SCIENTIFIC_NAME() As String
		Get
			Return Me._SCIENTIFIC_NAME
		End Get
		Set
			If (String.Equals(Me._SCIENTIFIC_NAME, value) = false) Then
				Me.OnSCIENTIFIC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SCIENTIFIC_NAME = value
				Me.SendPropertyChanged("SCIENTIFIC_NAME")
				Me.OnSCIENTIFIC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATIONAL_CD", DbType:="Int")>  _
	Public Property NATIONAL_CD() As System.Nullable(Of Integer)
		Get
			Return Me._NATIONAL_CD
		End Get
		Set
			If (Me._NATIONAL_CD.Equals(value) = false) Then
				Me.OnNATIONAL_CDChanging(value)
				Me.SendPropertyChanging
				Me._NATIONAL_CD = value
				Me.SendPropertyChanged("NATIONAL_CD")
				Me.OnNATIONAL_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_PROCESSING", DbType:="Int")>  _
	Public Property IS_PROCESSING() As System.Nullable(Of Integer)
		Get
			Return Me._IS_PROCESSING
		End Get
		Set
			If (Me._IS_PROCESSING.Equals(value) = false) Then
				Me.OnIS_PROCESSINGChanging(value)
				Me.SendPropertyChanging
				Me._IS_PROCESSING = value
				Me.SendPropertyChanged("IS_PROCESSING")
				Me.OnIS_PROCESSINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESSING_DES", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESSING_DES() As String
		Get
			Return Me._PROCESSING_DES
		End Get
		Set
			If (String.Equals(Me._PROCESSING_DES, value) = false) Then
				Me.OnPROCESSING_DESChanging(value)
				Me.SendPropertyChanging
				Me._PROCESSING_DES = value
				Me.SendPropertyChanged("PROCESSING_DES")
				Me.OnPROCESSING_DESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BRAND_LABEL", DbType:="NVarChar(MAX)")>  _
	Public Property BRAND_LABEL() As String
		Get
			Return Me._BRAND_LABEL
		End Get
		Set
			If (String.Equals(Me._BRAND_LABEL, value) = false) Then
				Me.OnBRAND_LABELChanging(value)
				Me.SendPropertyChanging
				Me._BRAND_LABEL = value
				Me.SendPropertyChanged("BRAND_LABEL")
				Me.OnBRAND_LABELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXTRACT_OTHER2", DbType:="NVarChar(MAX)")>  _
	Public Property EXTRACT_OTHER2() As String
		Get
			Return Me._EXTRACT_OTHER2
		End Get
		Set
			If (String.Equals(Me._EXTRACT_OTHER2, value) = false) Then
				Me.OnEXTRACT_OTHER2Changing(value)
				Me.SendPropertyChanging
				Me._EXTRACT_OTHER2 = value
				Me.SendPropertyChanged("EXTRACT_OTHER2")
				Me.OnEXTRACT_OTHER2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION_OTHER() As String
		Get
			Return Me._DESCRIPTION_OTHER
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION_OTHER, value) = false) Then
				Me.OnDESCRIPTION_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION_OTHER = value
				Me.SendPropertyChanged("DESCRIPTION_OTHER")
				Me.OnDESCRIPTION_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_ATC", DbType:="Bit")>  _
	Public Property IS_ATC() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_ATC
		End Get
		Set
			If (Me._IS_ATC.Equals(value) = false) Then
				Me.OnIS_ATCChanging(value)
				Me.SendPropertyChanging
				Me._IS_ATC = value
				Me.SendPropertyChanged("IS_ATC")
				Me.OnIS_ATCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ATC_NAME() As String
		Get
			Return Me._ATC_NAME
		End Get
		Set
			If (String.Equals(Me._ATC_NAME, value) = false) Then
				Me.OnATC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ATC_NAME = value
				Me.SendPropertyChanged("ATC_NAME")
				Me.OnATC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INN", DbType:="NVarChar(MAX)")>  _
	Public Property INN() As String
		Get
			Return Me._INN
		End Get
		Set
			If (String.Equals(Me._INN, value) = false) Then
				Me.OnINNChanging(value)
				Me.SendPropertyChanging
				Me._INN = value
				Me.SendPropertyChanged("INN")
				Me.OnINNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK_DATE", DbType:="DateTime")>  _
	Public Property REMARK_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REMARK_DATE
		End Get
		Set
			If (Me._REMARK_DATE.Equals(value) = false) Then
				Me.OnREMARK_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REMARK_DATE = value
				Me.SendPropertyChanged("REMARK_DATE")
				Me.OnREMARK_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_AUTHORIZE", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_ID_AUTHORIZE")
				Me.OnCITIZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL", DbType:="NVarChar(MAX)")>  _
	Public Property TEL() As String
		Get
			Return Me._TEL
		End Get
		Set
			If (String.Equals(Me._TEL, value) = false) Then
				Me.OnTELChanging(value)
				Me.SendPropertyChanging
				Me._TEL = value
				Me.SendPropertyChanged("TEL")
				Me.OnTELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INN_TH", DbType:="NVarChar(MAX)")>  _
	Public Property INN_TH() As String
		Get
			Return Me._INN_TH
		End Get
		Set
			If (String.Equals(Me._INN_TH, value) = false) Then
				Me.OnINN_THChanging(value)
				Me.SendPropertyChanging
				Me._INN_TH = value
				Me.SendPropertyChanged("INN_TH")
				Me.OnINN_THChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_add_digit", DbType:="NVarChar(255)")>  _
	Public Property add_digit() As String
		Get
			Return Me._add_digit
		End Get
		Set
			If (String.Equals(Me._add_digit, value) = false) Then
				Me.Onadd_digitChanging(value)
				Me.SendPropertyChanging
				Me._add_digit = value
				Me.SendPropertyChanged("add_digit")
				Me.Onadd_digitChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CHEMICAL_REQUEST")>  _
Partial Public Class CHEMICAL_REQUEST1
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _iowanm As String
	
	Private _iowacd As String
	
	Private _runno As String
	
	Private _salt As String
	
	Private _syn As String
	
	Private _aori As String
	
	Private _cas_number As String
	
	Private _look_type As String
	
	Private _cas_type As String
	
	Private _iowa As String
	
	Private _USE_FUNTION As String
	
	Private _RCVNO As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _LCNSID As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _IDENTIFY As String
	
	Private _PVNCD As System.Nullable(Of Integer)
	
	Private _RCV_DATE As System.Nullable(Of Date)
	
	Private _REQUEST_DATE As System.Nullable(Of Date)
	
	Private _MIX_TYPE As String
	
	Private _MODERN_TRADITION As String
	
	Private _REGIS_STATUS As String
	
	Private _USE_PROHIBIT As String
	
	Private _GENUS_IDA As System.Nullable(Of Integer)
	
	Private _MAIN_TYPE As System.Nullable(Of Integer)
	
	Private _SUB_TYPE As System.Nullable(Of Integer)
	
	Private _CHEM_TYPE As System.Nullable(Of Integer)
	
	Private _BIO_TYPE As System.Nullable(Of Integer)
	
	Private _GENE_MOD As System.Nullable(Of Integer)
	
	Private _EXTRACT_TYPE As System.Nullable(Of Integer)
	
	Private _EXTRACT_OTHER As String
	
	Private _GENUS As String
	
	Private _SPECIES As String
	
	Private _STRAIN As String
	
	Private _G_TYPE As System.Nullable(Of Integer)
	
	Private _iowanm_eng As String
	
	Private _SCIENTIFIC_NAME As String
	
	Private _NATIONAL_CD As System.Nullable(Of Integer)
	
	Private _IS_PROCESSING As System.Nullable(Of Integer)
	
	Private _PROCESSING_DES As String
	
	Private _BRAND_LABEL As String
	
	Private _EXTRACT_OTHER2 As String
	
	Private _DESCRIPTION_OTHER As String
	
	Private _PROCESS_ID As String
	
	Private _IS_ATC As System.Nullable(Of Boolean)
	
	Private _ATC_NAME As String
	
	Private _INN As String
	
	Private _REMARK As String
	
	Private _REMARK_DATE As System.Nullable(Of Date)
	
	Private _CITIZEN_ID_AUTHORIZE As String
	
	Private _EMAIL As String
	
	Private _TEL As String
	
	Private _INN_TH As String
	
	Private _add_digit As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OniowanmChanging(value As String)
    End Sub
    Partial Private Sub OniowanmChanged()
    End Sub
    Partial Private Sub OniowacdChanging(value As String)
    End Sub
    Partial Private Sub OniowacdChanged()
    End Sub
    Partial Private Sub OnrunnoChanging(value As String)
    End Sub
    Partial Private Sub OnrunnoChanged()
    End Sub
    Partial Private Sub OnsaltChanging(value As String)
    End Sub
    Partial Private Sub OnsaltChanged()
    End Sub
    Partial Private Sub OnsynChanging(value As String)
    End Sub
    Partial Private Sub OnsynChanged()
    End Sub
    Partial Private Sub OnaoriChanging(value As String)
    End Sub
    Partial Private Sub OnaoriChanged()
    End Sub
    Partial Private Sub Oncas_numberChanging(value As String)
    End Sub
    Partial Private Sub Oncas_numberChanged()
    End Sub
    Partial Private Sub Onlook_typeChanging(value As String)
    End Sub
    Partial Private Sub Onlook_typeChanged()
    End Sub
    Partial Private Sub Oncas_typeChanging(value As String)
    End Sub
    Partial Private Sub Oncas_typeChanged()
    End Sub
    Partial Private Sub OniowaChanging(value As String)
    End Sub
    Partial Private Sub OniowaChanged()
    End Sub
    Partial Private Sub OnUSE_FUNTIONChanging(value As String)
    End Sub
    Partial Private Sub OnUSE_FUNTIONChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnLCNSIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCNSIDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    Partial Private Sub OnRCV_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCV_DATEChanged()
    End Sub
    Partial Private Sub OnREQUEST_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUEST_DATEChanged()
    End Sub
    Partial Private Sub OnMIX_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnMIX_TYPEChanged()
    End Sub
    Partial Private Sub OnMODERN_TRADITIONChanging(value As String)
    End Sub
    Partial Private Sub OnMODERN_TRADITIONChanged()
    End Sub
    Partial Private Sub OnREGIS_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnREGIS_STATUSChanged()
    End Sub
    Partial Private Sub OnUSE_PROHIBITChanging(value As String)
    End Sub
    Partial Private Sub OnUSE_PROHIBITChanged()
    End Sub
    Partial Private Sub OnGENUS_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENUS_IDAChanged()
    End Sub
    Partial Private Sub OnMAIN_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMAIN_TYPEChanged()
    End Sub
    Partial Private Sub OnSUB_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSUB_TYPEChanged()
    End Sub
    Partial Private Sub OnCHEM_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCHEM_TYPEChanged()
    End Sub
    Partial Private Sub OnBIO_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBIO_TYPEChanged()
    End Sub
    Partial Private Sub OnGENE_MODChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGENE_MODChanged()
    End Sub
    Partial Private Sub OnEXTRACT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEXTRACT_TYPEChanged()
    End Sub
    Partial Private Sub OnEXTRACT_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnEXTRACT_OTHERChanged()
    End Sub
    Partial Private Sub OnGENUSChanging(value As String)
    End Sub
    Partial Private Sub OnGENUSChanged()
    End Sub
    Partial Private Sub OnSPECIESChanging(value As String)
    End Sub
    Partial Private Sub OnSPECIESChanged()
    End Sub
    Partial Private Sub OnSTRAINChanging(value As String)
    End Sub
    Partial Private Sub OnSTRAINChanged()
    End Sub
    Partial Private Sub OnG_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnG_TYPEChanged()
    End Sub
    Partial Private Sub Oniowanm_engChanging(value As String)
    End Sub
    Partial Private Sub Oniowanm_engChanged()
    End Sub
    Partial Private Sub OnSCIENTIFIC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSCIENTIFIC_NAMEChanged()
    End Sub
    Partial Private Sub OnNATIONAL_CDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNATIONAL_CDChanged()
    End Sub
    Partial Private Sub OnIS_PROCESSINGChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIS_PROCESSINGChanged()
    End Sub
    Partial Private Sub OnPROCESSING_DESChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESSING_DESChanged()
    End Sub
    Partial Private Sub OnBRAND_LABELChanging(value As String)
    End Sub
    Partial Private Sub OnBRAND_LABELChanged()
    End Sub
    Partial Private Sub OnEXTRACT_OTHER2Changing(value As String)
    End Sub
    Partial Private Sub OnEXTRACT_OTHER2Changed()
    End Sub
    Partial Private Sub OnDESCRIPTION_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTION_OTHERChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnIS_ATCChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_ATCChanged()
    End Sub
    Partial Private Sub OnATC_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnATC_NAMEChanged()
    End Sub
    Partial Private Sub OnINNChanging(value As String)
    End Sub
    Partial Private Sub OnINNChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnREMARK_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREMARK_DATEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnEMAILChanging(value As String)
    End Sub
    Partial Private Sub OnEMAILChanged()
    End Sub
    Partial Private Sub OnTELChanging(value As String)
    End Sub
    Partial Private Sub OnTELChanged()
    End Sub
    Partial Private Sub OnINN_THChanging(value As String)
    End Sub
    Partial Private Sub OnINN_THChanged()
    End Sub
    Partial Private Sub Onadd_digitChanging(value As String)
    End Sub
    Partial Private Sub Onadd_digitChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowanm", DbType:="NVarChar(255)")>  _
	Public Property iowanm() As String
		Get
			Return Me._iowanm
		End Get
		Set
			If (String.Equals(Me._iowanm, value) = false) Then
				Me.OniowanmChanging(value)
				Me.SendPropertyChanging
				Me._iowanm = value
				Me.SendPropertyChanged("iowanm")
				Me.OniowanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowacd", DbType:="NVarChar(255)")>  _
	Public Property iowacd() As String
		Get
			Return Me._iowacd
		End Get
		Set
			If (String.Equals(Me._iowacd, value) = false) Then
				Me.OniowacdChanging(value)
				Me.SendPropertyChanging
				Me._iowacd = value
				Me.SendPropertyChanged("iowacd")
				Me.OniowacdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_runno", DbType:="NVarChar(255)")>  _
	Public Property runno() As String
		Get
			Return Me._runno
		End Get
		Set
			If (String.Equals(Me._runno, value) = false) Then
				Me.OnrunnoChanging(value)
				Me.SendPropertyChanging
				Me._runno = value
				Me.SendPropertyChanged("runno")
				Me.OnrunnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salt", DbType:="NVarChar(255)")>  _
	Public Property salt() As String
		Get
			Return Me._salt
		End Get
		Set
			If (String.Equals(Me._salt, value) = false) Then
				Me.OnsaltChanging(value)
				Me.SendPropertyChanging
				Me._salt = value
				Me.SendPropertyChanged("salt")
				Me.OnsaltChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syn", DbType:="NVarChar(255)")>  _
	Public Property syn() As String
		Get
			Return Me._syn
		End Get
		Set
			If (String.Equals(Me._syn, value) = false) Then
				Me.OnsynChanging(value)
				Me.SendPropertyChanging
				Me._syn = value
				Me.SendPropertyChanged("syn")
				Me.OnsynChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aori", DbType:="NVarChar(255)")>  _
	Public Property aori() As String
		Get
			Return Me._aori
		End Get
		Set
			If (String.Equals(Me._aori, value) = false) Then
				Me.OnaoriChanging(value)
				Me.SendPropertyChanging
				Me._aori = value
				Me.SendPropertyChanged("aori")
				Me.OnaoriChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cas_number", DbType:="NVarChar(255)")>  _
	Public Property cas_number() As String
		Get
			Return Me._cas_number
		End Get
		Set
			If (String.Equals(Me._cas_number, value) = false) Then
				Me.Oncas_numberChanging(value)
				Me.SendPropertyChanging
				Me._cas_number = value
				Me.SendPropertyChanged("cas_number")
				Me.Oncas_numberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_look_type", DbType:="NVarChar(255)")>  _
	Public Property look_type() As String
		Get
			Return Me._look_type
		End Get
		Set
			If (String.Equals(Me._look_type, value) = false) Then
				Me.Onlook_typeChanging(value)
				Me.SendPropertyChanging
				Me._look_type = value
				Me.SendPropertyChanged("look_type")
				Me.Onlook_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cas_type", DbType:="NVarChar(255)")>  _
	Public Property cas_type() As String
		Get
			Return Me._cas_type
		End Get
		Set
			If (String.Equals(Me._cas_type, value) = false) Then
				Me.Oncas_typeChanging(value)
				Me.SendPropertyChanging
				Me._cas_type = value
				Me.SendPropertyChanged("cas_type")
				Me.Oncas_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowa", DbType:="NVarChar(255)")>  _
	Public Property iowa() As String
		Get
			Return Me._iowa
		End Get
		Set
			If (String.Equals(Me._iowa, value) = false) Then
				Me.OniowaChanging(value)
				Me.SendPropertyChanging
				Me._iowa = value
				Me.SendPropertyChanged("iowa")
				Me.OniowaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USE_FUNTION", DbType:="NVarChar(MAX)")>  _
	Public Property USE_FUNTION() As String
		Get
			Return Me._USE_FUNTION
		End Get
		Set
			If (String.Equals(Me._USE_FUNTION, value) = false) Then
				Me.OnUSE_FUNTIONChanging(value)
				Me.SendPropertyChanging
				Me._USE_FUNTION = value
				Me.SendPropertyChanged("USE_FUNTION")
				Me.OnUSE_FUNTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="Int")>  _
	Public Property RCVNO() As System.Nullable(Of Integer)
		Get
			Return Me._RCVNO
		End Get
		Set
			If (Me._RCVNO.Equals(value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNSID", DbType:="Int")>  _
	Public Property LCNSID() As System.Nullable(Of Integer)
		Get
			Return Me._LCNSID
		End Get
		Set
			If (Me._LCNSID.Equals(value) = false) Then
				Me.OnLCNSIDChanging(value)
				Me.SendPropertyChanging
				Me._LCNSID = value
				Me.SendPropertyChanged("LCNSID")
				Me.OnLCNSIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="Int")>  _
	Public Property PVNCD() As System.Nullable(Of Integer)
		Get
			Return Me._PVNCD
		End Get
		Set
			If (Me._PVNCD.Equals(value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCV_DATE", DbType:="DateTime")>  _
	Public Property RCV_DATE() As System.Nullable(Of Date)
		Get
			Return Me._RCV_DATE
		End Get
		Set
			If (Me._RCV_DATE.Equals(value) = false) Then
				Me.OnRCV_DATEChanging(value)
				Me.SendPropertyChanging
				Me._RCV_DATE = value
				Me.SendPropertyChanged("RCV_DATE")
				Me.OnRCV_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_DATE
		End Get
		Set
			If (Me._REQUEST_DATE.Equals(value) = false) Then
				Me.OnREQUEST_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_DATE = value
				Me.SendPropertyChanged("REQUEST_DATE")
				Me.OnREQUEST_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MIX_TYPE", DbType:="NVarChar(255)")>  _
	Public Property MIX_TYPE() As String
		Get
			Return Me._MIX_TYPE
		End Get
		Set
			If (String.Equals(Me._MIX_TYPE, value) = false) Then
				Me.OnMIX_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._MIX_TYPE = value
				Me.SendPropertyChanged("MIX_TYPE")
				Me.OnMIX_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MODERN_TRADITION", DbType:="NVarChar(255)")>  _
	Public Property MODERN_TRADITION() As String
		Get
			Return Me._MODERN_TRADITION
		End Get
		Set
			If (String.Equals(Me._MODERN_TRADITION, value) = false) Then
				Me.OnMODERN_TRADITIONChanging(value)
				Me.SendPropertyChanging
				Me._MODERN_TRADITION = value
				Me.SendPropertyChanged("MODERN_TRADITION")
				Me.OnMODERN_TRADITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGIS_STATUS", DbType:="NVarChar(255)")>  _
	Public Property REGIS_STATUS() As String
		Get
			Return Me._REGIS_STATUS
		End Get
		Set
			If (String.Equals(Me._REGIS_STATUS, value) = false) Then
				Me.OnREGIS_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._REGIS_STATUS = value
				Me.SendPropertyChanged("REGIS_STATUS")
				Me.OnREGIS_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USE_PROHIBIT", DbType:="NVarChar(MAX)")>  _
	Public Property USE_PROHIBIT() As String
		Get
			Return Me._USE_PROHIBIT
		End Get
		Set
			If (String.Equals(Me._USE_PROHIBIT, value) = false) Then
				Me.OnUSE_PROHIBITChanging(value)
				Me.SendPropertyChanging
				Me._USE_PROHIBIT = value
				Me.SendPropertyChanged("USE_PROHIBIT")
				Me.OnUSE_PROHIBITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENUS_IDA", DbType:="Int")>  _
	Public Property GENUS_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._GENUS_IDA
		End Get
		Set
			If (Me._GENUS_IDA.Equals(value) = false) Then
				Me.OnGENUS_IDAChanging(value)
				Me.SendPropertyChanging
				Me._GENUS_IDA = value
				Me.SendPropertyChanged("GENUS_IDA")
				Me.OnGENUS_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MAIN_TYPE", DbType:="Int")>  _
	Public Property MAIN_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._MAIN_TYPE
		End Get
		Set
			If (Me._MAIN_TYPE.Equals(value) = false) Then
				Me.OnMAIN_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._MAIN_TYPE = value
				Me.SendPropertyChanged("MAIN_TYPE")
				Me.OnMAIN_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_TYPE", DbType:="Int")>  _
	Public Property SUB_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._SUB_TYPE
		End Get
		Set
			If (Me._SUB_TYPE.Equals(value) = false) Then
				Me.OnSUB_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._SUB_TYPE = value
				Me.SendPropertyChanged("SUB_TYPE")
				Me.OnSUB_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHEM_TYPE", DbType:="Int")>  _
	Public Property CHEM_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._CHEM_TYPE
		End Get
		Set
			If (Me._CHEM_TYPE.Equals(value) = false) Then
				Me.OnCHEM_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CHEM_TYPE = value
				Me.SendPropertyChanged("CHEM_TYPE")
				Me.OnCHEM_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BIO_TYPE", DbType:="Int")>  _
	Public Property BIO_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._BIO_TYPE
		End Get
		Set
			If (Me._BIO_TYPE.Equals(value) = false) Then
				Me.OnBIO_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._BIO_TYPE = value
				Me.SendPropertyChanged("BIO_TYPE")
				Me.OnBIO_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENE_MOD", DbType:="Int")>  _
	Public Property GENE_MOD() As System.Nullable(Of Integer)
		Get
			Return Me._GENE_MOD
		End Get
		Set
			If (Me._GENE_MOD.Equals(value) = false) Then
				Me.OnGENE_MODChanging(value)
				Me.SendPropertyChanging
				Me._GENE_MOD = value
				Me.SendPropertyChanged("GENE_MOD")
				Me.OnGENE_MODChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXTRACT_TYPE", DbType:="Int")>  _
	Public Property EXTRACT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._EXTRACT_TYPE
		End Get
		Set
			If (Me._EXTRACT_TYPE.Equals(value) = false) Then
				Me.OnEXTRACT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._EXTRACT_TYPE = value
				Me.SendPropertyChanged("EXTRACT_TYPE")
				Me.OnEXTRACT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXTRACT_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property EXTRACT_OTHER() As String
		Get
			Return Me._EXTRACT_OTHER
		End Get
		Set
			If (String.Equals(Me._EXTRACT_OTHER, value) = false) Then
				Me.OnEXTRACT_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._EXTRACT_OTHER = value
				Me.SendPropertyChanged("EXTRACT_OTHER")
				Me.OnEXTRACT_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENUS", DbType:="NVarChar(MAX)")>  _
	Public Property GENUS() As String
		Get
			Return Me._GENUS
		End Get
		Set
			If (String.Equals(Me._GENUS, value) = false) Then
				Me.OnGENUSChanging(value)
				Me.SendPropertyChanging
				Me._GENUS = value
				Me.SendPropertyChanged("GENUS")
				Me.OnGENUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPECIES", DbType:="NVarChar(MAX)")>  _
	Public Property SPECIES() As String
		Get
			Return Me._SPECIES
		End Get
		Set
			If (String.Equals(Me._SPECIES, value) = false) Then
				Me.OnSPECIESChanging(value)
				Me.SendPropertyChanging
				Me._SPECIES = value
				Me.SendPropertyChanged("SPECIES")
				Me.OnSPECIESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STRAIN", DbType:="NVarChar(MAX)")>  _
	Public Property STRAIN() As String
		Get
			Return Me._STRAIN
		End Get
		Set
			If (String.Equals(Me._STRAIN, value) = false) Then
				Me.OnSTRAINChanging(value)
				Me.SendPropertyChanging
				Me._STRAIN = value
				Me.SendPropertyChanged("STRAIN")
				Me.OnSTRAINChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G_TYPE", DbType:="Int")>  _
	Public Property G_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._G_TYPE
		End Get
		Set
			If (Me._G_TYPE.Equals(value) = false) Then
				Me.OnG_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._G_TYPE = value
				Me.SendPropertyChanged("G_TYPE")
				Me.OnG_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowanm_eng", DbType:="NVarChar(MAX)")>  _
	Public Property iowanm_eng() As String
		Get
			Return Me._iowanm_eng
		End Get
		Set
			If (String.Equals(Me._iowanm_eng, value) = false) Then
				Me.Oniowanm_engChanging(value)
				Me.SendPropertyChanging
				Me._iowanm_eng = value
				Me.SendPropertyChanged("iowanm_eng")
				Me.Oniowanm_engChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SCIENTIFIC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SCIENTIFIC_NAME() As String
		Get
			Return Me._SCIENTIFIC_NAME
		End Get
		Set
			If (String.Equals(Me._SCIENTIFIC_NAME, value) = false) Then
				Me.OnSCIENTIFIC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SCIENTIFIC_NAME = value
				Me.SendPropertyChanged("SCIENTIFIC_NAME")
				Me.OnSCIENTIFIC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NATIONAL_CD", DbType:="Int")>  _
	Public Property NATIONAL_CD() As System.Nullable(Of Integer)
		Get
			Return Me._NATIONAL_CD
		End Get
		Set
			If (Me._NATIONAL_CD.Equals(value) = false) Then
				Me.OnNATIONAL_CDChanging(value)
				Me.SendPropertyChanging
				Me._NATIONAL_CD = value
				Me.SendPropertyChanged("NATIONAL_CD")
				Me.OnNATIONAL_CDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_PROCESSING", DbType:="Int")>  _
	Public Property IS_PROCESSING() As System.Nullable(Of Integer)
		Get
			Return Me._IS_PROCESSING
		End Get
		Set
			If (Me._IS_PROCESSING.Equals(value) = false) Then
				Me.OnIS_PROCESSINGChanging(value)
				Me.SendPropertyChanging
				Me._IS_PROCESSING = value
				Me.SendPropertyChanged("IS_PROCESSING")
				Me.OnIS_PROCESSINGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESSING_DES", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESSING_DES() As String
		Get
			Return Me._PROCESSING_DES
		End Get
		Set
			If (String.Equals(Me._PROCESSING_DES, value) = false) Then
				Me.OnPROCESSING_DESChanging(value)
				Me.SendPropertyChanging
				Me._PROCESSING_DES = value
				Me.SendPropertyChanged("PROCESSING_DES")
				Me.OnPROCESSING_DESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BRAND_LABEL", DbType:="NVarChar(MAX)")>  _
	Public Property BRAND_LABEL() As String
		Get
			Return Me._BRAND_LABEL
		End Get
		Set
			If (String.Equals(Me._BRAND_LABEL, value) = false) Then
				Me.OnBRAND_LABELChanging(value)
				Me.SendPropertyChanging
				Me._BRAND_LABEL = value
				Me.SendPropertyChanged("BRAND_LABEL")
				Me.OnBRAND_LABELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXTRACT_OTHER2", DbType:="NVarChar(MAX)")>  _
	Public Property EXTRACT_OTHER2() As String
		Get
			Return Me._EXTRACT_OTHER2
		End Get
		Set
			If (String.Equals(Me._EXTRACT_OTHER2, value) = false) Then
				Me.OnEXTRACT_OTHER2Changing(value)
				Me.SendPropertyChanging
				Me._EXTRACT_OTHER2 = value
				Me.SendPropertyChanged("EXTRACT_OTHER2")
				Me.OnEXTRACT_OTHER2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION_OTHER() As String
		Get
			Return Me._DESCRIPTION_OTHER
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION_OTHER, value) = false) Then
				Me.OnDESCRIPTION_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION_OTHER = value
				Me.SendPropertyChanged("DESCRIPTION_OTHER")
				Me.OnDESCRIPTION_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_ATC", DbType:="Bit")>  _
	Public Property IS_ATC() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_ATC
		End Get
		Set
			If (Me._IS_ATC.Equals(value) = false) Then
				Me.OnIS_ATCChanging(value)
				Me.SendPropertyChanging
				Me._IS_ATC = value
				Me.SendPropertyChanged("IS_ATC")
				Me.OnIS_ATCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATC_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property ATC_NAME() As String
		Get
			Return Me._ATC_NAME
		End Get
		Set
			If (String.Equals(Me._ATC_NAME, value) = false) Then
				Me.OnATC_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ATC_NAME = value
				Me.SendPropertyChanged("ATC_NAME")
				Me.OnATC_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INN", DbType:="NVarChar(MAX)")>  _
	Public Property INN() As String
		Get
			Return Me._INN
		End Get
		Set
			If (String.Equals(Me._INN, value) = false) Then
				Me.OnINNChanging(value)
				Me.SendPropertyChanging
				Me._INN = value
				Me.SendPropertyChanged("INN")
				Me.OnINNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK_DATE", DbType:="DateTime")>  _
	Public Property REMARK_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REMARK_DATE
		End Get
		Set
			If (Me._REMARK_DATE.Equals(value) = false) Then
				Me.OnREMARK_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REMARK_DATE = value
				Me.SendPropertyChanged("REMARK_DATE")
				Me.OnREMARK_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_AUTHORIZE", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_ID_AUTHORIZE")
				Me.OnCITIZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMAIL", DbType:="NVarChar(MAX)")>  _
	Public Property EMAIL() As String
		Get
			Return Me._EMAIL
		End Get
		Set
			If (String.Equals(Me._EMAIL, value) = false) Then
				Me.OnEMAILChanging(value)
				Me.SendPropertyChanging
				Me._EMAIL = value
				Me.SendPropertyChanged("EMAIL")
				Me.OnEMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL", DbType:="NVarChar(MAX)")>  _
	Public Property TEL() As String
		Get
			Return Me._TEL
		End Get
		Set
			If (String.Equals(Me._TEL, value) = false) Then
				Me.OnTELChanging(value)
				Me.SendPropertyChanging
				Me._TEL = value
				Me.SendPropertyChanged("TEL")
				Me.OnTELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INN_TH", DbType:="NVarChar(MAX)")>  _
	Public Property INN_TH() As String
		Get
			Return Me._INN_TH
		End Get
		Set
			If (String.Equals(Me._INN_TH, value) = false) Then
				Me.OnINN_THChanging(value)
				Me.SendPropertyChanging
				Me._INN_TH = value
				Me.SendPropertyChanged("INN_TH")
				Me.OnINN_THChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_add_digit", DbType:="NVarChar(255)")>  _
	Public Property add_digit() As String
		Get
			Return Me._add_digit
		End Get
		Set
			If (String.Equals(Me._add_digit, value) = false) Then
				Me.Onadd_digitChanging(value)
				Me.SendPropertyChanging
				Me._add_digit = value
				Me.SendPropertyChanged("add_digit")
				Me.Onadd_digitChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_CHEMICAL")>  _
Partial Public Class MAS_CHEMICAL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _iowanm As String
	
	Private _iowacd As String
	
	Private _runno As String
	
	Private _salt As String
	
	Private _syn As String
	
	Private _aori As String
	
	Private _cas_number As String
	
	Private _look_type As String
	
	Private _cas_type As String
	
	Private _iowa As String
	
	Private _USE_PROHIBIT As String
	
	Private _MIX_TYPE As String
	
	Private _MODERN_TRADITION As String
	
	Private _REGIS_STATUS As String
	
	Private _PRIVUS_SUBSTANCE_ID As String
	
	Private _use_in_15dgt As System.Nullable(Of Integer)
	
	Private _INN As String
	
	Private _ATC As String
	
	Private _MANUFACTURE_STATUS_ID As System.Nullable(Of Integer)
	
	Private _Version_update As String
	
	Private _IS_ACTIVE As System.Nullable(Of Integer)
	
	Private _IMPORT_REGIST As String
	
	Private _INN_TH As String
	
	Private _add_digit As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OniowanmChanging(value As String)
    End Sub
    Partial Private Sub OniowanmChanged()
    End Sub
    Partial Private Sub OniowacdChanging(value As String)
    End Sub
    Partial Private Sub OniowacdChanged()
    End Sub
    Partial Private Sub OnrunnoChanging(value As String)
    End Sub
    Partial Private Sub OnrunnoChanged()
    End Sub
    Partial Private Sub OnsaltChanging(value As String)
    End Sub
    Partial Private Sub OnsaltChanged()
    End Sub
    Partial Private Sub OnsynChanging(value As String)
    End Sub
    Partial Private Sub OnsynChanged()
    End Sub
    Partial Private Sub OnaoriChanging(value As String)
    End Sub
    Partial Private Sub OnaoriChanged()
    End Sub
    Partial Private Sub Oncas_numberChanging(value As String)
    End Sub
    Partial Private Sub Oncas_numberChanged()
    End Sub
    Partial Private Sub Onlook_typeChanging(value As String)
    End Sub
    Partial Private Sub Onlook_typeChanged()
    End Sub
    Partial Private Sub Oncas_typeChanging(value As String)
    End Sub
    Partial Private Sub Oncas_typeChanged()
    End Sub
    Partial Private Sub OniowaChanging(value As String)
    End Sub
    Partial Private Sub OniowaChanged()
    End Sub
    Partial Private Sub OnUSE_PROHIBITChanging(value As String)
    End Sub
    Partial Private Sub OnUSE_PROHIBITChanged()
    End Sub
    Partial Private Sub OnMIX_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnMIX_TYPEChanged()
    End Sub
    Partial Private Sub OnMODERN_TRADITIONChanging(value As String)
    End Sub
    Partial Private Sub OnMODERN_TRADITIONChanged()
    End Sub
    Partial Private Sub OnREGIS_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnREGIS_STATUSChanged()
    End Sub
    Partial Private Sub OnPRIVUS_SUBSTANCE_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPRIVUS_SUBSTANCE_IDChanged()
    End Sub
    Partial Private Sub Onuse_in_15dgtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onuse_in_15dgtChanged()
    End Sub
    Partial Private Sub OnINNChanging(value As String)
    End Sub
    Partial Private Sub OnINNChanged()
    End Sub
    Partial Private Sub OnATCChanging(value As String)
    End Sub
    Partial Private Sub OnATCChanged()
    End Sub
    Partial Private Sub OnMANUFACTURE_STATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMANUFACTURE_STATUS_IDChanged()
    End Sub
    Partial Private Sub OnVersion_updateChanging(value As String)
    End Sub
    Partial Private Sub OnVersion_updateChanged()
    End Sub
    Partial Private Sub OnIS_ACTIVEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIS_ACTIVEChanged()
    End Sub
    Partial Private Sub OnIMPORT_REGISTChanging(value As String)
    End Sub
    Partial Private Sub OnIMPORT_REGISTChanged()
    End Sub
    Partial Private Sub OnINN_THChanging(value As String)
    End Sub
    Partial Private Sub OnINN_THChanged()
    End Sub
    Partial Private Sub Onadd_digitChanging(value As String)
    End Sub
    Partial Private Sub Onadd_digitChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowanm", DbType:="NVarChar(255)")>  _
	Public Property iowanm() As String
		Get
			Return Me._iowanm
		End Get
		Set
			If (String.Equals(Me._iowanm, value) = false) Then
				Me.OniowanmChanging(value)
				Me.SendPropertyChanging
				Me._iowanm = value
				Me.SendPropertyChanged("iowanm")
				Me.OniowanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowacd", DbType:="NVarChar(255)")>  _
	Public Property iowacd() As String
		Get
			Return Me._iowacd
		End Get
		Set
			If (String.Equals(Me._iowacd, value) = false) Then
				Me.OniowacdChanging(value)
				Me.SendPropertyChanging
				Me._iowacd = value
				Me.SendPropertyChanged("iowacd")
				Me.OniowacdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_runno", DbType:="NVarChar(255)")>  _
	Public Property runno() As String
		Get
			Return Me._runno
		End Get
		Set
			If (String.Equals(Me._runno, value) = false) Then
				Me.OnrunnoChanging(value)
				Me.SendPropertyChanging
				Me._runno = value
				Me.SendPropertyChanged("runno")
				Me.OnrunnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salt", DbType:="NVarChar(255)")>  _
	Public Property salt() As String
		Get
			Return Me._salt
		End Get
		Set
			If (String.Equals(Me._salt, value) = false) Then
				Me.OnsaltChanging(value)
				Me.SendPropertyChanging
				Me._salt = value
				Me.SendPropertyChanged("salt")
				Me.OnsaltChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syn", DbType:="NVarChar(255)")>  _
	Public Property syn() As String
		Get
			Return Me._syn
		End Get
		Set
			If (String.Equals(Me._syn, value) = false) Then
				Me.OnsynChanging(value)
				Me.SendPropertyChanging
				Me._syn = value
				Me.SendPropertyChanged("syn")
				Me.OnsynChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aori", DbType:="NVarChar(255)")>  _
	Public Property aori() As String
		Get
			Return Me._aori
		End Get
		Set
			If (String.Equals(Me._aori, value) = false) Then
				Me.OnaoriChanging(value)
				Me.SendPropertyChanging
				Me._aori = value
				Me.SendPropertyChanged("aori")
				Me.OnaoriChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cas_number", DbType:="NVarChar(255)")>  _
	Public Property cas_number() As String
		Get
			Return Me._cas_number
		End Get
		Set
			If (String.Equals(Me._cas_number, value) = false) Then
				Me.Oncas_numberChanging(value)
				Me.SendPropertyChanging
				Me._cas_number = value
				Me.SendPropertyChanged("cas_number")
				Me.Oncas_numberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_look_type", DbType:="NVarChar(255)")>  _
	Public Property look_type() As String
		Get
			Return Me._look_type
		End Get
		Set
			If (String.Equals(Me._look_type, value) = false) Then
				Me.Onlook_typeChanging(value)
				Me.SendPropertyChanging
				Me._look_type = value
				Me.SendPropertyChanged("look_type")
				Me.Onlook_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cas_type", DbType:="NVarChar(255)")>  _
	Public Property cas_type() As String
		Get
			Return Me._cas_type
		End Get
		Set
			If (String.Equals(Me._cas_type, value) = false) Then
				Me.Oncas_typeChanging(value)
				Me.SendPropertyChanging
				Me._cas_type = value
				Me.SendPropertyChanged("cas_type")
				Me.Oncas_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowa", DbType:="NVarChar(255)")>  _
	Public Property iowa() As String
		Get
			Return Me._iowa
		End Get
		Set
			If (String.Equals(Me._iowa, value) = false) Then
				Me.OniowaChanging(value)
				Me.SendPropertyChanging
				Me._iowa = value
				Me.SendPropertyChanged("iowa")
				Me.OniowaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USE_PROHIBIT", DbType:="NVarChar(MAX)")>  _
	Public Property USE_PROHIBIT() As String
		Get
			Return Me._USE_PROHIBIT
		End Get
		Set
			If (String.Equals(Me._USE_PROHIBIT, value) = false) Then
				Me.OnUSE_PROHIBITChanging(value)
				Me.SendPropertyChanging
				Me._USE_PROHIBIT = value
				Me.SendPropertyChanged("USE_PROHIBIT")
				Me.OnUSE_PROHIBITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MIX_TYPE", DbType:="NVarChar(255)")>  _
	Public Property MIX_TYPE() As String
		Get
			Return Me._MIX_TYPE
		End Get
		Set
			If (String.Equals(Me._MIX_TYPE, value) = false) Then
				Me.OnMIX_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._MIX_TYPE = value
				Me.SendPropertyChanged("MIX_TYPE")
				Me.OnMIX_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MODERN_TRADITION", DbType:="NVarChar(255)")>  _
	Public Property MODERN_TRADITION() As String
		Get
			Return Me._MODERN_TRADITION
		End Get
		Set
			If (String.Equals(Me._MODERN_TRADITION, value) = false) Then
				Me.OnMODERN_TRADITIONChanging(value)
				Me.SendPropertyChanging
				Me._MODERN_TRADITION = value
				Me.SendPropertyChanged("MODERN_TRADITION")
				Me.OnMODERN_TRADITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGIS_STATUS", DbType:="NVarChar(255)")>  _
	Public Property REGIS_STATUS() As String
		Get
			Return Me._REGIS_STATUS
		End Get
		Set
			If (String.Equals(Me._REGIS_STATUS, value) = false) Then
				Me.OnREGIS_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._REGIS_STATUS = value
				Me.SendPropertyChanged("REGIS_STATUS")
				Me.OnREGIS_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRIVUS_SUBSTANCE_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PRIVUS_SUBSTANCE_ID() As String
		Get
			Return Me._PRIVUS_SUBSTANCE_ID
		End Get
		Set
			If (String.Equals(Me._PRIVUS_SUBSTANCE_ID, value) = false) Then
				Me.OnPRIVUS_SUBSTANCE_IDChanging(value)
				Me.SendPropertyChanging
				Me._PRIVUS_SUBSTANCE_ID = value
				Me.SendPropertyChanged("PRIVUS_SUBSTANCE_ID")
				Me.OnPRIVUS_SUBSTANCE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_use_in_15dgt", DbType:="Int")>  _
	Public Property use_in_15dgt() As System.Nullable(Of Integer)
		Get
			Return Me._use_in_15dgt
		End Get
		Set
			If (Me._use_in_15dgt.Equals(value) = false) Then
				Me.Onuse_in_15dgtChanging(value)
				Me.SendPropertyChanging
				Me._use_in_15dgt = value
				Me.SendPropertyChanged("use_in_15dgt")
				Me.Onuse_in_15dgtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INN", DbType:="NVarChar(MAX)")>  _
	Public Property INN() As String
		Get
			Return Me._INN
		End Get
		Set
			If (String.Equals(Me._INN, value) = false) Then
				Me.OnINNChanging(value)
				Me.SendPropertyChanging
				Me._INN = value
				Me.SendPropertyChanged("INN")
				Me.OnINNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATC", DbType:="NVarChar(MAX)")>  _
	Public Property ATC() As String
		Get
			Return Me._ATC
		End Get
		Set
			If (String.Equals(Me._ATC, value) = false) Then
				Me.OnATCChanging(value)
				Me.SendPropertyChanging
				Me._ATC = value
				Me.SendPropertyChanged("ATC")
				Me.OnATCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MANUFACTURE_STATUS_ID", DbType:="Int")>  _
	Public Property MANUFACTURE_STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._MANUFACTURE_STATUS_ID
		End Get
		Set
			If (Me._MANUFACTURE_STATUS_ID.Equals(value) = false) Then
				Me.OnMANUFACTURE_STATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._MANUFACTURE_STATUS_ID = value
				Me.SendPropertyChanged("MANUFACTURE_STATUS_ID")
				Me.OnMANUFACTURE_STATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Version_update", DbType:="NVarChar(MAX)")>  _
	Public Property Version_update() As String
		Get
			Return Me._Version_update
		End Get
		Set
			If (String.Equals(Me._Version_update, value) = false) Then
				Me.OnVersion_updateChanging(value)
				Me.SendPropertyChanging
				Me._Version_update = value
				Me.SendPropertyChanged("Version_update")
				Me.OnVersion_updateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_ACTIVE", DbType:="Int")>  _
	Public Property IS_ACTIVE() As System.Nullable(Of Integer)
		Get
			Return Me._IS_ACTIVE
		End Get
		Set
			If (Me._IS_ACTIVE.Equals(value) = false) Then
				Me.OnIS_ACTIVEChanging(value)
				Me.SendPropertyChanging
				Me._IS_ACTIVE = value
				Me.SendPropertyChanged("IS_ACTIVE")
				Me.OnIS_ACTIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IMPORT_REGIST", DbType:="NVarChar(MAX)")>  _
	Public Property IMPORT_REGIST() As String
		Get
			Return Me._IMPORT_REGIST
		End Get
		Set
			If (String.Equals(Me._IMPORT_REGIST, value) = false) Then
				Me.OnIMPORT_REGISTChanging(value)
				Me.SendPropertyChanging
				Me._IMPORT_REGIST = value
				Me.SendPropertyChanged("IMPORT_REGIST")
				Me.OnIMPORT_REGISTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INN_TH", DbType:="NVarChar(MAX)")>  _
	Public Property INN_TH() As String
		Get
			Return Me._INN_TH
		End Get
		Set
			If (String.Equals(Me._INN_TH, value) = false) Then
				Me.OnINN_THChanging(value)
				Me.SendPropertyChanging
				Me._INN_TH = value
				Me.SendPropertyChanged("INN_TH")
				Me.OnINN_THChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_add_digit", DbType:="NVarChar(255)")>  _
	Public Property add_digit() As String
		Get
			Return Me._add_digit
		End Get
		Set
			If (String.Equals(Me._add_digit, value) = false) Then
				Me.Onadd_digitChanging(value)
				Me.SendPropertyChanging
				Me._add_digit = value
				Me.SendPropertyChanged("add_digit")
				Me.Onadd_digitChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_STATUS_DS")>  _
Partial Public Class LOG_STATUS_D
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _IDENTIFY As String
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _STATUS_DATE As System.Nullable(Of Date)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTATUS_DATEChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_DATE", DbType:="Date")>  _
	Public Property STATUS_DATE() As System.Nullable(Of Date)
		Get
			Return Me._STATUS_DATE
		End Get
		Set
			If (Me._STATUS_DATE.Equals(value) = false) Then
				Me.OnSTATUS_DATEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_DATE = value
				Me.SendPropertyChanged("STATUS_DATE")
				Me.OnSTATUS_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.driowa")>  _
Partial Public Class driowa
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _iowacd As String
	
	Private _iowanm As String
	
	Private _iowa As String
	
	Private _run As String
	
	Private _salt As String
	
	Private _syn As String
	
	Private _IS_CANCEL As String
	
	Private _add_digit As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OniowacdChanging(value As String)
    End Sub
    Partial Private Sub OniowacdChanged()
    End Sub
    Partial Private Sub OniowanmChanging(value As String)
    End Sub
    Partial Private Sub OniowanmChanged()
    End Sub
    Partial Private Sub OniowaChanging(value As String)
    End Sub
    Partial Private Sub OniowaChanged()
    End Sub
    Partial Private Sub OnrunChanging(value As String)
    End Sub
    Partial Private Sub OnrunChanged()
    End Sub
    Partial Private Sub OnsaltChanging(value As String)
    End Sub
    Partial Private Sub OnsaltChanged()
    End Sub
    Partial Private Sub OnsynChanging(value As String)
    End Sub
    Partial Private Sub OnsynChanged()
    End Sub
    Partial Private Sub OnIS_CANCELChanging(value As String)
    End Sub
    Partial Private Sub OnIS_CANCELChanged()
    End Sub
    Partial Private Sub Onadd_digitChanging(value As String)
    End Sub
    Partial Private Sub Onadd_digitChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowacd", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property iowacd() As String
		Get
			Return Me._iowacd
		End Get
		Set
			If (String.Equals(Me._iowacd, value) = false) Then
				Me.OniowacdChanging(value)
				Me.SendPropertyChanging
				Me._iowacd = value
				Me.SendPropertyChanged("iowacd")
				Me.OniowacdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowanm", DbType:="VarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property iowanm() As String
		Get
			Return Me._iowanm
		End Get
		Set
			If (String.Equals(Me._iowanm, value) = false) Then
				Me.OniowanmChanging(value)
				Me.SendPropertyChanging
				Me._iowanm = value
				Me.SendPropertyChanged("iowanm")
				Me.OniowanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_iowa", DbType:="VarChar(6) NOT NULL", CanBeNull:=false)>  _
	Public Property iowa() As String
		Get
			Return Me._iowa
		End Get
		Set
			If (String.Equals(Me._iowa, value) = false) Then
				Me.OniowaChanging(value)
				Me.SendPropertyChanging
				Me._iowa = value
				Me.SendPropertyChanged("iowa")
				Me.OniowaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_run", DbType:="VarChar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property run() As String
		Get
			Return Me._run
		End Get
		Set
			If (String.Equals(Me._run, value) = false) Then
				Me.OnrunChanging(value)
				Me.SendPropertyChanging
				Me._run = value
				Me.SendPropertyChanged("run")
				Me.OnrunChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salt", DbType:="VarChar(3) NOT NULL", CanBeNull:=false)>  _
	Public Property salt() As String
		Get
			Return Me._salt
		End Get
		Set
			If (String.Equals(Me._salt, value) = false) Then
				Me.OnsaltChanging(value)
				Me.SendPropertyChanging
				Me._salt = value
				Me.SendPropertyChanged("salt")
				Me.OnsaltChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syn", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property syn() As String
		Get
			Return Me._syn
		End Get
		Set
			If (String.Equals(Me._syn, value) = false) Then
				Me.OnsynChanging(value)
				Me.SendPropertyChanging
				Me._syn = value
				Me.SendPropertyChanged("syn")
				Me.OnsynChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_CANCEL", DbType:="NVarChar(50)")>  _
	Public Property IS_CANCEL() As String
		Get
			Return Me._IS_CANCEL
		End Get
		Set
			If (String.Equals(Me._IS_CANCEL, value) = false) Then
				Me.OnIS_CANCELChanging(value)
				Me.SendPropertyChanging
				Me._IS_CANCEL = value
				Me.SendPropertyChanged("IS_CANCEL")
				Me.OnIS_CANCELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_add_digit", DbType:="VarChar(2)")>  _
	Public Property add_digit() As String
		Get
			Return Me._add_digit
		End Get
		Set
			If (String.Equals(Me._add_digit, value) = false) Then
				Me.Onadd_digitChanging(value)
				Me.SendPropertyChanging
				Me._add_digit = value
				Me.SendPropertyChanged("add_digit")
				Me.Onadd_digitChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MAS_STATUS")>  _
Partial Public Class MAS_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STATUS_NAME As String
	
	Private _STATUS_ID As System.Nullable(Of Double)
	
	Private _STATUS_GROUP As System.Nullable(Of Integer)
	
	Private _READ_ONLY_ID As System.Nullable(Of Integer)
	
	Private _CAL_TYPE As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _GROUP_DDL_SHOW As System.Nullable(Of Integer)
	
	Private _SEQ As System.Nullable(Of Integer)
	
	Private _STATUS_NAME_STAFF As String
	
	Private _SOP_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_NAMEChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_GROUPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_GROUPChanged()
    End Sub
    Partial Private Sub OnREAD_ONLY_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnREAD_ONLY_IDChanged()
    End Sub
    Partial Private Sub OnCAL_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCAL_TYPEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnGROUP_DDL_SHOWChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_DDL_SHOWChanged()
    End Sub
    Partial Private Sub OnSEQChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSEQChanged()
    End Sub
    Partial Private Sub OnSTATUS_NAME_STAFFChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUS_NAME_STAFFChanged()
    End Sub
    Partial Private Sub OnSOP_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSOP_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS_NAME() As String
		Get
			Return Me._STATUS_NAME
		End Get
		Set
			If (String.Equals(Me._STATUS_NAME, value) = false) Then
				Me.OnSTATUS_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_NAME = value
				Me.SendPropertyChanged("STATUS_NAME")
				Me.OnSTATUS_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Float")>  _
	Public Property STATUS_ID() As System.Nullable(Of Double)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_GROUP", DbType:="Int")>  _
	Public Property STATUS_GROUP() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_GROUP
		End Get
		Set
			If (Me._STATUS_GROUP.Equals(value) = false) Then
				Me.OnSTATUS_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_GROUP = value
				Me.SendPropertyChanged("STATUS_GROUP")
				Me.OnSTATUS_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_READ_ONLY_ID", DbType:="Int")>  _
	Public Property READ_ONLY_ID() As System.Nullable(Of Integer)
		Get
			Return Me._READ_ONLY_ID
		End Get
		Set
			If (Me._READ_ONLY_ID.Equals(value) = false) Then
				Me.OnREAD_ONLY_IDChanging(value)
				Me.SendPropertyChanging
				Me._READ_ONLY_ID = value
				Me.SendPropertyChanged("READ_ONLY_ID")
				Me.OnREAD_ONLY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CAL_TYPE", DbType:="Int")>  _
	Public Property CAL_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._CAL_TYPE
		End Get
		Set
			If (Me._CAL_TYPE.Equals(value) = false) Then
				Me.OnCAL_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._CAL_TYPE = value
				Me.SendPropertyChanged("CAL_TYPE")
				Me.OnCAL_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_DDL_SHOW", DbType:="Int")>  _
	Public Property GROUP_DDL_SHOW() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_DDL_SHOW
		End Get
		Set
			If (Me._GROUP_DDL_SHOW.Equals(value) = false) Then
				Me.OnGROUP_DDL_SHOWChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_DDL_SHOW = value
				Me.SendPropertyChanged("GROUP_DDL_SHOW")
				Me.OnGROUP_DDL_SHOWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SEQ", DbType:="Int")>  _
	Public Property SEQ() As System.Nullable(Of Integer)
		Get
			Return Me._SEQ
		End Get
		Set
			If (Me._SEQ.Equals(value) = false) Then
				Me.OnSEQChanging(value)
				Me.SendPropertyChanging
				Me._SEQ = value
				Me.SendPropertyChanged("SEQ")
				Me.OnSEQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_NAME_STAFF", DbType:="NVarChar(MAX)")>  _
	Public Property STATUS_NAME_STAFF() As String
		Get
			Return Me._STATUS_NAME_STAFF
		End Get
		Set
			If (String.Equals(Me._STATUS_NAME_STAFF, value) = false) Then
				Me.OnSTATUS_NAME_STAFFChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_NAME_STAFF = value
				Me.SendPropertyChanged("STATUS_NAME_STAFF")
				Me.OnSTATUS_NAME_STAFFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOP_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property SOP_NAME() As String
		Get
			Return Me._SOP_NAME
		End Get
		Set
			If (String.Equals(Me._SOP_NAME, value) = false) Then
				Me.OnSOP_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._SOP_NAME = value
				Me.SendPropertyChanged("SOP_NAME")
				Me.OnSOP_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CHANGE_NAME_REQUEST_DETAIL")>  _
Partial Public Class CHANGE_NAME_REQUEST_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _PRODUCT_TYPE As System.Nullable(Of Integer)
	
	Private _PRODUCT_NO_FULL As String
	
	Private _AMOUNT As System.Nullable(Of Decimal)
	
	Private _IDA_PRODUCT As System.Nullable(Of Integer)
	
	Private _NEWCODE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanged()
    End Sub
    Partial Private Sub OnPRODUCT_NO_FULLChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_NO_FULLChanged()
    End Sub
    Partial Private Sub OnAMOUNTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAMOUNTChanged()
    End Sub
    Partial Private Sub OnIDA_PRODUCTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDA_PRODUCTChanged()
    End Sub
    Partial Private Sub OnNEWCODEChanging(value As String)
    End Sub
    Partial Private Sub OnNEWCODEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_TYPE", DbType:="Int")>  _
	Public Property PRODUCT_TYPE() As System.Nullable(Of Integer)
		Get
			Return Me._PRODUCT_TYPE
		End Get
		Set
			If (Me._PRODUCT_TYPE.Equals(value) = false) Then
				Me.OnPRODUCT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_TYPE = value
				Me.SendPropertyChanged("PRODUCT_TYPE")
				Me.OnPRODUCT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_NO_FULL", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_NO_FULL() As String
		Get
			Return Me._PRODUCT_NO_FULL
		End Get
		Set
			If (String.Equals(Me._PRODUCT_NO_FULL, value) = false) Then
				Me.OnPRODUCT_NO_FULLChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_NO_FULL = value
				Me.SendPropertyChanged("PRODUCT_NO_FULL")
				Me.OnPRODUCT_NO_FULLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT", DbType:="Money")>  _
	Public Property AMOUNT() As System.Nullable(Of Decimal)
		Get
			Return Me._AMOUNT
		End Get
		Set
			If (Me._AMOUNT.Equals(value) = false) Then
				Me.OnAMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT = value
				Me.SendPropertyChanged("AMOUNT")
				Me.OnAMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA_PRODUCT", DbType:="Int")>  _
	Public Property IDA_PRODUCT() As System.Nullable(Of Integer)
		Get
			Return Me._IDA_PRODUCT
		End Get
		Set
			If (Me._IDA_PRODUCT.Equals(value) = false) Then
				Me.OnIDA_PRODUCTChanging(value)
				Me.SendPropertyChanging
				Me._IDA_PRODUCT = value
				Me.SendPropertyChanged("IDA_PRODUCT")
				Me.OnIDA_PRODUCTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEWCODE", DbType:="NVarChar(MAX)")>  _
	Public Property NEWCODE() As String
		Get
			Return Me._NEWCODE
		End Get
		Set
			If (String.Equals(Me._NEWCODE, value) = false) Then
				Me.OnNEWCODEChanging(value)
				Me.SendPropertyChanging
				Me._NEWCODE = value
				Me.SendPropertyChanged("NEWCODE")
				Me.OnNEWCODEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CHANGE_NAME_REQUEST")>  _
Partial Public Class CHANGE_NAME_REQUEST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _CITIZEN_ID As String
	
	Private _IDENTIFY As String
	
	Private _RCVNO As System.Nullable(Of Integer)
	
	Private _RCVDATE As System.Nullable(Of Date)
	
	Private _CONSIDER_DATE As System.Nullable(Of Date)
	
	Private _STAFF_RECEIVE_IDEN As String
	
	Private _STAFF_APPROVE_IDEN As String
	
	Private _PROCESS_ID As String
	
	Private _REQUEST_DATE As System.Nullable(Of Date)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _AMOUNT_SUM As System.Nullable(Of Decimal)
	
	Private _OLD_NAME As String
	
	Private _NEW_NAME As String
	
	Private _COUNT_ALL_ITEM As System.Nullable(Of Integer)
	
	Private _PVNCD As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_IDChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnRCVNOChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRCVNOChanged()
    End Sub
    Partial Private Sub OnRCVDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRCVDATEChanged()
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanged()
    End Sub
    Partial Private Sub OnSTAFF_RECEIVE_IDENChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_RECEIVE_IDENChanged()
    End Sub
    Partial Private Sub OnSTAFF_APPROVE_IDENChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_APPROVE_IDENChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnREQUEST_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUEST_DATEChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnAMOUNT_SUMChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAMOUNT_SUMChanged()
    End Sub
    Partial Private Sub OnOLD_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnOLD_NAMEChanged()
    End Sub
    Partial Private Sub OnNEW_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnNEW_NAMEChanged()
    End Sub
    Partial Private Sub OnCOUNT_ALL_ITEMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCOUNT_ALL_ITEMChanged()
    End Sub
    Partial Private Sub OnPVNCDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPVNCDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID() As String
		Get
			Return Me._CITIZEN_ID
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID, value) = false) Then
				Me.OnCITIZEN_IDChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID = value
				Me.SendPropertyChanged("CITIZEN_ID")
				Me.OnCITIZEN_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO", DbType:="Int")>  _
	Public Property RCVNO() As System.Nullable(Of Integer)
		Get
			Return Me._RCVNO
		End Get
		Set
			If (Me._RCVNO.Equals(value) = false) Then
				Me.OnRCVNOChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO = value
				Me.SendPropertyChanged("RCVNO")
				Me.OnRCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE", DbType:="DateTime")>  _
	Public Property RCVDATE() As System.Nullable(Of Date)
		Get
			Return Me._RCVDATE
		End Get
		Set
			If (Me._RCVDATE.Equals(value) = false) Then
				Me.OnRCVDATEChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE = value
				Me.SendPropertyChanged("RCVDATE")
				Me.OnRCVDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSIDER_DATE", DbType:="DateTime")>  _
	Public Property CONSIDER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONSIDER_DATE
		End Get
		Set
			If (Me._CONSIDER_DATE.Equals(value) = false) Then
				Me.OnCONSIDER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONSIDER_DATE = value
				Me.SendPropertyChanged("CONSIDER_DATE")
				Me.OnCONSIDER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_RECEIVE_IDEN", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_RECEIVE_IDEN() As String
		Get
			Return Me._STAFF_RECEIVE_IDEN
		End Get
		Set
			If (String.Equals(Me._STAFF_RECEIVE_IDEN, value) = false) Then
				Me.OnSTAFF_RECEIVE_IDENChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_RECEIVE_IDEN = value
				Me.SendPropertyChanged("STAFF_RECEIVE_IDEN")
				Me.OnSTAFF_RECEIVE_IDENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_APPROVE_IDEN", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_APPROVE_IDEN() As String
		Get
			Return Me._STAFF_APPROVE_IDEN
		End Get
		Set
			If (String.Equals(Me._STAFF_APPROVE_IDEN, value) = false) Then
				Me.OnSTAFF_APPROVE_IDENChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_APPROVE_IDEN = value
				Me.SendPropertyChanged("STAFF_APPROVE_IDEN")
				Me.OnSTAFF_APPROVE_IDENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_DATE
		End Get
		Set
			If (Me._REQUEST_DATE.Equals(value) = false) Then
				Me.OnREQUEST_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_DATE = value
				Me.SendPropertyChanged("REQUEST_DATE")
				Me.OnREQUEST_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT_SUM", DbType:="Money")>  _
	Public Property AMOUNT_SUM() As System.Nullable(Of Decimal)
		Get
			Return Me._AMOUNT_SUM
		End Get
		Set
			If (Me._AMOUNT_SUM.Equals(value) = false) Then
				Me.OnAMOUNT_SUMChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT_SUM = value
				Me.SendPropertyChanged("AMOUNT_SUM")
				Me.OnAMOUNT_SUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OLD_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property OLD_NAME() As String
		Get
			Return Me._OLD_NAME
		End Get
		Set
			If (String.Equals(Me._OLD_NAME, value) = false) Then
				Me.OnOLD_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._OLD_NAME = value
				Me.SendPropertyChanged("OLD_NAME")
				Me.OnOLD_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NEW_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property NEW_NAME() As String
		Get
			Return Me._NEW_NAME
		End Get
		Set
			If (String.Equals(Me._NEW_NAME, value) = false) Then
				Me.OnNEW_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._NEW_NAME = value
				Me.SendPropertyChanged("NEW_NAME")
				Me.OnNEW_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNT_ALL_ITEM", DbType:="Int")>  _
	Public Property COUNT_ALL_ITEM() As System.Nullable(Of Integer)
		Get
			Return Me._COUNT_ALL_ITEM
		End Get
		Set
			If (Me._COUNT_ALL_ITEM.Equals(value) = false) Then
				Me.OnCOUNT_ALL_ITEMChanging(value)
				Me.SendPropertyChanging
				Me._COUNT_ALL_ITEM = value
				Me.SendPropertyChanged("COUNT_ALL_ITEM")
				Me.OnCOUNT_ALL_ITEMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVNCD", DbType:="Int")>  _
	Public Property PVNCD() As System.Nullable(Of Integer)
		Get
			Return Me._PVNCD
		End Get
		Set
			If (Me._PVNCD.Equals(value) = false) Then
				Me.OnPVNCDChanging(value)
				Me.SendPropertyChanging
				Me._PVNCD = value
				Me.SendPropertyChanged("PVNCD")
				Me.OnPVNCDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.drsamp")>  _
Partial Public Class drsamp
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _pvncd As System.Nullable(Of Short)
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _RCVNO_DISPLAY As String
	
	Private _RCVDATE_DISPLAY As String
	
	Private _lpvncd As System.Nullable(Of Short)
	
	Private _lcntpcd As String
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _lcn As System.Nullable(Of Integer)
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _lcnscd As System.Nullable(Of Integer)
	
	Private _lctnmcd As System.Nullable(Of Integer)
	
	Private _lctcd As System.Nullable(Of Integer)
	
	Private _CONSIDER_DATE As System.Nullable(Of Date)
	
	Private _FK_STAFF_OFFER_IDA As System.Nullable(Of Integer)
	
	Private _thadrgnm As String
	
	Private _engdrgnm As String
	
	Private _bqty As System.Nullable(Of Decimal)
	
	Private _bunitcd As System.Nullable(Of Integer)
	
	Private _mqty As System.Nullable(Of Decimal)
	
	Private _munitcd As System.Nullable(Of Integer)
	
	Private _sqty As System.Nullable(Of Decimal)
	
	Private _sunitcd As System.Nullable(Of Integer)
	
	Private _frgncd As System.Nullable(Of Integer)
	
	Private _frgnlctcd As System.Nullable(Of Integer)
	
	Private _cnsdcd As System.Nullable(Of Short)
	
	Private _appdate As System.Nullable(Of Date)
	
	Private _cnccd As System.Nullable(Of Short)
	
	Private _cncdate As System.Nullable(Of Date)
	
	Private _cscd As System.Nullable(Of Short)
	
	Private _rsbstfcd As System.Nullable(Of Integer)
	
	Private _jpctpcd As System.Nullable(Of Short)
	
	Private _rqttpcd As System.Nullable(Of Short)
	
	Private _cndno As System.Nullable(Of Integer)
	
	Private _appvno As String
	
	Private _lstfcd As System.Nullable(Of Integer)
	
	Private _lmdfdate As System.Nullable(Of Date)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _REMARK As String
	
	Private _WRITE_AT As String
	
	Private _WRITE_DATE As System.Nullable(Of Date)
	
	Private _QUANTITY As String
	
	Private _CONTAIN_DESCRIPTION As String
	
	Private _rcv_id As System.Nullable(Of Integer)
	
	Private _PRODUCT_QUANTITY As String
	
	Private _PRODUCT_ID_IDA As System.Nullable(Of Integer)
	
	Private _CHK_PRODUCT_FOR As String
	
	Private _CHK_PRODUCT_FOR_HUMAN As String
	
	Private _CHK_OTHER_PRODUCT As String
	
	Private _REMARK_OTHER_PRODUCT As String
	
	Private _DRUG_NATURE As String
	
	Private _PRODUCT_UNIT As System.Nullable(Of Integer)
	
	Private _QUANTITY_UNIT As System.Nullable(Of Integer)
	
	Private _SMALL_UNIT As System.Nullable(Of Integer)
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _UPDATE_DATE As System.Nullable(Of Date)
	
	Private _CHK_1 As String
	
	Private _IN_NAME As String
	
	Private _krasuang As String
	
	Private _tabuang As String
	
	Private _kom As String
	
	Private _pootane As String
	
	Private _samakom As String
	
	Private _moolniti As String
	
	Private _give_to As String
	
	Private _give_to_taxno As String
	
	Private _donate_type As System.Nullable(Of Integer)
	
	Private _CHK_PERMISSION_REQUEST As String
	
	Private _CHK_PERMISSION_GET As String
	
	Private _CHK_PERMISSION_ASK As String
	
	Private _CHK_PERMISSION_DESCRIPTION As String
	
	Private _CHK_MANUFACTURE_ORDER As String
	
	Private _RANK As String
	
	Private _CHK_FOR_OTHER As String
	
	Private _RCVNO_MANUAL As String
	
	Private _TEMPORARY_RCVNO As String
	
	Private _TEMPLATE_ID As System.Nullable(Of Integer)
	
	Private _rcvr_id As System.Nullable(Of Integer)
	
	Private _CITIZEN_SUBMIT As String
	
	Private _CITIZEN_RCV As String
	
	Private _PJSUM_IDA As System.Nullable(Of Integer)
	
	Private _pj_lo As String
	
	Private _pjengnm As String
	
	Private _pjthanm As String
	
	Private _pj_number As String
	
	Private _event_start As System.Nullable(Of Date)
	
	Private _event_end As System.Nullable(Of Date)
	
	Private _phr_fk As System.Nullable(Of Integer)
	
	Private _staff_approved_iden As String
	
	Private _Ref_no As String
	
	Private _CUSTOMER_CITIZEN_SUBMIT As String
	
	Private _CUSTOMER_CITIZEN_AUTHORIZE As String
	
	Private _process_id As String
	
	Private _REMARK_OTHER As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_DISPLAYChanged()
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanging(value As String)
    End Sub
    Partial Private Sub OnRCVDATE_DISPLAYChanged()
    End Sub
    Partial Private Sub OnlpvncdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnlpvncdChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnlcnscdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnscdChanged()
    End Sub
    Partial Private Sub OnlctnmcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctnmcdChanged()
    End Sub
    Partial Private Sub OnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlctcdChanged()
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanged()
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_STAFF_OFFER_IDAChanged()
    End Sub
    Partial Private Sub OnthadrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnthadrgnmChanged()
    End Sub
    Partial Private Sub OnengdrgnmChanging(value As String)
    End Sub
    Partial Private Sub OnengdrgnmChanged()
    End Sub
    Partial Private Sub OnbqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnbqtyChanged()
    End Sub
    Partial Private Sub OnbunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnbunitcdChanged()
    End Sub
    Partial Private Sub OnmqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnmqtyChanged()
    End Sub
    Partial Private Sub OnmunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnmunitcdChanged()
    End Sub
    Partial Private Sub OnsqtyChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnsqtyChanged()
    End Sub
    Partial Private Sub OnsunitcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsunitcdChanged()
    End Sub
    Partial Private Sub OnfrgncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfrgncdChanged()
    End Sub
    Partial Private Sub OnfrgnlctcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnfrgnlctcdChanged()
    End Sub
    Partial Private Sub OncnsdcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncnsdcdChanged()
    End Sub
    Partial Private Sub OnappdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnappdateChanged()
    End Sub
    Partial Private Sub OncnccdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncnccdChanged()
    End Sub
    Partial Private Sub OncncdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncncdateChanged()
    End Sub
    Partial Private Sub OncscdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OncscdChanged()
    End Sub
    Partial Private Sub OnrsbstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrsbstfcdChanged()
    End Sub
    Partial Private Sub OnjpctpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnjpctpcdChanged()
    End Sub
    Partial Private Sub OnrqttpcdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnrqttpcdChanged()
    End Sub
    Partial Private Sub OncndnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncndnoChanged()
    End Sub
    Partial Private Sub OnappvnoChanging(value As String)
    End Sub
    Partial Private Sub OnappvnoChanged()
    End Sub
    Partial Private Sub OnlstfcdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlstfcdChanged()
    End Sub
    Partial Private Sub OnlmdfdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnlmdfdateChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnWRITE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_ATChanged()
    End Sub
    Partial Private Sub OnWRITE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnWRITE_DATEChanged()
    End Sub
    Partial Private Sub OnQUANTITYChanging(value As String)
    End Sub
    Partial Private Sub OnQUANTITYChanged()
    End Sub
    Partial Private Sub OnCONTAIN_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnCONTAIN_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub Onrcv_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrcv_idChanged()
    End Sub
    Partial Private Sub OnPRODUCT_QUANTITYChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_QUANTITYChanged()
    End Sub
    Partial Private Sub OnPRODUCT_ID_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRODUCT_ID_IDAChanged()
    End Sub
    Partial Private Sub OnCHK_PRODUCT_FORChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_PRODUCT_FORChanged()
    End Sub
    Partial Private Sub OnCHK_PRODUCT_FOR_HUMANChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_PRODUCT_FOR_HUMANChanged()
    End Sub
    Partial Private Sub OnCHK_OTHER_PRODUCTChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_OTHER_PRODUCTChanged()
    End Sub
    Partial Private Sub OnREMARK_OTHER_PRODUCTChanging(value As String)
    End Sub
    Partial Private Sub OnREMARK_OTHER_PRODUCTChanged()
    End Sub
    Partial Private Sub OnDRUG_NATUREChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NATUREChanged()
    End Sub
    Partial Private Sub OnPRODUCT_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRODUCT_UNITChanged()
    End Sub
    Partial Private Sub OnQUANTITY_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQUANTITY_UNITChanged()
    End Sub
    Partial Private Sub OnSMALL_UNITChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSMALL_UNITChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnUPDATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUPDATE_DATEChanged()
    End Sub
    Partial Private Sub OnCHK_1Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_1Changed()
    End Sub
    Partial Private Sub OnIN_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnIN_NAMEChanged()
    End Sub
    Partial Private Sub OnkrasuangChanging(value As String)
    End Sub
    Partial Private Sub OnkrasuangChanged()
    End Sub
    Partial Private Sub OntabuangChanging(value As String)
    End Sub
    Partial Private Sub OntabuangChanged()
    End Sub
    Partial Private Sub OnkomChanging(value As String)
    End Sub
    Partial Private Sub OnkomChanged()
    End Sub
    Partial Private Sub OnpootaneChanging(value As String)
    End Sub
    Partial Private Sub OnpootaneChanged()
    End Sub
    Partial Private Sub OnsamakomChanging(value As String)
    End Sub
    Partial Private Sub OnsamakomChanged()
    End Sub
    Partial Private Sub OnmoolnitiChanging(value As String)
    End Sub
    Partial Private Sub OnmoolnitiChanged()
    End Sub
    Partial Private Sub Ongive_toChanging(value As String)
    End Sub
    Partial Private Sub Ongive_toChanged()
    End Sub
    Partial Private Sub Ongive_to_taxnoChanging(value As String)
    End Sub
    Partial Private Sub Ongive_to_taxnoChanged()
    End Sub
    Partial Private Sub Ondonate_typeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ondonate_typeChanged()
    End Sub
    Partial Private Sub OnCHK_PERMISSION_REQUESTChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_PERMISSION_REQUESTChanged()
    End Sub
    Partial Private Sub OnCHK_PERMISSION_GETChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_PERMISSION_GETChanged()
    End Sub
    Partial Private Sub OnCHK_PERMISSION_ASKChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_PERMISSION_ASKChanged()
    End Sub
    Partial Private Sub OnCHK_PERMISSION_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_PERMISSION_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCHK_MANUFACTURE_ORDERChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_MANUFACTURE_ORDERChanged()
    End Sub
    Partial Private Sub OnRANKChanging(value As String)
    End Sub
    Partial Private Sub OnRANKChanged()
    End Sub
    Partial Private Sub OnCHK_FOR_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnCHK_FOR_OTHERChanged()
    End Sub
    Partial Private Sub OnRCVNO_MANUALChanging(value As String)
    End Sub
    Partial Private Sub OnRCVNO_MANUALChanged()
    End Sub
    Partial Private Sub OnTEMPORARY_RCVNOChanging(value As String)
    End Sub
    Partial Private Sub OnTEMPORARY_RCVNOChanged()
    End Sub
    Partial Private Sub OnTEMPLATE_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTEMPLATE_IDChanged()
    End Sub
    Partial Private Sub Onrcvr_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrcvr_idChanged()
    End Sub
    Partial Private Sub OnCITIZEN_SUBMITChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_SUBMITChanged()
    End Sub
    Partial Private Sub OnCITIZEN_RCVChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_RCVChanged()
    End Sub
    Partial Private Sub OnPJSUM_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPJSUM_IDAChanged()
    End Sub
    Partial Private Sub Onpj_loChanging(value As String)
    End Sub
    Partial Private Sub Onpj_loChanged()
    End Sub
    Partial Private Sub OnpjengnmChanging(value As String)
    End Sub
    Partial Private Sub OnpjengnmChanged()
    End Sub
    Partial Private Sub OnpjthanmChanging(value As String)
    End Sub
    Partial Private Sub OnpjthanmChanged()
    End Sub
    Partial Private Sub Onpj_numberChanging(value As String)
    End Sub
    Partial Private Sub Onpj_numberChanged()
    End Sub
    Partial Private Sub Onevent_startChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onevent_startChanged()
    End Sub
    Partial Private Sub Onevent_endChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onevent_endChanged()
    End Sub
    Partial Private Sub Onphr_fkChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onphr_fkChanged()
    End Sub
    Partial Private Sub Onstaff_approved_idenChanging(value As String)
    End Sub
    Partial Private Sub Onstaff_approved_idenChanged()
    End Sub
    Partial Private Sub OnRef_noChanging(value As String)
    End Sub
    Partial Private Sub OnRef_noChanged()
    End Sub
    Partial Private Sub OnCUSTOMER_CITIZEN_SUBMITChanging(value As String)
    End Sub
    Partial Private Sub OnCUSTOMER_CITIZEN_SUBMITChanged()
    End Sub
    Partial Private Sub OnCUSTOMER_CITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCUSTOMER_CITIZEN_AUTHORIZEChanged()
    End Sub
    Partial Private Sub Onprocess_idChanging(value As String)
    End Sub
    Partial Private Sub Onprocess_idChanged()
    End Sub
    Partial Private Sub OnREMARK_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnREMARK_OTHERChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="SmallInt")>  _
	Public Property pvncd() As System.Nullable(Of Short)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="Date")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVNO_DISPLAY() As String
		Get
			Return Me._RCVNO_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVNO_DISPLAY, value) = false) Then
				Me.OnRCVNO_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_DISPLAY = value
				Me.SendPropertyChanged("RCVNO_DISPLAY")
				Me.OnRCVNO_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVDATE_DISPLAY", DbType:="NVarChar(MAX)")>  _
	Public Property RCVDATE_DISPLAY() As String
		Get
			Return Me._RCVDATE_DISPLAY
		End Get
		Set
			If (String.Equals(Me._RCVDATE_DISPLAY, value) = false) Then
				Me.OnRCVDATE_DISPLAYChanging(value)
				Me.SendPropertyChanging
				Me._RCVDATE_DISPLAY = value
				Me.SendPropertyChanged("RCVDATE_DISPLAY")
				Me.OnRCVDATE_DISPLAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lpvncd", DbType:="SmallInt")>  _
	Public Property lpvncd() As System.Nullable(Of Short)
		Get
			Return Me._lpvncd
		End Get
		Set
			If (Me._lpvncd.Equals(value) = false) Then
				Me.OnlpvncdChanging(value)
				Me.SendPropertyChanging
				Me._lpvncd = value
				Me.SendPropertyChanged("lpvncd")
				Me.OnlpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="VarChar(4)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcn", DbType:="Int")>  _
	Public Property lcn() As System.Nullable(Of Integer)
		Get
			Return Me._lcn
		End Get
		Set
			If (Me._lcn.Equals(value) = false) Then
				Me.OnlcnChanging(value)
				Me.SendPropertyChanging
				Me._lcn = value
				Me.SendPropertyChanged("lcn")
				Me.OnlcnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnscd", DbType:="Int")>  _
	Public Property lcnscd() As System.Nullable(Of Integer)
		Get
			Return Me._lcnscd
		End Get
		Set
			If (Me._lcnscd.Equals(value) = false) Then
				Me.OnlcnscdChanging(value)
				Me.SendPropertyChanging
				Me._lcnscd = value
				Me.SendPropertyChanged("lcnscd")
				Me.OnlcnscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctnmcd", DbType:="Int")>  _
	Public Property lctnmcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctnmcd
		End Get
		Set
			If (Me._lctnmcd.Equals(value) = false) Then
				Me.OnlctnmcdChanging(value)
				Me.SendPropertyChanging
				Me._lctnmcd = value
				Me.SendPropertyChanged("lctnmcd")
				Me.OnlctnmcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lctcd", DbType:="Int")>  _
	Public Property lctcd() As System.Nullable(Of Integer)
		Get
			Return Me._lctcd
		End Get
		Set
			If (Me._lctcd.Equals(value) = false) Then
				Me.OnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._lctcd = value
				Me.SendPropertyChanged("lctcd")
				Me.OnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSIDER_DATE", DbType:="DateTime")>  _
	Public Property CONSIDER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONSIDER_DATE
		End Get
		Set
			If (Me._CONSIDER_DATE.Equals(value) = false) Then
				Me.OnCONSIDER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONSIDER_DATE = value
				Me.SendPropertyChanged("CONSIDER_DATE")
				Me.OnCONSIDER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_STAFF_OFFER_IDA", DbType:="Int")>  _
	Public Property FK_STAFF_OFFER_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_STAFF_OFFER_IDA
		End Get
		Set
			If (Me._FK_STAFF_OFFER_IDA.Equals(value) = false) Then
				Me.OnFK_STAFF_OFFER_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_STAFF_OFFER_IDA = value
				Me.SendPropertyChanged("FK_STAFF_OFFER_IDA")
				Me.OnFK_STAFF_OFFER_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_thadrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property thadrgnm() As String
		Get
			Return Me._thadrgnm
		End Get
		Set
			If (String.Equals(Me._thadrgnm, value) = false) Then
				Me.OnthadrgnmChanging(value)
				Me.SendPropertyChanging
				Me._thadrgnm = value
				Me.SendPropertyChanged("thadrgnm")
				Me.OnthadrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_engdrgnm", DbType:="NVarChar(MAX)")>  _
	Public Property engdrgnm() As String
		Get
			Return Me._engdrgnm
		End Get
		Set
			If (String.Equals(Me._engdrgnm, value) = false) Then
				Me.OnengdrgnmChanging(value)
				Me.SendPropertyChanging
				Me._engdrgnm = value
				Me.SendPropertyChanged("engdrgnm")
				Me.OnengdrgnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bqty", DbType:="Decimal(10,2)")>  _
	Public Property bqty() As System.Nullable(Of Decimal)
		Get
			Return Me._bqty
		End Get
		Set
			If (Me._bqty.Equals(value) = false) Then
				Me.OnbqtyChanging(value)
				Me.SendPropertyChanging
				Me._bqty = value
				Me.SendPropertyChanged("bqty")
				Me.OnbqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bunitcd", DbType:="Int")>  _
	Public Property bunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._bunitcd
		End Get
		Set
			If (Me._bunitcd.Equals(value) = false) Then
				Me.OnbunitcdChanging(value)
				Me.SendPropertyChanging
				Me._bunitcd = value
				Me.SendPropertyChanged("bunitcd")
				Me.OnbunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mqty", DbType:="Decimal(10,2)")>  _
	Public Property mqty() As System.Nullable(Of Decimal)
		Get
			Return Me._mqty
		End Get
		Set
			If (Me._mqty.Equals(value) = false) Then
				Me.OnmqtyChanging(value)
				Me.SendPropertyChanging
				Me._mqty = value
				Me.SendPropertyChanged("mqty")
				Me.OnmqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_munitcd", DbType:="Int")>  _
	Public Property munitcd() As System.Nullable(Of Integer)
		Get
			Return Me._munitcd
		End Get
		Set
			If (Me._munitcd.Equals(value) = false) Then
				Me.OnmunitcdChanging(value)
				Me.SendPropertyChanging
				Me._munitcd = value
				Me.SendPropertyChanged("munitcd")
				Me.OnmunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sqty", DbType:="Decimal(10,2)")>  _
	Public Property sqty() As System.Nullable(Of Decimal)
		Get
			Return Me._sqty
		End Get
		Set
			If (Me._sqty.Equals(value) = false) Then
				Me.OnsqtyChanging(value)
				Me.SendPropertyChanging
				Me._sqty = value
				Me.SendPropertyChanged("sqty")
				Me.OnsqtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sunitcd", DbType:="Int")>  _
	Public Property sunitcd() As System.Nullable(Of Integer)
		Get
			Return Me._sunitcd
		End Get
		Set
			If (Me._sunitcd.Equals(value) = false) Then
				Me.OnsunitcdChanging(value)
				Me.SendPropertyChanging
				Me._sunitcd = value
				Me.SendPropertyChanged("sunitcd")
				Me.OnsunitcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgncd", DbType:="Int")>  _
	Public Property frgncd() As System.Nullable(Of Integer)
		Get
			Return Me._frgncd
		End Get
		Set
			If (Me._frgncd.Equals(value) = false) Then
				Me.OnfrgncdChanging(value)
				Me.SendPropertyChanging
				Me._frgncd = value
				Me.SendPropertyChanged("frgncd")
				Me.OnfrgncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_frgnlctcd", DbType:="Int")>  _
	Public Property frgnlctcd() As System.Nullable(Of Integer)
		Get
			Return Me._frgnlctcd
		End Get
		Set
			If (Me._frgnlctcd.Equals(value) = false) Then
				Me.OnfrgnlctcdChanging(value)
				Me.SendPropertyChanging
				Me._frgnlctcd = value
				Me.SendPropertyChanged("frgnlctcd")
				Me.OnfrgnlctcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnsdcd", DbType:="SmallInt")>  _
	Public Property cnsdcd() As System.Nullable(Of Short)
		Get
			Return Me._cnsdcd
		End Get
		Set
			If (Me._cnsdcd.Equals(value) = false) Then
				Me.OncnsdcdChanging(value)
				Me.SendPropertyChanging
				Me._cnsdcd = value
				Me.SendPropertyChanged("cnsdcd")
				Me.OncnsdcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appdate", DbType:="Date")>  _
	Public Property appdate() As System.Nullable(Of Date)
		Get
			Return Me._appdate
		End Get
		Set
			If (Me._appdate.Equals(value) = false) Then
				Me.OnappdateChanging(value)
				Me.SendPropertyChanging
				Me._appdate = value
				Me.SendPropertyChanged("appdate")
				Me.OnappdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccd", DbType:="SmallInt")>  _
	Public Property cnccd() As System.Nullable(Of Short)
		Get
			Return Me._cnccd
		End Get
		Set
			If (Me._cnccd.Equals(value) = false) Then
				Me.OncnccdChanging(value)
				Me.SendPropertyChanging
				Me._cnccd = value
				Me.SendPropertyChanged("cnccd")
				Me.OncnccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncdate", DbType:="Date")>  _
	Public Property cncdate() As System.Nullable(Of Date)
		Get
			Return Me._cncdate
		End Get
		Set
			If (Me._cncdate.Equals(value) = false) Then
				Me.OncncdateChanging(value)
				Me.SendPropertyChanging
				Me._cncdate = value
				Me.SendPropertyChanged("cncdate")
				Me.OncncdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cscd", DbType:="SmallInt")>  _
	Public Property cscd() As System.Nullable(Of Short)
		Get
			Return Me._cscd
		End Get
		Set
			If (Me._cscd.Equals(value) = false) Then
				Me.OncscdChanging(value)
				Me.SendPropertyChanging
				Me._cscd = value
				Me.SendPropertyChanged("cscd")
				Me.OncscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rsbstfcd", DbType:="Int")>  _
	Public Property rsbstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._rsbstfcd
		End Get
		Set
			If (Me._rsbstfcd.Equals(value) = false) Then
				Me.OnrsbstfcdChanging(value)
				Me.SendPropertyChanging
				Me._rsbstfcd = value
				Me.SendPropertyChanged("rsbstfcd")
				Me.OnrsbstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jpctpcd", DbType:="SmallInt")>  _
	Public Property jpctpcd() As System.Nullable(Of Short)
		Get
			Return Me._jpctpcd
		End Get
		Set
			If (Me._jpctpcd.Equals(value) = false) Then
				Me.OnjpctpcdChanging(value)
				Me.SendPropertyChanging
				Me._jpctpcd = value
				Me.SendPropertyChanged("jpctpcd")
				Me.OnjpctpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rqttpcd", DbType:="SmallInt")>  _
	Public Property rqttpcd() As System.Nullable(Of Short)
		Get
			Return Me._rqttpcd
		End Get
		Set
			If (Me._rqttpcd.Equals(value) = false) Then
				Me.OnrqttpcdChanging(value)
				Me.SendPropertyChanging
				Me._rqttpcd = value
				Me.SendPropertyChanged("rqttpcd")
				Me.OnrqttpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cndno", DbType:="Int")>  _
	Public Property cndno() As System.Nullable(Of Integer)
		Get
			Return Me._cndno
		End Get
		Set
			If (Me._cndno.Equals(value) = false) Then
				Me.OncndnoChanging(value)
				Me.SendPropertyChanging
				Me._cndno = value
				Me.SendPropertyChanged("cndno")
				Me.OncndnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_appvno", DbType:="VarChar(20)")>  _
	Public Property appvno() As String
		Get
			Return Me._appvno
		End Get
		Set
			If (String.Equals(Me._appvno, value) = false) Then
				Me.OnappvnoChanging(value)
				Me.SendPropertyChanging
				Me._appvno = value
				Me.SendPropertyChanged("appvno")
				Me.OnappvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lstfcd", DbType:="Int")>  _
	Public Property lstfcd() As System.Nullable(Of Integer)
		Get
			Return Me._lstfcd
		End Get
		Set
			If (Me._lstfcd.Equals(value) = false) Then
				Me.OnlstfcdChanging(value)
				Me.SendPropertyChanging
				Me._lstfcd = value
				Me.SendPropertyChanged("lstfcd")
				Me.OnlstfcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lmdfdate", DbType:="DateTime2")>  _
	Public Property lmdfdate() As System.Nullable(Of Date)
		Get
			Return Me._lmdfdate
		End Get
		Set
			If (Me._lmdfdate.Equals(value) = false) Then
				Me.OnlmdfdateChanging(value)
				Me.SendPropertyChanging
				Me._lmdfdate = value
				Me.SendPropertyChanged("lmdfdate")
				Me.OnlmdfdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_AT() As String
		Get
			Return Me._WRITE_AT
		End Get
		Set
			If (String.Equals(Me._WRITE_AT, value) = false) Then
				Me.OnWRITE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_AT = value
				Me.SendPropertyChanged("WRITE_AT")
				Me.OnWRITE_ATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_DATE", DbType:="DateTime")>  _
	Public Property WRITE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._WRITE_DATE
		End Get
		Set
			If (Me._WRITE_DATE.Equals(value) = false) Then
				Me.OnWRITE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_DATE = value
				Me.SendPropertyChanged("WRITE_DATE")
				Me.OnWRITE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUANTITY", DbType:="NVarChar(MAX)")>  _
	Public Property QUANTITY() As String
		Get
			Return Me._QUANTITY
		End Get
		Set
			If (String.Equals(Me._QUANTITY, value) = false) Then
				Me.OnQUANTITYChanging(value)
				Me.SendPropertyChanging
				Me._QUANTITY = value
				Me.SendPropertyChanged("QUANTITY")
				Me.OnQUANTITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTAIN_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property CONTAIN_DESCRIPTION() As String
		Get
			Return Me._CONTAIN_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._CONTAIN_DESCRIPTION, value) = false) Then
				Me.OnCONTAIN_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._CONTAIN_DESCRIPTION = value
				Me.SendPropertyChanged("CONTAIN_DESCRIPTION")
				Me.OnCONTAIN_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcv_id", DbType:="Int")>  _
	Public Property rcv_id() As System.Nullable(Of Integer)
		Get
			Return Me._rcv_id
		End Get
		Set
			If (Me._rcv_id.Equals(value) = false) Then
				Me.Onrcv_idChanging(value)
				Me.SendPropertyChanging
				Me._rcv_id = value
				Me.SendPropertyChanged("rcv_id")
				Me.Onrcv_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_QUANTITY", DbType:="NVarChar(MAX)")>  _
	Public Property PRODUCT_QUANTITY() As String
		Get
			Return Me._PRODUCT_QUANTITY
		End Get
		Set
			If (String.Equals(Me._PRODUCT_QUANTITY, value) = false) Then
				Me.OnPRODUCT_QUANTITYChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_QUANTITY = value
				Me.SendPropertyChanged("PRODUCT_QUANTITY")
				Me.OnPRODUCT_QUANTITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_ID_IDA", DbType:="Int")>  _
	Public Property PRODUCT_ID_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._PRODUCT_ID_IDA
		End Get
		Set
			If (Me._PRODUCT_ID_IDA.Equals(value) = false) Then
				Me.OnPRODUCT_ID_IDAChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_ID_IDA = value
				Me.SendPropertyChanged("PRODUCT_ID_IDA")
				Me.OnPRODUCT_ID_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_PRODUCT_FOR", DbType:="NVarChar(50)")>  _
	Public Property CHK_PRODUCT_FOR() As String
		Get
			Return Me._CHK_PRODUCT_FOR
		End Get
		Set
			If (String.Equals(Me._CHK_PRODUCT_FOR, value) = false) Then
				Me.OnCHK_PRODUCT_FORChanging(value)
				Me.SendPropertyChanging
				Me._CHK_PRODUCT_FOR = value
				Me.SendPropertyChanged("CHK_PRODUCT_FOR")
				Me.OnCHK_PRODUCT_FORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_PRODUCT_FOR_HUMAN", DbType:="NVarChar(50)")>  _
	Public Property CHK_PRODUCT_FOR_HUMAN() As String
		Get
			Return Me._CHK_PRODUCT_FOR_HUMAN
		End Get
		Set
			If (String.Equals(Me._CHK_PRODUCT_FOR_HUMAN, value) = false) Then
				Me.OnCHK_PRODUCT_FOR_HUMANChanging(value)
				Me.SendPropertyChanging
				Me._CHK_PRODUCT_FOR_HUMAN = value
				Me.SendPropertyChanged("CHK_PRODUCT_FOR_HUMAN")
				Me.OnCHK_PRODUCT_FOR_HUMANChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_OTHER_PRODUCT", DbType:="NVarChar(50)")>  _
	Public Property CHK_OTHER_PRODUCT() As String
		Get
			Return Me._CHK_OTHER_PRODUCT
		End Get
		Set
			If (String.Equals(Me._CHK_OTHER_PRODUCT, value) = false) Then
				Me.OnCHK_OTHER_PRODUCTChanging(value)
				Me.SendPropertyChanging
				Me._CHK_OTHER_PRODUCT = value
				Me.SendPropertyChanged("CHK_OTHER_PRODUCT")
				Me.OnCHK_OTHER_PRODUCTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK_OTHER_PRODUCT", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK_OTHER_PRODUCT() As String
		Get
			Return Me._REMARK_OTHER_PRODUCT
		End Get
		Set
			If (String.Equals(Me._REMARK_OTHER_PRODUCT, value) = false) Then
				Me.OnREMARK_OTHER_PRODUCTChanging(value)
				Me.SendPropertyChanging
				Me._REMARK_OTHER_PRODUCT = value
				Me.SendPropertyChanged("REMARK_OTHER_PRODUCT")
				Me.OnREMARK_OTHER_PRODUCTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NATURE", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NATURE() As String
		Get
			Return Me._DRUG_NATURE
		End Get
		Set
			If (String.Equals(Me._DRUG_NATURE, value) = false) Then
				Me.OnDRUG_NATUREChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NATURE = value
				Me.SendPropertyChanged("DRUG_NATURE")
				Me.OnDRUG_NATUREChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_UNIT", DbType:="Int")>  _
	Public Property PRODUCT_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._PRODUCT_UNIT
		End Get
		Set
			If (Me._PRODUCT_UNIT.Equals(value) = false) Then
				Me.OnPRODUCT_UNITChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_UNIT = value
				Me.SendPropertyChanged("PRODUCT_UNIT")
				Me.OnPRODUCT_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QUANTITY_UNIT", DbType:="Int")>  _
	Public Property QUANTITY_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._QUANTITY_UNIT
		End Get
		Set
			If (Me._QUANTITY_UNIT.Equals(value) = false) Then
				Me.OnQUANTITY_UNITChanging(value)
				Me.SendPropertyChanging
				Me._QUANTITY_UNIT = value
				Me.SendPropertyChanged("QUANTITY_UNIT")
				Me.OnQUANTITY_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMALL_UNIT", DbType:="Int")>  _
	Public Property SMALL_UNIT() As System.Nullable(Of Integer)
		Get
			Return Me._SMALL_UNIT
		End Get
		Set
			If (Me._SMALL_UNIT.Equals(value) = false) Then
				Me.OnSMALL_UNITChanging(value)
				Me.SendPropertyChanging
				Me._SMALL_UNIT = value
				Me.SendPropertyChanged("SMALL_UNIT")
				Me.OnSMALL_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UPDATE_DATE", DbType:="DateTime")>  _
	Public Property UPDATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._UPDATE_DATE
		End Get
		Set
			If (Me._UPDATE_DATE.Equals(value) = false) Then
				Me.OnUPDATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._UPDATE_DATE = value
				Me.SendPropertyChanged("UPDATE_DATE")
				Me.OnUPDATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_1", DbType:="NVarChar(50)")>  _
	Public Property CHK_1() As String
		Get
			Return Me._CHK_1
		End Get
		Set
			If (String.Equals(Me._CHK_1, value) = false) Then
				Me.OnCHK_1Changing(value)
				Me.SendPropertyChanging
				Me._CHK_1 = value
				Me.SendPropertyChanged("CHK_1")
				Me.OnCHK_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IN_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property IN_NAME() As String
		Get
			Return Me._IN_NAME
		End Get
		Set
			If (String.Equals(Me._IN_NAME, value) = false) Then
				Me.OnIN_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._IN_NAME = value
				Me.SendPropertyChanged("IN_NAME")
				Me.OnIN_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_krasuang", DbType:="NVarChar(MAX)")>  _
	Public Property krasuang() As String
		Get
			Return Me._krasuang
		End Get
		Set
			If (String.Equals(Me._krasuang, value) = false) Then
				Me.OnkrasuangChanging(value)
				Me.SendPropertyChanging
				Me._krasuang = value
				Me.SendPropertyChanged("krasuang")
				Me.OnkrasuangChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tabuang", DbType:="NVarChar(MAX)")>  _
	Public Property tabuang() As String
		Get
			Return Me._tabuang
		End Get
		Set
			If (String.Equals(Me._tabuang, value) = false) Then
				Me.OntabuangChanging(value)
				Me.SendPropertyChanging
				Me._tabuang = value
				Me.SendPropertyChanged("tabuang")
				Me.OntabuangChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_kom", DbType:="NVarChar(MAX)")>  _
	Public Property kom() As String
		Get
			Return Me._kom
		End Get
		Set
			If (String.Equals(Me._kom, value) = false) Then
				Me.OnkomChanging(value)
				Me.SendPropertyChanging
				Me._kom = value
				Me.SendPropertyChanged("kom")
				Me.OnkomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pootane", DbType:="NVarChar(MAX)")>  _
	Public Property pootane() As String
		Get
			Return Me._pootane
		End Get
		Set
			If (String.Equals(Me._pootane, value) = false) Then
				Me.OnpootaneChanging(value)
				Me.SendPropertyChanging
				Me._pootane = value
				Me.SendPropertyChanged("pootane")
				Me.OnpootaneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_samakom", DbType:="NVarChar(MAX)")>  _
	Public Property samakom() As String
		Get
			Return Me._samakom
		End Get
		Set
			If (String.Equals(Me._samakom, value) = false) Then
				Me.OnsamakomChanging(value)
				Me.SendPropertyChanging
				Me._samakom = value
				Me.SendPropertyChanged("samakom")
				Me.OnsamakomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_moolniti", DbType:="NVarChar(MAX)")>  _
	Public Property moolniti() As String
		Get
			Return Me._moolniti
		End Get
		Set
			If (String.Equals(Me._moolniti, value) = false) Then
				Me.OnmoolnitiChanging(value)
				Me.SendPropertyChanging
				Me._moolniti = value
				Me.SendPropertyChanged("moolniti")
				Me.OnmoolnitiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_give_to", DbType:="NVarChar(MAX)")>  _
	Public Property give_to() As String
		Get
			Return Me._give_to
		End Get
		Set
			If (String.Equals(Me._give_to, value) = false) Then
				Me.Ongive_toChanging(value)
				Me.SendPropertyChanging
				Me._give_to = value
				Me.SendPropertyChanged("give_to")
				Me.Ongive_toChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_give_to_taxno", DbType:="NVarChar(MAX)")>  _
	Public Property give_to_taxno() As String
		Get
			Return Me._give_to_taxno
		End Get
		Set
			If (String.Equals(Me._give_to_taxno, value) = false) Then
				Me.Ongive_to_taxnoChanging(value)
				Me.SendPropertyChanging
				Me._give_to_taxno = value
				Me.SendPropertyChanged("give_to_taxno")
				Me.Ongive_to_taxnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_donate_type", DbType:="Int")>  _
	Public Property donate_type() As System.Nullable(Of Integer)
		Get
			Return Me._donate_type
		End Get
		Set
			If (Me._donate_type.Equals(value) = false) Then
				Me.Ondonate_typeChanging(value)
				Me.SendPropertyChanging
				Me._donate_type = value
				Me.SendPropertyChanged("donate_type")
				Me.Ondonate_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_PERMISSION_REQUEST", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_PERMISSION_REQUEST() As String
		Get
			Return Me._CHK_PERMISSION_REQUEST
		End Get
		Set
			If (String.Equals(Me._CHK_PERMISSION_REQUEST, value) = false) Then
				Me.OnCHK_PERMISSION_REQUESTChanging(value)
				Me.SendPropertyChanging
				Me._CHK_PERMISSION_REQUEST = value
				Me.SendPropertyChanged("CHK_PERMISSION_REQUEST")
				Me.OnCHK_PERMISSION_REQUESTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_PERMISSION_GET", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_PERMISSION_GET() As String
		Get
			Return Me._CHK_PERMISSION_GET
		End Get
		Set
			If (String.Equals(Me._CHK_PERMISSION_GET, value) = false) Then
				Me.OnCHK_PERMISSION_GETChanging(value)
				Me.SendPropertyChanging
				Me._CHK_PERMISSION_GET = value
				Me.SendPropertyChanged("CHK_PERMISSION_GET")
				Me.OnCHK_PERMISSION_GETChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_PERMISSION_ASK", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_PERMISSION_ASK() As String
		Get
			Return Me._CHK_PERMISSION_ASK
		End Get
		Set
			If (String.Equals(Me._CHK_PERMISSION_ASK, value) = false) Then
				Me.OnCHK_PERMISSION_ASKChanging(value)
				Me.SendPropertyChanging
				Me._CHK_PERMISSION_ASK = value
				Me.SendPropertyChanged("CHK_PERMISSION_ASK")
				Me.OnCHK_PERMISSION_ASKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_PERMISSION_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_PERMISSION_DESCRIPTION() As String
		Get
			Return Me._CHK_PERMISSION_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._CHK_PERMISSION_DESCRIPTION, value) = false) Then
				Me.OnCHK_PERMISSION_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._CHK_PERMISSION_DESCRIPTION = value
				Me.SendPropertyChanged("CHK_PERMISSION_DESCRIPTION")
				Me.OnCHK_PERMISSION_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_MANUFACTURE_ORDER", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_MANUFACTURE_ORDER() As String
		Get
			Return Me._CHK_MANUFACTURE_ORDER
		End Get
		Set
			If (String.Equals(Me._CHK_MANUFACTURE_ORDER, value) = false) Then
				Me.OnCHK_MANUFACTURE_ORDERChanging(value)
				Me.SendPropertyChanging
				Me._CHK_MANUFACTURE_ORDER = value
				Me.SendPropertyChanged("CHK_MANUFACTURE_ORDER")
				Me.OnCHK_MANUFACTURE_ORDERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RANK", DbType:="NVarChar(50)")>  _
	Public Property RANK() As String
		Get
			Return Me._RANK
		End Get
		Set
			If (String.Equals(Me._RANK, value) = false) Then
				Me.OnRANKChanging(value)
				Me.SendPropertyChanging
				Me._RANK = value
				Me.SendPropertyChanged("RANK")
				Me.OnRANKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_FOR_OTHER", DbType:="NVarChar(50)")>  _
	Public Property CHK_FOR_OTHER() As String
		Get
			Return Me._CHK_FOR_OTHER
		End Get
		Set
			If (String.Equals(Me._CHK_FOR_OTHER, value) = false) Then
				Me.OnCHK_FOR_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._CHK_FOR_OTHER = value
				Me.SendPropertyChanged("CHK_FOR_OTHER")
				Me.OnCHK_FOR_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RCVNO_MANUAL", DbType:="NVarChar(30)")>  _
	Public Property RCVNO_MANUAL() As String
		Get
			Return Me._RCVNO_MANUAL
		End Get
		Set
			If (String.Equals(Me._RCVNO_MANUAL, value) = false) Then
				Me.OnRCVNO_MANUALChanging(value)
				Me.SendPropertyChanging
				Me._RCVNO_MANUAL = value
				Me.SendPropertyChanged("RCVNO_MANUAL")
				Me.OnRCVNO_MANUALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPORARY_RCVNO", DbType:="NVarChar(50)")>  _
	Public Property TEMPORARY_RCVNO() As String
		Get
			Return Me._TEMPORARY_RCVNO
		End Get
		Set
			If (String.Equals(Me._TEMPORARY_RCVNO, value) = false) Then
				Me.OnTEMPORARY_RCVNOChanging(value)
				Me.SendPropertyChanging
				Me._TEMPORARY_RCVNO = value
				Me.SendPropertyChanged("TEMPORARY_RCVNO")
				Me.OnTEMPORARY_RCVNOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEMPLATE_ID", DbType:="Int")>  _
	Public Property TEMPLATE_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TEMPLATE_ID
		End Get
		Set
			If (Me._TEMPLATE_ID.Equals(value) = false) Then
				Me.OnTEMPLATE_IDChanging(value)
				Me.SendPropertyChanging
				Me._TEMPLATE_ID = value
				Me.SendPropertyChanged("TEMPLATE_ID")
				Me.OnTEMPLATE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvr_id", DbType:="Int")>  _
	Public Property rcvr_id() As System.Nullable(Of Integer)
		Get
			Return Me._rcvr_id
		End Get
		Set
			If (Me._rcvr_id.Equals(value) = false) Then
				Me.Onrcvr_idChanging(value)
				Me.SendPropertyChanging
				Me._rcvr_id = value
				Me.SendPropertyChanged("rcvr_id")
				Me.Onrcvr_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_SUBMIT", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_SUBMIT() As String
		Get
			Return Me._CITIZEN_SUBMIT
		End Get
		Set
			If (String.Equals(Me._CITIZEN_SUBMIT, value) = false) Then
				Me.OnCITIZEN_SUBMITChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_SUBMIT = value
				Me.SendPropertyChanged("CITIZEN_SUBMIT")
				Me.OnCITIZEN_SUBMITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_RCV", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_RCV() As String
		Get
			Return Me._CITIZEN_RCV
		End Get
		Set
			If (String.Equals(Me._CITIZEN_RCV, value) = false) Then
				Me.OnCITIZEN_RCVChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_RCV = value
				Me.SendPropertyChanged("CITIZEN_RCV")
				Me.OnCITIZEN_RCVChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PJSUM_IDA", DbType:="Int")>  _
	Public Property PJSUM_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._PJSUM_IDA
		End Get
		Set
			If (Me._PJSUM_IDA.Equals(value) = false) Then
				Me.OnPJSUM_IDAChanging(value)
				Me.SendPropertyChanging
				Me._PJSUM_IDA = value
				Me.SendPropertyChanged("PJSUM_IDA")
				Me.OnPJSUM_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pj_lo", DbType:="NVarChar(MAX)")>  _
	Public Property pj_lo() As String
		Get
			Return Me._pj_lo
		End Get
		Set
			If (String.Equals(Me._pj_lo, value) = false) Then
				Me.Onpj_loChanging(value)
				Me.SendPropertyChanging
				Me._pj_lo = value
				Me.SendPropertyChanged("pj_lo")
				Me.Onpj_loChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pjengnm", DbType:="NVarChar(MAX)")>  _
	Public Property pjengnm() As String
		Get
			Return Me._pjengnm
		End Get
		Set
			If (String.Equals(Me._pjengnm, value) = false) Then
				Me.OnpjengnmChanging(value)
				Me.SendPropertyChanging
				Me._pjengnm = value
				Me.SendPropertyChanged("pjengnm")
				Me.OnpjengnmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pjthanm", DbType:="NVarChar(MAX)")>  _
	Public Property pjthanm() As String
		Get
			Return Me._pjthanm
		End Get
		Set
			If (String.Equals(Me._pjthanm, value) = false) Then
				Me.OnpjthanmChanging(value)
				Me.SendPropertyChanging
				Me._pjthanm = value
				Me.SendPropertyChanged("pjthanm")
				Me.OnpjthanmChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pj_number", DbType:="NVarChar(MAX)")>  _
	Public Property pj_number() As String
		Get
			Return Me._pj_number
		End Get
		Set
			If (String.Equals(Me._pj_number, value) = false) Then
				Me.Onpj_numberChanging(value)
				Me.SendPropertyChanging
				Me._pj_number = value
				Me.SendPropertyChanged("pj_number")
				Me.Onpj_numberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_event_start", DbType:="Date")>  _
	Public Property event_start() As System.Nullable(Of Date)
		Get
			Return Me._event_start
		End Get
		Set
			If (Me._event_start.Equals(value) = false) Then
				Me.Onevent_startChanging(value)
				Me.SendPropertyChanging
				Me._event_start = value
				Me.SendPropertyChanged("event_start")
				Me.Onevent_startChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_event_end", DbType:="Date")>  _
	Public Property event_end() As System.Nullable(Of Date)
		Get
			Return Me._event_end
		End Get
		Set
			If (Me._event_end.Equals(value) = false) Then
				Me.Onevent_endChanging(value)
				Me.SendPropertyChanging
				Me._event_end = value
				Me.SendPropertyChanged("event_end")
				Me.Onevent_endChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phr_fk", DbType:="Int")>  _
	Public Property phr_fk() As System.Nullable(Of Integer)
		Get
			Return Me._phr_fk
		End Get
		Set
			If (Me._phr_fk.Equals(value) = false) Then
				Me.Onphr_fkChanging(value)
				Me.SendPropertyChanging
				Me._phr_fk = value
				Me.SendPropertyChanged("phr_fk")
				Me.Onphr_fkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_staff_approved_iden", DbType:="NVarChar(MAX)")>  _
	Public Property staff_approved_iden() As String
		Get
			Return Me._staff_approved_iden
		End Get
		Set
			If (String.Equals(Me._staff_approved_iden, value) = false) Then
				Me.Onstaff_approved_idenChanging(value)
				Me.SendPropertyChanging
				Me._staff_approved_iden = value
				Me.SendPropertyChanged("staff_approved_iden")
				Me.Onstaff_approved_idenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ref_no", DbType:="NVarChar(MAX)")>  _
	Public Property Ref_no() As String
		Get
			Return Me._Ref_no
		End Get
		Set
			If (String.Equals(Me._Ref_no, value) = false) Then
				Me.OnRef_noChanging(value)
				Me.SendPropertyChanging
				Me._Ref_no = value
				Me.SendPropertyChanged("Ref_no")
				Me.OnRef_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSTOMER_CITIZEN_SUBMIT", DbType:="NVarChar(MAX)")>  _
	Public Property CUSTOMER_CITIZEN_SUBMIT() As String
		Get
			Return Me._CUSTOMER_CITIZEN_SUBMIT
		End Get
		Set
			If (String.Equals(Me._CUSTOMER_CITIZEN_SUBMIT, value) = false) Then
				Me.OnCUSTOMER_CITIZEN_SUBMITChanging(value)
				Me.SendPropertyChanging
				Me._CUSTOMER_CITIZEN_SUBMIT = value
				Me.SendPropertyChanged("CUSTOMER_CITIZEN_SUBMIT")
				Me.OnCUSTOMER_CITIZEN_SUBMITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUSTOMER_CITIZEN_AUTHORIZE", DbType:="NVarChar(MAX)")>  _
	Public Property CUSTOMER_CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CUSTOMER_CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CUSTOMER_CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCUSTOMER_CITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CUSTOMER_CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CUSTOMER_CITIZEN_AUTHORIZE")
				Me.OnCUSTOMER_CITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_process_id", DbType:="NVarChar(MAX)")>  _
	Public Property process_id() As String
		Get
			Return Me._process_id
		End Get
		Set
			If (String.Equals(Me._process_id, value) = false) Then
				Me.Onprocess_idChanging(value)
				Me.SendPropertyChanging
				Me._process_id = value
				Me.SendPropertyChanged("process_id")
				Me.Onprocess_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK_OTHER() As String
		Get
			Return Me._REMARK_OTHER
		End Get
		Set
			If (String.Equals(Me._REMARK_OTHER, value) = false) Then
				Me.OnREMARK_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._REMARK_OTHER = value
				Me.SendPropertyChanged("REMARK_OTHER")
				Me.OnREMARK_OTHERChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LOG_CHANGE_STATUS_MN")>  _
Partial Public Class LOG_CHANGE_STATUS_MN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As String
	
	Private _STATUS_DATE As System.Nullable(Of Date)
	
	Private _IDENTIFY As String
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnSTATUS_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSTATUS_DATEChanged()
    End Sub
    Partial Private Sub OnIDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnIDENTIFYChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_DATE", DbType:="DateTime")>  _
	Public Property STATUS_DATE() As System.Nullable(Of Date)
		Get
			Return Me._STATUS_DATE
		End Get
		Set
			If (Me._STATUS_DATE.Equals(value) = false) Then
				Me.OnSTATUS_DATEChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_DATE = value
				Me.SendPropertyChanged("STATUS_DATE")
				Me.OnSTATUS_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property IDENTIFY() As String
		Get
			Return Me._IDENTIFY
		End Get
		Set
			If (String.Equals(Me._IDENTIFY, value) = false) Then
				Me.OnIDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._IDENTIFY = value
				Me.SendPropertyChanged("IDENTIFY")
				Me.OnIDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRSAMP_EDIT_REQUEST")>  _
Partial Public Class DRSAMP_EDIT_REQUEST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _FK_REGISTRATION As System.Nullable(Of Integer)
	
	Private _lcntpcd As String
	
	Private _CITIZEN_AUTHORIZE As String
	
	Private _DESCRIPTION As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _PROCESS_ID As System.Nullable(Of Integer)
	
	Private _CITIZEN_STAFF As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnFK_REGISTRATIONChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_REGISTRATIONChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_STAFFChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_STAFFChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_REGISTRATION", DbType:="Int")>  _
	Public Property FK_REGISTRATION() As System.Nullable(Of Integer)
		Get
			Return Me._FK_REGISTRATION
		End Get
		Set
			If (Me._FK_REGISTRATION.Equals(value) = false) Then
				Me.OnFK_REGISTRATIONChanging(value)
				Me.SendPropertyChanging
				Me._FK_REGISTRATION = value
				Me.SendPropertyChanged("FK_REGISTRATION")
				Me.OnFK_REGISTRATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(50)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="Date")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="Int")>  _
	Public Property PROCESS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (Me._PROCESS_ID.Equals(value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_STAFF", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_STAFF() As String
		Get
			Return Me._CITIZEN_STAFF
		End Get
		Set
			If (String.Equals(Me._CITIZEN_STAFF, value) = false) Then
				Me.OnCITIZEN_STAFFChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_STAFF = value
				Me.SendPropertyChanged("CITIZEN_STAFF")
				Me.OnCITIZEN_STAFFChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_EDIT_APPOINTMENT")>  _
Partial Public Class DRRGT_EDIT_APPOINTMENT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _TYPE_REQUESTS_ID As String
	
	Private _APPOINT_DATE As System.Nullable(Of Date)
	
	Private _APPOINT_DAY As System.Nullable(Of Integer)
	
	Private _REQUEST_DATE As System.Nullable(Of Date)
	
	Private _CITIZEN_AUTHORIZE As String
	
	Private _OWN_STAFF_IDENTIFY As String
	
	Private _OWN_STAFF_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_IDChanged()
    End Sub
    Partial Private Sub OnAPPOINT_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnAPPOINT_DATEChanged()
    End Sub
    Partial Private Sub OnAPPOINT_DAYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAPPOINT_DAYChanged()
    End Sub
    Partial Private Sub OnREQUEST_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnREQUEST_DATEChanged()
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnOWN_STAFF_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnOWN_STAFF_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnOWN_STAFF_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnOWN_STAFF_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_REQUESTS_ID", DbType:="NVarChar(50)")>  _
	Public Property TYPE_REQUESTS_ID() As String
		Get
			Return Me._TYPE_REQUESTS_ID
		End Get
		Set
			If (String.Equals(Me._TYPE_REQUESTS_ID, value) = false) Then
				Me.OnTYPE_REQUESTS_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_REQUESTS_ID = value
				Me.SendPropertyChanged("TYPE_REQUESTS_ID")
				Me.OnTYPE_REQUESTS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPOINT_DATE", DbType:="DateTime")>  _
	Public Property APPOINT_DATE() As System.Nullable(Of Date)
		Get
			Return Me._APPOINT_DATE
		End Get
		Set
			If (Me._APPOINT_DATE.Equals(value) = false) Then
				Me.OnAPPOINT_DATEChanging(value)
				Me.SendPropertyChanging
				Me._APPOINT_DATE = value
				Me.SendPropertyChanged("APPOINT_DATE")
				Me.OnAPPOINT_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APPOINT_DAY", DbType:="Int")>  _
	Public Property APPOINT_DAY() As System.Nullable(Of Integer)
		Get
			Return Me._APPOINT_DAY
		End Get
		Set
			If (Me._APPOINT_DAY.Equals(value) = false) Then
				Me.OnAPPOINT_DAYChanging(value)
				Me.SendPropertyChanging
				Me._APPOINT_DAY = value
				Me.SendPropertyChanged("APPOINT_DAY")
				Me.OnAPPOINT_DAYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REQUEST_DATE", DbType:="DateTime")>  _
	Public Property REQUEST_DATE() As System.Nullable(Of Date)
		Get
			Return Me._REQUEST_DATE
		End Get
		Set
			If (Me._REQUEST_DATE.Equals(value) = false) Then
				Me.OnREQUEST_DATEChanging(value)
				Me.SendPropertyChanging
				Me._REQUEST_DATE = value
				Me.SendPropertyChanged("REQUEST_DATE")
				Me.OnREQUEST_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_AUTHORIZE", DbType:="NVarChar(50)")>  _
	Public Property CITIZEN_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_AUTHORIZE")
				Me.OnCITIZEN_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OWN_STAFF_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property OWN_STAFF_IDENTIFY() As String
		Get
			Return Me._OWN_STAFF_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._OWN_STAFF_IDENTIFY, value) = false) Then
				Me.OnOWN_STAFF_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._OWN_STAFF_IDENTIFY = value
				Me.SendPropertyChanged("OWN_STAFF_IDENTIFY")
				Me.OnOWN_STAFF_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OWN_STAFF_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property OWN_STAFF_NAME() As String
		Get
			Return Me._OWN_STAFF_NAME
		End Get
		Set
			If (String.Equals(Me._OWN_STAFF_NAME, value) = false) Then
				Me.OnOWN_STAFF_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._OWN_STAFF_NAME = value
				Me.SendPropertyChanged("OWN_STAFF_NAME")
				Me.OnOWN_STAFF_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DRRGT_EDIT_REQUEST")>  _
Partial Public Class DRRGT_EDIT_REQUEST
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _lcnno As System.Nullable(Of Integer)
	
	Private _lcntpcd As String
	
	Private _pvncd As System.Nullable(Of Integer)
	
	Private _pvnabbr As String
	
	Private _lcnsid As System.Nullable(Of Integer)
	
	Private _TR_ID As System.Nullable(Of Integer)
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _LCN_IDA As System.Nullable(Of Integer)
	
	Private _STATUS_ID As System.Nullable(Of Integer)
	
	Private _CITIZEN_ID_UPLOAD As String
	
	Private _CITIZEN_ID_AUTHORIZE As String
	
	Private _PROCESS_ID As String
	
	Private _EDIT_DESCRIPTION As String
	
	Private _cnccd As System.Nullable(Of Integer)
	
	Private _cnccscd As System.Nullable(Of Integer)
	
	Private _cncdate As System.Nullable(Of Date)
	
	Private _rcvno As System.Nullable(Of Integer)
	
	Private _rcvdate As System.Nullable(Of Date)
	
	Private _CHK_TYPE1 As String
	
	Private _CHK_TYPE2 As String
	
	Private _CHK_TYPE3 As String
	
	Private _CHK_TYPE4 As String
	
	Private _CHK_TYPE5 As String
	
	Private _CHK_TYPE6 As String
	
	Private _CHK_TYPE7 As String
	
	Private _CHK_TYPE8 As String
	
	Private _CHK_TYPE9 As String
	
	Private _STAFF_EDIT_FROM As String
	
	Private _STAFF_EDIT_NEW As String
	
	Private _CHK_TYPE10 As String
	
	Private _CHK_TYPE11 As String
	
	Private _CHK_TYPE12 As String
	
	Private _CHK_TYPE13 As String
	
	Private _CHK_TYPE14 As String
	
	Private _CHK_TYPE15 As String
	
	Private _CHK_TYPE16 As String
	
	Private _CHK_TYPE17 As String
	
	Private _CHK_TYPE18 As String
	
	Private _CHK_TYPE19 As String
	
	Private _CHK_TYPE20 As String
	
	Private _CHK_TYPE21 As String
	
	Private _CHK_TYPE22 As String
	
	Private _OTHER_ORDER As String
	
	Private _CONSIDER_DATE As System.Nullable(Of Date)
	
	Private _CHK_TYPE23 As String
	
	Private _CHK_TYPE24 As String
	
	Private _CHK_TYPE25 As String
	
	Private _CHK_TYPE26 As String
	
	Private _CHK_TYPE27 As String
	
	Private _CHK_TYPE28 As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _DRUG_NAME_TH As String
	
	Private _DRUG_NAME_EN As String
	
	Private _REMARK As String
	
	Private _DRUG_DESCRIPTION As String
	
	Private _EDIT_OLD_DESCRIPTION As String
	
	Private _EDIT_NEW_DESCRIPTION As String
	
	Private _PHR_IDENTIFY As String
	
	Private _PHR_NAME As String
	
	Private _TYPE_REQUESTS_ID As String
	
	Private _A_NO As String
	
	Private _STAFF_IDEN_RECEIVE As String
	
	Private _AMOUNT As String
	
	Private _AMOUNT_CAL As String
	
	Private _CHK_ATTACH1 As String
	
	Private _CHK_ATTACH2 As String
	
	Private _CHK_ATTACH3 As String
	
	Private _CHK_ATTACH4 As String
	
	Private _ATTACH4_OTHER As String
	
	Private _DETAIL_YOR4 As String
	
	Private _drgtpcd As String
	
	Private _RQT_TYPE As String
	
	Private _RQT_IDENTIFY As String
	
	Private _SIGN_POSITION As String
	
	Private _OWN_STAFF_IDENTIFY As String
	
	Private _OWN_STAFF_NAME As String
	
	Private _WRITE_AT As String
	
	Private _WRITE_DATE As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnlcnnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnnoChanged()
    End Sub
    Partial Private Sub OnlcntpcdChanging(value As String)
    End Sub
    Partial Private Sub OnlcntpcdChanged()
    End Sub
    Partial Private Sub OnpvncdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnpvncdChanged()
    End Sub
    Partial Private Sub OnpvnabbrChanging(value As String)
    End Sub
    Partial Private Sub OnpvnabbrChanged()
    End Sub
    Partial Private Sub OnlcnsidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnlcnsidChanged()
    End Sub
    Partial Private Sub OnTR_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTR_IDChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnLCN_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLCN_IDAChanged()
    End Sub
    Partial Private Sub OnSTATUS_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSTATUS_IDChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_UPLOADChanged()
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanging(value As String)
    End Sub
    Partial Private Sub OnCITIZEN_ID_AUTHORIZEChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnEDIT_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnEDIT_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OncnccdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncnccdChanged()
    End Sub
    Partial Private Sub OncnccscdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncnccscdChanged()
    End Sub
    Partial Private Sub OncncdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncncdateChanged()
    End Sub
    Partial Private Sub OnrcvnoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrcvnoChanged()
    End Sub
    Partial Private Sub OnrcvdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnrcvdateChanged()
    End Sub
    Partial Private Sub OnCHK_TYPE1Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE1Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE2Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE2Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE3Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE3Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE4Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE4Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE5Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE5Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE6Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE6Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE7Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE7Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE8Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE8Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE9Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE9Changed()
    End Sub
    Partial Private Sub OnSTAFF_EDIT_FROMChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_EDIT_FROMChanged()
    End Sub
    Partial Private Sub OnSTAFF_EDIT_NEWChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_EDIT_NEWChanged()
    End Sub
    Partial Private Sub OnCHK_TYPE10Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE10Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE11Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE11Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE12Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE12Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE13Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE13Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE14Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE14Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE15Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE15Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE16Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE16Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE17Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE17Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE18Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE18Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE19Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE19Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE20Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE20Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE21Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE21Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE22Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE22Changed()
    End Sub
    Partial Private Sub OnOTHER_ORDERChanging(value As String)
    End Sub
    Partial Private Sub OnOTHER_ORDERChanged()
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCONSIDER_DATEChanged()
    End Sub
    Partial Private Sub OnCHK_TYPE23Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE23Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE24Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE24Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE25Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE25Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE26Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE26Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE27Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE27Changed()
    End Sub
    Partial Private Sub OnCHK_TYPE28Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_TYPE28Changed()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnDRUG_NAME_THChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NAME_THChanged()
    End Sub
    Partial Private Sub OnDRUG_NAME_ENChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_NAME_ENChanged()
    End Sub
    Partial Private Sub OnREMARKChanging(value As String)
    End Sub
    Partial Private Sub OnREMARKChanged()
    End Sub
    Partial Private Sub OnDRUG_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDRUG_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnEDIT_OLD_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnEDIT_OLD_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnEDIT_NEW_DESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnEDIT_NEW_DESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnPHR_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnPHR_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPHR_NAMEChanged()
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnTYPE_REQUESTS_IDChanged()
    End Sub
    Partial Private Sub OnA_NOChanging(value As String)
    End Sub
    Partial Private Sub OnA_NOChanged()
    End Sub
    Partial Private Sub OnSTAFF_IDEN_RECEIVEChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_IDEN_RECEIVEChanged()
    End Sub
    Partial Private Sub OnAMOUNTChanging(value As String)
    End Sub
    Partial Private Sub OnAMOUNTChanged()
    End Sub
    Partial Private Sub OnAMOUNT_CALChanging(value As String)
    End Sub
    Partial Private Sub OnAMOUNT_CALChanged()
    End Sub
    Partial Private Sub OnCHK_ATTACH1Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_ATTACH1Changed()
    End Sub
    Partial Private Sub OnCHK_ATTACH2Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_ATTACH2Changed()
    End Sub
    Partial Private Sub OnCHK_ATTACH3Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_ATTACH3Changed()
    End Sub
    Partial Private Sub OnCHK_ATTACH4Changing(value As String)
    End Sub
    Partial Private Sub OnCHK_ATTACH4Changed()
    End Sub
    Partial Private Sub OnATTACH4_OTHERChanging(value As String)
    End Sub
    Partial Private Sub OnATTACH4_OTHERChanged()
    End Sub
    Partial Private Sub OnDETAIL_YOR4Changing(value As String)
    End Sub
    Partial Private Sub OnDETAIL_YOR4Changed()
    End Sub
    Partial Private Sub OndrgtpcdChanging(value As String)
    End Sub
    Partial Private Sub OndrgtpcdChanged()
    End Sub
    Partial Private Sub OnRQT_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnRQT_TYPEChanged()
    End Sub
    Partial Private Sub OnRQT_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnRQT_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnSIGN_POSITIONChanging(value As String)
    End Sub
    Partial Private Sub OnSIGN_POSITIONChanged()
    End Sub
    Partial Private Sub OnOWN_STAFF_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnOWN_STAFF_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnOWN_STAFF_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnOWN_STAFF_NAMEChanged()
    End Sub
    Partial Private Sub OnWRITE_ATChanging(value As String)
    End Sub
    Partial Private Sub OnWRITE_ATChanged()
    End Sub
    Partial Private Sub OnWRITE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnWRITE_DATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnno", DbType:="Int")>  _
	Public Property lcnno() As System.Nullable(Of Integer)
		Get
			Return Me._lcnno
		End Get
		Set
			If (Me._lcnno.Equals(value) = false) Then
				Me.OnlcnnoChanging(value)
				Me.SendPropertyChanging
				Me._lcnno = value
				Me.SendPropertyChanged("lcnno")
				Me.OnlcnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcntpcd", DbType:="NVarChar(50)")>  _
	Public Property lcntpcd() As String
		Get
			Return Me._lcntpcd
		End Get
		Set
			If (String.Equals(Me._lcntpcd, value) = false) Then
				Me.OnlcntpcdChanging(value)
				Me.SendPropertyChanging
				Me._lcntpcd = value
				Me.SendPropertyChanged("lcntpcd")
				Me.OnlcntpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvncd", DbType:="Int")>  _
	Public Property pvncd() As System.Nullable(Of Integer)
		Get
			Return Me._pvncd
		End Get
		Set
			If (Me._pvncd.Equals(value) = false) Then
				Me.OnpvncdChanging(value)
				Me.SendPropertyChanging
				Me._pvncd = value
				Me.SendPropertyChanged("pvncd")
				Me.OnpvncdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pvnabbr", DbType:="NVarChar(MAX)")>  _
	Public Property pvnabbr() As String
		Get
			Return Me._pvnabbr
		End Get
		Set
			If (String.Equals(Me._pvnabbr, value) = false) Then
				Me.OnpvnabbrChanging(value)
				Me.SendPropertyChanging
				Me._pvnabbr = value
				Me.SendPropertyChanged("pvnabbr")
				Me.OnpvnabbrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lcnsid", DbType:="Int")>  _
	Public Property lcnsid() As System.Nullable(Of Integer)
		Get
			Return Me._lcnsid
		End Get
		Set
			If (Me._lcnsid.Equals(value) = false) Then
				Me.OnlcnsidChanging(value)
				Me.SendPropertyChanging
				Me._lcnsid = value
				Me.SendPropertyChanged("lcnsid")
				Me.OnlcnsidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TR_ID", DbType:="Int")>  _
	Public Property TR_ID() As System.Nullable(Of Integer)
		Get
			Return Me._TR_ID
		End Get
		Set
			If (Me._TR_ID.Equals(value) = false) Then
				Me.OnTR_IDChanging(value)
				Me.SendPropertyChanging
				Me._TR_ID = value
				Me.SendPropertyChanged("TR_ID")
				Me.OnTR_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCN_IDA", DbType:="Int")>  _
	Public Property LCN_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._LCN_IDA
		End Get
		Set
			If (Me._LCN_IDA.Equals(value) = false) Then
				Me.OnLCN_IDAChanging(value)
				Me.SendPropertyChanging
				Me._LCN_IDA = value
				Me.SendPropertyChanged("LCN_IDA")
				Me.OnLCN_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS_ID", DbType:="Int")>  _
	Public Property STATUS_ID() As System.Nullable(Of Integer)
		Get
			Return Me._STATUS_ID
		End Get
		Set
			If (Me._STATUS_ID.Equals(value) = false) Then
				Me.OnSTATUS_IDChanging(value)
				Me.SendPropertyChanging
				Me._STATUS_ID = value
				Me.SendPropertyChanged("STATUS_ID")
				Me.OnSTATUS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_UPLOAD", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_UPLOAD() As String
		Get
			Return Me._CITIZEN_ID_UPLOAD
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_UPLOAD, value) = false) Then
				Me.OnCITIZEN_ID_UPLOADChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_UPLOAD = value
				Me.SendPropertyChanged("CITIZEN_ID_UPLOAD")
				Me.OnCITIZEN_ID_UPLOADChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITIZEN_ID_AUTHORIZE", DbType:="NVarChar(MAX)")>  _
	Public Property CITIZEN_ID_AUTHORIZE() As String
		Get
			Return Me._CITIZEN_ID_AUTHORIZE
		End Get
		Set
			If (String.Equals(Me._CITIZEN_ID_AUTHORIZE, value) = false) Then
				Me.OnCITIZEN_ID_AUTHORIZEChanging(value)
				Me.SendPropertyChanging
				Me._CITIZEN_ID_AUTHORIZE = value
				Me.SendPropertyChanged("CITIZEN_ID_AUTHORIZE")
				Me.OnCITIZEN_ID_AUTHORIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(50)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property EDIT_DESCRIPTION() As String
		Get
			Return Me._EDIT_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._EDIT_DESCRIPTION, value) = false) Then
				Me.OnEDIT_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_DESCRIPTION = value
				Me.SendPropertyChanged("EDIT_DESCRIPTION")
				Me.OnEDIT_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccd", DbType:="Int")>  _
	Public Property cnccd() As System.Nullable(Of Integer)
		Get
			Return Me._cnccd
		End Get
		Set
			If (Me._cnccd.Equals(value) = false) Then
				Me.OncnccdChanging(value)
				Me.SendPropertyChanging
				Me._cnccd = value
				Me.SendPropertyChanged("cnccd")
				Me.OncnccdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnccscd", DbType:="Int")>  _
	Public Property cnccscd() As System.Nullable(Of Integer)
		Get
			Return Me._cnccscd
		End Get
		Set
			If (Me._cnccscd.Equals(value) = false) Then
				Me.OncnccscdChanging(value)
				Me.SendPropertyChanging
				Me._cnccscd = value
				Me.SendPropertyChanged("cnccscd")
				Me.OncnccscdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cncdate", DbType:="DateTime")>  _
	Public Property cncdate() As System.Nullable(Of Date)
		Get
			Return Me._cncdate
		End Get
		Set
			If (Me._cncdate.Equals(value) = false) Then
				Me.OncncdateChanging(value)
				Me.SendPropertyChanging
				Me._cncdate = value
				Me.SendPropertyChanged("cncdate")
				Me.OncncdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvno", DbType:="Int")>  _
	Public Property rcvno() As System.Nullable(Of Integer)
		Get
			Return Me._rcvno
		End Get
		Set
			If (Me._rcvno.Equals(value) = false) Then
				Me.OnrcvnoChanging(value)
				Me.SendPropertyChanging
				Me._rcvno = value
				Me.SendPropertyChanged("rcvno")
				Me.OnrcvnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rcvdate", DbType:="DateTime")>  _
	Public Property rcvdate() As System.Nullable(Of Date)
		Get
			Return Me._rcvdate
		End Get
		Set
			If (Me._rcvdate.Equals(value) = false) Then
				Me.OnrcvdateChanging(value)
				Me.SendPropertyChanging
				Me._rcvdate = value
				Me.SendPropertyChanged("rcvdate")
				Me.OnrcvdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE1", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE1() As String
		Get
			Return Me._CHK_TYPE1
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE1, value) = false) Then
				Me.OnCHK_TYPE1Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE1 = value
				Me.SendPropertyChanged("CHK_TYPE1")
				Me.OnCHK_TYPE1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE2", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE2() As String
		Get
			Return Me._CHK_TYPE2
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE2, value) = false) Then
				Me.OnCHK_TYPE2Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE2 = value
				Me.SendPropertyChanged("CHK_TYPE2")
				Me.OnCHK_TYPE2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE3", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE3() As String
		Get
			Return Me._CHK_TYPE3
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE3, value) = false) Then
				Me.OnCHK_TYPE3Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE3 = value
				Me.SendPropertyChanged("CHK_TYPE3")
				Me.OnCHK_TYPE3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE4", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE4() As String
		Get
			Return Me._CHK_TYPE4
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE4, value) = false) Then
				Me.OnCHK_TYPE4Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE4 = value
				Me.SendPropertyChanged("CHK_TYPE4")
				Me.OnCHK_TYPE4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE5", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE5() As String
		Get
			Return Me._CHK_TYPE5
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE5, value) = false) Then
				Me.OnCHK_TYPE5Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE5 = value
				Me.SendPropertyChanged("CHK_TYPE5")
				Me.OnCHK_TYPE5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE6", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE6() As String
		Get
			Return Me._CHK_TYPE6
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE6, value) = false) Then
				Me.OnCHK_TYPE6Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE6 = value
				Me.SendPropertyChanged("CHK_TYPE6")
				Me.OnCHK_TYPE6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE7", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE7() As String
		Get
			Return Me._CHK_TYPE7
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE7, value) = false) Then
				Me.OnCHK_TYPE7Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE7 = value
				Me.SendPropertyChanged("CHK_TYPE7")
				Me.OnCHK_TYPE7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE8", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE8() As String
		Get
			Return Me._CHK_TYPE8
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE8, value) = false) Then
				Me.OnCHK_TYPE8Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE8 = value
				Me.SendPropertyChanged("CHK_TYPE8")
				Me.OnCHK_TYPE8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE9", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE9() As String
		Get
			Return Me._CHK_TYPE9
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE9, value) = false) Then
				Me.OnCHK_TYPE9Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE9 = value
				Me.SendPropertyChanged("CHK_TYPE9")
				Me.OnCHK_TYPE9Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_EDIT_FROM", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_EDIT_FROM() As String
		Get
			Return Me._STAFF_EDIT_FROM
		End Get
		Set
			If (String.Equals(Me._STAFF_EDIT_FROM, value) = false) Then
				Me.OnSTAFF_EDIT_FROMChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_EDIT_FROM = value
				Me.SendPropertyChanged("STAFF_EDIT_FROM")
				Me.OnSTAFF_EDIT_FROMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_EDIT_NEW", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_EDIT_NEW() As String
		Get
			Return Me._STAFF_EDIT_NEW
		End Get
		Set
			If (String.Equals(Me._STAFF_EDIT_NEW, value) = false) Then
				Me.OnSTAFF_EDIT_NEWChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_EDIT_NEW = value
				Me.SendPropertyChanged("STAFF_EDIT_NEW")
				Me.OnSTAFF_EDIT_NEWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE10", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE10() As String
		Get
			Return Me._CHK_TYPE10
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE10, value) = false) Then
				Me.OnCHK_TYPE10Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE10 = value
				Me.SendPropertyChanged("CHK_TYPE10")
				Me.OnCHK_TYPE10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE11", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE11() As String
		Get
			Return Me._CHK_TYPE11
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE11, value) = false) Then
				Me.OnCHK_TYPE11Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE11 = value
				Me.SendPropertyChanged("CHK_TYPE11")
				Me.OnCHK_TYPE11Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE12", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE12() As String
		Get
			Return Me._CHK_TYPE12
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE12, value) = false) Then
				Me.OnCHK_TYPE12Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE12 = value
				Me.SendPropertyChanged("CHK_TYPE12")
				Me.OnCHK_TYPE12Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE13", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE13() As String
		Get
			Return Me._CHK_TYPE13
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE13, value) = false) Then
				Me.OnCHK_TYPE13Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE13 = value
				Me.SendPropertyChanged("CHK_TYPE13")
				Me.OnCHK_TYPE13Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE14", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE14() As String
		Get
			Return Me._CHK_TYPE14
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE14, value) = false) Then
				Me.OnCHK_TYPE14Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE14 = value
				Me.SendPropertyChanged("CHK_TYPE14")
				Me.OnCHK_TYPE14Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE15", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE15() As String
		Get
			Return Me._CHK_TYPE15
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE15, value) = false) Then
				Me.OnCHK_TYPE15Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE15 = value
				Me.SendPropertyChanged("CHK_TYPE15")
				Me.OnCHK_TYPE15Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE16", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE16() As String
		Get
			Return Me._CHK_TYPE16
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE16, value) = false) Then
				Me.OnCHK_TYPE16Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE16 = value
				Me.SendPropertyChanged("CHK_TYPE16")
				Me.OnCHK_TYPE16Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE17", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE17() As String
		Get
			Return Me._CHK_TYPE17
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE17, value) = false) Then
				Me.OnCHK_TYPE17Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE17 = value
				Me.SendPropertyChanged("CHK_TYPE17")
				Me.OnCHK_TYPE17Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE18", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE18() As String
		Get
			Return Me._CHK_TYPE18
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE18, value) = false) Then
				Me.OnCHK_TYPE18Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE18 = value
				Me.SendPropertyChanged("CHK_TYPE18")
				Me.OnCHK_TYPE18Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE19", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE19() As String
		Get
			Return Me._CHK_TYPE19
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE19, value) = false) Then
				Me.OnCHK_TYPE19Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE19 = value
				Me.SendPropertyChanged("CHK_TYPE19")
				Me.OnCHK_TYPE19Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE20", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE20() As String
		Get
			Return Me._CHK_TYPE20
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE20, value) = false) Then
				Me.OnCHK_TYPE20Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE20 = value
				Me.SendPropertyChanged("CHK_TYPE20")
				Me.OnCHK_TYPE20Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE21", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE21() As String
		Get
			Return Me._CHK_TYPE21
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE21, value) = false) Then
				Me.OnCHK_TYPE21Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE21 = value
				Me.SendPropertyChanged("CHK_TYPE21")
				Me.OnCHK_TYPE21Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE22", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE22() As String
		Get
			Return Me._CHK_TYPE22
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE22, value) = false) Then
				Me.OnCHK_TYPE22Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE22 = value
				Me.SendPropertyChanged("CHK_TYPE22")
				Me.OnCHK_TYPE22Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OTHER_ORDER", DbType:="NVarChar(MAX)")>  _
	Public Property OTHER_ORDER() As String
		Get
			Return Me._OTHER_ORDER
		End Get
		Set
			If (String.Equals(Me._OTHER_ORDER, value) = false) Then
				Me.OnOTHER_ORDERChanging(value)
				Me.SendPropertyChanging
				Me._OTHER_ORDER = value
				Me.SendPropertyChanged("OTHER_ORDER")
				Me.OnOTHER_ORDERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSIDER_DATE", DbType:="DateTime")>  _
	Public Property CONSIDER_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CONSIDER_DATE
		End Get
		Set
			If (Me._CONSIDER_DATE.Equals(value) = false) Then
				Me.OnCONSIDER_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CONSIDER_DATE = value
				Me.SendPropertyChanged("CONSIDER_DATE")
				Me.OnCONSIDER_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE23", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE23() As String
		Get
			Return Me._CHK_TYPE23
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE23, value) = false) Then
				Me.OnCHK_TYPE23Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE23 = value
				Me.SendPropertyChanged("CHK_TYPE23")
				Me.OnCHK_TYPE23Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE24", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE24() As String
		Get
			Return Me._CHK_TYPE24
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE24, value) = false) Then
				Me.OnCHK_TYPE24Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE24 = value
				Me.SendPropertyChanged("CHK_TYPE24")
				Me.OnCHK_TYPE24Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE25", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE25() As String
		Get
			Return Me._CHK_TYPE25
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE25, value) = false) Then
				Me.OnCHK_TYPE25Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE25 = value
				Me.SendPropertyChanged("CHK_TYPE25")
				Me.OnCHK_TYPE25Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE26", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE26() As String
		Get
			Return Me._CHK_TYPE26
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE26, value) = false) Then
				Me.OnCHK_TYPE26Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE26 = value
				Me.SendPropertyChanged("CHK_TYPE26")
				Me.OnCHK_TYPE26Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE27", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE27() As String
		Get
			Return Me._CHK_TYPE27
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE27, value) = false) Then
				Me.OnCHK_TYPE27Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE27 = value
				Me.SendPropertyChanged("CHK_TYPE27")
				Me.OnCHK_TYPE27Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_TYPE28", DbType:="NVarChar(50)")>  _
	Public Property CHK_TYPE28() As String
		Get
			Return Me._CHK_TYPE28
		End Get
		Set
			If (String.Equals(Me._CHK_TYPE28, value) = false) Then
				Me.OnCHK_TYPE28Changing(value)
				Me.SendPropertyChanging
				Me._CHK_TYPE28 = value
				Me.SendPropertyChanged("CHK_TYPE28")
				Me.OnCHK_TYPE28Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NAME_TH", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NAME_TH() As String
		Get
			Return Me._DRUG_NAME_TH
		End Get
		Set
			If (String.Equals(Me._DRUG_NAME_TH, value) = false) Then
				Me.OnDRUG_NAME_THChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NAME_TH = value
				Me.SendPropertyChanged("DRUG_NAME_TH")
				Me.OnDRUG_NAME_THChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_NAME_EN", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_NAME_EN() As String
		Get
			Return Me._DRUG_NAME_EN
		End Get
		Set
			If (String.Equals(Me._DRUG_NAME_EN, value) = false) Then
				Me.OnDRUG_NAME_ENChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_NAME_EN = value
				Me.SendPropertyChanged("DRUG_NAME_EN")
				Me.OnDRUG_NAME_ENChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REMARK", DbType:="NVarChar(MAX)")>  _
	Public Property REMARK() As String
		Get
			Return Me._REMARK
		End Get
		Set
			If (String.Equals(Me._REMARK, value) = false) Then
				Me.OnREMARKChanging(value)
				Me.SendPropertyChanging
				Me._REMARK = value
				Me.SendPropertyChanged("REMARK")
				Me.OnREMARKChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DRUG_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property DRUG_DESCRIPTION() As String
		Get
			Return Me._DRUG_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DRUG_DESCRIPTION, value) = false) Then
				Me.OnDRUG_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DRUG_DESCRIPTION = value
				Me.SendPropertyChanged("DRUG_DESCRIPTION")
				Me.OnDRUG_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_OLD_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property EDIT_OLD_DESCRIPTION() As String
		Get
			Return Me._EDIT_OLD_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._EDIT_OLD_DESCRIPTION, value) = false) Then
				Me.OnEDIT_OLD_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_OLD_DESCRIPTION = value
				Me.SendPropertyChanged("EDIT_OLD_DESCRIPTION")
				Me.OnEDIT_OLD_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIT_NEW_DESCRIPTION", DbType:="NVarChar(MAX)")>  _
	Public Property EDIT_NEW_DESCRIPTION() As String
		Get
			Return Me._EDIT_NEW_DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._EDIT_NEW_DESCRIPTION, value) = false) Then
				Me.OnEDIT_NEW_DESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._EDIT_NEW_DESCRIPTION = value
				Me.SendPropertyChanged("EDIT_NEW_DESCRIPTION")
				Me.OnEDIT_NEW_DESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_IDENTIFY", DbType:="NVarChar(50)")>  _
	Public Property PHR_IDENTIFY() As String
		Get
			Return Me._PHR_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._PHR_IDENTIFY, value) = false) Then
				Me.OnPHR_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._PHR_IDENTIFY = value
				Me.SendPropertyChanged("PHR_IDENTIFY")
				Me.OnPHR_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PHR_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property PHR_NAME() As String
		Get
			Return Me._PHR_NAME
		End Get
		Set
			If (String.Equals(Me._PHR_NAME, value) = false) Then
				Me.OnPHR_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PHR_NAME = value
				Me.SendPropertyChanged("PHR_NAME")
				Me.OnPHR_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TYPE_REQUESTS_ID", DbType:="NVarChar(50)")>  _
	Public Property TYPE_REQUESTS_ID() As String
		Get
			Return Me._TYPE_REQUESTS_ID
		End Get
		Set
			If (String.Equals(Me._TYPE_REQUESTS_ID, value) = false) Then
				Me.OnTYPE_REQUESTS_IDChanging(value)
				Me.SendPropertyChanging
				Me._TYPE_REQUESTS_ID = value
				Me.SendPropertyChanged("TYPE_REQUESTS_ID")
				Me.OnTYPE_REQUESTS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_A_NO", DbType:="NVarChar(MAX)")>  _
	Public Property A_NO() As String
		Get
			Return Me._A_NO
		End Get
		Set
			If (String.Equals(Me._A_NO, value) = false) Then
				Me.OnA_NOChanging(value)
				Me.SendPropertyChanging
				Me._A_NO = value
				Me.SendPropertyChanged("A_NO")
				Me.OnA_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_IDEN_RECEIVE", DbType:="NVarChar(50)")>  _
	Public Property STAFF_IDEN_RECEIVE() As String
		Get
			Return Me._STAFF_IDEN_RECEIVE
		End Get
		Set
			If (String.Equals(Me._STAFF_IDEN_RECEIVE, value) = false) Then
				Me.OnSTAFF_IDEN_RECEIVEChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_IDEN_RECEIVE = value
				Me.SendPropertyChanged("STAFF_IDEN_RECEIVE")
				Me.OnSTAFF_IDEN_RECEIVEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT", DbType:="NVarChar(MAX)")>  _
	Public Property AMOUNT() As String
		Get
			Return Me._AMOUNT
		End Get
		Set
			If (String.Equals(Me._AMOUNT, value) = false) Then
				Me.OnAMOUNTChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT = value
				Me.SendPropertyChanged("AMOUNT")
				Me.OnAMOUNTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT_CAL", DbType:="NVarChar(MAX)")>  _
	Public Property AMOUNT_CAL() As String
		Get
			Return Me._AMOUNT_CAL
		End Get
		Set
			If (String.Equals(Me._AMOUNT_CAL, value) = false) Then
				Me.OnAMOUNT_CALChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT_CAL = value
				Me.SendPropertyChanged("AMOUNT_CAL")
				Me.OnAMOUNT_CALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_ATTACH1", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_ATTACH1() As String
		Get
			Return Me._CHK_ATTACH1
		End Get
		Set
			If (String.Equals(Me._CHK_ATTACH1, value) = false) Then
				Me.OnCHK_ATTACH1Changing(value)
				Me.SendPropertyChanging
				Me._CHK_ATTACH1 = value
				Me.SendPropertyChanged("CHK_ATTACH1")
				Me.OnCHK_ATTACH1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_ATTACH2", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_ATTACH2() As String
		Get
			Return Me._CHK_ATTACH2
		End Get
		Set
			If (String.Equals(Me._CHK_ATTACH2, value) = false) Then
				Me.OnCHK_ATTACH2Changing(value)
				Me.SendPropertyChanging
				Me._CHK_ATTACH2 = value
				Me.SendPropertyChanged("CHK_ATTACH2")
				Me.OnCHK_ATTACH2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_ATTACH3", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_ATTACH3() As String
		Get
			Return Me._CHK_ATTACH3
		End Get
		Set
			If (String.Equals(Me._CHK_ATTACH3, value) = false) Then
				Me.OnCHK_ATTACH3Changing(value)
				Me.SendPropertyChanging
				Me._CHK_ATTACH3 = value
				Me.SendPropertyChanged("CHK_ATTACH3")
				Me.OnCHK_ATTACH3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CHK_ATTACH4", DbType:="NVarChar(MAX)")>  _
	Public Property CHK_ATTACH4() As String
		Get
			Return Me._CHK_ATTACH4
		End Get
		Set
			If (String.Equals(Me._CHK_ATTACH4, value) = false) Then
				Me.OnCHK_ATTACH4Changing(value)
				Me.SendPropertyChanging
				Me._CHK_ATTACH4 = value
				Me.SendPropertyChanged("CHK_ATTACH4")
				Me.OnCHK_ATTACH4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTACH4_OTHER", DbType:="NVarChar(MAX)")>  _
	Public Property ATTACH4_OTHER() As String
		Get
			Return Me._ATTACH4_OTHER
		End Get
		Set
			If (String.Equals(Me._ATTACH4_OTHER, value) = false) Then
				Me.OnATTACH4_OTHERChanging(value)
				Me.SendPropertyChanging
				Me._ATTACH4_OTHER = value
				Me.SendPropertyChanged("ATTACH4_OTHER")
				Me.OnATTACH4_OTHERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DETAIL_YOR4", DbType:="NVarChar(MAX)")>  _
	Public Property DETAIL_YOR4() As String
		Get
			Return Me._DETAIL_YOR4
		End Get
		Set
			If (String.Equals(Me._DETAIL_YOR4, value) = false) Then
				Me.OnDETAIL_YOR4Changing(value)
				Me.SendPropertyChanging
				Me._DETAIL_YOR4 = value
				Me.SendPropertyChanged("DETAIL_YOR4")
				Me.OnDETAIL_YOR4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drgtpcd", DbType:="NVarChar(50)")>  _
	Public Property drgtpcd() As String
		Get
			Return Me._drgtpcd
		End Get
		Set
			If (String.Equals(Me._drgtpcd, value) = false) Then
				Me.OndrgtpcdChanging(value)
				Me.SendPropertyChanging
				Me._drgtpcd = value
				Me.SendPropertyChanged("drgtpcd")
				Me.OndrgtpcdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RQT_TYPE", DbType:="NVarChar(50)")>  _
	Public Property RQT_TYPE() As String
		Get
			Return Me._RQT_TYPE
		End Get
		Set
			If (String.Equals(Me._RQT_TYPE, value) = false) Then
				Me.OnRQT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._RQT_TYPE = value
				Me.SendPropertyChanged("RQT_TYPE")
				Me.OnRQT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RQT_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property RQT_IDENTIFY() As String
		Get
			Return Me._RQT_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._RQT_IDENTIFY, value) = false) Then
				Me.OnRQT_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._RQT_IDENTIFY = value
				Me.SendPropertyChanged("RQT_IDENTIFY")
				Me.OnRQT_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIGN_POSITION", DbType:="NVarChar(MAX)")>  _
	Public Property SIGN_POSITION() As String
		Get
			Return Me._SIGN_POSITION
		End Get
		Set
			If (String.Equals(Me._SIGN_POSITION, value) = false) Then
				Me.OnSIGN_POSITIONChanging(value)
				Me.SendPropertyChanging
				Me._SIGN_POSITION = value
				Me.SendPropertyChanged("SIGN_POSITION")
				Me.OnSIGN_POSITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OWN_STAFF_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property OWN_STAFF_IDENTIFY() As String
		Get
			Return Me._OWN_STAFF_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._OWN_STAFF_IDENTIFY, value) = false) Then
				Me.OnOWN_STAFF_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._OWN_STAFF_IDENTIFY = value
				Me.SendPropertyChanged("OWN_STAFF_IDENTIFY")
				Me.OnOWN_STAFF_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OWN_STAFF_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property OWN_STAFF_NAME() As String
		Get
			Return Me._OWN_STAFF_NAME
		End Get
		Set
			If (String.Equals(Me._OWN_STAFF_NAME, value) = false) Then
				Me.OnOWN_STAFF_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._OWN_STAFF_NAME = value
				Me.SendPropertyChanged("OWN_STAFF_NAME")
				Me.OnOWN_STAFF_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_AT", DbType:="NVarChar(MAX)")>  _
	Public Property WRITE_AT() As String
		Get
			Return Me._WRITE_AT
		End Get
		Set
			If (String.Equals(Me._WRITE_AT, value) = false) Then
				Me.OnWRITE_ATChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_AT = value
				Me.SendPropertyChanged("WRITE_AT")
				Me.OnWRITE_ATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WRITE_DATE", DbType:="DateTime")>  _
	Public Property WRITE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._WRITE_DATE
		End Get
		Set
			If (Me._WRITE_DATE.Equals(value) = false) Then
				Me.OnWRITE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._WRITE_DATE = value
				Me.SendPropertyChanged("WRITE_DATE")
				Me.OnWRITE_DATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.STAFF_ASSIGNING_WORK")>  _
Partial Public Class STAFF_ASSIGNING_WORK
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _FK_IDA As System.Nullable(Of Integer)
	
	Private _PROCESS_ID As String
	
	Private _ASSIGN_IDENTIFY As String
	
	Private _STAFF_IDENTIFY As String
	
	Private _CREATE_DATE As System.Nullable(Of Date)
	
	Private _GROUP_SYSTEM As System.Nullable(Of Integer)
	
	Private _STAFF_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnFK_IDAChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFK_IDAChanged()
    End Sub
    Partial Private Sub OnPROCESS_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPROCESS_IDChanged()
    End Sub
    Partial Private Sub OnASSIGN_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnASSIGN_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnSTAFF_IDENTIFYChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_IDENTIFYChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnGROUP_SYSTEMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUP_SYSTEMChanged()
    End Sub
    Partial Private Sub OnSTAFF_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTAFF_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_IDA", DbType:="Int")>  _
	Public Property FK_IDA() As System.Nullable(Of Integer)
		Get
			Return Me._FK_IDA
		End Get
		Set
			If (Me._FK_IDA.Equals(value) = false) Then
				Me.OnFK_IDAChanging(value)
				Me.SendPropertyChanging
				Me._FK_IDA = value
				Me.SendPropertyChanged("FK_IDA")
				Me.OnFK_IDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PROCESS_ID", DbType:="NVarChar(MAX)")>  _
	Public Property PROCESS_ID() As String
		Get
			Return Me._PROCESS_ID
		End Get
		Set
			If (String.Equals(Me._PROCESS_ID, value) = false) Then
				Me.OnPROCESS_IDChanging(value)
				Me.SendPropertyChanging
				Me._PROCESS_ID = value
				Me.SendPropertyChanged("PROCESS_ID")
				Me.OnPROCESS_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ASSIGN_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property ASSIGN_IDENTIFY() As String
		Get
			Return Me._ASSIGN_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._ASSIGN_IDENTIFY, value) = false) Then
				Me.OnASSIGN_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._ASSIGN_IDENTIFY = value
				Me.SendPropertyChanged("ASSIGN_IDENTIFY")
				Me.OnASSIGN_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_IDENTIFY", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_IDENTIFY() As String
		Get
			Return Me._STAFF_IDENTIFY
		End Get
		Set
			If (String.Equals(Me._STAFF_IDENTIFY, value) = false) Then
				Me.OnSTAFF_IDENTIFYChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_IDENTIFY = value
				Me.SendPropertyChanged("STAFF_IDENTIFY")
				Me.OnSTAFF_IDENTIFYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="DateTime")>  _
	Public Property CREATE_DATE() As System.Nullable(Of Date)
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (Me._CREATE_DATE.Equals(value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROUP_SYSTEM", DbType:="Int")>  _
	Public Property GROUP_SYSTEM() As System.Nullable(Of Integer)
		Get
			Return Me._GROUP_SYSTEM
		End Get
		Set
			If (Me._GROUP_SYSTEM.Equals(value) = false) Then
				Me.OnGROUP_SYSTEMChanging(value)
				Me.SendPropertyChanging
				Me._GROUP_SYSTEM = value
				Me.SendPropertyChanged("GROUP_SYSTEM")
				Me.OnGROUP_SYSTEMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STAFF_NAME", DbType:="NVarChar(MAX)")>  _
	Public Property STAFF_NAME() As String
		Get
			Return Me._STAFF_NAME
		End Get
		Set
			If (String.Equals(Me._STAFF_NAME, value) = false) Then
				Me.OnSTAFF_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._STAFF_NAME = value
				Me.SendPropertyChanged("STAFF_NAME")
				Me.OnSTAFF_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
